
Lab2_DTMF.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000bc  00800100  00001ef0  00001f84  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001ef0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000002a7  008001bc  008001bc  00002040  2**0
                  ALLOC
  3 .stab         000022a4  00000000  00000000  00002040  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000008d1  00000000  00000000  000042e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000002f  00000000  00000000  00004bb5  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 00000238  00000000  00000000  00004be4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00003559  00000000  00000000  00004e1c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000019d0  00000000  00000000  00008375  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00001411  00000000  00000000  00009d45  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000570  00000000  00000000  0000b158  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000894  00000000  00000000  0000b6c8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00001b6d  00000000  00000000  0000bf5c  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 000000a0  00000000  00000000  0000dac9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 55 00 	jmp	0xaa	; 0xaa <__ctors_end>
       4:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
       8:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
       c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      10:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      14:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      18:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      1c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      20:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      24:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      28:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      2c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      30:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      34:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      38:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      3c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      40:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      44:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      48:	0c 94 55 03 	jmp	0x6aa	; 0x6aa <__vector_18>
      4c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      50:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      54:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      58:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      5c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      60:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      64:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      68:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      6c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      70:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      74:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      78:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      7c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      80:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      84:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      88:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      8c:	05 a8       	ldd	r0, Z+53	; 0x35
      8e:	4c cd       	rjmp	.-1384   	; 0xfffffb28 <__eeprom_end+0xff7efb28>
      90:	b2 d4       	rcall	.+2404   	; 0x9f6 <timed_play+0x10>
      92:	4e b9       	out	0x0e, r20	; 14
      94:	38 36       	cpi	r19, 0x68	; 104
      96:	a9 02       	muls	r26, r25
      98:	0c 50       	subi	r16, 0x0C	; 12
      9a:	b9 91       	ld	r27, Y+
      9c:	86 88       	ldd	r8, Z+22	; 0x16
      9e:	08 3c       	cpi	r16, 0xC8	; 200
      a0:	a6 aa       	std	Z+54, r10	; 0x36
      a2:	aa 2a       	or	r10, r26
      a4:	be 00       	.word	0x00be	; ????
      a6:	00 00       	nop
      a8:	80 3f       	cpi	r24, 0xF0	; 240

000000aa <__ctors_end>:
      aa:	11 24       	eor	r1, r1
      ac:	1f be       	out	0x3f, r1	; 63
      ae:	cf ef       	ldi	r28, 0xFF	; 255
      b0:	d0 e4       	ldi	r29, 0x40	; 64
      b2:	de bf       	out	0x3e, r29	; 62
      b4:	cd bf       	out	0x3d, r28	; 61

000000b6 <__do_copy_data>:
      b6:	11 e0       	ldi	r17, 0x01	; 1
      b8:	a0 e0       	ldi	r26, 0x00	; 0
      ba:	b1 e0       	ldi	r27, 0x01	; 1
      bc:	e0 ef       	ldi	r30, 0xF0	; 240
      be:	fe e1       	ldi	r31, 0x1E	; 30
      c0:	00 e0       	ldi	r16, 0x00	; 0
      c2:	0b bf       	out	0x3b, r16	; 59
      c4:	02 c0       	rjmp	.+4      	; 0xca <__do_copy_data+0x14>
      c6:	07 90       	elpm	r0, Z+
      c8:	0d 92       	st	X+, r0
      ca:	ac 3b       	cpi	r26, 0xBC	; 188
      cc:	b1 07       	cpc	r27, r17
      ce:	d9 f7       	brne	.-10     	; 0xc6 <__do_copy_data+0x10>

000000d0 <__do_clear_bss>:
      d0:	24 e0       	ldi	r18, 0x04	; 4
      d2:	ac eb       	ldi	r26, 0xBC	; 188
      d4:	b1 e0       	ldi	r27, 0x01	; 1
      d6:	01 c0       	rjmp	.+2      	; 0xda <.do_clear_bss_start>

000000d8 <.do_clear_bss_loop>:
      d8:	1d 92       	st	X+, r1

000000da <.do_clear_bss_start>:
      da:	a3 36       	cpi	r26, 0x63	; 99
      dc:	b2 07       	cpc	r27, r18
      de:	e1 f7       	brne	.-8      	; 0xd8 <.do_clear_bss_loop>
      e0:	0e 94 8a 0a 	call	0x1514	; 0x1514 <main>
      e4:	0c 94 76 0f 	jmp	0x1eec	; 0x1eec <_exit>

000000e8 <__bad_interrupt>:
      e8:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ec <task1>:
// putchar and getchar are in uart.c
FILE uart_str = FDEV_SETUP_STREAM(uart_putchar, uart_getchar, _FDEV_SETUP_RW);

//******************************* 
//Task 1  
void task1(void) {
      ec:	cf 92       	push	r12
      ee:	df 92       	push	r13
      f0:	ef 92       	push	r14
      f2:	ff 92       	push	r15
      f4:	0f 93       	push	r16
      f6:	1f 93       	push	r17
      f8:	cf 93       	push	r28
      fa:	df 93       	push	r29
	time1=0;  //reset the task timer
      fc:	10 92 2c 02 	sts	0x022C, r1
     100:	10 92 2b 02 	sts	0x022B, r1

	//get lower nibble
	PORTDIR = 0x0f;
     104:	8f e0       	ldi	r24, 0x0F	; 15
     106:	81 b9       	out	0x01, r24	; 1
	PORTDATA = 0xf0; 
     108:	90 ef       	ldi	r25, 0xF0	; 240
     10a:	92 b9       	out	0x02, r25	; 2
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     10c:	2a e1       	ldi	r18, 0x1A	; 26
     10e:	2a 95       	dec	r18
     110:	f1 f7       	brne	.-4      	; 0x10e <task1+0x22>
     112:	00 c0       	rjmp	.+0      	; 0x114 <task1+0x28>
	_delay_us(5);
	key = PORTIN;
     114:	20 b1       	in	r18, 0x00	; 0
     116:	20 93 2f 02 	sts	0x022F, r18
  
	//get upper nibble
	PORTDIR = 0xf0;
     11a:	91 b9       	out	0x01, r25	; 1
	PORTDATA = 0x0f; 
     11c:	82 b9       	out	0x02, r24	; 2
     11e:	8a e1       	ldi	r24, 0x1A	; 26
     120:	8a 95       	dec	r24
     122:	f1 f7       	brne	.-4      	; 0x120 <task1+0x34>
     124:	00 c0       	rjmp	.+0      	; 0x126 <task1+0x3a>
	_delay_us(5);
	key = key | PORTIN;
     126:	90 b1       	in	r25, 0x00	; 0
     128:	80 91 2f 02 	lds	r24, 0x022F
     12c:	98 2b       	or	r25, r24
     12e:	90 93 2f 02 	sts	0x022F, r25
  
	//find matching keycode in keytbl
	if (key != 0xff) {
     132:	9f 3f       	cpi	r25, 0xFF	; 255
     134:	a9 f0       	breq	.+42     	; 0x160 <task1+0x74>
	  for (butnum=0; butnum<maxkeys; butnum++) {   
     136:	80 e0       	ldi	r24, 0x00	; 0
     138:	0a c0       	rjmp	.+20     	; 0x14e <task1+0x62>
     13a:	28 2f       	mov	r18, r24
     13c:	2f 5f       	subi	r18, 0xFF	; 255
	  	if (keytbl[butnum]==key)  break;   
     13e:	e8 2f       	mov	r30, r24
     140:	f0 e0       	ldi	r31, 0x00	; 0
     142:	e2 5c       	subi	r30, 0xC2	; 194
     144:	fe 4f       	sbci	r31, 0xFE	; 254
     146:	30 81       	ld	r19, Z
     148:	39 17       	cp	r19, r25
     14a:	31 f0       	breq	.+12     	; 0x158 <task1+0x6c>
     14c:	82 2f       	mov	r24, r18
	_delay_us(5);
	key = key | PORTIN;
  
	//find matching keycode in keytbl
	if (key != 0xff) {
	  for (butnum=0; butnum<maxkeys; butnum++) {   
     14e:	8c 30       	cpi	r24, 0x0C	; 12
     150:	a0 f3       	brcs	.-24     	; 0x13a <task1+0x4e>
	  	if (keytbl[butnum]==key)  break;   
	  }

	  if (butnum==maxkeys) butnum=0;
     152:	8c 30       	cpi	r24, 0x0C	; 12
     154:	09 f4       	brne	.+2      	; 0x158 <task1+0x6c>
     156:	04 c0       	rjmp	.+8      	; 0x160 <task1+0x74>
	  else butnum++;	   //adjust by one to make range 1-16
     158:	8f 5f       	subi	r24, 0xFF	; 255
     15a:	80 93 27 02 	sts	0x0227, r24
     15e:	02 c0       	rjmp	.+4      	; 0x164 <task1+0x78>
	}
	else butnum=0;
     160:	10 92 27 02 	sts	0x0227, r1
	
	// Switching in the finite state machine.
	switch (PushState) {
     164:	80 91 33 02 	lds	r24, 0x0233
     168:	82 30       	cpi	r24, 0x02	; 2
     16a:	91 f0       	breq	.+36     	; 0x190 <task1+0xa4>
     16c:	20 f4       	brcc	.+8      	; 0x176 <task1+0x8a>
     16e:	81 30       	cpi	r24, 0x01	; 1
     170:	09 f0       	breq	.+2      	; 0x174 <task1+0x88>
     172:	60 c0       	rjmp	.+192    	; 0x234 <task1+0x148>
     174:	06 c0       	rjmp	.+12     	; 0x182 <task1+0x96>
     176:	83 30       	cpi	r24, 0x03	; 3
     178:	d1 f0       	breq	.+52     	; 0x1ae <task1+0xc2>
     17a:	84 30       	cpi	r24, 0x04	; 4
     17c:	09 f0       	breq	.+2      	; 0x180 <task1+0x94>
     17e:	5a c0       	rjmp	.+180    	; 0x234 <task1+0x148>
     180:	4c c0       	rjmp	.+152    	; 0x21a <task1+0x12e>
     case NoPush: 
        if (butnum != 0) {
     182:	80 91 27 02 	lds	r24, 0x0227
     186:	88 23       	and	r24, r24
     188:	09 f4       	brne	.+2      	; 0x18c <task1+0xa0>
     18a:	54 c0       	rjmp	.+168    	; 0x234 <task1+0x148>
			PushState=MaybePush;
     18c:	82 e0       	ldi	r24, 0x02	; 2
     18e:	4a c0       	rjmp	.+148    	; 0x224 <task1+0x138>
		}
        else PushState=NoPush;
        break;
     case MaybePush:
        if (butnum != 0) {
     190:	80 91 27 02 	lds	r24, 0x0227
     194:	88 23       	and	r24, r24
     196:	49 f0       	breq	.+18     	; 0x1aa <task1+0xbe>
           	PushState=Pushed; 
     198:	83 e0       	ldi	r24, 0x03	; 3
     19a:	80 93 33 02 	sts	0x0233, r24
			PushFlag=1;
     19e:	81 e0       	ldi	r24, 0x01	; 1
     1a0:	80 93 28 02 	sts	0x0228, r24
			//Test mode override
			if (~PINB & 0x01) {
     1a4:	18 99       	sbic	0x03, 0	; 3
     1a6:	46 c0       	rjmp	.+140    	; 0x234 <task1+0x148>
     1a8:	43 c0       	rjmp	.+134    	; 0x230 <task1+0x144>
				//fprintf(stdout, "PINB is pressed.\n\r");
		 		PushFlag=0;			
		   	}  
        }
        else PushState=NoPush;
     1aa:	81 e0       	ldi	r24, 0x01	; 1
     1ac:	3b c0       	rjmp	.+118    	; 0x224 <task1+0x138>
        break;
     case Pushed:  
        if (butnum != 0) {
     1ae:	80 91 27 02 	lds	r24, 0x0227
     1b2:	88 23       	and	r24, r24
     1b4:	81 f1       	breq	.+96     	; 0x216 <task1+0x12a>
			PushState=Pushed;
			//Test mode override
			if (~PINB & 0x01) {
     1b6:	18 99       	sbic	0x03, 0	; 3
     1b8:	3d c0       	rjmp	.+122    	; 0x234 <task1+0x148>
		 		switch (butnum) {
     1ba:	84 30       	cpi	r24, 0x04	; 4
     1bc:	c1 f0       	breq	.+48     	; 0x1ee <task1+0x102>
     1be:	30 f4       	brcc	.+12     	; 0x1cc <task1+0xe0>
     1c0:	82 30       	cpi	r24, 0x02	; 2
     1c2:	69 f0       	breq	.+26     	; 0x1de <task1+0xf2>
     1c4:	88 f4       	brcc	.+34     	; 0x1e8 <task1+0xfc>
     1c6:	81 30       	cpi	r24, 0x01	; 1
     1c8:	a9 f5       	brne	.+106    	; 0x234 <task1+0x148>
     1ca:	06 c0       	rjmp	.+12     	; 0x1d8 <task1+0xec>
     1cc:	86 30       	cpi	r24, 0x06	; 6
     1ce:	b9 f0       	breq	.+46     	; 0x1fe <task1+0x112>
     1d0:	88 f0       	brcs	.+34     	; 0x1f4 <task1+0x108>
     1d2:	87 30       	cpi	r24, 0x07	; 7
     1d4:	79 f5       	brne	.+94     	; 0x234 <task1+0x148>
     1d6:	18 c0       	rjmp	.+48     	; 0x208 <task1+0x11c>
					case 1: 
						play(0, 697);
     1d8:	69 eb       	ldi	r22, 0xB9	; 185
     1da:	72 e0       	ldi	r23, 0x02	; 2
     1dc:	02 c0       	rjmp	.+4      	; 0x1e2 <task1+0xf6>
						break;
					case 2: 
						play(0, 770);
     1de:	62 e0       	ldi	r22, 0x02	; 2
     1e0:	73 e0       	ldi	r23, 0x03	; 3
     1e2:	80 e0       	ldi	r24, 0x00	; 0
     1e4:	90 e0       	ldi	r25, 0x00	; 0
     1e6:	14 c0       	rjmp	.+40     	; 0x210 <task1+0x124>
						break;
					case 3: 
						play(0, 852);
     1e8:	64 e5       	ldi	r22, 0x54	; 84
     1ea:	73 e0       	ldi	r23, 0x03	; 3
     1ec:	fa cf       	rjmp	.-12     	; 0x1e2 <task1+0xf6>
						break;
					case 4: 
						play(0, 941);
     1ee:	6d ea       	ldi	r22, 0xAD	; 173
     1f0:	73 e0       	ldi	r23, 0x03	; 3
     1f2:	f7 cf       	rjmp	.-18     	; 0x1e2 <task1+0xf6>
						break;
					case 5:
						play(1209, 0);
     1f4:	60 e0       	ldi	r22, 0x00	; 0
     1f6:	70 e0       	ldi	r23, 0x00	; 0
     1f8:	89 eb       	ldi	r24, 0xB9	; 185
     1fa:	94 e0       	ldi	r25, 0x04	; 4
     1fc:	09 c0       	rjmp	.+18     	; 0x210 <task1+0x124>
						break;
					case 6:
						play(1336, 0);
     1fe:	60 e0       	ldi	r22, 0x00	; 0
     200:	70 e0       	ldi	r23, 0x00	; 0
     202:	88 e3       	ldi	r24, 0x38	; 56
     204:	95 e0       	ldi	r25, 0x05	; 5
     206:	04 c0       	rjmp	.+8      	; 0x210 <task1+0x124>
						break;
					case 7: 
						play(1477, 0);
     208:	60 e0       	ldi	r22, 0x00	; 0
     20a:	70 e0       	ldi	r23, 0x00	; 0
     20c:	85 ec       	ldi	r24, 0xC5	; 197
     20e:	95 e0       	ldi	r25, 0x05	; 5
     210:	0e 94 6e 04 	call	0x8dc	; 0x8dc <play>
						break;
     214:	0f c0       	rjmp	.+30     	; 0x234 <task1+0x148>
					default:
						break;
				}	
		   	}  
		}
        else PushState=MaybeNoPush;    
     216:	84 e0       	ldi	r24, 0x04	; 4
     218:	05 c0       	rjmp	.+10     	; 0x224 <task1+0x138>
        break;
     case MaybeNoPush:
        if (butnum != 0) PushState=Pushed; 
     21a:	80 91 27 02 	lds	r24, 0x0227
     21e:	88 23       	and	r24, r24
     220:	21 f0       	breq	.+8      	; 0x22a <task1+0x13e>
     222:	83 e0       	ldi	r24, 0x03	; 3
     224:	80 93 33 02 	sts	0x0233, r24
     228:	05 c0       	rjmp	.+10     	; 0x234 <task1+0x148>
        else {
           PushState=NoPush;
     22a:	81 e0       	ldi	r24, 0x01	; 1
     22c:	80 93 33 02 	sts	0x0233, r24
           PushFlag=0;
     230:	10 92 28 02 	sts	0x0228, r1
        }    
        break;
  	}

	if (PushState == NoPush) {
     234:	80 91 33 02 	lds	r24, 0x0233
     238:	81 30       	cpi	r24, 0x01	; 1
     23a:	11 f4       	brne	.+4      	; 0x240 <task1+0x154>
		//fprintf(stdout, "Depressed...\n\r");
		stop_playing();
     23c:	0e 94 fd 04 	call	0x9fa	; 0x9fa <stop_playing>
	}	

	if (PushFlag) {
     240:	80 91 28 02 	lds	r24, 0x0228
     244:	88 23       	and	r24, r24
     246:	09 f4       	brne	.+2      	; 0x24a <task1+0x15e>
     248:	1b c1       	rjmp	.+566    	; 0x480 <task1+0x394>
		PushFlag = 0;
     24a:	10 92 28 02 	sts	0x0228, r1
		// The * button was pressed. Clear all memory.
		if (butnum == 10) {
     24e:	80 91 27 02 	lds	r24, 0x0227
     252:	8a 30       	cpi	r24, 0x0A	; 10
     254:	09 f5       	brne	.+66     	; 0x298 <task1+0x1ac>
			fprintf(stdout, "%u\n\r", butnum);
     256:	1f 92       	push	r1
     258:	8f 93       	push	r24
     25a:	8b e5       	ldi	r24, 0x5B	; 91
     25c:	91 e0       	ldi	r25, 0x01	; 1
     25e:	9f 93       	push	r25
     260:	8f 93       	push	r24
     262:	80 91 60 04 	lds	r24, 0x0460
     266:	8f 93       	push	r24
     268:	80 91 5f 04 	lds	r24, 0x045F
     26c:	8f 93       	push	r24
     26e:	0e 94 01 0b 	call	0x1602	; 0x1602 <fprintf>
     272:	ec eb       	ldi	r30, 0xBC	; 188
     274:	f1 e0       	ldi	r31, 0x01	; 1
// putchar and getchar are in uart.c
FILE uart_str = FDEV_SETUP_STREAM(uart_putchar, uart_getchar, _FDEV_SETUP_RW);

//******************************* 
//Task 1  
void task1(void) {
     276:	0f 90       	pop	r0
     278:	0f 90       	pop	r0
     27a:	0f 90       	pop	r0
     27c:	0f 90       	pop	r0
     27e:	0f 90       	pop	r0
     280:	0f 90       	pop	r0
		PushFlag = 0;
		// The * button was pressed. Clear all memory.
		if (butnum == 10) {
			fprintf(stdout, "%u\n\r", butnum);
			for (int i = 0; i < 12; i++) {
				mem[i] = 0;
     282:	11 92       	st	Z+, r1
     284:	11 92       	st	Z+, r1
	if (PushFlag) {
		PushFlag = 0;
		// The * button was pressed. Clear all memory.
		if (butnum == 10) {
			fprintf(stdout, "%u\n\r", butnum);
			for (int i = 0; i < 12; i++) {
     286:	21 e0       	ldi	r18, 0x01	; 1
     288:	e4 3d       	cpi	r30, 0xD4	; 212
     28a:	f2 07       	cpc	r31, r18
     28c:	d1 f7       	brne	.-12     	; 0x282 <task1+0x196>
				mem[i] = 0;
			}
			mem_index = 0;
     28e:	10 92 31 02 	sts	0x0231, r1
     292:	10 92 30 02 	sts	0x0230, r1
     296:	f4 c0       	rjmp	.+488    	; 0x480 <task1+0x394>
		}
		// The # button was pressed. Play all sounds in memory.
		else if (butnum == 12) {
     298:	8c 30       	cpi	r24, 0x0C	; 12
     29a:	09 f0       	breq	.+2      	; 0x29e <task1+0x1b2>
     29c:	ad c0       	rjmp	.+346    	; 0x3f8 <task1+0x30c>
			fprintf(stdout, "%u\n\r", butnum);
     29e:	1f 92       	push	r1
     2a0:	8f 93       	push	r24
     2a2:	8b e5       	ldi	r24, 0x5B	; 91
     2a4:	91 e0       	ldi	r25, 0x01	; 1
     2a6:	9f 93       	push	r25
     2a8:	8f 93       	push	r24
     2aa:	80 91 60 04 	lds	r24, 0x0460
     2ae:	8f 93       	push	r24
     2b0:	80 91 5f 04 	lds	r24, 0x045F
     2b4:	8f 93       	push	r24
     2b6:	0e 94 01 0b 	call	0x1602	; 0x1602 <fprintf>
			int i = 0;
			is_playing = FALSE;
     2ba:	10 92 34 02 	sts	0x0234, r1
			char silence;
			silence = FALSE;
			//init the playing state machine
			is_timed_playing = FALSE;
     2be:	10 92 26 02 	sts	0x0226, r1
     2c2:	0f 90       	pop	r0
     2c4:	0f 90       	pop	r0
     2c6:	0f 90       	pop	r0
     2c8:	0f 90       	pop	r0
     2ca:	0f 90       	pop	r0
     2cc:	0f 90       	pop	r0
		else if (butnum == 12) {
			fprintf(stdout, "%u\n\r", butnum);
			int i = 0;
			is_playing = FALSE;
			char silence;
			silence = FALSE;
     2ce:	c1 2c       	mov	r12, r1
			mem_index = 0;
		}
		// The # button was pressed. Play all sounds in memory.
		else if (butnum == 12) {
			fprintf(stdout, "%u\n\r", butnum);
			int i = 0;
     2d0:	c0 e0       	ldi	r28, 0x00	; 0
     2d2:	d0 e0       	ldi	r29, 0x00	; 0
			
			while( i < 12){
				if (mem[i] == 0) {
					break;
				}
				fprintf(stdout, "Int: %u\n\r", i);
     2d4:	56 e5       	ldi	r21, 0x56	; 86
     2d6:	e5 2e       	mov	r14, r21
     2d8:	51 e0       	ldi	r21, 0x01	; 1
     2da:	f5 2e       	mov	r15, r21
					is_timed_playing = TRUE;
					fprintf(stdout, "Playing sound\n\r");
				}
				if(silence == TRUE && !is_playing) {
					timed_play(0, 0, 30);
					is_timed_playing = TRUE;
     2dc:	dd 24       	eor	r13, r13
     2de:	d3 94       	inc	r13
			silence = FALSE;
			//init the playing state machine
			is_timed_playing = FALSE;
			
			while( i < 12){
				if (mem[i] == 0) {
     2e0:	8e 01       	movw	r16, r28
     2e2:	00 0f       	add	r16, r16
     2e4:	11 1f       	adc	r17, r17
     2e6:	04 54       	subi	r16, 0x44	; 68
     2e8:	1e 4f       	sbci	r17, 0xFE	; 254
     2ea:	f8 01       	movw	r30, r16
     2ec:	80 81       	ld	r24, Z
     2ee:	91 81       	ldd	r25, Z+1	; 0x01
     2f0:	89 2b       	or	r24, r25
     2f2:	09 f4       	brne	.+2      	; 0x2f6 <task1+0x20a>
     2f4:	c5 c0       	rjmp	.+394    	; 0x480 <task1+0x394>
					break;
				}
				fprintf(stdout, "Int: %u\n\r", i);
     2f6:	df 93       	push	r29
     2f8:	cf 93       	push	r28
     2fa:	ff 92       	push	r15
     2fc:	ef 92       	push	r14
     2fe:	80 91 60 04 	lds	r24, 0x0460
     302:	8f 93       	push	r24
     304:	80 91 5f 04 	lds	r24, 0x045F
     308:	8f 93       	push	r24
     30a:	0e 94 01 0b 	call	0x1602	; 0x1602 <fprintf>
				if(silence == FALSE && !is_playing){
     30e:	0f 90       	pop	r0
     310:	0f 90       	pop	r0
     312:	0f 90       	pop	r0
     314:	0f 90       	pop	r0
     316:	0f 90       	pop	r0
     318:	0f 90       	pop	r0
     31a:	80 91 34 02 	lds	r24, 0x0234
     31e:	c1 10       	cpse	r12, r1
     320:	ac c0       	rjmp	.+344    	; 0x47a <task1+0x38e>
     322:	81 11       	cpse	r24, r1
     324:	2e c0       	rjmp	.+92     	; 0x382 <task1+0x296>
					timed_play(high_freq[mem[i]], low_freq[mem[i]], 1000);
     326:	f8 01       	movw	r30, r16
     328:	80 81       	ld	r24, Z
     32a:	91 81       	ldd	r25, Z+1	; 0x01
     32c:	88 0f       	add	r24, r24
     32e:	99 1f       	adc	r25, r25
     330:	fc 01       	movw	r30, r24
     332:	e2 5f       	subi	r30, 0xF2	; 242
     334:	fe 4f       	sbci	r31, 0xFE	; 254
     336:	60 81       	ld	r22, Z
     338:	71 81       	ldd	r23, Z+1	; 0x01
     33a:	fc 01       	movw	r30, r24
     33c:	ea 5d       	subi	r30, 0xDA	; 218
     33e:	fe 4f       	sbci	r31, 0xFE	; 254
     340:	48 ee       	ldi	r20, 0xE8	; 232
     342:	53 e0       	ldi	r21, 0x03	; 3
     344:	80 81       	ld	r24, Z
     346:	91 81       	ldd	r25, Z+1	; 0x01
     348:	0e 94 f3 04 	call	0x9e6	; 0x9e6 <timed_play>
					is_timed_playing = TRUE;
     34c:	d0 92 26 02 	sts	0x0226, r13
					fprintf(stdout, "Playing sound\n\r");
     350:	60 91 5f 04 	lds	r22, 0x045F
     354:	70 91 60 04 	lds	r23, 0x0460
     358:	80 e6       	ldi	r24, 0x60	; 96
     35a:	91 e0       	ldi	r25, 0x01	; 1
     35c:	10 c0       	rjmp	.+32     	; 0x37e <task1+0x292>
				}
				if(silence == TRUE && !is_playing) {
					timed_play(0, 0, 30);
     35e:	4e e1       	ldi	r20, 0x1E	; 30
     360:	50 e0       	ldi	r21, 0x00	; 0
     362:	60 e0       	ldi	r22, 0x00	; 0
     364:	70 e0       	ldi	r23, 0x00	; 0
     366:	80 e0       	ldi	r24, 0x00	; 0
     368:	90 e0       	ldi	r25, 0x00	; 0
     36a:	0e 94 f3 04 	call	0x9e6	; 0x9e6 <timed_play>
					is_timed_playing = TRUE;
     36e:	d0 92 26 02 	sts	0x0226, r13
					fprintf(stdout, "Playing silence\n\r");
     372:	60 91 5f 04 	lds	r22, 0x045F
     376:	70 91 60 04 	lds	r23, 0x0460
     37a:	80 e7       	ldi	r24, 0x70	; 112
     37c:	91 e0       	ldi	r25, 0x01	; 1
     37e:	0e 94 11 0b 	call	0x1622	; 0x1622 <fputs>
				}
				if(is_playing && dds_duration <= 0 && !silence){
     382:	80 91 34 02 	lds	r24, 0x0234
     386:	88 23       	and	r24, r24
     388:	b9 f0       	breq	.+46     	; 0x3b8 <task1+0x2cc>
     38a:	80 91 29 02 	lds	r24, 0x0229
     38e:	90 91 2a 02 	lds	r25, 0x022A
     392:	18 16       	cp	r1, r24
     394:	19 06       	cpc	r1, r25
     396:	84 f0       	brlt	.+32     	; 0x3b8 <task1+0x2cc>
     398:	c1 10       	cpse	r12, r1
     39a:	0c c0       	rjmp	.+24     	; 0x3b4 <task1+0x2c8>
					fprintf(stdout, "Playing timeout\n\r");
     39c:	60 91 5f 04 	lds	r22, 0x045F
     3a0:	70 91 60 04 	lds	r23, 0x0460
     3a4:	82 e8       	ldi	r24, 0x82	; 130
     3a6:	91 e0       	ldi	r25, 0x01	; 1
     3a8:	0e 94 11 0b 	call	0x1622	; 0x1622 <fputs>
					is_timed_playing = FALSE;
     3ac:	10 92 26 02 	sts	0x0226, r1
					silence = TRUE;
					is_playing = FALSE;
     3b0:	10 92 34 02 	sts	0x0234, r1
				if(silence == TRUE && !is_playing) {
					timed_play(0, 0, 30);
					is_timed_playing = TRUE;
					fprintf(stdout, "Playing silence\n\r");
				}
				if(is_playing && dds_duration <= 0 && !silence){
     3b4:	cc 24       	eor	r12, r12
     3b6:	c3 94       	inc	r12
					fprintf(stdout, "Playing timeout\n\r");
					is_timed_playing = FALSE;
					silence = TRUE;
					is_playing = FALSE;
				}
				if(is_playing && dds_duration <= 0 && silence){
     3b8:	80 91 34 02 	lds	r24, 0x0234
     3bc:	88 23       	and	r24, r24
     3be:	b9 f0       	breq	.+46     	; 0x3ee <task1+0x302>
     3c0:	80 91 29 02 	lds	r24, 0x0229
     3c4:	90 91 2a 02 	lds	r25, 0x022A
     3c8:	18 16       	cp	r1, r24
     3ca:	19 06       	cpc	r1, r25
     3cc:	84 f0       	brlt	.+32     	; 0x3ee <task1+0x302>
     3ce:	cc 20       	and	r12, r12
     3d0:	71 f0       	breq	.+28     	; 0x3ee <task1+0x302>
					fprintf(stdout, "Silence timeout\n\r");
     3d2:	60 91 5f 04 	lds	r22, 0x045F
     3d6:	70 91 60 04 	lds	r23, 0x0460
     3da:	84 e9       	ldi	r24, 0x94	; 148
     3dc:	91 e0       	ldi	r25, 0x01	; 1
     3de:	0e 94 11 0b 	call	0x1622	; 0x1622 <fputs>
					is_timed_playing = FALSE;
     3e2:	10 92 26 02 	sts	0x0226, r1
					i++;
     3e6:	21 96       	adiw	r28, 0x01	; 1
					silence = FALSE;
					is_playing = FALSE;
     3e8:	10 92 34 02 	sts	0x0234, r1
				}
				if(is_playing && dds_duration <= 0 && silence){
					fprintf(stdout, "Silence timeout\n\r");
					is_timed_playing = FALSE;
					i++;
					silence = FALSE;
     3ec:	c1 2c       	mov	r12, r1
			char silence;
			silence = FALSE;
			//init the playing state machine
			is_timed_playing = FALSE;
			
			while( i < 12){
     3ee:	cc 30       	cpi	r28, 0x0C	; 12
     3f0:	d1 05       	cpc	r29, r1
     3f2:	0c f4       	brge	.+2      	; 0x3f6 <task1+0x30a>
     3f4:	75 cf       	rjmp	.-278    	; 0x2e0 <task1+0x1f4>
     3f6:	44 c0       	rjmp	.+136    	; 0x480 <task1+0x394>
			// 	}
			// }
		}
		// A normal button press. 
		else {
			fprintf(stdout, "%u\n\r", butnum);
     3f8:	1f 92       	push	r1
     3fa:	8f 93       	push	r24
     3fc:	8b e5       	ldi	r24, 0x5B	; 91
     3fe:	91 e0       	ldi	r25, 0x01	; 1
     400:	9f 93       	push	r25
     402:	8f 93       	push	r24
     404:	80 91 60 04 	lds	r24, 0x0460
     408:	8f 93       	push	r24
     40a:	80 91 5f 04 	lds	r24, 0x045F
     40e:	8f 93       	push	r24
     410:	0e 94 01 0b 	call	0x1602	; 0x1602 <fprintf>
			if (mem_index < 12) {
     414:	20 91 30 02 	lds	r18, 0x0230
     418:	30 91 31 02 	lds	r19, 0x0231
     41c:	0f 90       	pop	r0
     41e:	0f 90       	pop	r0
     420:	0f 90       	pop	r0
     422:	0f 90       	pop	r0
     424:	0f 90       	pop	r0
     426:	0f 90       	pop	r0
     428:	2c 30       	cpi	r18, 0x0C	; 12
     42a:	31 05       	cpc	r19, r1
     42c:	48 f5       	brcc	.+82     	; 0x480 <task1+0x394>
				mem[mem_index] = butnum;
     42e:	80 91 27 02 	lds	r24, 0x0227
     432:	f9 01       	movw	r30, r18
     434:	ee 0f       	add	r30, r30
     436:	ff 1f       	adc	r31, r31
     438:	e4 54       	subi	r30, 0x44	; 68
     43a:	fe 4f       	sbci	r31, 0xFE	; 254
     43c:	80 83       	st	Z, r24
     43e:	11 82       	std	Z+1, r1	; 0x01
				mem_index++;
     440:	2f 5f       	subi	r18, 0xFF	; 255
     442:	3f 4f       	sbci	r19, 0xFF	; 255
     444:	30 93 31 02 	sts	0x0231, r19
     448:	20 93 30 02 	sts	0x0230, r18
				play(high_freq[butnum], low_freq[butnum]);
     44c:	90 e0       	ldi	r25, 0x00	; 0
     44e:	88 0f       	add	r24, r24
     450:	99 1f       	adc	r25, r25
     452:	fc 01       	movw	r30, r24
     454:	e2 5f       	subi	r30, 0xF2	; 242
     456:	fe 4f       	sbci	r31, 0xFE	; 254
     458:	60 81       	ld	r22, Z
     45a:	71 81       	ldd	r23, Z+1	; 0x01
     45c:	fc 01       	movw	r30, r24
     45e:	ea 5d       	subi	r30, 0xDA	; 218
     460:	fe 4f       	sbci	r31, 0xFE	; 254
     462:	80 81       	ld	r24, Z
     464:	91 81       	ldd	r25, Z+1	; 0x01
			}		
		}
	}
} 
     466:	df 91       	pop	r29
     468:	cf 91       	pop	r28
     46a:	1f 91       	pop	r17
     46c:	0f 91       	pop	r16
     46e:	ff 90       	pop	r15
     470:	ef 90       	pop	r14
     472:	df 90       	pop	r13
     474:	cf 90       	pop	r12
		else {
			fprintf(stdout, "%u\n\r", butnum);
			if (mem_index < 12) {
				mem[mem_index] = butnum;
				mem_index++;
				play(high_freq[butnum], low_freq[butnum]);
     476:	0c 94 6e 04 	jmp	0x8dc	; 0x8dc <play>
				if(silence == FALSE && !is_playing){
					timed_play(high_freq[mem[i]], low_freq[mem[i]], 1000);
					is_timed_playing = TRUE;
					fprintf(stdout, "Playing sound\n\r");
				}
				if(silence == TRUE && !is_playing) {
     47a:	81 11       	cpse	r24, r1
     47c:	82 cf       	rjmp	.-252    	; 0x382 <task1+0x296>
     47e:	6f cf       	rjmp	.-290    	; 0x35e <task1+0x272>
				mem_index++;
				play(high_freq[butnum], low_freq[butnum]);
			}		
		}
	}
} 
     480:	df 91       	pop	r29
     482:	cf 91       	pop	r28
     484:	1f 91       	pop	r17
     486:	0f 91       	pop	r16
     488:	ff 90       	pop	r15
     48a:	ef 90       	pop	r14
     48c:	df 90       	pop	r13
     48e:	cf 90       	pop	r12
     490:	08 95       	ret

00000492 <initialize>:
 
//Initialization used for the timer interrupts for debouncing
void initialize(void) {
	//set up timer 0 for 1 mSec timebase 
	OCR0A = 249;  		//set the compare re to 250 time ticks
     492:	89 ef       	ldi	r24, 0xF9	; 249
     494:	87 bd       	out	0x27, r24	; 39
	TIMSK0= (1<<OCIE0A);	//turn on timer 0 cmp match ISR 
     496:	82 e0       	ldi	r24, 0x02	; 2
     498:	80 93 6e 00 	sts	0x006E, r24
	//set prescalar to divide by 64 
	TCCR0B= 3; //0b00000011;	
     49c:	93 e0       	ldi	r25, 0x03	; 3
     49e:	95 bd       	out	0x25, r25	; 37
	// turn on clear-on-match
	TCCR0A= (1<<WGM01) ;
     4a0:	84 bd       	out	0x24, r24	; 36

	//init the task timers
	time1=0;  
     4a2:	10 92 2c 02 	sts	0x022C, r1
     4a6:	10 92 2b 02 	sts	0x022B, r1
	// PORT B is an input
	DDRB = 0x00;
     4aa:	14 b8       	out	0x04, r1	; 4
	//for no button push
	PushFlag = 0;
     4ac:	10 92 28 02 	sts	0x0228, r1
	//init the state machine
	PushState = NoPush;
     4b0:	81 e0       	ldi	r24, 0x01	; 1
     4b2:	80 93 33 02 	sts	0x0233, r24

	mem_index = 0;
     4b6:	10 92 31 02 	sts	0x0231, r1
     4ba:	10 92 30 02 	sts	0x0230, r1

	init_dtmf();
     4be:	0e 94 19 04 	call	0x832	; 0x832 <init_dtmf>
	//crank up the ISRs
	sei() ;
     4c2:	78 94       	sei
     4c4:	08 95       	ret

000004c6 <uart_init>:
{
#if F_CPU < 2000000UL && defined(U2X)
  UCSR0A = _BV(U2X);             /* improve baud rate error by using 2x clk */
  UBRR0L = (F_CPU / (8UL * UART_BAUD)) - 1;
#else
  UBRR0L = (F_CPU / (16UL * UART_BAUD)) - 1;
     4c6:	87 e6       	ldi	r24, 0x67	; 103
     4c8:	80 93 c4 00 	sts	0x00C4, r24
#endif
  UCSR0B = _BV(TXEN0) | _BV(RXEN0); /* tx/rx enable */
     4cc:	88 e1       	ldi	r24, 0x18	; 24
     4ce:	80 93 c1 00 	sts	0x00C1, r24
     4d2:	08 95       	ret

000004d4 <uart_putchar>:
 * Send character c down the UART Tx, wait until tx holding register
 * is empty.
 */
int
uart_putchar(char c, FILE *stream)
{
     4d4:	cf 93       	push	r28
     4d6:	c8 2f       	mov	r28, r24

  if (c == '\a')
     4d8:	87 30       	cpi	r24, 0x07	; 7
     4da:	49 f4       	brne	.+18     	; 0x4ee <uart_putchar+0x1a>
    {
      fputs("*ring*\n", stderr);
     4dc:	60 91 61 04 	lds	r22, 0x0461
     4e0:	70 91 62 04 	lds	r23, 0x0462
     4e4:	84 eb       	ldi	r24, 0xB4	; 180
     4e6:	91 e0       	ldi	r25, 0x01	; 1
     4e8:	0e 94 11 0b 	call	0x1622	; 0x1622 <fputs>
     4ec:	0b c0       	rjmp	.+22     	; 0x504 <uart_putchar+0x30>
      return 0;
    }

  if (c == '\n')
     4ee:	8a 30       	cpi	r24, 0x0A	; 10
     4f0:	19 f4       	brne	.+6      	; 0x4f8 <uart_putchar+0x24>
    uart_putchar('\r', stream);
     4f2:	8d e0       	ldi	r24, 0x0D	; 13
     4f4:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <uart_putchar>
  loop_until_bit_is_set(UCSR0A, UDRE0);
     4f8:	80 91 c0 00 	lds	r24, 0x00C0
     4fc:	85 ff       	sbrs	r24, 5
     4fe:	fc cf       	rjmp	.-8      	; 0x4f8 <uart_putchar+0x24>
  UDR0 = c;
     500:	c0 93 c6 00 	sts	0x00C6, r28

  return 0;
}
     504:	80 e0       	ldi	r24, 0x00	; 0
     506:	90 e0       	ldi	r25, 0x00	; 0
     508:	cf 91       	pop	r28
     50a:	08 95       	ret

0000050c <uart_getchar>:
 * Successive calls to uart_getchar() will be satisfied from the
 * internal buffer until that buffer is emptied again.
 */
int
uart_getchar(FILE *stream)
{
     50c:	ef 92       	push	r14
     50e:	ff 92       	push	r15
     510:	0f 93       	push	r16
     512:	1f 93       	push	r17
     514:	cf 93       	push	r28
     516:	df 93       	push	r29
     518:	8c 01       	movw	r16, r24
  uint8_t c;
  char *cp, *cp2;
  static char b[RX_BUFSIZE];
  static char *rxp;

  if (rxp == 0)
     51a:	80 91 d4 01 	lds	r24, 0x01D4
     51e:	90 91 d5 01 	lds	r25, 0x01D5
     522:	89 2b       	or	r24, r25
     524:	09 f0       	breq	.+2      	; 0x528 <uart_getchar+0x1c>
     526:	a1 c0       	rjmp	.+322    	; 0x66a <uart_getchar+0x15e>
     528:	c6 ed       	ldi	r28, 0xD6	; 214
     52a:	d1 e0       	ldi	r29, 0x01	; 1
    for (cp = b;;)
      {
	loop_until_bit_is_set(UCSR0A, RXC0);
     52c:	80 91 c0 00 	lds	r24, 0x00C0
     530:	87 ff       	sbrs	r24, 7
     532:	fc cf       	rjmp	.-8      	; 0x52c <uart_getchar+0x20>
	if (UCSR0A & _BV(FE0))
     534:	80 91 c0 00 	lds	r24, 0x00C0
     538:	84 fd       	sbrc	r24, 4
     53a:	aa c0       	rjmp	.+340    	; 0x690 <uart_getchar+0x184>
	  return _FDEV_EOF;
	if (UCSR0A & _BV(DOR0))
     53c:	80 91 c0 00 	lds	r24, 0x00C0
     540:	83 fd       	sbrc	r24, 3
     542:	a9 c0       	rjmp	.+338    	; 0x696 <uart_getchar+0x18a>
	  return _FDEV_ERR;
	c = UDR0;
     544:	80 91 c6 00 	lds	r24, 0x00C6
	/* behaviour similar to Unix stty ICRNL */
	if (c == '\r')
     548:	8d 30       	cpi	r24, 0x0D	; 13
     54a:	61 f4       	brne	.+24     	; 0x564 <uart_getchar+0x58>
	  c = '\n';
	if (c == '\n')
	  {
	    *cp = c;
     54c:	8a e0       	ldi	r24, 0x0A	; 10
     54e:	88 83       	st	Y, r24
	    uart_putchar(c, stream);
     550:	b8 01       	movw	r22, r16
     552:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <uart_putchar>
	    rxp = b;
     556:	86 ed       	ldi	r24, 0xD6	; 214
     558:	91 e0       	ldi	r25, 0x01	; 1
     55a:	90 93 d5 01 	sts	0x01D5, r25
     55e:	80 93 d4 01 	sts	0x01D4, r24
	    break;
     562:	83 c0       	rjmp	.+262    	; 0x66a <uart_getchar+0x15e>
	  return _FDEV_ERR;
	c = UDR0;
	/* behaviour similar to Unix stty ICRNL */
	if (c == '\r')
	  c = '\n';
	if (c == '\n')
     564:	8a 30       	cpi	r24, 0x0A	; 10
     566:	91 f3       	breq	.-28     	; 0x54c <uart_getchar+0x40>
	    *cp = c;
	    uart_putchar(c, stream);
	    rxp = b;
	    break;
	  }
	else if (c == '\t')
     568:	89 30       	cpi	r24, 0x09	; 9
     56a:	09 f4       	brne	.+2      	; 0x56e <uart_getchar+0x62>
	  c = ' ';
     56c:	80 e2       	ldi	r24, 0x20	; 32

	if ((c >= (uint8_t)' ' && c <= (uint8_t)'\x7e') ||
     56e:	98 2f       	mov	r25, r24
     570:	90 52       	subi	r25, 0x20	; 32
     572:	9f 35       	cpi	r25, 0x5F	; 95
     574:	10 f0       	brcs	.+4      	; 0x57a <uart_getchar+0x6e>
     576:	80 3a       	cpi	r24, 0xA0	; 160
     578:	90 f0       	brcs	.+36     	; 0x59e <uart_getchar+0x92>
	    c >= (uint8_t)'\xa0')
	  {
	    if (cp == b + RX_BUFSIZE - 1)
     57a:	92 e0       	ldi	r25, 0x02	; 2
     57c:	c5 32       	cpi	r28, 0x25	; 37
     57e:	d9 07       	cpc	r29, r25
     580:	49 f4       	brne	.+18     	; 0x594 <uart_getchar+0x88>
uart_putchar(char c, FILE *stream)
{

  if (c == '\a')
    {
      fputs("*ring*\n", stderr);
     582:	60 91 61 04 	lds	r22, 0x0461
     586:	70 91 62 04 	lds	r23, 0x0462
     58a:	84 eb       	ldi	r24, 0xB4	; 180
     58c:	91 e0       	ldi	r25, 0x01	; 1
     58e:	0e 94 11 0b 	call	0x1622	; 0x1622 <fputs>
     592:	cc cf       	rjmp	.-104    	; 0x52c <uart_getchar+0x20>
	  {
	    if (cp == b + RX_BUFSIZE - 1)
	      uart_putchar('\a', stream);
	    else
	      {
		*cp++ = c;
     594:	89 93       	st	Y+, r24
		uart_putchar(c, stream);
     596:	b8 01       	movw	r22, r16
     598:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <uart_putchar>
     59c:	c7 cf       	rjmp	.-114    	; 0x52c <uart_getchar+0x20>
	      }
	    continue;
	  }

	switch (c)
     59e:	82 31       	cpi	r24, 0x12	; 18
     5a0:	29 f1       	breq	.+74     	; 0x5ec <uart_getchar+0xe0>
     5a2:	38 f4       	brcc	.+14     	; 0x5b2 <uart_getchar+0xa6>
     5a4:	83 30       	cpi	r24, 0x03	; 3
     5a6:	09 f4       	brne	.+2      	; 0x5aa <uart_getchar+0x9e>
     5a8:	76 c0       	rjmp	.+236    	; 0x696 <uart_getchar+0x18a>
     5aa:	88 30       	cpi	r24, 0x08	; 8
     5ac:	09 f0       	breq	.+2      	; 0x5b0 <uart_getchar+0xa4>
     5ae:	be cf       	rjmp	.-132    	; 0x52c <uart_getchar+0x20>
     5b0:	09 c0       	rjmp	.+18     	; 0x5c4 <uart_getchar+0xb8>
     5b2:	87 31       	cpi	r24, 0x17	; 23
     5b4:	09 f4       	brne	.+2      	; 0x5b8 <uart_getchar+0xac>
     5b6:	4d c0       	rjmp	.+154    	; 0x652 <uart_getchar+0x146>
     5b8:	8f 37       	cpi	r24, 0x7F	; 127
     5ba:	21 f0       	breq	.+8      	; 0x5c4 <uart_getchar+0xb8>
     5bc:	85 31       	cpi	r24, 0x15	; 21
     5be:	09 f0       	breq	.+2      	; 0x5c2 <uart_getchar+0xb6>
     5c0:	b5 cf       	rjmp	.-150    	; 0x52c <uart_getchar+0x20>
     5c2:	34 c0       	rjmp	.+104    	; 0x62c <uart_getchar+0x120>
	  case 'c' & 0x1f:
	    return -1;

	  case '\b':
	  case '\x7f':
	    if (cp > b)
     5c4:	e1 e0       	ldi	r30, 0x01	; 1
     5c6:	c6 3d       	cpi	r28, 0xD6	; 214
     5c8:	de 07       	cpc	r29, r30
     5ca:	09 f0       	breq	.+2      	; 0x5ce <uart_getchar+0xc2>
     5cc:	08 f4       	brcc	.+2      	; 0x5d0 <uart_getchar+0xc4>
     5ce:	ae cf       	rjmp	.-164    	; 0x52c <uart_getchar+0x20>
	      {
		uart_putchar('\b', stream);
     5d0:	b8 01       	movw	r22, r16
     5d2:	88 e0       	ldi	r24, 0x08	; 8
     5d4:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <uart_putchar>
		uart_putchar(' ', stream);
     5d8:	b8 01       	movw	r22, r16
     5da:	80 e2       	ldi	r24, 0x20	; 32
     5dc:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <uart_putchar>
		uart_putchar('\b', stream);
     5e0:	b8 01       	movw	r22, r16
     5e2:	88 e0       	ldi	r24, 0x08	; 8
     5e4:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <uart_putchar>
		cp--;
     5e8:	21 97       	sbiw	r28, 0x01	; 1
     5ea:	a0 cf       	rjmp	.-192    	; 0x52c <uart_getchar+0x20>
	      }
	    break;

	  case 'r' & 0x1f:
	    uart_putchar('\r', stream);
     5ec:	b8 01       	movw	r22, r16
     5ee:	8d e0       	ldi	r24, 0x0D	; 13
     5f0:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <uart_putchar>
	    for (cp2 = b; cp2 < cp; cp2++)
     5f4:	86 ed       	ldi	r24, 0xD6	; 214
     5f6:	e8 2e       	mov	r14, r24
     5f8:	81 e0       	ldi	r24, 0x01	; 1
     5fa:	f8 2e       	mov	r15, r24
     5fc:	06 c0       	rjmp	.+12     	; 0x60a <uart_getchar+0xfe>
	      uart_putchar(*cp2, stream);
     5fe:	b8 01       	movw	r22, r16
     600:	f7 01       	movw	r30, r14
     602:	81 91       	ld	r24, Z+
     604:	7f 01       	movw	r14, r30
     606:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <uart_putchar>
	      }
	    break;

	  case 'r' & 0x1f:
	    uart_putchar('\r', stream);
	    for (cp2 = b; cp2 < cp; cp2++)
     60a:	ec 16       	cp	r14, r28
     60c:	fd 06       	cpc	r15, r29
     60e:	b8 f3       	brcs	.-18     	; 0x5fe <uart_getchar+0xf2>
     610:	8d cf       	rjmp	.-230    	; 0x52c <uart_getchar+0x20>
	    break;

	  case 'u' & 0x1f:
	    while (cp > b)
	      {
		uart_putchar('\b', stream);
     612:	b8 01       	movw	r22, r16
     614:	88 e0       	ldi	r24, 0x08	; 8
     616:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <uart_putchar>
		uart_putchar(' ', stream);
     61a:	b8 01       	movw	r22, r16
     61c:	80 e2       	ldi	r24, 0x20	; 32
     61e:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <uart_putchar>
		uart_putchar('\b', stream);
     622:	b8 01       	movw	r22, r16
     624:	88 e0       	ldi	r24, 0x08	; 8
     626:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <uart_putchar>
		cp--;
     62a:	21 97       	sbiw	r28, 0x01	; 1
	    for (cp2 = b; cp2 < cp; cp2++)
	      uart_putchar(*cp2, stream);
	    break;

	  case 'u' & 0x1f:
	    while (cp > b)
     62c:	f1 e0       	ldi	r31, 0x01	; 1
     62e:	c6 3d       	cpi	r28, 0xD6	; 214
     630:	df 07       	cpc	r29, r31
     632:	09 f0       	breq	.+2      	; 0x636 <uart_getchar+0x12a>
     634:	70 f7       	brcc	.-36     	; 0x612 <uart_getchar+0x106>
     636:	7a cf       	rjmp	.-268    	; 0x52c <uart_getchar+0x20>
	    break;

	  case 'w' & 0x1f:
	    while (cp > b && cp[-1] != ' ')
	      {
		uart_putchar('\b', stream);
     638:	b8 01       	movw	r22, r16
     63a:	88 e0       	ldi	r24, 0x08	; 8
     63c:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <uart_putchar>
		uart_putchar(' ', stream);
     640:	b8 01       	movw	r22, r16
     642:	80 e2       	ldi	r24, 0x20	; 32
     644:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <uart_putchar>
		uart_putchar('\b', stream);
     648:	b8 01       	movw	r22, r16
     64a:	88 e0       	ldi	r24, 0x08	; 8
     64c:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <uart_putchar>
		cp--;
     650:	e7 01       	movw	r28, r14
		cp--;
	      }
	    break;

	  case 'w' & 0x1f:
	    while (cp > b && cp[-1] != ' ')
     652:	81 e0       	ldi	r24, 0x01	; 1
     654:	c6 3d       	cpi	r28, 0xD6	; 214
     656:	d8 07       	cpc	r29, r24
     658:	09 f0       	breq	.+2      	; 0x65c <uart_getchar+0x150>
     65a:	08 f4       	brcc	.+2      	; 0x65e <uart_getchar+0x152>
     65c:	67 cf       	rjmp	.-306    	; 0x52c <uart_getchar+0x20>
     65e:	fe 01       	movw	r30, r28
     660:	82 91       	ld	r24, -Z
     662:	7f 01       	movw	r14, r30
     664:	80 32       	cpi	r24, 0x20	; 32
     666:	41 f7       	brne	.-48     	; 0x638 <uart_getchar+0x12c>
     668:	61 cf       	rjmp	.-318    	; 0x52c <uart_getchar+0x20>
	      }
	    break;
	  }
      }

  c = *rxp++;
     66a:	e0 91 d4 01 	lds	r30, 0x01D4
     66e:	f0 91 d5 01 	lds	r31, 0x01D5
     672:	20 81       	ld	r18, Z
  if (c == '\n')
     674:	2a 30       	cpi	r18, 0x0A	; 10
     676:	31 f0       	breq	.+12     	; 0x684 <uart_getchar+0x178>
	      }
	    break;
	  }
      }

  c = *rxp++;
     678:	31 96       	adiw	r30, 0x01	; 1
     67a:	f0 93 d5 01 	sts	0x01D5, r31
     67e:	e0 93 d4 01 	sts	0x01D4, r30
     682:	04 c0       	rjmp	.+8      	; 0x68c <uart_getchar+0x180>
  if (c == '\n')
    rxp = 0;
     684:	10 92 d5 01 	sts	0x01D5, r1
     688:	10 92 d4 01 	sts	0x01D4, r1

  return c;
     68c:	30 e0       	ldi	r19, 0x00	; 0
     68e:	05 c0       	rjmp	.+10     	; 0x69a <uart_getchar+0x18e>
  if (rxp == 0)
    for (cp = b;;)
      {
	loop_until_bit_is_set(UCSR0A, RXC0);
	if (UCSR0A & _BV(FE0))
	  return _FDEV_EOF;
     690:	2e ef       	ldi	r18, 0xFE	; 254
     692:	3f ef       	ldi	r19, 0xFF	; 255
     694:	02 c0       	rjmp	.+4      	; 0x69a <uart_getchar+0x18e>
	  }

	switch (c)
	  {
	  case 'c' & 0x1f:
	    return -1;
     696:	2f ef       	ldi	r18, 0xFF	; 255
     698:	3f ef       	ldi	r19, 0xFF	; 255
  c = *rxp++;
  if (c == '\n')
    rxp = 0;

  return c;
}
     69a:	c9 01       	movw	r24, r18
     69c:	df 91       	pop	r29
     69e:	cf 91       	pop	r28
     6a0:	1f 91       	pop	r17
     6a2:	0f 91       	pop	r16
     6a4:	ff 90       	pop	r15
     6a6:	ef 90       	pop	r14
     6a8:	08 95       	ret

000006aa <__vector_18>:
volatile unsigned long accumulator ;
volatile unsigned char changed;


volatile unsigned long increment;
ISR( TIMER0_OVF_vect){
     6aa:	1f 92       	push	r1
     6ac:	0f 92       	push	r0
     6ae:	0f b6       	in	r0, 0x3f	; 63
     6b0:	0f 92       	push	r0
     6b2:	11 24       	eor	r1, r1
     6b4:	0b b6       	in	r0, 0x3b	; 59
     6b6:	0f 92       	push	r0
     6b8:	2f 93       	push	r18
     6ba:	3f 93       	push	r19
     6bc:	4f 93       	push	r20
     6be:	5f 93       	push	r21
     6c0:	6f 93       	push	r22
     6c2:	7f 93       	push	r23
     6c4:	8f 93       	push	r24
     6c6:	9f 93       	push	r25
     6c8:	af 93       	push	r26
     6ca:	bf 93       	push	r27
     6cc:	cf 93       	push	r28
     6ce:	df 93       	push	r29
     6d0:	ef 93       	push	r30
     6d2:	ff 93       	push	r31
	//accumulator = accumulator + increment ;
	//highbyte = (char)(accumulator >> 24) ;
	
	// output the wavefrom sample
	//OCR0A = 128 + ((sineTable[highbyte] * rampTable[rampCount])>>7) ;
	changed = TRUE;
     6d4:	81 e0       	ldi	r24, 0x01	; 1
     6d6:	80 93 4a 04 	sts	0x044A, r24


	OCR0A = 128 + 
	   ( (
	   	   (sineTable[(accumulator_a >> 24)] + sineTable[(accumulator_b >> 24)]) * rampTable[rampCount]
     6da:	40 91 42 04 	lds	r20, 0x0442
     6de:	50 91 43 04 	lds	r21, 0x0443
     6e2:	60 91 44 04 	lds	r22, 0x0444
     6e6:	70 91 45 04 	lds	r23, 0x0445
     6ea:	80 91 4d 04 	lds	r24, 0x044D
     6ee:	90 91 4e 04 	lds	r25, 0x044E
     6f2:	a0 91 4f 04 	lds	r26, 0x044F
     6f6:	b0 91 50 04 	lds	r27, 0x0450
     6fa:	e0 91 4b 04 	lds	r30, 0x044B
     6fe:	f0 91 4c 04 	lds	r31, 0x044C
     702:	47 2f       	mov	r20, r23
     704:	55 27       	eor	r21, r21
     706:	66 27       	eor	r22, r22
     708:	77 27       	eor	r23, r23
     70a:	ea 01       	movw	r28, r20
     70c:	ce 5b       	subi	r28, 0xBE	; 190
     70e:	dc 4f       	sbci	r29, 0xFC	; 252
     710:	28 81       	ld	r18, Y
     712:	8b 2f       	mov	r24, r27
     714:	99 27       	eor	r25, r25
     716:	aa 27       	eor	r26, r26
     718:	bb 27       	eor	r27, r27
     71a:	dc 01       	movw	r26, r24
     71c:	ae 5b       	subi	r26, 0xBE	; 190
     71e:	bc 4f       	sbci	r27, 0xFC	; 252
     720:	8c 91       	ld	r24, X
     722:	99 27       	eor	r25, r25
     724:	87 fd       	sbrc	r24, 7
     726:	90 95       	com	r25
     728:	82 0f       	add	r24, r18
     72a:	91 1d       	adc	r25, r1
     72c:	27 fd       	sbrc	r18, 7
     72e:	9a 95       	dec	r25
     730:	e7 5c       	subi	r30, 0xC7	; 199
     732:	fd 4f       	sbci	r31, 0xFD	; 253
     734:	40 81       	ld	r20, Z
     736:	48 9f       	mul	r20, r24
     738:	90 01       	movw	r18, r0
     73a:	49 9f       	mul	r20, r25
     73c:	30 0d       	add	r19, r0
     73e:	11 24       	eor	r1, r1
	// output the wavefrom sample
	//OCR0A = 128 + ((sineTable[highbyte] * rampTable[rampCount])>>7) ;
	changed = TRUE;


	OCR0A = 128 + 
     740:	83 2f       	mov	r24, r19
     742:	80 58       	subi	r24, 0x80	; 128
     744:	87 bd       	out	0x27, r24	; 39
	   ( (
	   	   (sineTable[(accumulator_a >> 24)] + sineTable[(accumulator_b >> 24)]) * rampTable[rampCount]
	   	 ) >> 8
	   );
	accumulator_a += increment_a;
     746:	80 91 42 04 	lds	r24, 0x0442
     74a:	90 91 43 04 	lds	r25, 0x0443
     74e:	a0 91 44 04 	lds	r26, 0x0444
     752:	b0 91 45 04 	lds	r27, 0x0445
     756:	40 91 35 02 	lds	r20, 0x0235
     75a:	50 91 36 02 	lds	r21, 0x0236
     75e:	60 91 37 02 	lds	r22, 0x0237
     762:	70 91 38 02 	lds	r23, 0x0238
     766:	84 0f       	add	r24, r20
     768:	95 1f       	adc	r25, r21
     76a:	a6 1f       	adc	r26, r22
     76c:	b7 1f       	adc	r27, r23
     76e:	80 93 42 04 	sts	0x0442, r24
     772:	90 93 43 04 	sts	0x0443, r25
     776:	a0 93 44 04 	sts	0x0444, r26
     77a:	b0 93 45 04 	sts	0x0445, r27
	accumulator_b += increment_b;
     77e:	80 91 4d 04 	lds	r24, 0x044D
     782:	90 91 4e 04 	lds	r25, 0x044E
     786:	a0 91 4f 04 	lds	r26, 0x044F
     78a:	b0 91 50 04 	lds	r27, 0x0450
     78e:	40 91 56 04 	lds	r20, 0x0456
     792:	50 91 57 04 	lds	r21, 0x0457
     796:	60 91 58 04 	lds	r22, 0x0458
     79a:	70 91 59 04 	lds	r23, 0x0459
     79e:	84 0f       	add	r24, r20
     7a0:	95 1f       	adc	r25, r21
     7a2:	a6 1f       	adc	r26, r22
     7a4:	b7 1f       	adc	r27, r23
     7a6:	80 93 4d 04 	sts	0x044D, r24
     7aa:	90 93 4e 04 	sts	0x044E, r25
     7ae:	a0 93 4f 04 	sts	0x044F, r26
     7b2:	b0 93 50 04 	sts	0x0450, r27
	//generates a 1 ms timebase
	// Used for keeping track of time.
	if( count <= 0){
     7b6:	80 91 32 02 	lds	r24, 0x0232
     7ba:	81 11       	cpse	r24, r1
     7bc:	20 c0       	rjmp	.+64     	; 0x7fe <__vector_18+0x154>
		count = COUNTMS;
     7be:	8e e3       	ldi	r24, 0x3E	; 62
     7c0:	80 93 32 02 	sts	0x0232, r24
		time1++;
     7c4:	80 91 2b 02 	lds	r24, 0x022B
     7c8:	90 91 2c 02 	lds	r25, 0x022C
     7cc:	01 96       	adiw	r24, 0x01	; 1
     7ce:	90 93 2c 02 	sts	0x022C, r25
     7d2:	80 93 2b 02 	sts	0x022B, r24
		if( is_timed_playing && dds_duration > 0){
     7d6:	80 91 26 02 	lds	r24, 0x0226
     7da:	88 23       	and	r24, r24
     7dc:	81 f0       	breq	.+32     	; 0x7fe <__vector_18+0x154>
     7de:	80 91 29 02 	lds	r24, 0x0229
     7e2:	90 91 2a 02 	lds	r25, 0x022A
     7e6:	18 16       	cp	r1, r24
     7e8:	19 06       	cpc	r1, r25
     7ea:	4c f4       	brge	.+18     	; 0x7fe <__vector_18+0x154>
			dds_duration--;
     7ec:	80 91 29 02 	lds	r24, 0x0229
     7f0:	90 91 2a 02 	lds	r25, 0x022A
     7f4:	01 97       	sbiw	r24, 0x01	; 1
     7f6:	90 93 2a 02 	sts	0x022A, r25
     7fa:	80 93 29 02 	sts	0x0229, r24
		}
	}
	count--;	
     7fe:	80 91 32 02 	lds	r24, 0x0232
     802:	81 50       	subi	r24, 0x01	; 1
     804:	80 93 32 02 	sts	0x0232, r24
}
     808:	ff 91       	pop	r31
     80a:	ef 91       	pop	r30
     80c:	df 91       	pop	r29
     80e:	cf 91       	pop	r28
     810:	bf 91       	pop	r27
     812:	af 91       	pop	r26
     814:	9f 91       	pop	r25
     816:	8f 91       	pop	r24
     818:	7f 91       	pop	r23
     81a:	6f 91       	pop	r22
     81c:	5f 91       	pop	r21
     81e:	4f 91       	pop	r20
     820:	3f 91       	pop	r19
     822:	2f 91       	pop	r18
     824:	0f 90       	pop	r0
     826:	0b be       	out	0x3b, r0	; 59
     828:	0f 90       	pop	r0
     82a:	0f be       	out	0x3f, r0	; 63
     82c:	0f 90       	pop	r0
     82e:	1f 90       	pop	r1
     830:	18 95       	reti

00000832 <init_dtmf>:


void init_dtmf(){
     832:	ef 92       	push	r14
     834:	ff 92       	push	r15
     836:	0f 93       	push	r16
     838:	1f 93       	push	r17
     83a:	cf 93       	push	r28
     83c:	df 93       	push	r29
	DDRB = 0;
     83e:	14 b8       	out	0x04, r1	; 4
	DDRB |= OUTPUT_PIN;
     840:	23 9a       	sbi	0x04, 3	; 4
     842:	52 e4       	ldi	r21, 0x42	; 66
     844:	e5 2e       	mov	r14, r21
     846:	53 e0       	ldi	r21, 0x03	; 3
     848:	f5 2e       	mov	r15, r21
     84a:	09 e3       	ldi	r16, 0x39	; 57
     84c:	12 e0       	ldi	r17, 0x02	; 2
	int i;
	for (i=0; i<256; i++){
     84e:	c0 e0       	ldi	r28, 0x00	; 0
     850:	d0 e0       	ldi	r29, 0x00	; 0
		sineTable[i] = (char)(127.0 * sin(6.283*((float)i)/256.0)) ;
     852:	be 01       	movw	r22, r28
     854:	88 27       	eor	r24, r24
     856:	77 fd       	sbrc	r23, 7
     858:	80 95       	com	r24
     85a:	98 2f       	mov	r25, r24
     85c:	0e 94 45 08 	call	0x108a	; 0x108a <__floatsisf>
     860:	26 e5       	ldi	r18, 0x56	; 86
     862:	3e e0       	ldi	r19, 0x0E	; 14
     864:	49 ec       	ldi	r20, 0xC9	; 201
     866:	50 e4       	ldi	r21, 0x40	; 64
     868:	0e 94 31 07 	call	0xe62	; 0xe62 <__mulsf3>
     86c:	20 e0       	ldi	r18, 0x00	; 0
     86e:	30 e0       	ldi	r19, 0x00	; 0
     870:	40 e8       	ldi	r20, 0x80	; 128
     872:	5b e3       	ldi	r21, 0x3B	; 59
     874:	0e 94 31 07 	call	0xe62	; 0xe62 <__mulsf3>
     878:	0e 94 3c 0b 	call	0x1678	; 0x1678 <sin>
     87c:	20 e0       	ldi	r18, 0x00	; 0
     87e:	30 e0       	ldi	r19, 0x00	; 0
     880:	4e ef       	ldi	r20, 0xFE	; 254
     882:	52 e4       	ldi	r21, 0x42	; 66
     884:	0e 94 31 07 	call	0xe62	; 0xe62 <__mulsf3>
     888:	0e 94 4c 05 	call	0xa98	; 0xa98 <__fixunssfsi>
     88c:	f7 01       	movw	r30, r14
     88e:	61 93       	st	Z+, r22
     890:	7f 01       	movw	r14, r30
		// the following table needs 
		// rampTable[0]=0 and rampTable[255]=127
		rampTable[i] = i>>1 ;
     892:	ce 01       	movw	r24, r28
     894:	95 95       	asr	r25
     896:	87 95       	ror	r24
     898:	f8 01       	movw	r30, r16
     89a:	81 93       	st	Z+, r24
     89c:	8f 01       	movw	r16, r30

void init_dtmf(){
	DDRB = 0;
	DDRB |= OUTPUT_PIN;
	int i;
	for (i=0; i<256; i++){
     89e:	21 96       	adiw	r28, 0x01	; 1
     8a0:	c1 15       	cp	r28, r1
     8a2:	f1 e0       	ldi	r31, 0x01	; 1
     8a4:	df 07       	cpc	r29, r31
     8a6:	a9 f6       	brne	.-86     	; 0x852 <init_dtmf+0x20>
		sineTable[i] = (char)(127.0 * sin(6.283*((float)i)/256.0)) ;
		// the following table needs 
		// rampTable[0]=0 and rampTable[255]=127
		rampTable[i] = i>>1 ;
	}
	time = 0;
     8a8:	10 92 2e 02 	sts	0x022E, r1
     8ac:	10 92 2d 02 	sts	0x022D, r1

	// TCCR0B = 0;
	// //set divider to 1, run T0 at 16 MHz 
	// TCCR0B |= T0_CS00;
	TCCR0B = 1;
     8b0:	81 e0       	ldi	r24, 0x01	; 1
     8b2:	85 bd       	out	0x25, r24	; 37
	TIMSK0 = 0;
     8b4:	10 92 6e 00 	sts	0x006E, r1
	TIMSK0 |= TIMER0_OVERFLOW_INTERRUPT_ENABLE;
     8b8:	80 91 6e 00 	lds	r24, 0x006E
     8bc:	81 60       	ori	r24, 0x01	; 1
     8be:	80 93 6e 00 	sts	0x006E, r24
	//turn on fast PWM and OC0A - output 
	TCCR0A = 0;
     8c2:	14 bc       	out	0x24, r1	; 36
	TCCR0A = (1<<COM0A0) | (1<<COM0A1) | (1<<WGM00) | (1<<WGM01) ; 
     8c4:	83 ec       	ldi	r24, 0xC3	; 195
     8c6:	84 bd       	out	0x24, r24	; 36

	//TCCR0A |= WAVE_GEN_M00 + WAVE_GEN_M01 + COMPARE_MATCH_OUTPUT_A0 + COMPARE_MATCH_OUTPUT_A1; 
	OCR0A = 128;
     8c8:	80 e8       	ldi	r24, 0x80	; 128
     8ca:	87 bd       	out	0x27, r24	; 39
	//increment = INCREMENT_941;
	//increment_a = INCREMENT_941;
	//increment_b = INCREMENT_941;
	sei();
     8cc:	78 94       	sei
}
     8ce:	df 91       	pop	r29
     8d0:	cf 91       	pop	r28
     8d2:	1f 91       	pop	r17
     8d4:	0f 91       	pop	r16
     8d6:	ff 90       	pop	r15
     8d8:	ef 90       	pop	r14
     8da:	08 95       	ret

000008dc <play>:

//plays fA and fB for a duration of duration ms
void play(int fA, int fB){
	//if( !is_playing ){
		//is_playing = TRUE;
		switch( fA){
     8dc:	89 3b       	cpi	r24, 0xB9	; 185
     8de:	24 e0       	ldi	r18, 0x04	; 4
     8e0:	92 07       	cpc	r25, r18
     8e2:	89 f0       	breq	.+34     	; 0x906 <play+0x2a>
     8e4:	44 f4       	brge	.+16     	; 0x8f6 <play+0x1a>
     8e6:	89 3b       	cpi	r24, 0xB9	; 185
     8e8:	22 e0       	ldi	r18, 0x02	; 2
     8ea:	92 07       	cpc	r25, r18
     8ec:	19 f1       	breq	.+70     	; 0x934 <play+0x58>
     8ee:	8d 3a       	cpi	r24, 0xAD	; 173
     8f0:	93 40       	sbci	r25, 0x03	; 3
     8f2:	51 f5       	brne	.+84     	; 0x948 <play+0x6c>
     8f4:	24 c0       	rjmp	.+72     	; 0x93e <play+0x62>
     8f6:	88 33       	cpi	r24, 0x38	; 56
     8f8:	25 e0       	ldi	r18, 0x05	; 5
     8fa:	92 07       	cpc	r25, r18
     8fc:	49 f0       	breq	.+18     	; 0x910 <play+0x34>
     8fe:	85 3c       	cpi	r24, 0xC5	; 197
     900:	95 40       	sbci	r25, 0x05	; 5
     902:	11 f5       	brne	.+68     	; 0x948 <play+0x6c>
     904:	12 c0       	rjmp	.+36     	; 0x92a <play+0x4e>
			case 1209: increment_a = INCREMENT_1209; break;
     906:	87 e3       	ldi	r24, 0x37	; 55
     908:	98 eb       	ldi	r25, 0xB8	; 184
     90a:	a3 ef       	ldi	r26, 0xF3	; 243
     90c:	b4 e0       	ldi	r27, 0x04	; 4
     90e:	04 c0       	rjmp	.+8      	; 0x918 <play+0x3c>
			case 1336: increment_a = INCREMENT_1336; break;
     910:	88 e4       	ldi	r24, 0x48	; 72
     912:	93 ee       	ldi	r25, 0xE3	; 227
     914:	a8 e7       	ldi	r26, 0x78	; 120
     916:	b5 e0       	ldi	r27, 0x05	; 5
     918:	80 93 35 02 	sts	0x0235, r24
     91c:	90 93 36 02 	sts	0x0236, r25
     920:	a0 93 37 02 	sts	0x0237, r26
     924:	b0 93 38 02 	sts	0x0238, r27
     928:	17 c0       	rjmp	.+46     	; 0x958 <play+0x7c>
			case 1477: increment_a = INCREMENT_1477; break;
     92a:	8b e6       	ldi	r24, 0x6B	; 107
     92c:	9c eb       	ldi	r25, 0xBC	; 188
     92e:	ac e0       	ldi	r26, 0x0C	; 12
     930:	b6 e0       	ldi	r27, 0x06	; 6
     932:	f2 cf       	rjmp	.-28     	; 0x918 <play+0x3c>
			case 697:  increment_a = INCREMENT_697; break;
     934:	87 e3       	ldi	r24, 0x37	; 55
     936:	9a ed       	ldi	r25, 0xDA	; 218
     938:	aa ed       	ldi	r26, 0xDA	; 218
     93a:	b2 e0       	ldi	r27, 0x02	; 2
     93c:	ed cf       	rjmp	.-38     	; 0x918 <play+0x3c>
			case 941: increment_a = INCREMENT_941; break;
     93e:	83 e0       	ldi	r24, 0x03	; 3
     940:	94 eb       	ldi	r25, 0xB4	; 180
     942:	aa ed       	ldi	r26, 0xDA	; 218
     944:	b3 e0       	ldi	r27, 0x03	; 3
     946:	e8 cf       	rjmp	.-48     	; 0x918 <play+0x3c>
			default: increment_a = 0; break;
     948:	10 92 35 02 	sts	0x0235, r1
     94c:	10 92 36 02 	sts	0x0236, r1
     950:	10 92 37 02 	sts	0x0237, r1
     954:	10 92 38 02 	sts	0x0238, r1
		}

		switch ( fB) {
     958:	64 35       	cpi	r22, 0x54	; 84
     95a:	83 e0       	ldi	r24, 0x03	; 3
     95c:	78 07       	cpc	r23, r24
     95e:	d9 f0       	breq	.+54     	; 0x996 <play+0xba>
     960:	44 f4       	brge	.+16     	; 0x972 <play+0x96>
     962:	69 3b       	cpi	r22, 0xB9	; 185
     964:	82 e0       	ldi	r24, 0x02	; 2
     966:	78 07       	cpc	r23, r24
     968:	61 f0       	breq	.+24     	; 0x982 <play+0xa6>
     96a:	62 30       	cpi	r22, 0x02	; 2
     96c:	73 40       	sbci	r23, 0x03	; 3
     96e:	91 f5       	brne	.+100    	; 0x9d4 <play+0xf8>
     970:	0d c0       	rjmp	.+26     	; 0x98c <play+0xb0>
     972:	6d 3a       	cpi	r22, 0xAD	; 173
     974:	83 e0       	ldi	r24, 0x03	; 3
     976:	78 07       	cpc	r23, r24
     978:	99 f0       	breq	.+38     	; 0x9a0 <play+0xc4>
     97a:	69 3b       	cpi	r22, 0xB9	; 185
     97c:	74 40       	sbci	r23, 0x04	; 4
     97e:	51 f5       	brne	.+84     	; 0x9d4 <play+0xf8>
     980:	1c c0       	rjmp	.+56     	; 0x9ba <play+0xde>
			case 697: increment_b = INCREMENT_697; break;
     982:	87 e3       	ldi	r24, 0x37	; 55
     984:	9a ed       	ldi	r25, 0xDA	; 218
     986:	aa ed       	ldi	r26, 0xDA	; 218
     988:	b2 e0       	ldi	r27, 0x02	; 2
     98a:	0e c0       	rjmp	.+28     	; 0x9a8 <play+0xcc>
			case 770: increment_b = INCREMENT_770; break;
     98c:	8e ed       	ldi	r24, 0xDE	; 222
     98e:	95 e6       	ldi	r25, 0x65	; 101
     990:	a7 e2       	ldi	r26, 0x27	; 39
     992:	b3 e0       	ldi	r27, 0x03	; 3
     994:	09 c0       	rjmp	.+18     	; 0x9a8 <play+0xcc>
			case 852: increment_b = INCREMENT_852; break;
     996:	8c e6       	ldi	r24, 0x6C	; 108
     998:	91 e6       	ldi	r25, 0x61	; 97
     99a:	ad e7       	ldi	r26, 0x7D	; 125
     99c:	b3 e0       	ldi	r27, 0x03	; 3
     99e:	04 c0       	rjmp	.+8      	; 0x9a8 <play+0xcc>
			case 941: increment_b = INCREMENT_941; break;
     9a0:	83 e0       	ldi	r24, 0x03	; 3
     9a2:	94 eb       	ldi	r25, 0xB4	; 180
     9a4:	aa ed       	ldi	r26, 0xDA	; 218
     9a6:	b3 e0       	ldi	r27, 0x03	; 3
     9a8:	80 93 56 04 	sts	0x0456, r24
     9ac:	90 93 57 04 	sts	0x0457, r25
     9b0:	a0 93 58 04 	sts	0x0458, r26
     9b4:	b0 93 59 04 	sts	0x0459, r27
     9b8:	08 95       	ret
			case 1209: increment_a = INCREMENT_1209; break;
     9ba:	87 e3       	ldi	r24, 0x37	; 55
     9bc:	98 eb       	ldi	r25, 0xB8	; 184
     9be:	a3 ef       	ldi	r26, 0xF3	; 243
     9c0:	b4 e0       	ldi	r27, 0x04	; 4
     9c2:	80 93 35 02 	sts	0x0235, r24
     9c6:	90 93 36 02 	sts	0x0236, r25
     9ca:	a0 93 37 02 	sts	0x0237, r26
     9ce:	b0 93 38 02 	sts	0x0238, r27
     9d2:	08 95       	ret
			default: increment_b = 0; break;
     9d4:	10 92 56 04 	sts	0x0456, r1
     9d8:	10 92 57 04 	sts	0x0457, r1
     9dc:	10 92 58 04 	sts	0x0458, r1
     9e0:	10 92 59 04 	sts	0x0459, r1
     9e4:	08 95       	ret

000009e6 <timed_play>:
		//OCR0A = 128;	
	//}
}

void timed_play(int fA, int fB, int duration){
	dds_duration = duration;
     9e6:	50 93 2a 02 	sts	0x022A, r21
     9ea:	40 93 29 02 	sts	0x0229, r20
	play(fA, fB);
     9ee:	0e 94 6e 04 	call	0x8dc	; 0x8dc <play>
	is_playing=TRUE;
     9f2:	81 e0       	ldi	r24, 0x01	; 1
     9f4:	80 93 34 02 	sts	0x0234, r24
     9f8:	08 95       	ret

000009fa <stop_playing>:
}

void stop_playing(){
	is_playing = FALSE;
     9fa:	10 92 34 02 	sts	0x0234, r1
	sample = 0;
     9fe:	10 92 5c 04 	sts	0x045C, r1
     a02:	10 92 5b 04 	sts	0x045B, r1
	rampCount = 0;
     a06:	10 92 4c 04 	sts	0x044C, r1
     a0a:	10 92 4b 04 	sts	0x044B, r1
	increment_a = increment_b = 0;
     a0e:	10 92 56 04 	sts	0x0456, r1
     a12:	10 92 57 04 	sts	0x0457, r1
     a16:	10 92 58 04 	sts	0x0458, r1
     a1a:	10 92 59 04 	sts	0x0459, r1
     a1e:	10 92 35 02 	sts	0x0235, r1
     a22:	10 92 36 02 	sts	0x0236, r1
     a26:	10 92 37 02 	sts	0x0237, r1
     a2a:	10 92 38 02 	sts	0x0238, r1
	accumulator_a = accumulator_b = 0;
     a2e:	10 92 4d 04 	sts	0x044D, r1
     a32:	10 92 4e 04 	sts	0x044E, r1
     a36:	10 92 4f 04 	sts	0x044F, r1
     a3a:	10 92 50 04 	sts	0x0450, r1
     a3e:	10 92 42 04 	sts	0x0442, r1
     a42:	10 92 43 04 	sts	0x0443, r1
     a46:	10 92 44 04 	sts	0x0444, r1
     a4a:	10 92 45 04 	sts	0x0445, r1
     a4e:	08 95       	ret

00000a50 <update_status_variables>:
}


void update_status_variables(){
	if(changed == TRUE){
     a50:	80 91 4a 04 	lds	r24, 0x044A
     a54:	81 30       	cpi	r24, 0x01	; 1
     a56:	f9 f4       	brne	.+62     	; 0xa96 <update_status_variables+0x46>
		changed = FALSE;
     a58:	10 92 4a 04 	sts	0x044A, r1

		if (PushState == Pushed && rampCount < 255) {
     a5c:	80 91 33 02 	lds	r24, 0x0233
     a60:	83 30       	cpi	r24, 0x03	; 3
     a62:	41 f4       	brne	.+16     	; 0xa74 <update_status_variables+0x24>
     a64:	80 91 4b 04 	lds	r24, 0x044B
     a68:	90 91 4c 04 	lds	r25, 0x044C
     a6c:	8f 3f       	cpi	r24, 0xFF	; 255
     a6e:	91 05       	cpc	r25, r1
     a70:	90 f4       	brcc	.+36     	; 0xa96 <update_status_variables+0x46>
     a72:	08 c0       	rjmp	.+16     	; 0xa84 <update_status_variables+0x34>
			rampCount++;
		}
		if (PushState == NoPush && rampCount > 0 ) {
     a74:	81 30       	cpi	r24, 0x01	; 1
     a76:	79 f4       	brne	.+30     	; 0xa96 <update_status_variables+0x46>
     a78:	80 91 4b 04 	lds	r24, 0x044B
     a7c:	90 91 4c 04 	lds	r25, 0x044C
     a80:	89 2b       	or	r24, r25
     a82:	49 f0       	breq	.+18     	; 0xa96 <update_status_variables+0x46>
			rampCount++;
     a84:	80 91 4b 04 	lds	r24, 0x044B
     a88:	90 91 4c 04 	lds	r25, 0x044C
     a8c:	01 96       	adiw	r24, 0x01	; 1
     a8e:	90 93 4c 04 	sts	0x044C, r25
     a92:	80 93 4b 04 	sts	0x044B, r24
     a96:	08 95       	ret

00000a98 <__fixunssfsi>:
     a98:	cf 92       	push	r12
     a9a:	df 92       	push	r13
     a9c:	ef 92       	push	r14
     a9e:	ff 92       	push	r15
     aa0:	0f 93       	push	r16
     aa2:	1f 93       	push	r17
     aa4:	6b 01       	movw	r12, r22
     aa6:	7c 01       	movw	r14, r24
     aa8:	20 e0       	ldi	r18, 0x00	; 0
     aaa:	30 e0       	ldi	r19, 0x00	; 0
     aac:	40 e0       	ldi	r20, 0x00	; 0
     aae:	5f e4       	ldi	r21, 0x4F	; 79
     ab0:	0e 94 16 08 	call	0x102c	; 0x102c <__gesf2>
     ab4:	87 fd       	sbrc	r24, 7
     ab6:	0e c0       	rjmp	.+28     	; 0xad4 <__fixunssfsi+0x3c>
     ab8:	20 e0       	ldi	r18, 0x00	; 0
     aba:	30 e0       	ldi	r19, 0x00	; 0
     abc:	40 e0       	ldi	r20, 0x00	; 0
     abe:	5f e4       	ldi	r21, 0x4F	; 79
     ac0:	c7 01       	movw	r24, r14
     ac2:	b6 01       	movw	r22, r12
     ac4:	0e 94 01 07 	call	0xe02	; 0xe02 <__subsf3>
     ac8:	0e 94 a1 08 	call	0x1142	; 0x1142 <__fixsfsi>
     acc:	8b 01       	movw	r16, r22
     ace:	9c 01       	movw	r18, r24
     ad0:	30 58       	subi	r19, 0x80	; 128
     ad2:	06 c0       	rjmp	.+12     	; 0xae0 <__fixunssfsi+0x48>
     ad4:	c7 01       	movw	r24, r14
     ad6:	b6 01       	movw	r22, r12
     ad8:	0e 94 a1 08 	call	0x1142	; 0x1142 <__fixsfsi>
     adc:	8b 01       	movw	r16, r22
     ade:	9c 01       	movw	r18, r24
     ae0:	b8 01       	movw	r22, r16
     ae2:	c9 01       	movw	r24, r18
     ae4:	1f 91       	pop	r17
     ae6:	0f 91       	pop	r16
     ae8:	ff 90       	pop	r15
     aea:	ef 90       	pop	r14
     aec:	df 90       	pop	r13
     aee:	cf 90       	pop	r12
     af0:	08 95       	ret

00000af2 <_fpadd_parts>:
     af2:	a4 e0       	ldi	r26, 0x04	; 4
     af4:	b0 e0       	ldi	r27, 0x00	; 0
     af6:	ef e7       	ldi	r30, 0x7F	; 127
     af8:	f5 e0       	ldi	r31, 0x05	; 5
     afa:	0c 94 cc 0a 	jmp	0x1598	; 0x1598 <__prologue_saves__+0x4>
     afe:	7c 01       	movw	r14, r24
     b00:	6a 01       	movw	r12, r20
     b02:	fc 01       	movw	r30, r24
     b04:	80 81       	ld	r24, Z
     b06:	82 30       	cpi	r24, 0x02	; 2
     b08:	08 f4       	brcc	.+2      	; 0xb0c <_fpadd_parts+0x1a>
     b0a:	4a c1       	rjmp	.+660    	; 0xda0 <_fpadd_parts+0x2ae>
     b0c:	fb 01       	movw	r30, r22
     b0e:	90 81       	ld	r25, Z
     b10:	92 30       	cpi	r25, 0x02	; 2
     b12:	08 f4       	brcc	.+2      	; 0xb16 <_fpadd_parts+0x24>
     b14:	42 c1       	rjmp	.+644    	; 0xd9a <_fpadd_parts+0x2a8>
     b16:	84 30       	cpi	r24, 0x04	; 4
     b18:	79 f4       	brne	.+30     	; 0xb38 <_fpadd_parts+0x46>
     b1a:	94 30       	cpi	r25, 0x04	; 4
     b1c:	09 f0       	breq	.+2      	; 0xb20 <_fpadd_parts+0x2e>
     b1e:	40 c1       	rjmp	.+640    	; 0xda0 <_fpadd_parts+0x2ae>
     b20:	f7 01       	movw	r30, r14
     b22:	91 81       	ldd	r25, Z+1	; 0x01
     b24:	fb 01       	movw	r30, r22
     b26:	81 81       	ldd	r24, Z+1	; 0x01
     b28:	98 17       	cp	r25, r24
     b2a:	09 f4       	brne	.+2      	; 0xb2e <_fpadd_parts+0x3c>
     b2c:	39 c1       	rjmp	.+626    	; 0xda0 <_fpadd_parts+0x2ae>
     b2e:	ae e4       	ldi	r26, 0x4E	; 78
     b30:	ea 2e       	mov	r14, r26
     b32:	a1 e0       	ldi	r26, 0x01	; 1
     b34:	fa 2e       	mov	r15, r26
     b36:	34 c1       	rjmp	.+616    	; 0xda0 <_fpadd_parts+0x2ae>
     b38:	94 30       	cpi	r25, 0x04	; 4
     b3a:	09 f4       	brne	.+2      	; 0xb3e <_fpadd_parts+0x4c>
     b3c:	2e c1       	rjmp	.+604    	; 0xd9a <_fpadd_parts+0x2a8>
     b3e:	92 30       	cpi	r25, 0x02	; 2
     b40:	91 f4       	brne	.+36     	; 0xb66 <_fpadd_parts+0x74>
     b42:	82 30       	cpi	r24, 0x02	; 2
     b44:	09 f0       	breq	.+2      	; 0xb48 <_fpadd_parts+0x56>
     b46:	2c c1       	rjmp	.+600    	; 0xda0 <_fpadd_parts+0x2ae>
     b48:	88 e0       	ldi	r24, 0x08	; 8
     b4a:	f7 01       	movw	r30, r14
     b4c:	da 01       	movw	r26, r20
     b4e:	01 90       	ld	r0, Z+
     b50:	0d 92       	st	X+, r0
     b52:	8a 95       	dec	r24
     b54:	e1 f7       	brne	.-8      	; 0xb4e <_fpadd_parts+0x5c>
     b56:	fb 01       	movw	r30, r22
     b58:	81 81       	ldd	r24, Z+1	; 0x01
     b5a:	f7 01       	movw	r30, r14
     b5c:	91 81       	ldd	r25, Z+1	; 0x01
     b5e:	89 23       	and	r24, r25
     b60:	fa 01       	movw	r30, r20
     b62:	81 83       	std	Z+1, r24	; 0x01
     b64:	1c c1       	rjmp	.+568    	; 0xd9e <_fpadd_parts+0x2ac>
     b66:	82 30       	cpi	r24, 0x02	; 2
     b68:	09 f4       	brne	.+2      	; 0xb6c <_fpadd_parts+0x7a>
     b6a:	17 c1       	rjmp	.+558    	; 0xd9a <_fpadd_parts+0x2a8>
     b6c:	f7 01       	movw	r30, r14
     b6e:	82 81       	ldd	r24, Z+2	; 0x02
     b70:	93 81       	ldd	r25, Z+3	; 0x03
     b72:	fb 01       	movw	r30, r22
     b74:	a2 81       	ldd	r26, Z+2	; 0x02
     b76:	b3 81       	ldd	r27, Z+3	; 0x03
     b78:	f7 01       	movw	r30, r14
     b7a:	04 81       	ldd	r16, Z+4	; 0x04
     b7c:	15 81       	ldd	r17, Z+5	; 0x05
     b7e:	26 81       	ldd	r18, Z+6	; 0x06
     b80:	37 81       	ldd	r19, Z+7	; 0x07
     b82:	fb 01       	movw	r30, r22
     b84:	84 80       	ldd	r8, Z+4	; 0x04
     b86:	95 80       	ldd	r9, Z+5	; 0x05
     b88:	a6 80       	ldd	r10, Z+6	; 0x06
     b8a:	b7 80       	ldd	r11, Z+7	; 0x07
     b8c:	fc 01       	movw	r30, r24
     b8e:	ea 1b       	sub	r30, r26
     b90:	fb 0b       	sbc	r31, r27
     b92:	af 01       	movw	r20, r30
     b94:	f7 ff       	sbrs	r31, 7
     b96:	04 c0       	rjmp	.+8      	; 0xba0 <_fpadd_parts+0xae>
     b98:	44 27       	eor	r20, r20
     b9a:	55 27       	eor	r21, r21
     b9c:	4e 1b       	sub	r20, r30
     b9e:	5f 0b       	sbc	r21, r31
     ba0:	40 32       	cpi	r20, 0x20	; 32
     ba2:	51 05       	cpc	r21, r1
     ba4:	0c f0       	brlt	.+2      	; 0xba8 <_fpadd_parts+0xb6>
     ba6:	74 c0       	rjmp	.+232    	; 0xc90 <_fpadd_parts+0x19e>
     ba8:	1e 16       	cp	r1, r30
     baa:	1f 06       	cpc	r1, r31
     bac:	b4 f5       	brge	.+108    	; 0xc1a <_fpadd_parts+0x128>
     bae:	24 01       	movw	r4, r8
     bb0:	35 01       	movw	r6, r10
     bb2:	04 2e       	mov	r0, r20
     bb4:	04 c0       	rjmp	.+8      	; 0xbbe <_fpadd_parts+0xcc>
     bb6:	76 94       	lsr	r7
     bb8:	67 94       	ror	r6
     bba:	57 94       	ror	r5
     bbc:	47 94       	ror	r4
     bbe:	0a 94       	dec	r0
     bc0:	d2 f7       	brpl	.-12     	; 0xbb6 <_fpadd_parts+0xc4>
     bc2:	49 82       	std	Y+1, r4	; 0x01
     bc4:	5a 82       	std	Y+2, r5	; 0x02
     bc6:	6b 82       	std	Y+3, r6	; 0x03
     bc8:	7c 82       	std	Y+4, r7	; 0x04
     bca:	41 2c       	mov	r4, r1
     bcc:	51 2c       	mov	r5, r1
     bce:	32 01       	movw	r6, r4
     bd0:	43 94       	inc	r4
     bd2:	04 c0       	rjmp	.+8      	; 0xbdc <_fpadd_parts+0xea>
     bd4:	44 0c       	add	r4, r4
     bd6:	55 1c       	adc	r5, r5
     bd8:	66 1c       	adc	r6, r6
     bda:	77 1c       	adc	r7, r7
     bdc:	4a 95       	dec	r20
     bde:	d2 f7       	brpl	.-12     	; 0xbd4 <_fpadd_parts+0xe2>
     be0:	41 e0       	ldi	r20, 0x01	; 1
     be2:	44 1a       	sub	r4, r20
     be4:	51 08       	sbc	r5, r1
     be6:	61 08       	sbc	r6, r1
     be8:	71 08       	sbc	r7, r1
     bea:	48 20       	and	r4, r8
     bec:	59 20       	and	r5, r9
     bee:	6a 20       	and	r6, r10
     bf0:	7b 20       	and	r7, r11
     bf2:	81 2c       	mov	r8, r1
     bf4:	91 2c       	mov	r9, r1
     bf6:	54 01       	movw	r10, r8
     bf8:	83 94       	inc	r8
     bfa:	45 28       	or	r4, r5
     bfc:	46 28       	or	r4, r6
     bfe:	47 28       	or	r4, r7
     c00:	19 f4       	brne	.+6      	; 0xc08 <_fpadd_parts+0x116>
     c02:	81 2c       	mov	r8, r1
     c04:	91 2c       	mov	r9, r1
     c06:	54 01       	movw	r10, r8
     c08:	49 80       	ldd	r4, Y+1	; 0x01
     c0a:	5a 80       	ldd	r5, Y+2	; 0x02
     c0c:	6b 80       	ldd	r6, Y+3	; 0x03
     c0e:	7c 80       	ldd	r7, Y+4	; 0x04
     c10:	84 28       	or	r8, r4
     c12:	95 28       	or	r9, r5
     c14:	a6 28       	or	r10, r6
     c16:	b7 28       	or	r11, r7
     c18:	46 c0       	rjmp	.+140    	; 0xca6 <_fpadd_parts+0x1b4>
     c1a:	ef 2b       	or	r30, r31
     c1c:	09 f4       	brne	.+2      	; 0xc20 <_fpadd_parts+0x12e>
     c1e:	43 c0       	rjmp	.+134    	; 0xca6 <_fpadd_parts+0x1b4>
     c20:	84 0f       	add	r24, r20
     c22:	95 1f       	adc	r25, r21
     c24:	28 01       	movw	r4, r16
     c26:	39 01       	movw	r6, r18
     c28:	04 2e       	mov	r0, r20
     c2a:	04 c0       	rjmp	.+8      	; 0xc34 <_fpadd_parts+0x142>
     c2c:	76 94       	lsr	r7
     c2e:	67 94       	ror	r6
     c30:	57 94       	ror	r5
     c32:	47 94       	ror	r4
     c34:	0a 94       	dec	r0
     c36:	d2 f7       	brpl	.-12     	; 0xc2c <_fpadd_parts+0x13a>
     c38:	49 82       	std	Y+1, r4	; 0x01
     c3a:	5a 82       	std	Y+2, r5	; 0x02
     c3c:	6b 82       	std	Y+3, r6	; 0x03
     c3e:	7c 82       	std	Y+4, r7	; 0x04
     c40:	41 2c       	mov	r4, r1
     c42:	51 2c       	mov	r5, r1
     c44:	32 01       	movw	r6, r4
     c46:	43 94       	inc	r4
     c48:	04 c0       	rjmp	.+8      	; 0xc52 <_fpadd_parts+0x160>
     c4a:	44 0c       	add	r4, r4
     c4c:	55 1c       	adc	r5, r5
     c4e:	66 1c       	adc	r6, r6
     c50:	77 1c       	adc	r7, r7
     c52:	4a 95       	dec	r20
     c54:	d2 f7       	brpl	.-12     	; 0xc4a <_fpadd_parts+0x158>
     c56:	41 e0       	ldi	r20, 0x01	; 1
     c58:	44 1a       	sub	r4, r20
     c5a:	51 08       	sbc	r5, r1
     c5c:	61 08       	sbc	r6, r1
     c5e:	71 08       	sbc	r7, r1
     c60:	40 22       	and	r4, r16
     c62:	51 22       	and	r5, r17
     c64:	62 22       	and	r6, r18
     c66:	73 22       	and	r7, r19
     c68:	01 e0       	ldi	r16, 0x01	; 1
     c6a:	10 e0       	ldi	r17, 0x00	; 0
     c6c:	20 e0       	ldi	r18, 0x00	; 0
     c6e:	30 e0       	ldi	r19, 0x00	; 0
     c70:	45 28       	or	r4, r5
     c72:	46 28       	or	r4, r6
     c74:	47 28       	or	r4, r7
     c76:	19 f4       	brne	.+6      	; 0xc7e <_fpadd_parts+0x18c>
     c78:	00 e0       	ldi	r16, 0x00	; 0
     c7a:	10 e0       	ldi	r17, 0x00	; 0
     c7c:	98 01       	movw	r18, r16
     c7e:	49 80       	ldd	r4, Y+1	; 0x01
     c80:	5a 80       	ldd	r5, Y+2	; 0x02
     c82:	6b 80       	ldd	r6, Y+3	; 0x03
     c84:	7c 80       	ldd	r7, Y+4	; 0x04
     c86:	04 29       	or	r16, r4
     c88:	15 29       	or	r17, r5
     c8a:	26 29       	or	r18, r6
     c8c:	37 29       	or	r19, r7
     c8e:	0b c0       	rjmp	.+22     	; 0xca6 <_fpadd_parts+0x1b4>
     c90:	a8 17       	cp	r26, r24
     c92:	b9 07       	cpc	r27, r25
     c94:	24 f4       	brge	.+8      	; 0xc9e <_fpadd_parts+0x1ac>
     c96:	81 2c       	mov	r8, r1
     c98:	91 2c       	mov	r9, r1
     c9a:	54 01       	movw	r10, r8
     c9c:	04 c0       	rjmp	.+8      	; 0xca6 <_fpadd_parts+0x1b4>
     c9e:	cd 01       	movw	r24, r26
     ca0:	00 e0       	ldi	r16, 0x00	; 0
     ca2:	10 e0       	ldi	r17, 0x00	; 0
     ca4:	98 01       	movw	r18, r16
     ca6:	f7 01       	movw	r30, r14
     ca8:	41 81       	ldd	r20, Z+1	; 0x01
     caa:	fb 01       	movw	r30, r22
     cac:	51 81       	ldd	r21, Z+1	; 0x01
     cae:	45 17       	cp	r20, r21
     cb0:	09 f4       	brne	.+2      	; 0xcb4 <_fpadd_parts+0x1c2>
     cb2:	46 c0       	rjmp	.+140    	; 0xd40 <_fpadd_parts+0x24e>
     cb4:	44 23       	and	r20, r20
     cb6:	49 f0       	breq	.+18     	; 0xcca <_fpadd_parts+0x1d8>
     cb8:	24 01       	movw	r4, r8
     cba:	35 01       	movw	r6, r10
     cbc:	40 1a       	sub	r4, r16
     cbe:	51 0a       	sbc	r5, r17
     cc0:	62 0a       	sbc	r6, r18
     cc2:	73 0a       	sbc	r7, r19
     cc4:	93 01       	movw	r18, r6
     cc6:	82 01       	movw	r16, r4
     cc8:	04 c0       	rjmp	.+8      	; 0xcd2 <_fpadd_parts+0x1e0>
     cca:	08 19       	sub	r16, r8
     ccc:	19 09       	sbc	r17, r9
     cce:	2a 09       	sbc	r18, r10
     cd0:	3b 09       	sbc	r19, r11
     cd2:	37 fd       	sbrc	r19, 7
     cd4:	05 c0       	rjmp	.+10     	; 0xce0 <_fpadd_parts+0x1ee>
     cd6:	f6 01       	movw	r30, r12
     cd8:	11 82       	std	Z+1, r1	; 0x01
     cda:	93 83       	std	Z+3, r25	; 0x03
     cdc:	82 83       	std	Z+2, r24	; 0x02
     cde:	0c c0       	rjmp	.+24     	; 0xcf8 <_fpadd_parts+0x206>
     ce0:	41 e0       	ldi	r20, 0x01	; 1
     ce2:	f6 01       	movw	r30, r12
     ce4:	41 83       	std	Z+1, r20	; 0x01
     ce6:	93 83       	std	Z+3, r25	; 0x03
     ce8:	82 83       	std	Z+2, r24	; 0x02
     cea:	30 95       	com	r19
     cec:	20 95       	com	r18
     cee:	10 95       	com	r17
     cf0:	01 95       	neg	r16
     cf2:	1f 4f       	sbci	r17, 0xFF	; 255
     cf4:	2f 4f       	sbci	r18, 0xFF	; 255
     cf6:	3f 4f       	sbci	r19, 0xFF	; 255
     cf8:	04 83       	std	Z+4, r16	; 0x04
     cfa:	15 83       	std	Z+5, r17	; 0x05
     cfc:	26 83       	std	Z+6, r18	; 0x06
     cfe:	37 83       	std	Z+7, r19	; 0x07
     d00:	0e c0       	rjmp	.+28     	; 0xd1e <_fpadd_parts+0x22c>
     d02:	88 0f       	add	r24, r24
     d04:	99 1f       	adc	r25, r25
     d06:	aa 1f       	adc	r26, r26
     d08:	bb 1f       	adc	r27, r27
     d0a:	f6 01       	movw	r30, r12
     d0c:	84 83       	std	Z+4, r24	; 0x04
     d0e:	95 83       	std	Z+5, r25	; 0x05
     d10:	a6 83       	std	Z+6, r26	; 0x06
     d12:	b7 83       	std	Z+7, r27	; 0x07
     d14:	82 81       	ldd	r24, Z+2	; 0x02
     d16:	93 81       	ldd	r25, Z+3	; 0x03
     d18:	01 97       	sbiw	r24, 0x01	; 1
     d1a:	93 83       	std	Z+3, r25	; 0x03
     d1c:	82 83       	std	Z+2, r24	; 0x02
     d1e:	f6 01       	movw	r30, r12
     d20:	84 81       	ldd	r24, Z+4	; 0x04
     d22:	95 81       	ldd	r25, Z+5	; 0x05
     d24:	a6 81       	ldd	r26, Z+6	; 0x06
     d26:	b7 81       	ldd	r27, Z+7	; 0x07
     d28:	ac 01       	movw	r20, r24
     d2a:	bd 01       	movw	r22, r26
     d2c:	41 50       	subi	r20, 0x01	; 1
     d2e:	51 09       	sbc	r21, r1
     d30:	61 09       	sbc	r22, r1
     d32:	71 09       	sbc	r23, r1
     d34:	4f 3f       	cpi	r20, 0xFF	; 255
     d36:	5f 4f       	sbci	r21, 0xFF	; 255
     d38:	6f 4f       	sbci	r22, 0xFF	; 255
     d3a:	7f 43       	sbci	r23, 0x3F	; 63
     d3c:	10 f3       	brcs	.-60     	; 0xd02 <_fpadd_parts+0x210>
     d3e:	0c c0       	rjmp	.+24     	; 0xd58 <_fpadd_parts+0x266>
     d40:	f6 01       	movw	r30, r12
     d42:	41 83       	std	Z+1, r20	; 0x01
     d44:	93 83       	std	Z+3, r25	; 0x03
     d46:	82 83       	std	Z+2, r24	; 0x02
     d48:	08 0d       	add	r16, r8
     d4a:	19 1d       	adc	r17, r9
     d4c:	2a 1d       	adc	r18, r10
     d4e:	3b 1d       	adc	r19, r11
     d50:	04 83       	std	Z+4, r16	; 0x04
     d52:	15 83       	std	Z+5, r17	; 0x05
     d54:	26 83       	std	Z+6, r18	; 0x06
     d56:	37 83       	std	Z+7, r19	; 0x07
     d58:	83 e0       	ldi	r24, 0x03	; 3
     d5a:	f6 01       	movw	r30, r12
     d5c:	80 83       	st	Z, r24
     d5e:	44 81       	ldd	r20, Z+4	; 0x04
     d60:	55 81       	ldd	r21, Z+5	; 0x05
     d62:	66 81       	ldd	r22, Z+6	; 0x06
     d64:	77 81       	ldd	r23, Z+7	; 0x07
     d66:	77 ff       	sbrs	r23, 7
     d68:	1a c0       	rjmp	.+52     	; 0xd9e <_fpadd_parts+0x2ac>
     d6a:	db 01       	movw	r26, r22
     d6c:	ca 01       	movw	r24, r20
     d6e:	81 70       	andi	r24, 0x01	; 1
     d70:	99 27       	eor	r25, r25
     d72:	aa 27       	eor	r26, r26
     d74:	bb 27       	eor	r27, r27
     d76:	76 95       	lsr	r23
     d78:	67 95       	ror	r22
     d7a:	57 95       	ror	r21
     d7c:	47 95       	ror	r20
     d7e:	84 2b       	or	r24, r20
     d80:	95 2b       	or	r25, r21
     d82:	a6 2b       	or	r26, r22
     d84:	b7 2b       	or	r27, r23
     d86:	84 83       	std	Z+4, r24	; 0x04
     d88:	95 83       	std	Z+5, r25	; 0x05
     d8a:	a6 83       	std	Z+6, r26	; 0x06
     d8c:	b7 83       	std	Z+7, r27	; 0x07
     d8e:	82 81       	ldd	r24, Z+2	; 0x02
     d90:	93 81       	ldd	r25, Z+3	; 0x03
     d92:	01 96       	adiw	r24, 0x01	; 1
     d94:	93 83       	std	Z+3, r25	; 0x03
     d96:	82 83       	std	Z+2, r24	; 0x02
     d98:	02 c0       	rjmp	.+4      	; 0xd9e <_fpadd_parts+0x2ac>
     d9a:	7b 01       	movw	r14, r22
     d9c:	01 c0       	rjmp	.+2      	; 0xda0 <_fpadd_parts+0x2ae>
     d9e:	76 01       	movw	r14, r12
     da0:	c7 01       	movw	r24, r14
     da2:	24 96       	adiw	r28, 0x04	; 4
     da4:	e0 e1       	ldi	r30, 0x10	; 16
     da6:	0c 94 e8 0a 	jmp	0x15d0	; 0x15d0 <__epilogue_restores__+0x4>

00000daa <__addsf3>:
     daa:	a0 e2       	ldi	r26, 0x20	; 32
     dac:	b0 e0       	ldi	r27, 0x00	; 0
     dae:	eb ed       	ldi	r30, 0xDB	; 219
     db0:	f6 e0       	ldi	r31, 0x06	; 6
     db2:	0c 94 da 0a 	jmp	0x15b4	; 0x15b4 <__prologue_saves__+0x20>
     db6:	6d 8f       	std	Y+29, r22	; 0x1d
     db8:	7e 8f       	std	Y+30, r23	; 0x1e
     dba:	8f 8f       	std	Y+31, r24	; 0x1f
     dbc:	98 a3       	std	Y+32, r25	; 0x20
     dbe:	29 8f       	std	Y+25, r18	; 0x19
     dc0:	3a 8f       	std	Y+26, r19	; 0x1a
     dc2:	4b 8f       	std	Y+27, r20	; 0x1b
     dc4:	5c 8f       	std	Y+28, r21	; 0x1c
     dc6:	be 01       	movw	r22, r28
     dc8:	6f 5e       	subi	r22, 0xEF	; 239
     dca:	7f 4f       	sbci	r23, 0xFF	; 255
     dcc:	ce 01       	movw	r24, r28
     dce:	4d 96       	adiw	r24, 0x1d	; 29
     dd0:	0e 94 ba 09 	call	0x1374	; 0x1374 <__unpack_f>
     dd4:	be 01       	movw	r22, r28
     dd6:	67 5f       	subi	r22, 0xF7	; 247
     dd8:	7f 4f       	sbci	r23, 0xFF	; 255
     dda:	ce 01       	movw	r24, r28
     ddc:	49 96       	adiw	r24, 0x19	; 25
     dde:	0e 94 ba 09 	call	0x1374	; 0x1374 <__unpack_f>
     de2:	ae 01       	movw	r20, r28
     de4:	4f 5f       	subi	r20, 0xFF	; 255
     de6:	5f 4f       	sbci	r21, 0xFF	; 255
     de8:	be 01       	movw	r22, r28
     dea:	67 5f       	subi	r22, 0xF7	; 247
     dec:	7f 4f       	sbci	r23, 0xFF	; 255
     dee:	ce 01       	movw	r24, r28
     df0:	41 96       	adiw	r24, 0x11	; 17
     df2:	0e 94 79 05 	call	0xaf2	; 0xaf2 <_fpadd_parts>
     df6:	0e 94 f0 08 	call	0x11e0	; 0x11e0 <__pack_f>
     dfa:	a0 96       	adiw	r28, 0x20	; 32
     dfc:	e2 e0       	ldi	r30, 0x02	; 2
     dfe:	0c 94 f6 0a 	jmp	0x15ec	; 0x15ec <__epilogue_restores__+0x20>

00000e02 <__subsf3>:
     e02:	a0 e2       	ldi	r26, 0x20	; 32
     e04:	b0 e0       	ldi	r27, 0x00	; 0
     e06:	e7 e0       	ldi	r30, 0x07	; 7
     e08:	f7 e0       	ldi	r31, 0x07	; 7
     e0a:	0c 94 da 0a 	jmp	0x15b4	; 0x15b4 <__prologue_saves__+0x20>
     e0e:	6d 8f       	std	Y+29, r22	; 0x1d
     e10:	7e 8f       	std	Y+30, r23	; 0x1e
     e12:	8f 8f       	std	Y+31, r24	; 0x1f
     e14:	98 a3       	std	Y+32, r25	; 0x20
     e16:	29 8f       	std	Y+25, r18	; 0x19
     e18:	3a 8f       	std	Y+26, r19	; 0x1a
     e1a:	4b 8f       	std	Y+27, r20	; 0x1b
     e1c:	5c 8f       	std	Y+28, r21	; 0x1c
     e1e:	be 01       	movw	r22, r28
     e20:	6f 5e       	subi	r22, 0xEF	; 239
     e22:	7f 4f       	sbci	r23, 0xFF	; 255
     e24:	ce 01       	movw	r24, r28
     e26:	4d 96       	adiw	r24, 0x1d	; 29
     e28:	0e 94 ba 09 	call	0x1374	; 0x1374 <__unpack_f>
     e2c:	be 01       	movw	r22, r28
     e2e:	67 5f       	subi	r22, 0xF7	; 247
     e30:	7f 4f       	sbci	r23, 0xFF	; 255
     e32:	ce 01       	movw	r24, r28
     e34:	49 96       	adiw	r24, 0x19	; 25
     e36:	0e 94 ba 09 	call	0x1374	; 0x1374 <__unpack_f>
     e3a:	8a 85       	ldd	r24, Y+10	; 0x0a
     e3c:	91 e0       	ldi	r25, 0x01	; 1
     e3e:	89 27       	eor	r24, r25
     e40:	8a 87       	std	Y+10, r24	; 0x0a
     e42:	ae 01       	movw	r20, r28
     e44:	4f 5f       	subi	r20, 0xFF	; 255
     e46:	5f 4f       	sbci	r21, 0xFF	; 255
     e48:	be 01       	movw	r22, r28
     e4a:	67 5f       	subi	r22, 0xF7	; 247
     e4c:	7f 4f       	sbci	r23, 0xFF	; 255
     e4e:	ce 01       	movw	r24, r28
     e50:	41 96       	adiw	r24, 0x11	; 17
     e52:	0e 94 79 05 	call	0xaf2	; 0xaf2 <_fpadd_parts>
     e56:	0e 94 f0 08 	call	0x11e0	; 0x11e0 <__pack_f>
     e5a:	a0 96       	adiw	r28, 0x20	; 32
     e5c:	e2 e0       	ldi	r30, 0x02	; 2
     e5e:	0c 94 f6 0a 	jmp	0x15ec	; 0x15ec <__epilogue_restores__+0x20>

00000e62 <__mulsf3>:
     e62:	a0 e2       	ldi	r26, 0x20	; 32
     e64:	b0 e0       	ldi	r27, 0x00	; 0
     e66:	e7 e3       	ldi	r30, 0x37	; 55
     e68:	f7 e0       	ldi	r31, 0x07	; 7
     e6a:	0c 94 cc 0a 	jmp	0x1598	; 0x1598 <__prologue_saves__+0x4>
     e6e:	6d 8f       	std	Y+29, r22	; 0x1d
     e70:	7e 8f       	std	Y+30, r23	; 0x1e
     e72:	8f 8f       	std	Y+31, r24	; 0x1f
     e74:	98 a3       	std	Y+32, r25	; 0x20
     e76:	29 8f       	std	Y+25, r18	; 0x19
     e78:	3a 8f       	std	Y+26, r19	; 0x1a
     e7a:	4b 8f       	std	Y+27, r20	; 0x1b
     e7c:	5c 8f       	std	Y+28, r21	; 0x1c
     e7e:	be 01       	movw	r22, r28
     e80:	6f 5e       	subi	r22, 0xEF	; 239
     e82:	7f 4f       	sbci	r23, 0xFF	; 255
     e84:	ce 01       	movw	r24, r28
     e86:	4d 96       	adiw	r24, 0x1d	; 29
     e88:	0e 94 ba 09 	call	0x1374	; 0x1374 <__unpack_f>
     e8c:	be 01       	movw	r22, r28
     e8e:	67 5f       	subi	r22, 0xF7	; 247
     e90:	7f 4f       	sbci	r23, 0xFF	; 255
     e92:	ce 01       	movw	r24, r28
     e94:	49 96       	adiw	r24, 0x19	; 25
     e96:	0e 94 ba 09 	call	0x1374	; 0x1374 <__unpack_f>
     e9a:	99 89       	ldd	r25, Y+17	; 0x11
     e9c:	92 30       	cpi	r25, 0x02	; 2
     e9e:	08 f4       	brcc	.+2      	; 0xea2 <__mulsf3+0x40>
     ea0:	12 c0       	rjmp	.+36     	; 0xec6 <__mulsf3+0x64>
     ea2:	89 85       	ldd	r24, Y+9	; 0x09
     ea4:	82 30       	cpi	r24, 0x02	; 2
     ea6:	08 f4       	brcc	.+2      	; 0xeaa <__mulsf3+0x48>
     ea8:	1a c0       	rjmp	.+52     	; 0xede <__mulsf3+0x7c>
     eaa:	94 30       	cpi	r25, 0x04	; 4
     eac:	21 f4       	brne	.+8      	; 0xeb6 <__mulsf3+0x54>
     eae:	82 30       	cpi	r24, 0x02	; 2
     eb0:	09 f4       	brne	.+2      	; 0xeb4 <__mulsf3+0x52>
     eb2:	b4 c0       	rjmp	.+360    	; 0x101c <__mulsf3+0x1ba>
     eb4:	08 c0       	rjmp	.+16     	; 0xec6 <__mulsf3+0x64>
     eb6:	84 30       	cpi	r24, 0x04	; 4
     eb8:	21 f4       	brne	.+8      	; 0xec2 <__mulsf3+0x60>
     eba:	92 30       	cpi	r25, 0x02	; 2
     ebc:	09 f4       	brne	.+2      	; 0xec0 <__mulsf3+0x5e>
     ebe:	ae c0       	rjmp	.+348    	; 0x101c <__mulsf3+0x1ba>
     ec0:	0e c0       	rjmp	.+28     	; 0xede <__mulsf3+0x7c>
     ec2:	92 30       	cpi	r25, 0x02	; 2
     ec4:	51 f4       	brne	.+20     	; 0xeda <__mulsf3+0x78>
     ec6:	81 e0       	ldi	r24, 0x01	; 1
     ec8:	2a 89       	ldd	r18, Y+18	; 0x12
     eca:	9a 85       	ldd	r25, Y+10	; 0x0a
     ecc:	29 13       	cpse	r18, r25
     ece:	01 c0       	rjmp	.+2      	; 0xed2 <__mulsf3+0x70>
     ed0:	80 e0       	ldi	r24, 0x00	; 0
     ed2:	8a 8b       	std	Y+18, r24	; 0x12
     ed4:	ce 01       	movw	r24, r28
     ed6:	41 96       	adiw	r24, 0x11	; 17
     ed8:	a3 c0       	rjmp	.+326    	; 0x1020 <__mulsf3+0x1be>
     eda:	82 30       	cpi	r24, 0x02	; 2
     edc:	51 f4       	brne	.+20     	; 0xef2 <__mulsf3+0x90>
     ede:	81 e0       	ldi	r24, 0x01	; 1
     ee0:	2a 89       	ldd	r18, Y+18	; 0x12
     ee2:	9a 85       	ldd	r25, Y+10	; 0x0a
     ee4:	29 13       	cpse	r18, r25
     ee6:	01 c0       	rjmp	.+2      	; 0xeea <__mulsf3+0x88>
     ee8:	80 e0       	ldi	r24, 0x00	; 0
     eea:	8a 87       	std	Y+10, r24	; 0x0a
     eec:	ce 01       	movw	r24, r28
     eee:	09 96       	adiw	r24, 0x09	; 9
     ef0:	97 c0       	rjmp	.+302    	; 0x1020 <__mulsf3+0x1be>
     ef2:	8d 88       	ldd	r8, Y+21	; 0x15
     ef4:	9e 88       	ldd	r9, Y+22	; 0x16
     ef6:	af 88       	ldd	r10, Y+23	; 0x17
     ef8:	b8 8c       	ldd	r11, Y+24	; 0x18
     efa:	0d 85       	ldd	r16, Y+13	; 0x0d
     efc:	1e 85       	ldd	r17, Y+14	; 0x0e
     efe:	2f 85       	ldd	r18, Y+15	; 0x0f
     f00:	38 89       	ldd	r19, Y+16	; 0x10
     f02:	e0 e2       	ldi	r30, 0x20	; 32
     f04:	f0 e0       	ldi	r31, 0x00	; 0
     f06:	80 e0       	ldi	r24, 0x00	; 0
     f08:	90 e0       	ldi	r25, 0x00	; 0
     f0a:	dc 01       	movw	r26, r24
     f0c:	c1 2c       	mov	r12, r1
     f0e:	d1 2c       	mov	r13, r1
     f10:	76 01       	movw	r14, r12
     f12:	40 e0       	ldi	r20, 0x00	; 0
     f14:	50 e0       	ldi	r21, 0x00	; 0
     f16:	ba 01       	movw	r22, r20
     f18:	80 fe       	sbrs	r8, 0
     f1a:	18 c0       	rjmp	.+48     	; 0xf4c <__mulsf3+0xea>
     f1c:	40 0f       	add	r20, r16
     f1e:	51 1f       	adc	r21, r17
     f20:	62 1f       	adc	r22, r18
     f22:	73 1f       	adc	r23, r19
     f24:	8c 0d       	add	r24, r12
     f26:	9d 1d       	adc	r25, r13
     f28:	ae 1d       	adc	r26, r14
     f2a:	bf 1d       	adc	r27, r15
     f2c:	41 2c       	mov	r4, r1
     f2e:	51 2c       	mov	r5, r1
     f30:	32 01       	movw	r6, r4
     f32:	43 94       	inc	r4
     f34:	40 17       	cp	r20, r16
     f36:	51 07       	cpc	r21, r17
     f38:	62 07       	cpc	r22, r18
     f3a:	73 07       	cpc	r23, r19
     f3c:	18 f0       	brcs	.+6      	; 0xf44 <__mulsf3+0xe2>
     f3e:	41 2c       	mov	r4, r1
     f40:	51 2c       	mov	r5, r1
     f42:	32 01       	movw	r6, r4
     f44:	84 0d       	add	r24, r4
     f46:	95 1d       	adc	r25, r5
     f48:	a6 1d       	adc	r26, r6
     f4a:	b7 1d       	adc	r27, r7
     f4c:	cc 0c       	add	r12, r12
     f4e:	dd 1c       	adc	r13, r13
     f50:	ee 1c       	adc	r14, r14
     f52:	ff 1c       	adc	r15, r15
     f54:	37 ff       	sbrs	r19, 7
     f56:	02 c0       	rjmp	.+4      	; 0xf5c <__mulsf3+0xfa>
     f58:	68 94       	set
     f5a:	c0 f8       	bld	r12, 0
     f5c:	00 0f       	add	r16, r16
     f5e:	11 1f       	adc	r17, r17
     f60:	22 1f       	adc	r18, r18
     f62:	33 1f       	adc	r19, r19
     f64:	b6 94       	lsr	r11
     f66:	a7 94       	ror	r10
     f68:	97 94       	ror	r9
     f6a:	87 94       	ror	r8
     f6c:	31 97       	sbiw	r30, 0x01	; 1
     f6e:	a1 f6       	brne	.-88     	; 0xf18 <__mulsf3+0xb6>
     f70:	2b 89       	ldd	r18, Y+19	; 0x13
     f72:	3c 89       	ldd	r19, Y+20	; 0x14
     f74:	eb 85       	ldd	r30, Y+11	; 0x0b
     f76:	fc 85       	ldd	r31, Y+12	; 0x0c
     f78:	2e 0f       	add	r18, r30
     f7a:	3f 1f       	adc	r19, r31
     f7c:	2e 5f       	subi	r18, 0xFE	; 254
     f7e:	3f 4f       	sbci	r19, 0xFF	; 255
     f80:	3c 83       	std	Y+4, r19	; 0x04
     f82:	2b 83       	std	Y+3, r18	; 0x03
     f84:	21 e0       	ldi	r18, 0x01	; 1
     f86:	ea 89       	ldd	r30, Y+18	; 0x12
     f88:	3a 85       	ldd	r19, Y+10	; 0x0a
     f8a:	e3 13       	cpse	r30, r19
     f8c:	01 c0       	rjmp	.+2      	; 0xf90 <__mulsf3+0x12e>
     f8e:	20 e0       	ldi	r18, 0x00	; 0
     f90:	2a 83       	std	Y+2, r18	; 0x02
     f92:	eb 81       	ldd	r30, Y+3	; 0x03
     f94:	fc 81       	ldd	r31, Y+4	; 0x04
     f96:	0c c0       	rjmp	.+24     	; 0xfb0 <__mulsf3+0x14e>
     f98:	80 ff       	sbrs	r24, 0
     f9a:	05 c0       	rjmp	.+10     	; 0xfa6 <__mulsf3+0x144>
     f9c:	76 95       	lsr	r23
     f9e:	67 95       	ror	r22
     fa0:	57 95       	ror	r21
     fa2:	47 95       	ror	r20
     fa4:	70 68       	ori	r23, 0x80	; 128
     fa6:	b6 95       	lsr	r27
     fa8:	a7 95       	ror	r26
     faa:	97 95       	ror	r25
     fac:	87 95       	ror	r24
     fae:	31 96       	adiw	r30, 0x01	; 1
     fb0:	b7 fd       	sbrc	r27, 7
     fb2:	f2 cf       	rjmp	.-28     	; 0xf98 <__mulsf3+0x136>
     fb4:	9f 01       	movw	r18, r30
     fb6:	0c c0       	rjmp	.+24     	; 0xfd0 <__mulsf3+0x16e>
     fb8:	88 0f       	add	r24, r24
     fba:	99 1f       	adc	r25, r25
     fbc:	aa 1f       	adc	r26, r26
     fbe:	bb 1f       	adc	r27, r27
     fc0:	77 fd       	sbrc	r23, 7
     fc2:	81 60       	ori	r24, 0x01	; 1
     fc4:	44 0f       	add	r20, r20
     fc6:	55 1f       	adc	r21, r21
     fc8:	66 1f       	adc	r22, r22
     fca:	77 1f       	adc	r23, r23
     fcc:	21 50       	subi	r18, 0x01	; 1
     fce:	31 09       	sbc	r19, r1
     fd0:	00 97       	sbiw	r24, 0x00	; 0
     fd2:	a1 05       	cpc	r26, r1
     fd4:	e0 e4       	ldi	r30, 0x40	; 64
     fd6:	be 07       	cpc	r27, r30
     fd8:	78 f3       	brcs	.-34     	; 0xfb8 <__mulsf3+0x156>
     fda:	2b 83       	std	Y+3, r18	; 0x03
     fdc:	3c 83       	std	Y+4, r19	; 0x04
     fde:	8c 01       	movw	r16, r24
     fe0:	9d 01       	movw	r18, r26
     fe2:	0f 77       	andi	r16, 0x7F	; 127
     fe4:	11 27       	eor	r17, r17
     fe6:	22 27       	eor	r18, r18
     fe8:	33 27       	eor	r19, r19
     fea:	00 34       	cpi	r16, 0x40	; 64
     fec:	11 05       	cpc	r17, r1
     fee:	21 05       	cpc	r18, r1
     ff0:	31 05       	cpc	r19, r1
     ff2:	59 f4       	brne	.+22     	; 0x100a <__mulsf3+0x1a8>
     ff4:	87 fd       	sbrc	r24, 7
     ff6:	09 c0       	rjmp	.+18     	; 0x100a <__mulsf3+0x1a8>
     ff8:	45 2b       	or	r20, r21
     ffa:	46 2b       	or	r20, r22
     ffc:	47 2b       	or	r20, r23
     ffe:	29 f0       	breq	.+10     	; 0x100a <__mulsf3+0x1a8>
    1000:	80 5c       	subi	r24, 0xC0	; 192
    1002:	9f 4f       	sbci	r25, 0xFF	; 255
    1004:	af 4f       	sbci	r26, 0xFF	; 255
    1006:	bf 4f       	sbci	r27, 0xFF	; 255
    1008:	80 78       	andi	r24, 0x80	; 128
    100a:	8d 83       	std	Y+5, r24	; 0x05
    100c:	9e 83       	std	Y+6, r25	; 0x06
    100e:	af 83       	std	Y+7, r26	; 0x07
    1010:	b8 87       	std	Y+8, r27	; 0x08
    1012:	83 e0       	ldi	r24, 0x03	; 3
    1014:	89 83       	std	Y+1, r24	; 0x01
    1016:	ce 01       	movw	r24, r28
    1018:	01 96       	adiw	r24, 0x01	; 1
    101a:	02 c0       	rjmp	.+4      	; 0x1020 <__mulsf3+0x1be>
    101c:	8e e4       	ldi	r24, 0x4E	; 78
    101e:	91 e0       	ldi	r25, 0x01	; 1
    1020:	0e 94 f0 08 	call	0x11e0	; 0x11e0 <__pack_f>
    1024:	a0 96       	adiw	r28, 0x20	; 32
    1026:	e0 e1       	ldi	r30, 0x10	; 16
    1028:	0c 94 e8 0a 	jmp	0x15d0	; 0x15d0 <__epilogue_restores__+0x4>

0000102c <__gesf2>:
    102c:	a8 e1       	ldi	r26, 0x18	; 24
    102e:	b0 e0       	ldi	r27, 0x00	; 0
    1030:	ec e1       	ldi	r30, 0x1C	; 28
    1032:	f8 e0       	ldi	r31, 0x08	; 8
    1034:	0c 94 da 0a 	jmp	0x15b4	; 0x15b4 <__prologue_saves__+0x20>
    1038:	6d 8b       	std	Y+21, r22	; 0x15
    103a:	7e 8b       	std	Y+22, r23	; 0x16
    103c:	8f 8b       	std	Y+23, r24	; 0x17
    103e:	98 8f       	std	Y+24, r25	; 0x18
    1040:	29 8b       	std	Y+17, r18	; 0x11
    1042:	3a 8b       	std	Y+18, r19	; 0x12
    1044:	4b 8b       	std	Y+19, r20	; 0x13
    1046:	5c 8b       	std	Y+20, r21	; 0x14
    1048:	be 01       	movw	r22, r28
    104a:	67 5f       	subi	r22, 0xF7	; 247
    104c:	7f 4f       	sbci	r23, 0xFF	; 255
    104e:	ce 01       	movw	r24, r28
    1050:	45 96       	adiw	r24, 0x15	; 21
    1052:	0e 94 ba 09 	call	0x1374	; 0x1374 <__unpack_f>
    1056:	be 01       	movw	r22, r28
    1058:	6f 5f       	subi	r22, 0xFF	; 255
    105a:	7f 4f       	sbci	r23, 0xFF	; 255
    105c:	ce 01       	movw	r24, r28
    105e:	41 96       	adiw	r24, 0x11	; 17
    1060:	0e 94 ba 09 	call	0x1374	; 0x1374 <__unpack_f>
    1064:	89 85       	ldd	r24, Y+9	; 0x09
    1066:	82 30       	cpi	r24, 0x02	; 2
    1068:	58 f0       	brcs	.+22     	; 0x1080 <__gesf2+0x54>
    106a:	89 81       	ldd	r24, Y+1	; 0x01
    106c:	82 30       	cpi	r24, 0x02	; 2
    106e:	40 f0       	brcs	.+16     	; 0x1080 <__gesf2+0x54>
    1070:	be 01       	movw	r22, r28
    1072:	6f 5f       	subi	r22, 0xFF	; 255
    1074:	7f 4f       	sbci	r23, 0xFF	; 255
    1076:	ce 01       	movw	r24, r28
    1078:	09 96       	adiw	r24, 0x09	; 9
    107a:	0e 94 29 0a 	call	0x1452	; 0x1452 <__fpcmp_parts_f>
    107e:	01 c0       	rjmp	.+2      	; 0x1082 <__gesf2+0x56>
    1080:	8f ef       	ldi	r24, 0xFF	; 255
    1082:	68 96       	adiw	r28, 0x18	; 24
    1084:	e2 e0       	ldi	r30, 0x02	; 2
    1086:	0c 94 f6 0a 	jmp	0x15ec	; 0x15ec <__epilogue_restores__+0x20>

0000108a <__floatsisf>:
    108a:	a8 e0       	ldi	r26, 0x08	; 8
    108c:	b0 e0       	ldi	r27, 0x00	; 0
    108e:	eb e4       	ldi	r30, 0x4B	; 75
    1090:	f8 e0       	ldi	r31, 0x08	; 8
    1092:	0c 94 d8 0a 	jmp	0x15b0	; 0x15b0 <__prologue_saves__+0x1c>
    1096:	23 e0       	ldi	r18, 0x03	; 3
    1098:	29 83       	std	Y+1, r18	; 0x01
    109a:	8b 01       	movw	r16, r22
    109c:	9c 01       	movw	r18, r24
    109e:	00 27       	eor	r16, r16
    10a0:	37 fd       	sbrc	r19, 7
    10a2:	03 95       	inc	r16
    10a4:	11 27       	eor	r17, r17
    10a6:	22 27       	eor	r18, r18
    10a8:	33 27       	eor	r19, r19
    10aa:	40 2f       	mov	r20, r16
    10ac:	0a 83       	std	Y+2, r16	; 0x02
    10ae:	61 15       	cp	r22, r1
    10b0:	71 05       	cpc	r23, r1
    10b2:	81 05       	cpc	r24, r1
    10b4:	91 05       	cpc	r25, r1
    10b6:	19 f4       	brne	.+6      	; 0x10be <__floatsisf+0x34>
    10b8:	82 e0       	ldi	r24, 0x02	; 2
    10ba:	89 83       	std	Y+1, r24	; 0x01
    10bc:	35 c0       	rjmp	.+106    	; 0x1128 <__floatsisf+0x9e>
    10be:	2e e1       	ldi	r18, 0x1E	; 30
    10c0:	30 e0       	ldi	r19, 0x00	; 0
    10c2:	3c 83       	std	Y+4, r19	; 0x04
    10c4:	2b 83       	std	Y+3, r18	; 0x03
    10c6:	44 23       	and	r20, r20
    10c8:	71 f0       	breq	.+28     	; 0x10e6 <__floatsisf+0x5c>
    10ca:	61 15       	cp	r22, r1
    10cc:	71 05       	cpc	r23, r1
    10ce:	81 05       	cpc	r24, r1
    10d0:	20 e8       	ldi	r18, 0x80	; 128
    10d2:	92 07       	cpc	r25, r18
    10d4:	71 f1       	breq	.+92     	; 0x1132 <__floatsisf+0xa8>
    10d6:	00 27       	eor	r16, r16
    10d8:	11 27       	eor	r17, r17
    10da:	98 01       	movw	r18, r16
    10dc:	06 1b       	sub	r16, r22
    10de:	17 0b       	sbc	r17, r23
    10e0:	28 0b       	sbc	r18, r24
    10e2:	39 0b       	sbc	r19, r25
    10e4:	02 c0       	rjmp	.+4      	; 0x10ea <__floatsisf+0x60>
    10e6:	8b 01       	movw	r16, r22
    10e8:	9c 01       	movw	r18, r24
    10ea:	c9 01       	movw	r24, r18
    10ec:	b8 01       	movw	r22, r16
    10ee:	0e 94 af 0a 	call	0x155e	; 0x155e <__clzsi2>
    10f2:	01 97       	sbiw	r24, 0x01	; 1
    10f4:	18 16       	cp	r1, r24
    10f6:	19 06       	cpc	r1, r25
    10f8:	2c f0       	brlt	.+10     	; 0x1104 <__floatsisf+0x7a>
    10fa:	0d 83       	std	Y+5, r16	; 0x05
    10fc:	1e 83       	std	Y+6, r17	; 0x06
    10fe:	2f 83       	std	Y+7, r18	; 0x07
    1100:	38 87       	std	Y+8, r19	; 0x08
    1102:	12 c0       	rjmp	.+36     	; 0x1128 <__floatsisf+0x9e>
    1104:	08 2e       	mov	r0, r24
    1106:	04 c0       	rjmp	.+8      	; 0x1110 <__floatsisf+0x86>
    1108:	00 0f       	add	r16, r16
    110a:	11 1f       	adc	r17, r17
    110c:	22 1f       	adc	r18, r18
    110e:	33 1f       	adc	r19, r19
    1110:	0a 94       	dec	r0
    1112:	d2 f7       	brpl	.-12     	; 0x1108 <__floatsisf+0x7e>
    1114:	0d 83       	std	Y+5, r16	; 0x05
    1116:	1e 83       	std	Y+6, r17	; 0x06
    1118:	2f 83       	std	Y+7, r18	; 0x07
    111a:	38 87       	std	Y+8, r19	; 0x08
    111c:	2e e1       	ldi	r18, 0x1E	; 30
    111e:	30 e0       	ldi	r19, 0x00	; 0
    1120:	28 1b       	sub	r18, r24
    1122:	39 0b       	sbc	r19, r25
    1124:	3c 83       	std	Y+4, r19	; 0x04
    1126:	2b 83       	std	Y+3, r18	; 0x03
    1128:	ce 01       	movw	r24, r28
    112a:	01 96       	adiw	r24, 0x01	; 1
    112c:	0e 94 f0 08 	call	0x11e0	; 0x11e0 <__pack_f>
    1130:	04 c0       	rjmp	.+8      	; 0x113a <__floatsisf+0xb0>
    1132:	60 e0       	ldi	r22, 0x00	; 0
    1134:	70 e0       	ldi	r23, 0x00	; 0
    1136:	80 e0       	ldi	r24, 0x00	; 0
    1138:	9f ec       	ldi	r25, 0xCF	; 207
    113a:	28 96       	adiw	r28, 0x08	; 8
    113c:	e4 e0       	ldi	r30, 0x04	; 4
    113e:	0c 94 f4 0a 	jmp	0x15e8	; 0x15e8 <__epilogue_restores__+0x1c>

00001142 <__fixsfsi>:
    1142:	ac e0       	ldi	r26, 0x0C	; 12
    1144:	b0 e0       	ldi	r27, 0x00	; 0
    1146:	e7 ea       	ldi	r30, 0xA7	; 167
    1148:	f8 e0       	ldi	r31, 0x08	; 8
    114a:	0c 94 d8 0a 	jmp	0x15b0	; 0x15b0 <__prologue_saves__+0x1c>
    114e:	69 87       	std	Y+9, r22	; 0x09
    1150:	7a 87       	std	Y+10, r23	; 0x0a
    1152:	8b 87       	std	Y+11, r24	; 0x0b
    1154:	9c 87       	std	Y+12, r25	; 0x0c
    1156:	be 01       	movw	r22, r28
    1158:	6f 5f       	subi	r22, 0xFF	; 255
    115a:	7f 4f       	sbci	r23, 0xFF	; 255
    115c:	ce 01       	movw	r24, r28
    115e:	09 96       	adiw	r24, 0x09	; 9
    1160:	0e 94 ba 09 	call	0x1374	; 0x1374 <__unpack_f>
    1164:	89 81       	ldd	r24, Y+1	; 0x01
    1166:	82 30       	cpi	r24, 0x02	; 2
    1168:	91 f1       	breq	.+100    	; 0x11ce <__fixsfsi+0x8c>
    116a:	82 30       	cpi	r24, 0x02	; 2
    116c:	80 f1       	brcs	.+96     	; 0x11ce <__fixsfsi+0x8c>
    116e:	84 30       	cpi	r24, 0x04	; 4
    1170:	41 f4       	brne	.+16     	; 0x1182 <__fixsfsi+0x40>
    1172:	8a 81       	ldd	r24, Y+2	; 0x02
    1174:	88 23       	and	r24, r24
    1176:	31 f1       	breq	.+76     	; 0x11c4 <__fixsfsi+0x82>
    1178:	00 e0       	ldi	r16, 0x00	; 0
    117a:	10 e0       	ldi	r17, 0x00	; 0
    117c:	20 e0       	ldi	r18, 0x00	; 0
    117e:	30 e8       	ldi	r19, 0x80	; 128
    1180:	29 c0       	rjmp	.+82     	; 0x11d4 <__fixsfsi+0x92>
    1182:	2b 81       	ldd	r18, Y+3	; 0x03
    1184:	3c 81       	ldd	r19, Y+4	; 0x04
    1186:	37 fd       	sbrc	r19, 7
    1188:	22 c0       	rjmp	.+68     	; 0x11ce <__fixsfsi+0x8c>
    118a:	2f 31       	cpi	r18, 0x1F	; 31
    118c:	31 05       	cpc	r19, r1
    118e:	8c f7       	brge	.-30     	; 0x1172 <__fixsfsi+0x30>
    1190:	8e e1       	ldi	r24, 0x1E	; 30
    1192:	90 e0       	ldi	r25, 0x00	; 0
    1194:	82 1b       	sub	r24, r18
    1196:	93 0b       	sbc	r25, r19
    1198:	0d 81       	ldd	r16, Y+5	; 0x05
    119a:	1e 81       	ldd	r17, Y+6	; 0x06
    119c:	2f 81       	ldd	r18, Y+7	; 0x07
    119e:	38 85       	ldd	r19, Y+8	; 0x08
    11a0:	04 c0       	rjmp	.+8      	; 0x11aa <__fixsfsi+0x68>
    11a2:	36 95       	lsr	r19
    11a4:	27 95       	ror	r18
    11a6:	17 95       	ror	r17
    11a8:	07 95       	ror	r16
    11aa:	8a 95       	dec	r24
    11ac:	d2 f7       	brpl	.-12     	; 0x11a2 <__fixsfsi+0x60>
    11ae:	8a 81       	ldd	r24, Y+2	; 0x02
    11b0:	88 23       	and	r24, r24
    11b2:	81 f0       	breq	.+32     	; 0x11d4 <__fixsfsi+0x92>
    11b4:	30 95       	com	r19
    11b6:	20 95       	com	r18
    11b8:	10 95       	com	r17
    11ba:	01 95       	neg	r16
    11bc:	1f 4f       	sbci	r17, 0xFF	; 255
    11be:	2f 4f       	sbci	r18, 0xFF	; 255
    11c0:	3f 4f       	sbci	r19, 0xFF	; 255
    11c2:	08 c0       	rjmp	.+16     	; 0x11d4 <__fixsfsi+0x92>
    11c4:	0f ef       	ldi	r16, 0xFF	; 255
    11c6:	1f ef       	ldi	r17, 0xFF	; 255
    11c8:	2f ef       	ldi	r18, 0xFF	; 255
    11ca:	3f e7       	ldi	r19, 0x7F	; 127
    11cc:	03 c0       	rjmp	.+6      	; 0x11d4 <__fixsfsi+0x92>
    11ce:	00 e0       	ldi	r16, 0x00	; 0
    11d0:	10 e0       	ldi	r17, 0x00	; 0
    11d2:	98 01       	movw	r18, r16
    11d4:	b8 01       	movw	r22, r16
    11d6:	c9 01       	movw	r24, r18
    11d8:	2c 96       	adiw	r28, 0x0c	; 12
    11da:	e4 e0       	ldi	r30, 0x04	; 4
    11dc:	0c 94 f4 0a 	jmp	0x15e8	; 0x15e8 <__epilogue_restores__+0x1c>

000011e0 <__pack_f>:
    11e0:	0f 93       	push	r16
    11e2:	1f 93       	push	r17
    11e4:	cf 93       	push	r28
    11e6:	df 93       	push	r29
    11e8:	dc 01       	movw	r26, r24
    11ea:	14 96       	adiw	r26, 0x04	; 4
    11ec:	4d 91       	ld	r20, X+
    11ee:	5d 91       	ld	r21, X+
    11f0:	6d 91       	ld	r22, X+
    11f2:	7c 91       	ld	r23, X
    11f4:	17 97       	sbiw	r26, 0x07	; 7
    11f6:	11 96       	adiw	r26, 0x01	; 1
    11f8:	ec 91       	ld	r30, X
    11fa:	11 97       	sbiw	r26, 0x01	; 1
    11fc:	8c 91       	ld	r24, X
    11fe:	82 30       	cpi	r24, 0x02	; 2
    1200:	20 f4       	brcc	.+8      	; 0x120a <__pack_f+0x2a>
    1202:	60 61       	ori	r22, 0x10	; 16
    1204:	8f ef       	ldi	r24, 0xFF	; 255
    1206:	90 e0       	ldi	r25, 0x00	; 0
    1208:	a6 c0       	rjmp	.+332    	; 0x1356 <__pack_f+0x176>
    120a:	84 30       	cpi	r24, 0x04	; 4
    120c:	09 f4       	brne	.+2      	; 0x1210 <__pack_f+0x30>
    120e:	9e c0       	rjmp	.+316    	; 0x134c <__pack_f+0x16c>
    1210:	82 30       	cpi	r24, 0x02	; 2
    1212:	09 f4       	brne	.+2      	; 0x1216 <__pack_f+0x36>
    1214:	95 c0       	rjmp	.+298    	; 0x1340 <__pack_f+0x160>
    1216:	41 15       	cp	r20, r1
    1218:	51 05       	cpc	r21, r1
    121a:	61 05       	cpc	r22, r1
    121c:	71 05       	cpc	r23, r1
    121e:	09 f4       	brne	.+2      	; 0x1222 <__pack_f+0x42>
    1220:	92 c0       	rjmp	.+292    	; 0x1346 <__pack_f+0x166>
    1222:	12 96       	adiw	r26, 0x02	; 2
    1224:	2d 91       	ld	r18, X+
    1226:	3c 91       	ld	r19, X
    1228:	13 97       	sbiw	r26, 0x03	; 3
    122a:	22 38       	cpi	r18, 0x82	; 130
    122c:	8f ef       	ldi	r24, 0xFF	; 255
    122e:	38 07       	cpc	r19, r24
    1230:	0c f0       	brlt	.+2      	; 0x1234 <__pack_f+0x54>
    1232:	58 c0       	rjmp	.+176    	; 0x12e4 <__pack_f+0x104>
    1234:	c2 e8       	ldi	r28, 0x82	; 130
    1236:	df ef       	ldi	r29, 0xFF	; 255
    1238:	c2 1b       	sub	r28, r18
    123a:	d3 0b       	sbc	r29, r19
    123c:	ca 31       	cpi	r28, 0x1A	; 26
    123e:	d1 05       	cpc	r29, r1
    1240:	6c f5       	brge	.+90     	; 0x129c <__pack_f+0xbc>
    1242:	8a 01       	movw	r16, r20
    1244:	9b 01       	movw	r18, r22
    1246:	0c 2e       	mov	r0, r28
    1248:	04 c0       	rjmp	.+8      	; 0x1252 <__pack_f+0x72>
    124a:	36 95       	lsr	r19
    124c:	27 95       	ror	r18
    124e:	17 95       	ror	r17
    1250:	07 95       	ror	r16
    1252:	0a 94       	dec	r0
    1254:	d2 f7       	brpl	.-12     	; 0x124a <__pack_f+0x6a>
    1256:	81 e0       	ldi	r24, 0x01	; 1
    1258:	90 e0       	ldi	r25, 0x00	; 0
    125a:	a0 e0       	ldi	r26, 0x00	; 0
    125c:	b0 e0       	ldi	r27, 0x00	; 0
    125e:	0c 2e       	mov	r0, r28
    1260:	04 c0       	rjmp	.+8      	; 0x126a <__pack_f+0x8a>
    1262:	88 0f       	add	r24, r24
    1264:	99 1f       	adc	r25, r25
    1266:	aa 1f       	adc	r26, r26
    1268:	bb 1f       	adc	r27, r27
    126a:	0a 94       	dec	r0
    126c:	d2 f7       	brpl	.-12     	; 0x1262 <__pack_f+0x82>
    126e:	01 97       	sbiw	r24, 0x01	; 1
    1270:	a1 09       	sbc	r26, r1
    1272:	b1 09       	sbc	r27, r1
    1274:	84 23       	and	r24, r20
    1276:	95 23       	and	r25, r21
    1278:	a6 23       	and	r26, r22
    127a:	b7 23       	and	r27, r23
    127c:	41 e0       	ldi	r20, 0x01	; 1
    127e:	50 e0       	ldi	r21, 0x00	; 0
    1280:	60 e0       	ldi	r22, 0x00	; 0
    1282:	70 e0       	ldi	r23, 0x00	; 0
    1284:	89 2b       	or	r24, r25
    1286:	8a 2b       	or	r24, r26
    1288:	8b 2b       	or	r24, r27
    128a:	19 f4       	brne	.+6      	; 0x1292 <__pack_f+0xb2>
    128c:	40 e0       	ldi	r20, 0x00	; 0
    128e:	50 e0       	ldi	r21, 0x00	; 0
    1290:	ba 01       	movw	r22, r20
    1292:	40 2b       	or	r20, r16
    1294:	51 2b       	or	r21, r17
    1296:	62 2b       	or	r22, r18
    1298:	73 2b       	or	r23, r19
    129a:	03 c0       	rjmp	.+6      	; 0x12a2 <__pack_f+0xc2>
    129c:	40 e0       	ldi	r20, 0x00	; 0
    129e:	50 e0       	ldi	r21, 0x00	; 0
    12a0:	ba 01       	movw	r22, r20
    12a2:	db 01       	movw	r26, r22
    12a4:	ca 01       	movw	r24, r20
    12a6:	8f 77       	andi	r24, 0x7F	; 127
    12a8:	99 27       	eor	r25, r25
    12aa:	aa 27       	eor	r26, r26
    12ac:	bb 27       	eor	r27, r27
    12ae:	80 34       	cpi	r24, 0x40	; 64
    12b0:	91 05       	cpc	r25, r1
    12b2:	a1 05       	cpc	r26, r1
    12b4:	b1 05       	cpc	r27, r1
    12b6:	39 f4       	brne	.+14     	; 0x12c6 <__pack_f+0xe6>
    12b8:	47 ff       	sbrs	r20, 7
    12ba:	09 c0       	rjmp	.+18     	; 0x12ce <__pack_f+0xee>
    12bc:	40 5c       	subi	r20, 0xC0	; 192
    12be:	5f 4f       	sbci	r21, 0xFF	; 255
    12c0:	6f 4f       	sbci	r22, 0xFF	; 255
    12c2:	7f 4f       	sbci	r23, 0xFF	; 255
    12c4:	04 c0       	rjmp	.+8      	; 0x12ce <__pack_f+0xee>
    12c6:	41 5c       	subi	r20, 0xC1	; 193
    12c8:	5f 4f       	sbci	r21, 0xFF	; 255
    12ca:	6f 4f       	sbci	r22, 0xFF	; 255
    12cc:	7f 4f       	sbci	r23, 0xFF	; 255
    12ce:	81 e0       	ldi	r24, 0x01	; 1
    12d0:	90 e0       	ldi	r25, 0x00	; 0
    12d2:	41 15       	cp	r20, r1
    12d4:	51 05       	cpc	r21, r1
    12d6:	61 05       	cpc	r22, r1
    12d8:	20 e4       	ldi	r18, 0x40	; 64
    12da:	72 07       	cpc	r23, r18
    12dc:	48 f5       	brcc	.+82     	; 0x1330 <__pack_f+0x150>
    12de:	80 e0       	ldi	r24, 0x00	; 0
    12e0:	90 e0       	ldi	r25, 0x00	; 0
    12e2:	26 c0       	rjmp	.+76     	; 0x1330 <__pack_f+0x150>
    12e4:	20 38       	cpi	r18, 0x80	; 128
    12e6:	31 05       	cpc	r19, r1
    12e8:	8c f5       	brge	.+98     	; 0x134c <__pack_f+0x16c>
    12ea:	db 01       	movw	r26, r22
    12ec:	ca 01       	movw	r24, r20
    12ee:	8f 77       	andi	r24, 0x7F	; 127
    12f0:	99 27       	eor	r25, r25
    12f2:	aa 27       	eor	r26, r26
    12f4:	bb 27       	eor	r27, r27
    12f6:	80 34       	cpi	r24, 0x40	; 64
    12f8:	91 05       	cpc	r25, r1
    12fa:	a1 05       	cpc	r26, r1
    12fc:	b1 05       	cpc	r27, r1
    12fe:	39 f4       	brne	.+14     	; 0x130e <__pack_f+0x12e>
    1300:	47 ff       	sbrs	r20, 7
    1302:	09 c0       	rjmp	.+18     	; 0x1316 <__pack_f+0x136>
    1304:	40 5c       	subi	r20, 0xC0	; 192
    1306:	5f 4f       	sbci	r21, 0xFF	; 255
    1308:	6f 4f       	sbci	r22, 0xFF	; 255
    130a:	7f 4f       	sbci	r23, 0xFF	; 255
    130c:	04 c0       	rjmp	.+8      	; 0x1316 <__pack_f+0x136>
    130e:	41 5c       	subi	r20, 0xC1	; 193
    1310:	5f 4f       	sbci	r21, 0xFF	; 255
    1312:	6f 4f       	sbci	r22, 0xFF	; 255
    1314:	7f 4f       	sbci	r23, 0xFF	; 255
    1316:	77 fd       	sbrc	r23, 7
    1318:	04 c0       	rjmp	.+8      	; 0x1322 <__pack_f+0x142>
    131a:	c9 01       	movw	r24, r18
    131c:	81 58       	subi	r24, 0x81	; 129
    131e:	9f 4f       	sbci	r25, 0xFF	; 255
    1320:	07 c0       	rjmp	.+14     	; 0x1330 <__pack_f+0x150>
    1322:	76 95       	lsr	r23
    1324:	67 95       	ror	r22
    1326:	57 95       	ror	r21
    1328:	47 95       	ror	r20
    132a:	c9 01       	movw	r24, r18
    132c:	80 58       	subi	r24, 0x80	; 128
    132e:	9f 4f       	sbci	r25, 0xFF	; 255
    1330:	97 e0       	ldi	r25, 0x07	; 7
    1332:	76 95       	lsr	r23
    1334:	67 95       	ror	r22
    1336:	57 95       	ror	r21
    1338:	47 95       	ror	r20
    133a:	9a 95       	dec	r25
    133c:	d1 f7       	brne	.-12     	; 0x1332 <__pack_f+0x152>
    133e:	0b c0       	rjmp	.+22     	; 0x1356 <__pack_f+0x176>
    1340:	80 e0       	ldi	r24, 0x00	; 0
    1342:	90 e0       	ldi	r25, 0x00	; 0
    1344:	05 c0       	rjmp	.+10     	; 0x1350 <__pack_f+0x170>
    1346:	80 e0       	ldi	r24, 0x00	; 0
    1348:	90 e0       	ldi	r25, 0x00	; 0
    134a:	05 c0       	rjmp	.+10     	; 0x1356 <__pack_f+0x176>
    134c:	8f ef       	ldi	r24, 0xFF	; 255
    134e:	90 e0       	ldi	r25, 0x00	; 0
    1350:	40 e0       	ldi	r20, 0x00	; 0
    1352:	50 e0       	ldi	r21, 0x00	; 0
    1354:	ba 01       	movw	r22, r20
    1356:	98 2f       	mov	r25, r24
    1358:	96 95       	lsr	r25
    135a:	e0 fb       	bst	r30, 0
    135c:	97 f9       	bld	r25, 7
    135e:	36 2f       	mov	r19, r22
    1360:	80 fb       	bst	r24, 0
    1362:	37 f9       	bld	r19, 7
    1364:	64 2f       	mov	r22, r20
    1366:	75 2f       	mov	r23, r21
    1368:	83 2f       	mov	r24, r19
    136a:	df 91       	pop	r29
    136c:	cf 91       	pop	r28
    136e:	1f 91       	pop	r17
    1370:	0f 91       	pop	r16
    1372:	08 95       	ret

00001374 <__unpack_f>:
    1374:	cf 92       	push	r12
    1376:	df 92       	push	r13
    1378:	ef 92       	push	r14
    137a:	dc 01       	movw	r26, r24
    137c:	fb 01       	movw	r30, r22
    137e:	cc 90       	ld	r12, X
    1380:	11 96       	adiw	r26, 0x01	; 1
    1382:	dc 90       	ld	r13, X
    1384:	11 97       	sbiw	r26, 0x01	; 1
    1386:	12 96       	adiw	r26, 0x02	; 2
    1388:	8c 91       	ld	r24, X
    138a:	12 97       	sbiw	r26, 0x02	; 2
    138c:	3f e7       	ldi	r19, 0x7F	; 127
    138e:	e3 2e       	mov	r14, r19
    1390:	e8 22       	and	r14, r24
    1392:	6e 2d       	mov	r22, r14
    1394:	a6 01       	movw	r20, r12
    1396:	70 e0       	ldi	r23, 0x00	; 0
    1398:	98 2f       	mov	r25, r24
    139a:	99 1f       	adc	r25, r25
    139c:	99 27       	eor	r25, r25
    139e:	99 1f       	adc	r25, r25
    13a0:	13 96       	adiw	r26, 0x03	; 3
    13a2:	2c 91       	ld	r18, X
    13a4:	82 2f       	mov	r24, r18
    13a6:	88 0f       	add	r24, r24
    13a8:	89 2b       	or	r24, r25
    13aa:	90 e0       	ldi	r25, 0x00	; 0
    13ac:	27 fb       	bst	r18, 7
    13ae:	22 27       	eor	r18, r18
    13b0:	20 f9       	bld	r18, 0
    13b2:	21 83       	std	Z+1, r18	; 0x01
    13b4:	00 97       	sbiw	r24, 0x00	; 0
    13b6:	29 f5       	brne	.+74     	; 0x1402 <__unpack_f+0x8e>
    13b8:	41 15       	cp	r20, r1
    13ba:	51 05       	cpc	r21, r1
    13bc:	61 05       	cpc	r22, r1
    13be:	71 05       	cpc	r23, r1
    13c0:	11 f4       	brne	.+4      	; 0x13c6 <__unpack_f+0x52>
    13c2:	82 e0       	ldi	r24, 0x02	; 2
    13c4:	27 c0       	rjmp	.+78     	; 0x1414 <__unpack_f+0xa0>
    13c6:	82 e8       	ldi	r24, 0x82	; 130
    13c8:	9f ef       	ldi	r25, 0xFF	; 255
    13ca:	93 83       	std	Z+3, r25	; 0x03
    13cc:	82 83       	std	Z+2, r24	; 0x02
    13ce:	27 e0       	ldi	r18, 0x07	; 7
    13d0:	44 0f       	add	r20, r20
    13d2:	55 1f       	adc	r21, r21
    13d4:	66 1f       	adc	r22, r22
    13d6:	77 1f       	adc	r23, r23
    13d8:	2a 95       	dec	r18
    13da:	d1 f7       	brne	.-12     	; 0x13d0 <__unpack_f+0x5c>
    13dc:	83 e0       	ldi	r24, 0x03	; 3
    13de:	80 83       	st	Z, r24
    13e0:	09 c0       	rjmp	.+18     	; 0x13f4 <__unpack_f+0x80>
    13e2:	44 0f       	add	r20, r20
    13e4:	55 1f       	adc	r21, r21
    13e6:	66 1f       	adc	r22, r22
    13e8:	77 1f       	adc	r23, r23
    13ea:	82 81       	ldd	r24, Z+2	; 0x02
    13ec:	93 81       	ldd	r25, Z+3	; 0x03
    13ee:	01 97       	sbiw	r24, 0x01	; 1
    13f0:	93 83       	std	Z+3, r25	; 0x03
    13f2:	82 83       	std	Z+2, r24	; 0x02
    13f4:	41 15       	cp	r20, r1
    13f6:	51 05       	cpc	r21, r1
    13f8:	61 05       	cpc	r22, r1
    13fa:	80 e4       	ldi	r24, 0x40	; 64
    13fc:	78 07       	cpc	r23, r24
    13fe:	88 f3       	brcs	.-30     	; 0x13e2 <__unpack_f+0x6e>
    1400:	20 c0       	rjmp	.+64     	; 0x1442 <__unpack_f+0xce>
    1402:	8f 3f       	cpi	r24, 0xFF	; 255
    1404:	91 05       	cpc	r25, r1
    1406:	79 f4       	brne	.+30     	; 0x1426 <__unpack_f+0xb2>
    1408:	41 15       	cp	r20, r1
    140a:	51 05       	cpc	r21, r1
    140c:	61 05       	cpc	r22, r1
    140e:	71 05       	cpc	r23, r1
    1410:	19 f4       	brne	.+6      	; 0x1418 <__unpack_f+0xa4>
    1412:	84 e0       	ldi	r24, 0x04	; 4
    1414:	80 83       	st	Z, r24
    1416:	19 c0       	rjmp	.+50     	; 0x144a <__unpack_f+0xd6>
    1418:	e4 fe       	sbrs	r14, 4
    141a:	03 c0       	rjmp	.+6      	; 0x1422 <__unpack_f+0xae>
    141c:	81 e0       	ldi	r24, 0x01	; 1
    141e:	80 83       	st	Z, r24
    1420:	10 c0       	rjmp	.+32     	; 0x1442 <__unpack_f+0xce>
    1422:	10 82       	st	Z, r1
    1424:	0e c0       	rjmp	.+28     	; 0x1442 <__unpack_f+0xce>
    1426:	8f 57       	subi	r24, 0x7F	; 127
    1428:	91 09       	sbc	r25, r1
    142a:	93 83       	std	Z+3, r25	; 0x03
    142c:	82 83       	std	Z+2, r24	; 0x02
    142e:	83 e0       	ldi	r24, 0x03	; 3
    1430:	80 83       	st	Z, r24
    1432:	87 e0       	ldi	r24, 0x07	; 7
    1434:	44 0f       	add	r20, r20
    1436:	55 1f       	adc	r21, r21
    1438:	66 1f       	adc	r22, r22
    143a:	77 1f       	adc	r23, r23
    143c:	8a 95       	dec	r24
    143e:	d1 f7       	brne	.-12     	; 0x1434 <__unpack_f+0xc0>
    1440:	70 64       	ori	r23, 0x40	; 64
    1442:	44 83       	std	Z+4, r20	; 0x04
    1444:	55 83       	std	Z+5, r21	; 0x05
    1446:	66 83       	std	Z+6, r22	; 0x06
    1448:	77 83       	std	Z+7, r23	; 0x07
    144a:	ef 90       	pop	r14
    144c:	df 90       	pop	r13
    144e:	cf 90       	pop	r12
    1450:	08 95       	ret

00001452 <__fpcmp_parts_f>:
    1452:	cf 93       	push	r28
    1454:	fc 01       	movw	r30, r24
    1456:	db 01       	movw	r26, r22
    1458:	90 81       	ld	r25, Z
    145a:	92 30       	cpi	r25, 0x02	; 2
    145c:	08 f4       	brcc	.+2      	; 0x1460 <__fpcmp_parts_f+0xe>
    145e:	52 c0       	rjmp	.+164    	; 0x1504 <__fpcmp_parts_f+0xb2>
    1460:	8c 91       	ld	r24, X
    1462:	82 30       	cpi	r24, 0x02	; 2
    1464:	08 f4       	brcc	.+2      	; 0x1468 <__fpcmp_parts_f+0x16>
    1466:	4e c0       	rjmp	.+156    	; 0x1504 <__fpcmp_parts_f+0xb2>
    1468:	94 30       	cpi	r25, 0x04	; 4
    146a:	71 f4       	brne	.+28     	; 0x1488 <__fpcmp_parts_f+0x36>
    146c:	84 30       	cpi	r24, 0x04	; 4
    146e:	39 f4       	brne	.+14     	; 0x147e <__fpcmp_parts_f+0x2c>
    1470:	11 96       	adiw	r26, 0x01	; 1
    1472:	2c 91       	ld	r18, X
    1474:	30 e0       	ldi	r19, 0x00	; 0
    1476:	81 81       	ldd	r24, Z+1	; 0x01
    1478:	28 1b       	sub	r18, r24
    147a:	31 09       	sbc	r19, r1
    147c:	48 c0       	rjmp	.+144    	; 0x150e <__fpcmp_parts_f+0xbc>
    147e:	81 81       	ldd	r24, Z+1	; 0x01
    1480:	88 23       	and	r24, r24
    1482:	09 f4       	brne	.+2      	; 0x1486 <__fpcmp_parts_f+0x34>
    1484:	3f c0       	rjmp	.+126    	; 0x1504 <__fpcmp_parts_f+0xb2>
    1486:	3b c0       	rjmp	.+118    	; 0x14fe <__fpcmp_parts_f+0xac>
    1488:	84 30       	cpi	r24, 0x04	; 4
    148a:	29 f4       	brne	.+10     	; 0x1496 <__fpcmp_parts_f+0x44>
    148c:	11 96       	adiw	r26, 0x01	; 1
    148e:	8c 91       	ld	r24, X
    1490:	81 11       	cpse	r24, r1
    1492:	38 c0       	rjmp	.+112    	; 0x1504 <__fpcmp_parts_f+0xb2>
    1494:	34 c0       	rjmp	.+104    	; 0x14fe <__fpcmp_parts_f+0xac>
    1496:	92 30       	cpi	r25, 0x02	; 2
    1498:	19 f4       	brne	.+6      	; 0x14a0 <__fpcmp_parts_f+0x4e>
    149a:	82 30       	cpi	r24, 0x02	; 2
    149c:	b9 f7       	brne	.-18     	; 0x148c <__fpcmp_parts_f+0x3a>
    149e:	35 c0       	rjmp	.+106    	; 0x150a <__fpcmp_parts_f+0xb8>
    14a0:	82 30       	cpi	r24, 0x02	; 2
    14a2:	69 f3       	breq	.-38     	; 0x147e <__fpcmp_parts_f+0x2c>
    14a4:	c1 81       	ldd	r28, Z+1	; 0x01
    14a6:	11 96       	adiw	r26, 0x01	; 1
    14a8:	8c 91       	ld	r24, X
    14aa:	11 97       	sbiw	r26, 0x01	; 1
    14ac:	c8 13       	cpse	r28, r24
    14ae:	1d c0       	rjmp	.+58     	; 0x14ea <__fpcmp_parts_f+0x98>
    14b0:	22 81       	ldd	r18, Z+2	; 0x02
    14b2:	33 81       	ldd	r19, Z+3	; 0x03
    14b4:	12 96       	adiw	r26, 0x02	; 2
    14b6:	8d 91       	ld	r24, X+
    14b8:	9c 91       	ld	r25, X
    14ba:	13 97       	sbiw	r26, 0x03	; 3
    14bc:	82 17       	cp	r24, r18
    14be:	93 07       	cpc	r25, r19
    14c0:	0c f4       	brge	.+2      	; 0x14c4 <__fpcmp_parts_f+0x72>
    14c2:	13 c0       	rjmp	.+38     	; 0x14ea <__fpcmp_parts_f+0x98>
    14c4:	28 17       	cp	r18, r24
    14c6:	39 07       	cpc	r19, r25
    14c8:	0c f4       	brge	.+2      	; 0x14cc <__fpcmp_parts_f+0x7a>
    14ca:	17 c0       	rjmp	.+46     	; 0x14fa <__fpcmp_parts_f+0xa8>
    14cc:	44 81       	ldd	r20, Z+4	; 0x04
    14ce:	55 81       	ldd	r21, Z+5	; 0x05
    14d0:	66 81       	ldd	r22, Z+6	; 0x06
    14d2:	77 81       	ldd	r23, Z+7	; 0x07
    14d4:	14 96       	adiw	r26, 0x04	; 4
    14d6:	8d 91       	ld	r24, X+
    14d8:	9d 91       	ld	r25, X+
    14da:	0d 90       	ld	r0, X+
    14dc:	bc 91       	ld	r27, X
    14de:	a0 2d       	mov	r26, r0
    14e0:	84 17       	cp	r24, r20
    14e2:	95 07       	cpc	r25, r21
    14e4:	a6 07       	cpc	r26, r22
    14e6:	b7 07       	cpc	r27, r23
    14e8:	18 f4       	brcc	.+6      	; 0x14f0 <__fpcmp_parts_f+0x9e>
    14ea:	c1 11       	cpse	r28, r1
    14ec:	08 c0       	rjmp	.+16     	; 0x14fe <__fpcmp_parts_f+0xac>
    14ee:	0a c0       	rjmp	.+20     	; 0x1504 <__fpcmp_parts_f+0xb2>
    14f0:	48 17       	cp	r20, r24
    14f2:	59 07       	cpc	r21, r25
    14f4:	6a 07       	cpc	r22, r26
    14f6:	7b 07       	cpc	r23, r27
    14f8:	40 f4       	brcc	.+16     	; 0x150a <__fpcmp_parts_f+0xb8>
    14fa:	c1 11       	cpse	r28, r1
    14fc:	03 c0       	rjmp	.+6      	; 0x1504 <__fpcmp_parts_f+0xb2>
    14fe:	2f ef       	ldi	r18, 0xFF	; 255
    1500:	3f ef       	ldi	r19, 0xFF	; 255
    1502:	05 c0       	rjmp	.+10     	; 0x150e <__fpcmp_parts_f+0xbc>
    1504:	21 e0       	ldi	r18, 0x01	; 1
    1506:	30 e0       	ldi	r19, 0x00	; 0
    1508:	02 c0       	rjmp	.+4      	; 0x150e <__fpcmp_parts_f+0xbc>
    150a:	20 e0       	ldi	r18, 0x00	; 0
    150c:	30 e0       	ldi	r19, 0x00	; 0
    150e:	c9 01       	movw	r24, r18
    1510:	cf 91       	pop	r28
    1512:	08 95       	ret

00001514 <main>:
}

int main(void) {
  // Init port B to show keyboard result
  DDRB = 0xff;
    1514:	8f ef       	ldi	r24, 0xFF	; 255
    1516:	84 b9       	out	0x04, r24	; 4
  // and turn out the LEDs
  PORTB = 0xff;   
    1518:	85 b9       	out	0x05, r24	; 5
  
  // init the UART
  uart_init();
    151a:	0e 94 63 02 	call	0x4c6	; 0x4c6 <uart_init>
  stdout = stdin = stderr = &uart_str;
    151e:	80 e0       	ldi	r24, 0x00	; 0
    1520:	91 e0       	ldi	r25, 0x01	; 1
    1522:	90 93 62 04 	sts	0x0462, r25
    1526:	80 93 61 04 	sts	0x0461, r24
    152a:	90 93 5e 04 	sts	0x045E, r25
    152e:	80 93 5d 04 	sts	0x045D, r24
    1532:	90 93 60 04 	sts	0x0460, r25
    1536:	80 93 5f 04 	sts	0x045F, r24
  fprintf(stdout, "Starting...\n\r");
    153a:	bc 01       	movw	r22, r24
    153c:	86 ea       	ldi	r24, 0xA6	; 166
    153e:	91 e0       	ldi	r25, 0x01	; 1
    1540:	0e 94 11 0b 	call	0x1622	; 0x1622 <fputs>
  initialize();
    1544:	0e 94 49 02 	call	0x492	; 0x492 <initialize>

  //play(1336, 852);
	
  //endless loop to read keyboard
  while(1) {
	update_status_variables();
    1548:	0e 94 28 05 	call	0xa50	; 0xa50 <update_status_variables>
	//Used for debouncing
    if (time1>=t1) {
    154c:	80 91 2b 02 	lds	r24, 0x022B
    1550:	90 91 2c 02 	lds	r25, 0x022C
    1554:	44 97       	sbiw	r24, 0x14	; 20
    1556:	c0 f3       	brcs	.-16     	; 0x1548 <main+0x34>
		task1();
    1558:	0e 94 76 00 	call	0xec	; 0xec <task1>
    155c:	f5 cf       	rjmp	.-22     	; 0x1548 <main+0x34>

0000155e <__clzsi2>:
    155e:	0e 94 b8 0a 	call	0x1570	; 0x1570 <__clzhi2>
    1562:	84 ff       	sbrs	r24, 4
    1564:	08 95       	ret
    1566:	cb 01       	movw	r24, r22
    1568:	0e 94 b8 0a 	call	0x1570	; 0x1570 <__clzhi2>
    156c:	80 5f       	subi	r24, 0xF0	; 240
    156e:	08 95       	ret

00001570 <__clzhi2>:
    1570:	aa 27       	eor	r26, r26
    1572:	99 23       	and	r25, r25
    1574:	29 f4       	brne	.+10     	; 0x1580 <__clzhi2+0x10>
    1576:	a8 5f       	subi	r26, 0xF8	; 248
    1578:	98 2b       	or	r25, r24
    157a:	11 f4       	brne	.+4      	; 0x1580 <__clzhi2+0x10>
    157c:	80 e1       	ldi	r24, 0x10	; 16
    157e:	08 95       	ret
    1580:	90 31       	cpi	r25, 0x10	; 16
    1582:	18 f4       	brcc	.+6      	; 0x158a <__clzhi2+0x1a>
    1584:	ad 5f       	subi	r26, 0xFD	; 253
    1586:	92 95       	swap	r25
    1588:	a3 95       	inc	r26
    158a:	99 0f       	add	r25, r25
    158c:	e8 f7       	brcc	.-6      	; 0x1588 <__clzhi2+0x18>
    158e:	8a 2f       	mov	r24, r26
    1590:	99 27       	eor	r25, r25
    1592:	08 95       	ret

00001594 <__prologue_saves__>:
    1594:	2f 92       	push	r2
    1596:	3f 92       	push	r3
    1598:	4f 92       	push	r4
    159a:	5f 92       	push	r5
    159c:	6f 92       	push	r6
    159e:	7f 92       	push	r7
    15a0:	8f 92       	push	r8
    15a2:	9f 92       	push	r9
    15a4:	af 92       	push	r10
    15a6:	bf 92       	push	r11
    15a8:	cf 92       	push	r12
    15aa:	df 92       	push	r13
    15ac:	ef 92       	push	r14
    15ae:	ff 92       	push	r15
    15b0:	0f 93       	push	r16
    15b2:	1f 93       	push	r17
    15b4:	cf 93       	push	r28
    15b6:	df 93       	push	r29
    15b8:	cd b7       	in	r28, 0x3d	; 61
    15ba:	de b7       	in	r29, 0x3e	; 62
    15bc:	ca 1b       	sub	r28, r26
    15be:	db 0b       	sbc	r29, r27
    15c0:	0f b6       	in	r0, 0x3f	; 63
    15c2:	f8 94       	cli
    15c4:	de bf       	out	0x3e, r29	; 62
    15c6:	0f be       	out	0x3f, r0	; 63
    15c8:	cd bf       	out	0x3d, r28	; 61
    15ca:	09 94       	ijmp

000015cc <__epilogue_restores__>:
    15cc:	2a 88       	ldd	r2, Y+18	; 0x12
    15ce:	39 88       	ldd	r3, Y+17	; 0x11
    15d0:	48 88       	ldd	r4, Y+16	; 0x10
    15d2:	5f 84       	ldd	r5, Y+15	; 0x0f
    15d4:	6e 84       	ldd	r6, Y+14	; 0x0e
    15d6:	7d 84       	ldd	r7, Y+13	; 0x0d
    15d8:	8c 84       	ldd	r8, Y+12	; 0x0c
    15da:	9b 84       	ldd	r9, Y+11	; 0x0b
    15dc:	aa 84       	ldd	r10, Y+10	; 0x0a
    15de:	b9 84       	ldd	r11, Y+9	; 0x09
    15e0:	c8 84       	ldd	r12, Y+8	; 0x08
    15e2:	df 80       	ldd	r13, Y+7	; 0x07
    15e4:	ee 80       	ldd	r14, Y+6	; 0x06
    15e6:	fd 80       	ldd	r15, Y+5	; 0x05
    15e8:	0c 81       	ldd	r16, Y+4	; 0x04
    15ea:	1b 81       	ldd	r17, Y+3	; 0x03
    15ec:	aa 81       	ldd	r26, Y+2	; 0x02
    15ee:	b9 81       	ldd	r27, Y+1	; 0x01
    15f0:	ce 0f       	add	r28, r30
    15f2:	d1 1d       	adc	r29, r1
    15f4:	0f b6       	in	r0, 0x3f	; 63
    15f6:	f8 94       	cli
    15f8:	de bf       	out	0x3e, r29	; 62
    15fa:	0f be       	out	0x3f, r0	; 63
    15fc:	cd bf       	out	0x3d, r28	; 61
    15fe:	ed 01       	movw	r28, r26
    1600:	08 95       	ret

00001602 <fprintf>:
    1602:	cf 93       	push	r28
    1604:	df 93       	push	r29
    1606:	cd b7       	in	r28, 0x3d	; 61
    1608:	de b7       	in	r29, 0x3e	; 62
    160a:	ce 01       	movw	r24, r28
    160c:	09 96       	adiw	r24, 0x09	; 9
    160e:	ac 01       	movw	r20, r24
    1610:	6f 81       	ldd	r22, Y+7	; 0x07
    1612:	78 85       	ldd	r23, Y+8	; 0x08
    1614:	8d 81       	ldd	r24, Y+5	; 0x05
    1616:	9e 81       	ldd	r25, Y+6	; 0x06
    1618:	0e 94 42 0b 	call	0x1684	; 0x1684 <vfprintf>
    161c:	df 91       	pop	r29
    161e:	cf 91       	pop	r28
    1620:	08 95       	ret

00001622 <fputs>:
    1622:	ef 92       	push	r14
    1624:	ff 92       	push	r15
    1626:	0f 93       	push	r16
    1628:	1f 93       	push	r17
    162a:	cf 93       	push	r28
    162c:	df 93       	push	r29
    162e:	7c 01       	movw	r14, r24
    1630:	8b 01       	movw	r16, r22
    1632:	db 01       	movw	r26, r22
    1634:	13 96       	adiw	r26, 0x03	; 3
    1636:	8c 91       	ld	r24, X
    1638:	81 ff       	sbrs	r24, 1
    163a:	14 c0       	rjmp	.+40     	; 0x1664 <fputs+0x42>
    163c:	c0 e0       	ldi	r28, 0x00	; 0
    163e:	d0 e0       	ldi	r29, 0x00	; 0
    1640:	0b c0       	rjmp	.+22     	; 0x1658 <fputs+0x36>
    1642:	d8 01       	movw	r26, r16
    1644:	18 96       	adiw	r26, 0x08	; 8
    1646:	ed 91       	ld	r30, X+
    1648:	fc 91       	ld	r31, X
    164a:	19 97       	sbiw	r26, 0x09	; 9
    164c:	b8 01       	movw	r22, r16
    164e:	09 95       	icall
    1650:	89 2b       	or	r24, r25
    1652:	11 f0       	breq	.+4      	; 0x1658 <fputs+0x36>
    1654:	cf ef       	ldi	r28, 0xFF	; 255
    1656:	df ef       	ldi	r29, 0xFF	; 255
    1658:	f7 01       	movw	r30, r14
    165a:	81 91       	ld	r24, Z+
    165c:	7f 01       	movw	r14, r30
    165e:	81 11       	cpse	r24, r1
    1660:	f0 cf       	rjmp	.-32     	; 0x1642 <fputs+0x20>
    1662:	02 c0       	rjmp	.+4      	; 0x1668 <fputs+0x46>
    1664:	cf ef       	ldi	r28, 0xFF	; 255
    1666:	df ef       	ldi	r29, 0xFF	; 255
    1668:	ce 01       	movw	r24, r28
    166a:	df 91       	pop	r29
    166c:	cf 91       	pop	r28
    166e:	1f 91       	pop	r17
    1670:	0f 91       	pop	r16
    1672:	ff 90       	pop	r15
    1674:	ef 90       	pop	r14
    1676:	08 95       	ret

00001678 <sin>:
    1678:	9f 93       	push	r25
    167a:	aa d2       	rcall	.+1364   	; 0x1bd0 <__fp_rempio2>
    167c:	0f 90       	pop	r0
    167e:	07 fc       	sbrc	r0, 7
    1680:	ee 5f       	subi	r30, 0xFE	; 254
    1682:	cd c2       	rjmp	.+1434   	; 0x1c1e <__fp_sinus>

00001684 <vfprintf>:
    1684:	2f 92       	push	r2
    1686:	3f 92       	push	r3
    1688:	4f 92       	push	r4
    168a:	5f 92       	push	r5
    168c:	6f 92       	push	r6
    168e:	7f 92       	push	r7
    1690:	8f 92       	push	r8
    1692:	9f 92       	push	r9
    1694:	af 92       	push	r10
    1696:	bf 92       	push	r11
    1698:	cf 92       	push	r12
    169a:	df 92       	push	r13
    169c:	ef 92       	push	r14
    169e:	ff 92       	push	r15
    16a0:	0f 93       	push	r16
    16a2:	1f 93       	push	r17
    16a4:	cf 93       	push	r28
    16a6:	df 93       	push	r29
    16a8:	cd b7       	in	r28, 0x3d	; 61
    16aa:	de b7       	in	r29, 0x3e	; 62
    16ac:	2c 97       	sbiw	r28, 0x0c	; 12
    16ae:	0f b6       	in	r0, 0x3f	; 63
    16b0:	f8 94       	cli
    16b2:	de bf       	out	0x3e, r29	; 62
    16b4:	0f be       	out	0x3f, r0	; 63
    16b6:	cd bf       	out	0x3d, r28	; 61
    16b8:	7c 01       	movw	r14, r24
    16ba:	6b 01       	movw	r12, r22
    16bc:	8a 01       	movw	r16, r20
    16be:	fc 01       	movw	r30, r24
    16c0:	17 82       	std	Z+7, r1	; 0x07
    16c2:	16 82       	std	Z+6, r1	; 0x06
    16c4:	83 81       	ldd	r24, Z+3	; 0x03
    16c6:	81 ff       	sbrs	r24, 1
    16c8:	c6 c1       	rjmp	.+908    	; 0x1a56 <vfprintf+0x3d2>
    16ca:	88 24       	eor	r8, r8
    16cc:	83 94       	inc	r8
    16ce:	91 2c       	mov	r9, r1
    16d0:	8c 0e       	add	r8, r28
    16d2:	9d 1e       	adc	r9, r29
    16d4:	f7 01       	movw	r30, r14
    16d6:	93 81       	ldd	r25, Z+3	; 0x03
    16d8:	f6 01       	movw	r30, r12
    16da:	93 fd       	sbrc	r25, 3
    16dc:	85 91       	lpm	r24, Z+
    16de:	93 ff       	sbrs	r25, 3
    16e0:	81 91       	ld	r24, Z+
    16e2:	6f 01       	movw	r12, r30
    16e4:	88 23       	and	r24, r24
    16e6:	09 f4       	brne	.+2      	; 0x16ea <vfprintf+0x66>
    16e8:	b2 c1       	rjmp	.+868    	; 0x1a4e <vfprintf+0x3ca>
    16ea:	85 32       	cpi	r24, 0x25	; 37
    16ec:	39 f4       	brne	.+14     	; 0x16fc <vfprintf+0x78>
    16ee:	93 fd       	sbrc	r25, 3
    16f0:	85 91       	lpm	r24, Z+
    16f2:	93 ff       	sbrs	r25, 3
    16f4:	81 91       	ld	r24, Z+
    16f6:	6f 01       	movw	r12, r30
    16f8:	85 32       	cpi	r24, 0x25	; 37
    16fa:	29 f4       	brne	.+10     	; 0x1706 <vfprintf+0x82>
    16fc:	b7 01       	movw	r22, r14
    16fe:	90 e0       	ldi	r25, 0x00	; 0
    1700:	0e 94 5d 0d 	call	0x1aba	; 0x1aba <fputc>
    1704:	e7 cf       	rjmp	.-50     	; 0x16d4 <vfprintf+0x50>
    1706:	51 2c       	mov	r5, r1
    1708:	31 2c       	mov	r3, r1
    170a:	20 e0       	ldi	r18, 0x00	; 0
    170c:	20 32       	cpi	r18, 0x20	; 32
    170e:	a8 f4       	brcc	.+42     	; 0x173a <vfprintf+0xb6>
    1710:	8b 32       	cpi	r24, 0x2B	; 43
    1712:	61 f0       	breq	.+24     	; 0x172c <vfprintf+0xa8>
    1714:	28 f4       	brcc	.+10     	; 0x1720 <vfprintf+0x9c>
    1716:	80 32       	cpi	r24, 0x20	; 32
    1718:	51 f0       	breq	.+20     	; 0x172e <vfprintf+0xaa>
    171a:	83 32       	cpi	r24, 0x23	; 35
    171c:	71 f4       	brne	.+28     	; 0x173a <vfprintf+0xb6>
    171e:	0b c0       	rjmp	.+22     	; 0x1736 <vfprintf+0xb2>
    1720:	8d 32       	cpi	r24, 0x2D	; 45
    1722:	39 f0       	breq	.+14     	; 0x1732 <vfprintf+0xae>
    1724:	80 33       	cpi	r24, 0x30	; 48
    1726:	49 f4       	brne	.+18     	; 0x173a <vfprintf+0xb6>
    1728:	21 60       	ori	r18, 0x01	; 1
    172a:	28 c0       	rjmp	.+80     	; 0x177c <vfprintf+0xf8>
    172c:	22 60       	ori	r18, 0x02	; 2
    172e:	24 60       	ori	r18, 0x04	; 4
    1730:	25 c0       	rjmp	.+74     	; 0x177c <vfprintf+0xf8>
    1732:	28 60       	ori	r18, 0x08	; 8
    1734:	23 c0       	rjmp	.+70     	; 0x177c <vfprintf+0xf8>
    1736:	20 61       	ori	r18, 0x10	; 16
    1738:	21 c0       	rjmp	.+66     	; 0x177c <vfprintf+0xf8>
    173a:	27 fd       	sbrc	r18, 7
    173c:	27 c0       	rjmp	.+78     	; 0x178c <vfprintf+0x108>
    173e:	38 2f       	mov	r19, r24
    1740:	30 53       	subi	r19, 0x30	; 48
    1742:	3a 30       	cpi	r19, 0x0A	; 10
    1744:	78 f4       	brcc	.+30     	; 0x1764 <vfprintf+0xe0>
    1746:	26 ff       	sbrs	r18, 6
    1748:	06 c0       	rjmp	.+12     	; 0x1756 <vfprintf+0xd2>
    174a:	fa e0       	ldi	r31, 0x0A	; 10
    174c:	5f 9e       	mul	r5, r31
    174e:	30 0d       	add	r19, r0
    1750:	11 24       	eor	r1, r1
    1752:	53 2e       	mov	r5, r19
    1754:	13 c0       	rjmp	.+38     	; 0x177c <vfprintf+0xf8>
    1756:	8a e0       	ldi	r24, 0x0A	; 10
    1758:	38 9e       	mul	r3, r24
    175a:	30 0d       	add	r19, r0
    175c:	11 24       	eor	r1, r1
    175e:	33 2e       	mov	r3, r19
    1760:	20 62       	ori	r18, 0x20	; 32
    1762:	0c c0       	rjmp	.+24     	; 0x177c <vfprintf+0xf8>
    1764:	8e 32       	cpi	r24, 0x2E	; 46
    1766:	21 f4       	brne	.+8      	; 0x1770 <vfprintf+0xec>
    1768:	26 fd       	sbrc	r18, 6
    176a:	71 c1       	rjmp	.+738    	; 0x1a4e <vfprintf+0x3ca>
    176c:	20 64       	ori	r18, 0x40	; 64
    176e:	06 c0       	rjmp	.+12     	; 0x177c <vfprintf+0xf8>
    1770:	8c 36       	cpi	r24, 0x6C	; 108
    1772:	11 f4       	brne	.+4      	; 0x1778 <vfprintf+0xf4>
    1774:	20 68       	ori	r18, 0x80	; 128
    1776:	02 c0       	rjmp	.+4      	; 0x177c <vfprintf+0xf8>
    1778:	88 36       	cpi	r24, 0x68	; 104
    177a:	41 f4       	brne	.+16     	; 0x178c <vfprintf+0x108>
    177c:	f6 01       	movw	r30, r12
    177e:	93 fd       	sbrc	r25, 3
    1780:	85 91       	lpm	r24, Z+
    1782:	93 ff       	sbrs	r25, 3
    1784:	81 91       	ld	r24, Z+
    1786:	6f 01       	movw	r12, r30
    1788:	81 11       	cpse	r24, r1
    178a:	c0 cf       	rjmp	.-128    	; 0x170c <vfprintf+0x88>
    178c:	98 2f       	mov	r25, r24
    178e:	95 54       	subi	r25, 0x45	; 69
    1790:	93 30       	cpi	r25, 0x03	; 3
    1792:	18 f0       	brcs	.+6      	; 0x179a <vfprintf+0x116>
    1794:	90 52       	subi	r25, 0x20	; 32
    1796:	93 30       	cpi	r25, 0x03	; 3
    1798:	28 f4       	brcc	.+10     	; 0x17a4 <vfprintf+0x120>
    179a:	0c 5f       	subi	r16, 0xFC	; 252
    179c:	1f 4f       	sbci	r17, 0xFF	; 255
    179e:	ff e3       	ldi	r31, 0x3F	; 63
    17a0:	f9 83       	std	Y+1, r31	; 0x01
    17a2:	0d c0       	rjmp	.+26     	; 0x17be <vfprintf+0x13a>
    17a4:	83 36       	cpi	r24, 0x63	; 99
    17a6:	31 f0       	breq	.+12     	; 0x17b4 <vfprintf+0x130>
    17a8:	83 37       	cpi	r24, 0x73	; 115
    17aa:	71 f0       	breq	.+28     	; 0x17c8 <vfprintf+0x144>
    17ac:	83 35       	cpi	r24, 0x53	; 83
    17ae:	09 f0       	breq	.+2      	; 0x17b2 <vfprintf+0x12e>
    17b0:	5e c0       	rjmp	.+188    	; 0x186e <vfprintf+0x1ea>
    17b2:	23 c0       	rjmp	.+70     	; 0x17fa <vfprintf+0x176>
    17b4:	f8 01       	movw	r30, r16
    17b6:	80 81       	ld	r24, Z
    17b8:	89 83       	std	Y+1, r24	; 0x01
    17ba:	0e 5f       	subi	r16, 0xFE	; 254
    17bc:	1f 4f       	sbci	r17, 0xFF	; 255
    17be:	44 24       	eor	r4, r4
    17c0:	43 94       	inc	r4
    17c2:	51 2c       	mov	r5, r1
    17c4:	54 01       	movw	r10, r8
    17c6:	15 c0       	rjmp	.+42     	; 0x17f2 <vfprintf+0x16e>
    17c8:	38 01       	movw	r6, r16
    17ca:	f2 e0       	ldi	r31, 0x02	; 2
    17cc:	6f 0e       	add	r6, r31
    17ce:	71 1c       	adc	r7, r1
    17d0:	f8 01       	movw	r30, r16
    17d2:	a0 80       	ld	r10, Z
    17d4:	b1 80       	ldd	r11, Z+1	; 0x01
    17d6:	26 ff       	sbrs	r18, 6
    17d8:	03 c0       	rjmp	.+6      	; 0x17e0 <vfprintf+0x15c>
    17da:	65 2d       	mov	r22, r5
    17dc:	70 e0       	ldi	r23, 0x00	; 0
    17de:	02 c0       	rjmp	.+4      	; 0x17e4 <vfprintf+0x160>
    17e0:	6f ef       	ldi	r22, 0xFF	; 255
    17e2:	7f ef       	ldi	r23, 0xFF	; 255
    17e4:	c5 01       	movw	r24, r10
    17e6:	2c 87       	std	Y+12, r18	; 0x0c
    17e8:	0e 94 52 0d 	call	0x1aa4	; 0x1aa4 <strnlen>
    17ec:	2c 01       	movw	r4, r24
    17ee:	83 01       	movw	r16, r6
    17f0:	2c 85       	ldd	r18, Y+12	; 0x0c
    17f2:	6f e7       	ldi	r22, 0x7F	; 127
    17f4:	26 2e       	mov	r2, r22
    17f6:	22 22       	and	r2, r18
    17f8:	18 c0       	rjmp	.+48     	; 0x182a <vfprintf+0x1a6>
    17fa:	38 01       	movw	r6, r16
    17fc:	f2 e0       	ldi	r31, 0x02	; 2
    17fe:	6f 0e       	add	r6, r31
    1800:	71 1c       	adc	r7, r1
    1802:	f8 01       	movw	r30, r16
    1804:	a0 80       	ld	r10, Z
    1806:	b1 80       	ldd	r11, Z+1	; 0x01
    1808:	26 ff       	sbrs	r18, 6
    180a:	03 c0       	rjmp	.+6      	; 0x1812 <vfprintf+0x18e>
    180c:	65 2d       	mov	r22, r5
    180e:	70 e0       	ldi	r23, 0x00	; 0
    1810:	02 c0       	rjmp	.+4      	; 0x1816 <vfprintf+0x192>
    1812:	6f ef       	ldi	r22, 0xFF	; 255
    1814:	7f ef       	ldi	r23, 0xFF	; 255
    1816:	c5 01       	movw	r24, r10
    1818:	2c 87       	std	Y+12, r18	; 0x0c
    181a:	0e 94 47 0d 	call	0x1a8e	; 0x1a8e <strnlen_P>
    181e:	2c 01       	movw	r4, r24
    1820:	2c 85       	ldd	r18, Y+12	; 0x0c
    1822:	50 e8       	ldi	r21, 0x80	; 128
    1824:	25 2e       	mov	r2, r21
    1826:	22 2a       	or	r2, r18
    1828:	83 01       	movw	r16, r6
    182a:	23 fc       	sbrc	r2, 3
    182c:	1c c0       	rjmp	.+56     	; 0x1866 <vfprintf+0x1e2>
    182e:	06 c0       	rjmp	.+12     	; 0x183c <vfprintf+0x1b8>
    1830:	b7 01       	movw	r22, r14
    1832:	80 e2       	ldi	r24, 0x20	; 32
    1834:	90 e0       	ldi	r25, 0x00	; 0
    1836:	0e 94 5d 0d 	call	0x1aba	; 0x1aba <fputc>
    183a:	3a 94       	dec	r3
    183c:	83 2d       	mov	r24, r3
    183e:	90 e0       	ldi	r25, 0x00	; 0
    1840:	48 16       	cp	r4, r24
    1842:	59 06       	cpc	r5, r25
    1844:	a8 f3       	brcs	.-22     	; 0x1830 <vfprintf+0x1ac>
    1846:	0f c0       	rjmp	.+30     	; 0x1866 <vfprintf+0x1e2>
    1848:	f5 01       	movw	r30, r10
    184a:	27 fc       	sbrc	r2, 7
    184c:	85 91       	lpm	r24, Z+
    184e:	27 fe       	sbrs	r2, 7
    1850:	81 91       	ld	r24, Z+
    1852:	5f 01       	movw	r10, r30
    1854:	b7 01       	movw	r22, r14
    1856:	90 e0       	ldi	r25, 0x00	; 0
    1858:	0e 94 5d 0d 	call	0x1aba	; 0x1aba <fputc>
    185c:	31 10       	cpse	r3, r1
    185e:	3a 94       	dec	r3
    1860:	f1 e0       	ldi	r31, 0x01	; 1
    1862:	4f 1a       	sub	r4, r31
    1864:	51 08       	sbc	r5, r1
    1866:	41 14       	cp	r4, r1
    1868:	51 04       	cpc	r5, r1
    186a:	71 f7       	brne	.-36     	; 0x1848 <vfprintf+0x1c4>
    186c:	ed c0       	rjmp	.+474    	; 0x1a48 <vfprintf+0x3c4>
    186e:	84 36       	cpi	r24, 0x64	; 100
    1870:	11 f0       	breq	.+4      	; 0x1876 <vfprintf+0x1f2>
    1872:	89 36       	cpi	r24, 0x69	; 105
    1874:	41 f5       	brne	.+80     	; 0x18c6 <vfprintf+0x242>
    1876:	f8 01       	movw	r30, r16
    1878:	27 ff       	sbrs	r18, 7
    187a:	07 c0       	rjmp	.+14     	; 0x188a <vfprintf+0x206>
    187c:	60 81       	ld	r22, Z
    187e:	71 81       	ldd	r23, Z+1	; 0x01
    1880:	82 81       	ldd	r24, Z+2	; 0x02
    1882:	93 81       	ldd	r25, Z+3	; 0x03
    1884:	0c 5f       	subi	r16, 0xFC	; 252
    1886:	1f 4f       	sbci	r17, 0xFF	; 255
    1888:	08 c0       	rjmp	.+16     	; 0x189a <vfprintf+0x216>
    188a:	60 81       	ld	r22, Z
    188c:	71 81       	ldd	r23, Z+1	; 0x01
    188e:	88 27       	eor	r24, r24
    1890:	77 fd       	sbrc	r23, 7
    1892:	80 95       	com	r24
    1894:	98 2f       	mov	r25, r24
    1896:	0e 5f       	subi	r16, 0xFE	; 254
    1898:	1f 4f       	sbci	r17, 0xFF	; 255
    189a:	4f e6       	ldi	r20, 0x6F	; 111
    189c:	b4 2e       	mov	r11, r20
    189e:	b2 22       	and	r11, r18
    18a0:	97 ff       	sbrs	r25, 7
    18a2:	09 c0       	rjmp	.+18     	; 0x18b6 <vfprintf+0x232>
    18a4:	90 95       	com	r25
    18a6:	80 95       	com	r24
    18a8:	70 95       	com	r23
    18aa:	61 95       	neg	r22
    18ac:	7f 4f       	sbci	r23, 0xFF	; 255
    18ae:	8f 4f       	sbci	r24, 0xFF	; 255
    18b0:	9f 4f       	sbci	r25, 0xFF	; 255
    18b2:	f0 e8       	ldi	r31, 0x80	; 128
    18b4:	bf 2a       	or	r11, r31
    18b6:	2a e0       	ldi	r18, 0x0A	; 10
    18b8:	30 e0       	ldi	r19, 0x00	; 0
    18ba:	a4 01       	movw	r20, r8
    18bc:	0e 94 89 0d 	call	0x1b12	; 0x1b12 <__ultoa_invert>
    18c0:	a8 2e       	mov	r10, r24
    18c2:	a8 18       	sub	r10, r8
    18c4:	43 c0       	rjmp	.+134    	; 0x194c <vfprintf+0x2c8>
    18c6:	85 37       	cpi	r24, 0x75	; 117
    18c8:	31 f4       	brne	.+12     	; 0x18d6 <vfprintf+0x252>
    18ca:	3f ee       	ldi	r19, 0xEF	; 239
    18cc:	b3 2e       	mov	r11, r19
    18ce:	b2 22       	and	r11, r18
    18d0:	2a e0       	ldi	r18, 0x0A	; 10
    18d2:	30 e0       	ldi	r19, 0x00	; 0
    18d4:	24 c0       	rjmp	.+72     	; 0x191e <vfprintf+0x29a>
    18d6:	99 ef       	ldi	r25, 0xF9	; 249
    18d8:	b9 2e       	mov	r11, r25
    18da:	b2 22       	and	r11, r18
    18dc:	8f 36       	cpi	r24, 0x6F	; 111
    18de:	b9 f0       	breq	.+46     	; 0x190e <vfprintf+0x28a>
    18e0:	20 f4       	brcc	.+8      	; 0x18ea <vfprintf+0x266>
    18e2:	88 35       	cpi	r24, 0x58	; 88
    18e4:	09 f0       	breq	.+2      	; 0x18e8 <vfprintf+0x264>
    18e6:	b3 c0       	rjmp	.+358    	; 0x1a4e <vfprintf+0x3ca>
    18e8:	0d c0       	rjmp	.+26     	; 0x1904 <vfprintf+0x280>
    18ea:	80 37       	cpi	r24, 0x70	; 112
    18ec:	21 f0       	breq	.+8      	; 0x18f6 <vfprintf+0x272>
    18ee:	88 37       	cpi	r24, 0x78	; 120
    18f0:	09 f0       	breq	.+2      	; 0x18f4 <vfprintf+0x270>
    18f2:	ad c0       	rjmp	.+346    	; 0x1a4e <vfprintf+0x3ca>
    18f4:	02 c0       	rjmp	.+4      	; 0x18fa <vfprintf+0x276>
    18f6:	20 e1       	ldi	r18, 0x10	; 16
    18f8:	b2 2a       	or	r11, r18
    18fa:	b4 fe       	sbrs	r11, 4
    18fc:	0b c0       	rjmp	.+22     	; 0x1914 <vfprintf+0x290>
    18fe:	84 e0       	ldi	r24, 0x04	; 4
    1900:	b8 2a       	or	r11, r24
    1902:	08 c0       	rjmp	.+16     	; 0x1914 <vfprintf+0x290>
    1904:	24 ff       	sbrs	r18, 4
    1906:	09 c0       	rjmp	.+18     	; 0x191a <vfprintf+0x296>
    1908:	e6 e0       	ldi	r30, 0x06	; 6
    190a:	be 2a       	or	r11, r30
    190c:	06 c0       	rjmp	.+12     	; 0x191a <vfprintf+0x296>
    190e:	28 e0       	ldi	r18, 0x08	; 8
    1910:	30 e0       	ldi	r19, 0x00	; 0
    1912:	05 c0       	rjmp	.+10     	; 0x191e <vfprintf+0x29a>
    1914:	20 e1       	ldi	r18, 0x10	; 16
    1916:	30 e0       	ldi	r19, 0x00	; 0
    1918:	02 c0       	rjmp	.+4      	; 0x191e <vfprintf+0x29a>
    191a:	20 e1       	ldi	r18, 0x10	; 16
    191c:	32 e0       	ldi	r19, 0x02	; 2
    191e:	f8 01       	movw	r30, r16
    1920:	b7 fe       	sbrs	r11, 7
    1922:	07 c0       	rjmp	.+14     	; 0x1932 <vfprintf+0x2ae>
    1924:	60 81       	ld	r22, Z
    1926:	71 81       	ldd	r23, Z+1	; 0x01
    1928:	82 81       	ldd	r24, Z+2	; 0x02
    192a:	93 81       	ldd	r25, Z+3	; 0x03
    192c:	0c 5f       	subi	r16, 0xFC	; 252
    192e:	1f 4f       	sbci	r17, 0xFF	; 255
    1930:	06 c0       	rjmp	.+12     	; 0x193e <vfprintf+0x2ba>
    1932:	60 81       	ld	r22, Z
    1934:	71 81       	ldd	r23, Z+1	; 0x01
    1936:	80 e0       	ldi	r24, 0x00	; 0
    1938:	90 e0       	ldi	r25, 0x00	; 0
    193a:	0e 5f       	subi	r16, 0xFE	; 254
    193c:	1f 4f       	sbci	r17, 0xFF	; 255
    193e:	a4 01       	movw	r20, r8
    1940:	0e 94 89 0d 	call	0x1b12	; 0x1b12 <__ultoa_invert>
    1944:	a8 2e       	mov	r10, r24
    1946:	a8 18       	sub	r10, r8
    1948:	ff e7       	ldi	r31, 0x7F	; 127
    194a:	bf 22       	and	r11, r31
    194c:	b6 fe       	sbrs	r11, 6
    194e:	0b c0       	rjmp	.+22     	; 0x1966 <vfprintf+0x2e2>
    1950:	2b 2d       	mov	r18, r11
    1952:	2e 7f       	andi	r18, 0xFE	; 254
    1954:	a5 14       	cp	r10, r5
    1956:	50 f4       	brcc	.+20     	; 0x196c <vfprintf+0x2e8>
    1958:	b4 fe       	sbrs	r11, 4
    195a:	0a c0       	rjmp	.+20     	; 0x1970 <vfprintf+0x2ec>
    195c:	b2 fc       	sbrc	r11, 2
    195e:	08 c0       	rjmp	.+16     	; 0x1970 <vfprintf+0x2ec>
    1960:	2b 2d       	mov	r18, r11
    1962:	2e 7e       	andi	r18, 0xEE	; 238
    1964:	05 c0       	rjmp	.+10     	; 0x1970 <vfprintf+0x2ec>
    1966:	7a 2c       	mov	r7, r10
    1968:	2b 2d       	mov	r18, r11
    196a:	03 c0       	rjmp	.+6      	; 0x1972 <vfprintf+0x2ee>
    196c:	7a 2c       	mov	r7, r10
    196e:	01 c0       	rjmp	.+2      	; 0x1972 <vfprintf+0x2ee>
    1970:	75 2c       	mov	r7, r5
    1972:	24 ff       	sbrs	r18, 4
    1974:	0d c0       	rjmp	.+26     	; 0x1990 <vfprintf+0x30c>
    1976:	fe 01       	movw	r30, r28
    1978:	ea 0d       	add	r30, r10
    197a:	f1 1d       	adc	r31, r1
    197c:	80 81       	ld	r24, Z
    197e:	80 33       	cpi	r24, 0x30	; 48
    1980:	11 f4       	brne	.+4      	; 0x1986 <vfprintf+0x302>
    1982:	29 7e       	andi	r18, 0xE9	; 233
    1984:	09 c0       	rjmp	.+18     	; 0x1998 <vfprintf+0x314>
    1986:	22 ff       	sbrs	r18, 2
    1988:	06 c0       	rjmp	.+12     	; 0x1996 <vfprintf+0x312>
    198a:	73 94       	inc	r7
    198c:	73 94       	inc	r7
    198e:	04 c0       	rjmp	.+8      	; 0x1998 <vfprintf+0x314>
    1990:	82 2f       	mov	r24, r18
    1992:	86 78       	andi	r24, 0x86	; 134
    1994:	09 f0       	breq	.+2      	; 0x1998 <vfprintf+0x314>
    1996:	73 94       	inc	r7
    1998:	23 fd       	sbrc	r18, 3
    199a:	14 c0       	rjmp	.+40     	; 0x19c4 <vfprintf+0x340>
    199c:	20 ff       	sbrs	r18, 0
    199e:	0f c0       	rjmp	.+30     	; 0x19be <vfprintf+0x33a>
    19a0:	5a 2c       	mov	r5, r10
    19a2:	73 14       	cp	r7, r3
    19a4:	60 f4       	brcc	.+24     	; 0x19be <vfprintf+0x33a>
    19a6:	53 0c       	add	r5, r3
    19a8:	57 18       	sub	r5, r7
    19aa:	73 2c       	mov	r7, r3
    19ac:	08 c0       	rjmp	.+16     	; 0x19be <vfprintf+0x33a>
    19ae:	b7 01       	movw	r22, r14
    19b0:	80 e2       	ldi	r24, 0x20	; 32
    19b2:	90 e0       	ldi	r25, 0x00	; 0
    19b4:	2c 87       	std	Y+12, r18	; 0x0c
    19b6:	0e 94 5d 0d 	call	0x1aba	; 0x1aba <fputc>
    19ba:	73 94       	inc	r7
    19bc:	2c 85       	ldd	r18, Y+12	; 0x0c
    19be:	73 14       	cp	r7, r3
    19c0:	b0 f3       	brcs	.-20     	; 0x19ae <vfprintf+0x32a>
    19c2:	04 c0       	rjmp	.+8      	; 0x19cc <vfprintf+0x348>
    19c4:	73 14       	cp	r7, r3
    19c6:	10 f4       	brcc	.+4      	; 0x19cc <vfprintf+0x348>
    19c8:	37 18       	sub	r3, r7
    19ca:	01 c0       	rjmp	.+2      	; 0x19ce <vfprintf+0x34a>
    19cc:	31 2c       	mov	r3, r1
    19ce:	24 ff       	sbrs	r18, 4
    19d0:	12 c0       	rjmp	.+36     	; 0x19f6 <vfprintf+0x372>
    19d2:	b7 01       	movw	r22, r14
    19d4:	80 e3       	ldi	r24, 0x30	; 48
    19d6:	90 e0       	ldi	r25, 0x00	; 0
    19d8:	2c 87       	std	Y+12, r18	; 0x0c
    19da:	0e 94 5d 0d 	call	0x1aba	; 0x1aba <fputc>
    19de:	2c 85       	ldd	r18, Y+12	; 0x0c
    19e0:	22 ff       	sbrs	r18, 2
    19e2:	1e c0       	rjmp	.+60     	; 0x1a20 <vfprintf+0x39c>
    19e4:	21 ff       	sbrs	r18, 1
    19e6:	03 c0       	rjmp	.+6      	; 0x19ee <vfprintf+0x36a>
    19e8:	88 e5       	ldi	r24, 0x58	; 88
    19ea:	90 e0       	ldi	r25, 0x00	; 0
    19ec:	02 c0       	rjmp	.+4      	; 0x19f2 <vfprintf+0x36e>
    19ee:	88 e7       	ldi	r24, 0x78	; 120
    19f0:	90 e0       	ldi	r25, 0x00	; 0
    19f2:	b7 01       	movw	r22, r14
    19f4:	0c c0       	rjmp	.+24     	; 0x1a0e <vfprintf+0x38a>
    19f6:	82 2f       	mov	r24, r18
    19f8:	86 78       	andi	r24, 0x86	; 134
    19fa:	91 f0       	breq	.+36     	; 0x1a20 <vfprintf+0x39c>
    19fc:	21 fd       	sbrc	r18, 1
    19fe:	02 c0       	rjmp	.+4      	; 0x1a04 <vfprintf+0x380>
    1a00:	80 e2       	ldi	r24, 0x20	; 32
    1a02:	01 c0       	rjmp	.+2      	; 0x1a06 <vfprintf+0x382>
    1a04:	8b e2       	ldi	r24, 0x2B	; 43
    1a06:	27 fd       	sbrc	r18, 7
    1a08:	8d e2       	ldi	r24, 0x2D	; 45
    1a0a:	b7 01       	movw	r22, r14
    1a0c:	90 e0       	ldi	r25, 0x00	; 0
    1a0e:	0e 94 5d 0d 	call	0x1aba	; 0x1aba <fputc>
    1a12:	06 c0       	rjmp	.+12     	; 0x1a20 <vfprintf+0x39c>
    1a14:	b7 01       	movw	r22, r14
    1a16:	80 e3       	ldi	r24, 0x30	; 48
    1a18:	90 e0       	ldi	r25, 0x00	; 0
    1a1a:	0e 94 5d 0d 	call	0x1aba	; 0x1aba <fputc>
    1a1e:	5a 94       	dec	r5
    1a20:	a5 14       	cp	r10, r5
    1a22:	c0 f3       	brcs	.-16     	; 0x1a14 <vfprintf+0x390>
    1a24:	aa 94       	dec	r10
    1a26:	f4 01       	movw	r30, r8
    1a28:	ea 0d       	add	r30, r10
    1a2a:	f1 1d       	adc	r31, r1
    1a2c:	b7 01       	movw	r22, r14
    1a2e:	80 81       	ld	r24, Z
    1a30:	90 e0       	ldi	r25, 0x00	; 0
    1a32:	0e 94 5d 0d 	call	0x1aba	; 0x1aba <fputc>
    1a36:	a1 10       	cpse	r10, r1
    1a38:	f5 cf       	rjmp	.-22     	; 0x1a24 <vfprintf+0x3a0>
    1a3a:	06 c0       	rjmp	.+12     	; 0x1a48 <vfprintf+0x3c4>
    1a3c:	b7 01       	movw	r22, r14
    1a3e:	80 e2       	ldi	r24, 0x20	; 32
    1a40:	90 e0       	ldi	r25, 0x00	; 0
    1a42:	0e 94 5d 0d 	call	0x1aba	; 0x1aba <fputc>
    1a46:	3a 94       	dec	r3
    1a48:	31 10       	cpse	r3, r1
    1a4a:	f8 cf       	rjmp	.-16     	; 0x1a3c <vfprintf+0x3b8>
    1a4c:	43 ce       	rjmp	.-890    	; 0x16d4 <vfprintf+0x50>
    1a4e:	f7 01       	movw	r30, r14
    1a50:	26 81       	ldd	r18, Z+6	; 0x06
    1a52:	37 81       	ldd	r19, Z+7	; 0x07
    1a54:	02 c0       	rjmp	.+4      	; 0x1a5a <vfprintf+0x3d6>
    1a56:	2f ef       	ldi	r18, 0xFF	; 255
    1a58:	3f ef       	ldi	r19, 0xFF	; 255
    1a5a:	c9 01       	movw	r24, r18
    1a5c:	2c 96       	adiw	r28, 0x0c	; 12
    1a5e:	0f b6       	in	r0, 0x3f	; 63
    1a60:	f8 94       	cli
    1a62:	de bf       	out	0x3e, r29	; 62
    1a64:	0f be       	out	0x3f, r0	; 63
    1a66:	cd bf       	out	0x3d, r28	; 61
    1a68:	df 91       	pop	r29
    1a6a:	cf 91       	pop	r28
    1a6c:	1f 91       	pop	r17
    1a6e:	0f 91       	pop	r16
    1a70:	ff 90       	pop	r15
    1a72:	ef 90       	pop	r14
    1a74:	df 90       	pop	r13
    1a76:	cf 90       	pop	r12
    1a78:	bf 90       	pop	r11
    1a7a:	af 90       	pop	r10
    1a7c:	9f 90       	pop	r9
    1a7e:	8f 90       	pop	r8
    1a80:	7f 90       	pop	r7
    1a82:	6f 90       	pop	r6
    1a84:	5f 90       	pop	r5
    1a86:	4f 90       	pop	r4
    1a88:	3f 90       	pop	r3
    1a8a:	2f 90       	pop	r2
    1a8c:	08 95       	ret

00001a8e <strnlen_P>:
    1a8e:	fc 01       	movw	r30, r24
    1a90:	05 90       	lpm	r0, Z+
    1a92:	61 50       	subi	r22, 0x01	; 1
    1a94:	70 40       	sbci	r23, 0x00	; 0
    1a96:	01 10       	cpse	r0, r1
    1a98:	d8 f7       	brcc	.-10     	; 0x1a90 <strnlen_P+0x2>
    1a9a:	80 95       	com	r24
    1a9c:	90 95       	com	r25
    1a9e:	8e 0f       	add	r24, r30
    1aa0:	9f 1f       	adc	r25, r31
    1aa2:	08 95       	ret

00001aa4 <strnlen>:
    1aa4:	fc 01       	movw	r30, r24
    1aa6:	61 50       	subi	r22, 0x01	; 1
    1aa8:	70 40       	sbci	r23, 0x00	; 0
    1aaa:	01 90       	ld	r0, Z+
    1aac:	01 10       	cpse	r0, r1
    1aae:	d8 f7       	brcc	.-10     	; 0x1aa6 <strnlen+0x2>
    1ab0:	80 95       	com	r24
    1ab2:	90 95       	com	r25
    1ab4:	8e 0f       	add	r24, r30
    1ab6:	9f 1f       	adc	r25, r31
    1ab8:	08 95       	ret

00001aba <fputc>:
    1aba:	0f 93       	push	r16
    1abc:	1f 93       	push	r17
    1abe:	cf 93       	push	r28
    1ac0:	df 93       	push	r29
    1ac2:	8c 01       	movw	r16, r24
    1ac4:	eb 01       	movw	r28, r22
    1ac6:	8b 81       	ldd	r24, Y+3	; 0x03
    1ac8:	81 fd       	sbrc	r24, 1
    1aca:	03 c0       	rjmp	.+6      	; 0x1ad2 <fputc+0x18>
    1acc:	0f ef       	ldi	r16, 0xFF	; 255
    1ace:	1f ef       	ldi	r17, 0xFF	; 255
    1ad0:	1a c0       	rjmp	.+52     	; 0x1b06 <fputc+0x4c>
    1ad2:	82 ff       	sbrs	r24, 2
    1ad4:	0d c0       	rjmp	.+26     	; 0x1af0 <fputc+0x36>
    1ad6:	2e 81       	ldd	r18, Y+6	; 0x06
    1ad8:	3f 81       	ldd	r19, Y+7	; 0x07
    1ada:	8c 81       	ldd	r24, Y+4	; 0x04
    1adc:	9d 81       	ldd	r25, Y+5	; 0x05
    1ade:	28 17       	cp	r18, r24
    1ae0:	39 07       	cpc	r19, r25
    1ae2:	64 f4       	brge	.+24     	; 0x1afc <fputc+0x42>
    1ae4:	e8 81       	ld	r30, Y
    1ae6:	f9 81       	ldd	r31, Y+1	; 0x01
    1ae8:	01 93       	st	Z+, r16
    1aea:	f9 83       	std	Y+1, r31	; 0x01
    1aec:	e8 83       	st	Y, r30
    1aee:	06 c0       	rjmp	.+12     	; 0x1afc <fputc+0x42>
    1af0:	e8 85       	ldd	r30, Y+8	; 0x08
    1af2:	f9 85       	ldd	r31, Y+9	; 0x09
    1af4:	80 2f       	mov	r24, r16
    1af6:	09 95       	icall
    1af8:	89 2b       	or	r24, r25
    1afa:	41 f7       	brne	.-48     	; 0x1acc <fputc+0x12>
    1afc:	8e 81       	ldd	r24, Y+6	; 0x06
    1afe:	9f 81       	ldd	r25, Y+7	; 0x07
    1b00:	01 96       	adiw	r24, 0x01	; 1
    1b02:	9f 83       	std	Y+7, r25	; 0x07
    1b04:	8e 83       	std	Y+6, r24	; 0x06
    1b06:	c8 01       	movw	r24, r16
    1b08:	df 91       	pop	r29
    1b0a:	cf 91       	pop	r28
    1b0c:	1f 91       	pop	r17
    1b0e:	0f 91       	pop	r16
    1b10:	08 95       	ret

00001b12 <__ultoa_invert>:
    1b12:	fa 01       	movw	r30, r20
    1b14:	aa 27       	eor	r26, r26
    1b16:	28 30       	cpi	r18, 0x08	; 8
    1b18:	51 f1       	breq	.+84     	; 0x1b6e <__ultoa_invert+0x5c>
    1b1a:	20 31       	cpi	r18, 0x10	; 16
    1b1c:	81 f1       	breq	.+96     	; 0x1b7e <__ultoa_invert+0x6c>
    1b1e:	e8 94       	clt
    1b20:	6f 93       	push	r22
    1b22:	6e 7f       	andi	r22, 0xFE	; 254
    1b24:	6e 5f       	subi	r22, 0xFE	; 254
    1b26:	7f 4f       	sbci	r23, 0xFF	; 255
    1b28:	8f 4f       	sbci	r24, 0xFF	; 255
    1b2a:	9f 4f       	sbci	r25, 0xFF	; 255
    1b2c:	af 4f       	sbci	r26, 0xFF	; 255
    1b2e:	b1 e0       	ldi	r27, 0x01	; 1
    1b30:	3e d0       	rcall	.+124    	; 0x1bae <__ultoa_invert+0x9c>
    1b32:	b4 e0       	ldi	r27, 0x04	; 4
    1b34:	3c d0       	rcall	.+120    	; 0x1bae <__ultoa_invert+0x9c>
    1b36:	67 0f       	add	r22, r23
    1b38:	78 1f       	adc	r23, r24
    1b3a:	89 1f       	adc	r24, r25
    1b3c:	9a 1f       	adc	r25, r26
    1b3e:	a1 1d       	adc	r26, r1
    1b40:	68 0f       	add	r22, r24
    1b42:	79 1f       	adc	r23, r25
    1b44:	8a 1f       	adc	r24, r26
    1b46:	91 1d       	adc	r25, r1
    1b48:	a1 1d       	adc	r26, r1
    1b4a:	6a 0f       	add	r22, r26
    1b4c:	71 1d       	adc	r23, r1
    1b4e:	81 1d       	adc	r24, r1
    1b50:	91 1d       	adc	r25, r1
    1b52:	a1 1d       	adc	r26, r1
    1b54:	20 d0       	rcall	.+64     	; 0x1b96 <__ultoa_invert+0x84>
    1b56:	09 f4       	brne	.+2      	; 0x1b5a <__ultoa_invert+0x48>
    1b58:	68 94       	set
    1b5a:	3f 91       	pop	r19
    1b5c:	2a e0       	ldi	r18, 0x0A	; 10
    1b5e:	26 9f       	mul	r18, r22
    1b60:	11 24       	eor	r1, r1
    1b62:	30 19       	sub	r19, r0
    1b64:	30 5d       	subi	r19, 0xD0	; 208
    1b66:	31 93       	st	Z+, r19
    1b68:	de f6       	brtc	.-74     	; 0x1b20 <__ultoa_invert+0xe>
    1b6a:	cf 01       	movw	r24, r30
    1b6c:	08 95       	ret
    1b6e:	46 2f       	mov	r20, r22
    1b70:	47 70       	andi	r20, 0x07	; 7
    1b72:	40 5d       	subi	r20, 0xD0	; 208
    1b74:	41 93       	st	Z+, r20
    1b76:	b3 e0       	ldi	r27, 0x03	; 3
    1b78:	0f d0       	rcall	.+30     	; 0x1b98 <__ultoa_invert+0x86>
    1b7a:	c9 f7       	brne	.-14     	; 0x1b6e <__ultoa_invert+0x5c>
    1b7c:	f6 cf       	rjmp	.-20     	; 0x1b6a <__ultoa_invert+0x58>
    1b7e:	46 2f       	mov	r20, r22
    1b80:	4f 70       	andi	r20, 0x0F	; 15
    1b82:	40 5d       	subi	r20, 0xD0	; 208
    1b84:	4a 33       	cpi	r20, 0x3A	; 58
    1b86:	18 f0       	brcs	.+6      	; 0x1b8e <__ultoa_invert+0x7c>
    1b88:	49 5d       	subi	r20, 0xD9	; 217
    1b8a:	31 fd       	sbrc	r19, 1
    1b8c:	40 52       	subi	r20, 0x20	; 32
    1b8e:	41 93       	st	Z+, r20
    1b90:	02 d0       	rcall	.+4      	; 0x1b96 <__ultoa_invert+0x84>
    1b92:	a9 f7       	brne	.-22     	; 0x1b7e <__ultoa_invert+0x6c>
    1b94:	ea cf       	rjmp	.-44     	; 0x1b6a <__ultoa_invert+0x58>
    1b96:	b4 e0       	ldi	r27, 0x04	; 4
    1b98:	a6 95       	lsr	r26
    1b9a:	97 95       	ror	r25
    1b9c:	87 95       	ror	r24
    1b9e:	77 95       	ror	r23
    1ba0:	67 95       	ror	r22
    1ba2:	ba 95       	dec	r27
    1ba4:	c9 f7       	brne	.-14     	; 0x1b98 <__ultoa_invert+0x86>
    1ba6:	00 97       	sbiw	r24, 0x00	; 0
    1ba8:	61 05       	cpc	r22, r1
    1baa:	71 05       	cpc	r23, r1
    1bac:	08 95       	ret
    1bae:	9b 01       	movw	r18, r22
    1bb0:	ac 01       	movw	r20, r24
    1bb2:	0a 2e       	mov	r0, r26
    1bb4:	06 94       	lsr	r0
    1bb6:	57 95       	ror	r21
    1bb8:	47 95       	ror	r20
    1bba:	37 95       	ror	r19
    1bbc:	27 95       	ror	r18
    1bbe:	ba 95       	dec	r27
    1bc0:	c9 f7       	brne	.-14     	; 0x1bb4 <__ultoa_invert+0xa2>
    1bc2:	62 0f       	add	r22, r18
    1bc4:	73 1f       	adc	r23, r19
    1bc6:	84 1f       	adc	r24, r20
    1bc8:	95 1f       	adc	r25, r21
    1bca:	a0 1d       	adc	r26, r0
    1bcc:	08 95       	ret
    1bce:	ce c0       	rjmp	.+412    	; 0x1d6c <__fp_nan>

00001bd0 <__fp_rempio2>:
    1bd0:	3f d0       	rcall	.+126    	; 0x1c50 <__fp_splitA>
    1bd2:	e8 f3       	brcs	.-6      	; 0x1bce <__ultoa_invert+0xbc>
    1bd4:	e8 94       	clt
    1bd6:	e0 e0       	ldi	r30, 0x00	; 0
    1bd8:	bb 27       	eor	r27, r27
    1bda:	9f 57       	subi	r25, 0x7F	; 127
    1bdc:	f0 f0       	brcs	.+60     	; 0x1c1a <__fp_rempio2+0x4a>
    1bde:	2a ed       	ldi	r18, 0xDA	; 218
    1be0:	3f e0       	ldi	r19, 0x0F	; 15
    1be2:	49 ec       	ldi	r20, 0xC9	; 201
    1be4:	06 c0       	rjmp	.+12     	; 0x1bf2 <__fp_rempio2+0x22>
    1be6:	ee 0f       	add	r30, r30
    1be8:	bb 0f       	add	r27, r27
    1bea:	66 1f       	adc	r22, r22
    1bec:	77 1f       	adc	r23, r23
    1bee:	88 1f       	adc	r24, r24
    1bf0:	28 f0       	brcs	.+10     	; 0x1bfc <__fp_rempio2+0x2c>
    1bf2:	b2 3a       	cpi	r27, 0xA2	; 162
    1bf4:	62 07       	cpc	r22, r18
    1bf6:	73 07       	cpc	r23, r19
    1bf8:	84 07       	cpc	r24, r20
    1bfa:	28 f0       	brcs	.+10     	; 0x1c06 <__fp_rempio2+0x36>
    1bfc:	b2 5a       	subi	r27, 0xA2	; 162
    1bfe:	62 0b       	sbc	r22, r18
    1c00:	73 0b       	sbc	r23, r19
    1c02:	84 0b       	sbc	r24, r20
    1c04:	e3 95       	inc	r30
    1c06:	9a 95       	dec	r25
    1c08:	72 f7       	brpl	.-36     	; 0x1be6 <__fp_rempio2+0x16>
    1c0a:	80 38       	cpi	r24, 0x80	; 128
    1c0c:	30 f4       	brcc	.+12     	; 0x1c1a <__fp_rempio2+0x4a>
    1c0e:	9a 95       	dec	r25
    1c10:	bb 0f       	add	r27, r27
    1c12:	66 1f       	adc	r22, r22
    1c14:	77 1f       	adc	r23, r23
    1c16:	88 1f       	adc	r24, r24
    1c18:	d2 f7       	brpl	.-12     	; 0x1c0e <__fp_rempio2+0x3e>
    1c1a:	90 48       	sbci	r25, 0x80	; 128
    1c1c:	9b c0       	rjmp	.+310    	; 0x1d54 <__fp_mpack_finite>

00001c1e <__fp_sinus>:
    1c1e:	ef 93       	push	r30
    1c20:	e0 ff       	sbrs	r30, 0
    1c22:	06 c0       	rjmp	.+12     	; 0x1c30 <__fp_sinus+0x12>
    1c24:	a2 ea       	ldi	r26, 0xA2	; 162
    1c26:	2a ed       	ldi	r18, 0xDA	; 218
    1c28:	3f e0       	ldi	r19, 0x0F	; 15
    1c2a:	49 ec       	ldi	r20, 0xC9	; 201
    1c2c:	5f eb       	ldi	r21, 0xBF	; 191
    1c2e:	37 d0       	rcall	.+110    	; 0x1c9e <__addsf3x>
    1c30:	bf d0       	rcall	.+382    	; 0x1db0 <__fp_round>
    1c32:	0f 90       	pop	r0
    1c34:	03 94       	inc	r0
    1c36:	01 fc       	sbrc	r0, 1
    1c38:	90 58       	subi	r25, 0x80	; 128
    1c3a:	ec e8       	ldi	r30, 0x8C	; 140
    1c3c:	f0 e0       	ldi	r31, 0x00	; 0
    1c3e:	99 c0       	rjmp	.+306    	; 0x1d72 <__fp_powsodd>

00001c40 <__fp_split3>:
    1c40:	57 fd       	sbrc	r21, 7
    1c42:	90 58       	subi	r25, 0x80	; 128
    1c44:	44 0f       	add	r20, r20
    1c46:	55 1f       	adc	r21, r21
    1c48:	59 f0       	breq	.+22     	; 0x1c60 <__fp_splitA+0x10>
    1c4a:	5f 3f       	cpi	r21, 0xFF	; 255
    1c4c:	71 f0       	breq	.+28     	; 0x1c6a <__fp_splitA+0x1a>
    1c4e:	47 95       	ror	r20

00001c50 <__fp_splitA>:
    1c50:	88 0f       	add	r24, r24
    1c52:	97 fb       	bst	r25, 7
    1c54:	99 1f       	adc	r25, r25
    1c56:	61 f0       	breq	.+24     	; 0x1c70 <__fp_splitA+0x20>
    1c58:	9f 3f       	cpi	r25, 0xFF	; 255
    1c5a:	79 f0       	breq	.+30     	; 0x1c7a <__fp_splitA+0x2a>
    1c5c:	87 95       	ror	r24
    1c5e:	08 95       	ret
    1c60:	12 16       	cp	r1, r18
    1c62:	13 06       	cpc	r1, r19
    1c64:	14 06       	cpc	r1, r20
    1c66:	55 1f       	adc	r21, r21
    1c68:	f2 cf       	rjmp	.-28     	; 0x1c4e <__fp_split3+0xe>
    1c6a:	46 95       	lsr	r20
    1c6c:	f1 df       	rcall	.-30     	; 0x1c50 <__fp_splitA>
    1c6e:	08 c0       	rjmp	.+16     	; 0x1c80 <__fp_splitA+0x30>
    1c70:	16 16       	cp	r1, r22
    1c72:	17 06       	cpc	r1, r23
    1c74:	18 06       	cpc	r1, r24
    1c76:	99 1f       	adc	r25, r25
    1c78:	f1 cf       	rjmp	.-30     	; 0x1c5c <__fp_splitA+0xc>
    1c7a:	86 95       	lsr	r24
    1c7c:	71 05       	cpc	r23, r1
    1c7e:	61 05       	cpc	r22, r1
    1c80:	08 94       	sec
    1c82:	08 95       	ret
    1c84:	87 d0       	rcall	.+270    	; 0x1d94 <__fp_pscA>
    1c86:	30 f0       	brcs	.+12     	; 0x1c94 <__fp_splitA+0x44>
    1c88:	8c d0       	rcall	.+280    	; 0x1da2 <__fp_pscB>
    1c8a:	20 f0       	brcs	.+8      	; 0x1c94 <__fp_splitA+0x44>
    1c8c:	31 f4       	brne	.+12     	; 0x1c9a <__fp_splitA+0x4a>
    1c8e:	9f 3f       	cpi	r25, 0xFF	; 255
    1c90:	11 f4       	brne	.+4      	; 0x1c96 <__fp_splitA+0x46>
    1c92:	1e f4       	brtc	.+6      	; 0x1c9a <__fp_splitA+0x4a>
    1c94:	6b c0       	rjmp	.+214    	; 0x1d6c <__fp_nan>
    1c96:	0e f4       	brtc	.+2      	; 0x1c9a <__fp_splitA+0x4a>
    1c98:	e0 95       	com	r30
    1c9a:	e7 fb       	bst	r30, 7
    1c9c:	53 c0       	rjmp	.+166    	; 0x1d44 <__fp_inf>

00001c9e <__addsf3x>:
    1c9e:	e9 2f       	mov	r30, r25
    1ca0:	cf df       	rcall	.-98     	; 0x1c40 <__fp_split3>
    1ca2:	80 f3       	brcs	.-32     	; 0x1c84 <__fp_splitA+0x34>
    1ca4:	ba 17       	cp	r27, r26
    1ca6:	62 07       	cpc	r22, r18
    1ca8:	73 07       	cpc	r23, r19
    1caa:	84 07       	cpc	r24, r20
    1cac:	95 07       	cpc	r25, r21
    1cae:	18 f0       	brcs	.+6      	; 0x1cb6 <__addsf3x+0x18>
    1cb0:	71 f4       	brne	.+28     	; 0x1cce <__addsf3x+0x30>
    1cb2:	9e f5       	brtc	.+102    	; 0x1d1a <__addsf3x+0x7c>
    1cb4:	8e c0       	rjmp	.+284    	; 0x1dd2 <__fp_zero>
    1cb6:	0e f4       	brtc	.+2      	; 0x1cba <__addsf3x+0x1c>
    1cb8:	e0 95       	com	r30
    1cba:	0b 2e       	mov	r0, r27
    1cbc:	ba 2f       	mov	r27, r26
    1cbe:	a0 2d       	mov	r26, r0
    1cc0:	0b 01       	movw	r0, r22
    1cc2:	b9 01       	movw	r22, r18
    1cc4:	90 01       	movw	r18, r0
    1cc6:	0c 01       	movw	r0, r24
    1cc8:	ca 01       	movw	r24, r20
    1cca:	a0 01       	movw	r20, r0
    1ccc:	11 24       	eor	r1, r1
    1cce:	ff 27       	eor	r31, r31
    1cd0:	59 1b       	sub	r21, r25
    1cd2:	99 f0       	breq	.+38     	; 0x1cfa <__addsf3x+0x5c>
    1cd4:	59 3f       	cpi	r21, 0xF9	; 249
    1cd6:	50 f4       	brcc	.+20     	; 0x1cec <__addsf3x+0x4e>
    1cd8:	50 3e       	cpi	r21, 0xE0	; 224
    1cda:	68 f1       	brcs	.+90     	; 0x1d36 <__addsf3x+0x98>
    1cdc:	1a 16       	cp	r1, r26
    1cde:	f0 40       	sbci	r31, 0x00	; 0
    1ce0:	a2 2f       	mov	r26, r18
    1ce2:	23 2f       	mov	r18, r19
    1ce4:	34 2f       	mov	r19, r20
    1ce6:	44 27       	eor	r20, r20
    1ce8:	58 5f       	subi	r21, 0xF8	; 248
    1cea:	f3 cf       	rjmp	.-26     	; 0x1cd2 <__addsf3x+0x34>
    1cec:	46 95       	lsr	r20
    1cee:	37 95       	ror	r19
    1cf0:	27 95       	ror	r18
    1cf2:	a7 95       	ror	r26
    1cf4:	f0 40       	sbci	r31, 0x00	; 0
    1cf6:	53 95       	inc	r21
    1cf8:	c9 f7       	brne	.-14     	; 0x1cec <__addsf3x+0x4e>
    1cfa:	7e f4       	brtc	.+30     	; 0x1d1a <__addsf3x+0x7c>
    1cfc:	1f 16       	cp	r1, r31
    1cfe:	ba 0b       	sbc	r27, r26
    1d00:	62 0b       	sbc	r22, r18
    1d02:	73 0b       	sbc	r23, r19
    1d04:	84 0b       	sbc	r24, r20
    1d06:	ba f0       	brmi	.+46     	; 0x1d36 <__addsf3x+0x98>
    1d08:	91 50       	subi	r25, 0x01	; 1
    1d0a:	a1 f0       	breq	.+40     	; 0x1d34 <__addsf3x+0x96>
    1d0c:	ff 0f       	add	r31, r31
    1d0e:	bb 1f       	adc	r27, r27
    1d10:	66 1f       	adc	r22, r22
    1d12:	77 1f       	adc	r23, r23
    1d14:	88 1f       	adc	r24, r24
    1d16:	c2 f7       	brpl	.-16     	; 0x1d08 <__addsf3x+0x6a>
    1d18:	0e c0       	rjmp	.+28     	; 0x1d36 <__addsf3x+0x98>
    1d1a:	ba 0f       	add	r27, r26
    1d1c:	62 1f       	adc	r22, r18
    1d1e:	73 1f       	adc	r23, r19
    1d20:	84 1f       	adc	r24, r20
    1d22:	48 f4       	brcc	.+18     	; 0x1d36 <__addsf3x+0x98>
    1d24:	87 95       	ror	r24
    1d26:	77 95       	ror	r23
    1d28:	67 95       	ror	r22
    1d2a:	b7 95       	ror	r27
    1d2c:	f7 95       	ror	r31
    1d2e:	9e 3f       	cpi	r25, 0xFE	; 254
    1d30:	08 f0       	brcs	.+2      	; 0x1d34 <__addsf3x+0x96>
    1d32:	b3 cf       	rjmp	.-154    	; 0x1c9a <__fp_splitA+0x4a>
    1d34:	93 95       	inc	r25
    1d36:	88 0f       	add	r24, r24
    1d38:	08 f0       	brcs	.+2      	; 0x1d3c <__addsf3x+0x9e>
    1d3a:	99 27       	eor	r25, r25
    1d3c:	ee 0f       	add	r30, r30
    1d3e:	97 95       	ror	r25
    1d40:	87 95       	ror	r24
    1d42:	08 95       	ret

00001d44 <__fp_inf>:
    1d44:	97 f9       	bld	r25, 7
    1d46:	9f 67       	ori	r25, 0x7F	; 127
    1d48:	80 e8       	ldi	r24, 0x80	; 128
    1d4a:	70 e0       	ldi	r23, 0x00	; 0
    1d4c:	60 e0       	ldi	r22, 0x00	; 0
    1d4e:	08 95       	ret

00001d50 <__fp_mpack>:
    1d50:	9f 3f       	cpi	r25, 0xFF	; 255
    1d52:	31 f0       	breq	.+12     	; 0x1d60 <__fp_mpack_finite+0xc>

00001d54 <__fp_mpack_finite>:
    1d54:	91 50       	subi	r25, 0x01	; 1
    1d56:	20 f4       	brcc	.+8      	; 0x1d60 <__fp_mpack_finite+0xc>
    1d58:	87 95       	ror	r24
    1d5a:	77 95       	ror	r23
    1d5c:	67 95       	ror	r22
    1d5e:	b7 95       	ror	r27
    1d60:	88 0f       	add	r24, r24
    1d62:	91 1d       	adc	r25, r1
    1d64:	96 95       	lsr	r25
    1d66:	87 95       	ror	r24
    1d68:	97 f9       	bld	r25, 7
    1d6a:	08 95       	ret

00001d6c <__fp_nan>:
    1d6c:	9f ef       	ldi	r25, 0xFF	; 255
    1d6e:	80 ec       	ldi	r24, 0xC0	; 192
    1d70:	08 95       	ret

00001d72 <__fp_powsodd>:
    1d72:	9f 93       	push	r25
    1d74:	8f 93       	push	r24
    1d76:	7f 93       	push	r23
    1d78:	6f 93       	push	r22
    1d7a:	ff 93       	push	r31
    1d7c:	ef 93       	push	r30
    1d7e:	9b 01       	movw	r18, r22
    1d80:	ac 01       	movw	r20, r24
    1d82:	6f d8       	rcall	.-3874   	; 0xe62 <__mulsf3>
    1d84:	ef 91       	pop	r30
    1d86:	ff 91       	pop	r31
    1d88:	2b d0       	rcall	.+86     	; 0x1de0 <__fp_powser>
    1d8a:	2f 91       	pop	r18
    1d8c:	3f 91       	pop	r19
    1d8e:	4f 91       	pop	r20
    1d90:	5f 91       	pop	r21
    1d92:	67 c8       	rjmp	.-3890   	; 0xe62 <__mulsf3>

00001d94 <__fp_pscA>:
    1d94:	00 24       	eor	r0, r0
    1d96:	0a 94       	dec	r0
    1d98:	16 16       	cp	r1, r22
    1d9a:	17 06       	cpc	r1, r23
    1d9c:	18 06       	cpc	r1, r24
    1d9e:	09 06       	cpc	r0, r25
    1da0:	08 95       	ret

00001da2 <__fp_pscB>:
    1da2:	00 24       	eor	r0, r0
    1da4:	0a 94       	dec	r0
    1da6:	12 16       	cp	r1, r18
    1da8:	13 06       	cpc	r1, r19
    1daa:	14 06       	cpc	r1, r20
    1dac:	05 06       	cpc	r0, r21
    1dae:	08 95       	ret

00001db0 <__fp_round>:
    1db0:	09 2e       	mov	r0, r25
    1db2:	03 94       	inc	r0
    1db4:	00 0c       	add	r0, r0
    1db6:	11 f4       	brne	.+4      	; 0x1dbc <__fp_round+0xc>
    1db8:	88 23       	and	r24, r24
    1dba:	52 f0       	brmi	.+20     	; 0x1dd0 <__fp_round+0x20>
    1dbc:	bb 0f       	add	r27, r27
    1dbe:	40 f4       	brcc	.+16     	; 0x1dd0 <__fp_round+0x20>
    1dc0:	bf 2b       	or	r27, r31
    1dc2:	11 f4       	brne	.+4      	; 0x1dc8 <__fp_round+0x18>
    1dc4:	60 ff       	sbrs	r22, 0
    1dc6:	04 c0       	rjmp	.+8      	; 0x1dd0 <__fp_round+0x20>
    1dc8:	6f 5f       	subi	r22, 0xFF	; 255
    1dca:	7f 4f       	sbci	r23, 0xFF	; 255
    1dcc:	8f 4f       	sbci	r24, 0xFF	; 255
    1dce:	9f 4f       	sbci	r25, 0xFF	; 255
    1dd0:	08 95       	ret

00001dd2 <__fp_zero>:
    1dd2:	e8 94       	clt

00001dd4 <__fp_szero>:
    1dd4:	bb 27       	eor	r27, r27
    1dd6:	66 27       	eor	r22, r22
    1dd8:	77 27       	eor	r23, r23
    1dda:	cb 01       	movw	r24, r22
    1ddc:	97 f9       	bld	r25, 7
    1dde:	08 95       	ret

00001de0 <__fp_powser>:
    1de0:	df 93       	push	r29
    1de2:	cf 93       	push	r28
    1de4:	1f 93       	push	r17
    1de6:	0f 93       	push	r16
    1de8:	ff 92       	push	r15
    1dea:	ef 92       	push	r14
    1dec:	df 92       	push	r13
    1dee:	7b 01       	movw	r14, r22
    1df0:	8c 01       	movw	r16, r24
    1df2:	68 94       	set
    1df4:	05 c0       	rjmp	.+10     	; 0x1e00 <__fp_powser+0x20>
    1df6:	da 2e       	mov	r13, r26
    1df8:	ef 01       	movw	r28, r30
    1dfa:	21 d0       	rcall	.+66     	; 0x1e3e <__mulsf3x>
    1dfc:	fe 01       	movw	r30, r28
    1dfe:	e8 94       	clt
    1e00:	a5 91       	lpm	r26, Z+
    1e02:	25 91       	lpm	r18, Z+
    1e04:	35 91       	lpm	r19, Z+
    1e06:	45 91       	lpm	r20, Z+
    1e08:	55 91       	lpm	r21, Z+
    1e0a:	ae f3       	brts	.-22     	; 0x1df6 <__fp_powser+0x16>
    1e0c:	ef 01       	movw	r28, r30
    1e0e:	47 df       	rcall	.-370    	; 0x1c9e <__addsf3x>
    1e10:	fe 01       	movw	r30, r28
    1e12:	97 01       	movw	r18, r14
    1e14:	a8 01       	movw	r20, r16
    1e16:	da 94       	dec	r13
    1e18:	79 f7       	brne	.-34     	; 0x1df8 <__fp_powser+0x18>
    1e1a:	df 90       	pop	r13
    1e1c:	ef 90       	pop	r14
    1e1e:	ff 90       	pop	r15
    1e20:	0f 91       	pop	r16
    1e22:	1f 91       	pop	r17
    1e24:	cf 91       	pop	r28
    1e26:	df 91       	pop	r29
    1e28:	08 95       	ret
    1e2a:	b4 df       	rcall	.-152    	; 0x1d94 <__fp_pscA>
    1e2c:	28 f0       	brcs	.+10     	; 0x1e38 <__fp_powser+0x58>
    1e2e:	b9 df       	rcall	.-142    	; 0x1da2 <__fp_pscB>
    1e30:	18 f0       	brcs	.+6      	; 0x1e38 <__fp_powser+0x58>
    1e32:	95 23       	and	r25, r21
    1e34:	09 f0       	breq	.+2      	; 0x1e38 <__fp_powser+0x58>
    1e36:	86 cf       	rjmp	.-244    	; 0x1d44 <__fp_inf>
    1e38:	99 cf       	rjmp	.-206    	; 0x1d6c <__fp_nan>
    1e3a:	11 24       	eor	r1, r1
    1e3c:	cb cf       	rjmp	.-106    	; 0x1dd4 <__fp_szero>

00001e3e <__mulsf3x>:
    1e3e:	00 df       	rcall	.-512    	; 0x1c40 <__fp_split3>
    1e40:	a0 f3       	brcs	.-24     	; 0x1e2a <__fp_powser+0x4a>

00001e42 <__mulsf3_pse>:
    1e42:	95 9f       	mul	r25, r21
    1e44:	d1 f3       	breq	.-12     	; 0x1e3a <__fp_powser+0x5a>
    1e46:	95 0f       	add	r25, r21
    1e48:	50 e0       	ldi	r21, 0x00	; 0
    1e4a:	55 1f       	adc	r21, r21
    1e4c:	62 9f       	mul	r22, r18
    1e4e:	f0 01       	movw	r30, r0
    1e50:	72 9f       	mul	r23, r18
    1e52:	bb 27       	eor	r27, r27
    1e54:	f0 0d       	add	r31, r0
    1e56:	b1 1d       	adc	r27, r1
    1e58:	63 9f       	mul	r22, r19
    1e5a:	aa 27       	eor	r26, r26
    1e5c:	f0 0d       	add	r31, r0
    1e5e:	b1 1d       	adc	r27, r1
    1e60:	aa 1f       	adc	r26, r26
    1e62:	64 9f       	mul	r22, r20
    1e64:	66 27       	eor	r22, r22
    1e66:	b0 0d       	add	r27, r0
    1e68:	a1 1d       	adc	r26, r1
    1e6a:	66 1f       	adc	r22, r22
    1e6c:	82 9f       	mul	r24, r18
    1e6e:	22 27       	eor	r18, r18
    1e70:	b0 0d       	add	r27, r0
    1e72:	a1 1d       	adc	r26, r1
    1e74:	62 1f       	adc	r22, r18
    1e76:	73 9f       	mul	r23, r19
    1e78:	b0 0d       	add	r27, r0
    1e7a:	a1 1d       	adc	r26, r1
    1e7c:	62 1f       	adc	r22, r18
    1e7e:	83 9f       	mul	r24, r19
    1e80:	a0 0d       	add	r26, r0
    1e82:	61 1d       	adc	r22, r1
    1e84:	22 1f       	adc	r18, r18
    1e86:	74 9f       	mul	r23, r20
    1e88:	33 27       	eor	r19, r19
    1e8a:	a0 0d       	add	r26, r0
    1e8c:	61 1d       	adc	r22, r1
    1e8e:	23 1f       	adc	r18, r19
    1e90:	84 9f       	mul	r24, r20
    1e92:	60 0d       	add	r22, r0
    1e94:	21 1d       	adc	r18, r1
    1e96:	82 2f       	mov	r24, r18
    1e98:	76 2f       	mov	r23, r22
    1e9a:	6a 2f       	mov	r22, r26
    1e9c:	11 24       	eor	r1, r1
    1e9e:	9f 57       	subi	r25, 0x7F	; 127
    1ea0:	50 40       	sbci	r21, 0x00	; 0
    1ea2:	8a f0       	brmi	.+34     	; 0x1ec6 <__mulsf3_pse+0x84>
    1ea4:	e1 f0       	breq	.+56     	; 0x1ede <__mulsf3_pse+0x9c>
    1ea6:	88 23       	and	r24, r24
    1ea8:	4a f0       	brmi	.+18     	; 0x1ebc <__mulsf3_pse+0x7a>
    1eaa:	ee 0f       	add	r30, r30
    1eac:	ff 1f       	adc	r31, r31
    1eae:	bb 1f       	adc	r27, r27
    1eb0:	66 1f       	adc	r22, r22
    1eb2:	77 1f       	adc	r23, r23
    1eb4:	88 1f       	adc	r24, r24
    1eb6:	91 50       	subi	r25, 0x01	; 1
    1eb8:	50 40       	sbci	r21, 0x00	; 0
    1eba:	a9 f7       	brne	.-22     	; 0x1ea6 <__mulsf3_pse+0x64>
    1ebc:	9e 3f       	cpi	r25, 0xFE	; 254
    1ebe:	51 05       	cpc	r21, r1
    1ec0:	70 f0       	brcs	.+28     	; 0x1ede <__mulsf3_pse+0x9c>
    1ec2:	40 cf       	rjmp	.-384    	; 0x1d44 <__fp_inf>
    1ec4:	87 cf       	rjmp	.-242    	; 0x1dd4 <__fp_szero>
    1ec6:	5f 3f       	cpi	r21, 0xFF	; 255
    1ec8:	ec f3       	brlt	.-6      	; 0x1ec4 <__mulsf3_pse+0x82>
    1eca:	98 3e       	cpi	r25, 0xE8	; 232
    1ecc:	dc f3       	brlt	.-10     	; 0x1ec4 <__mulsf3_pse+0x82>
    1ece:	86 95       	lsr	r24
    1ed0:	77 95       	ror	r23
    1ed2:	67 95       	ror	r22
    1ed4:	b7 95       	ror	r27
    1ed6:	f7 95       	ror	r31
    1ed8:	e7 95       	ror	r30
    1eda:	9f 5f       	subi	r25, 0xFF	; 255
    1edc:	c1 f7       	brne	.-16     	; 0x1ece <__mulsf3_pse+0x8c>
    1ede:	fe 2b       	or	r31, r30
    1ee0:	88 0f       	add	r24, r24
    1ee2:	91 1d       	adc	r25, r1
    1ee4:	96 95       	lsr	r25
    1ee6:	87 95       	ror	r24
    1ee8:	97 f9       	bld	r25, 7
    1eea:	08 95       	ret

00001eec <_exit>:
    1eec:	f8 94       	cli

00001eee <__stop_program>:
    1eee:	ff cf       	rjmp	.-2      	; 0x1eee <__stop_program>
