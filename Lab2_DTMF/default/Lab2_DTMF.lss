
Lab2_DTMF.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000050  00800100  00001784  00001818  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001784  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000002a6  00800150  00800150  00001868  2**0
                  ALLOC
  3 .stab         00001cec  00000000  00000000  00001868  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      0000076a  00000000  00000000  00003554  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000002f  00000000  00000000  00003cbe  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 000001d8  00000000  00000000  00003ced  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   000029d1  00000000  00000000  00003ec5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000014ab  00000000  00000000  00006896  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000da9  00000000  00000000  00007d41  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000003fc  00000000  00000000  00008aec  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000006a5  00000000  00000000  00008ee8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00001176  00000000  00000000  0000958d  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000058  00000000  00000000  0000a703  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 55 00 	jmp	0xaa	; 0xaa <__ctors_end>
       4:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
       8:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
       c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      10:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      14:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      18:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      1c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      20:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      24:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      28:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      2c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      30:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      34:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      38:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      3c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      40:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      44:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      48:	0c 94 87 02 	jmp	0x50e	; 0x50e <__vector_18>
      4c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      50:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      54:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      58:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      5c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      60:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      64:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      68:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      6c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      70:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      74:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      78:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      7c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      80:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      84:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      88:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      8c:	05 a8       	ldd	r0, Z+53	; 0x35
      8e:	4c cd       	rjmp	.-1384   	; 0xfffffb28 <__eeprom_end+0xff7efb28>
      90:	b2 d4       	rcall	.+2404   	; 0x9f6 <_fpadd_parts+0xfc>
      92:	4e b9       	out	0x0e, r20	; 14
      94:	38 36       	cpi	r19, 0x68	; 104
      96:	a9 02       	muls	r26, r25
      98:	0c 50       	subi	r16, 0x0C	; 12
      9a:	b9 91       	ld	r27, Y+
      9c:	86 88       	ldd	r8, Z+22	; 0x16
      9e:	08 3c       	cpi	r16, 0xC8	; 200
      a0:	a6 aa       	std	Z+54, r10	; 0x36
      a2:	aa 2a       	or	r10, r26
      a4:	be 00       	.word	0x00be	; ????
      a6:	00 00       	nop
      a8:	80 3f       	cpi	r24, 0xF0	; 240

000000aa <__ctors_end>:
      aa:	11 24       	eor	r1, r1
      ac:	1f be       	out	0x3f, r1	; 63
      ae:	cf ef       	ldi	r28, 0xFF	; 255
      b0:	d0 e4       	ldi	r29, 0x40	; 64
      b2:	de bf       	out	0x3e, r29	; 62
      b4:	cd bf       	out	0x3d, r28	; 61

000000b6 <__do_copy_data>:
      b6:	11 e0       	ldi	r17, 0x01	; 1
      b8:	a0 e0       	ldi	r26, 0x00	; 0
      ba:	b1 e0       	ldi	r27, 0x01	; 1
      bc:	e4 e8       	ldi	r30, 0x84	; 132
      be:	f7 e1       	ldi	r31, 0x17	; 23
      c0:	00 e0       	ldi	r16, 0x00	; 0
      c2:	0b bf       	out	0x3b, r16	; 59
      c4:	02 c0       	rjmp	.+4      	; 0xca <__do_copy_data+0x14>
      c6:	07 90       	elpm	r0, Z+
      c8:	0d 92       	st	X+, r0
      ca:	a0 35       	cpi	r26, 0x50	; 80
      cc:	b1 07       	cpc	r27, r17
      ce:	d9 f7       	brne	.-10     	; 0xc6 <__do_copy_data+0x10>

000000d0 <__do_clear_bss>:
      d0:	23 e0       	ldi	r18, 0x03	; 3
      d2:	a0 e5       	ldi	r26, 0x50	; 80
      d4:	b1 e0       	ldi	r27, 0x01	; 1
      d6:	01 c0       	rjmp	.+2      	; 0xda <.do_clear_bss_start>

000000d8 <.do_clear_bss_loop>:
      d8:	1d 92       	st	X+, r1

000000da <.do_clear_bss_start>:
      da:	a6 3f       	cpi	r26, 0xF6	; 246
      dc:	b2 07       	cpc	r27, r18
      de:	e1 f7       	brne	.-8      	; 0xd8 <.do_clear_bss_loop>
      e0:	0e 94 8e 09 	call	0x131c	; 0x131c <main>
      e4:	0c 94 c0 0b 	jmp	0x1780	; 0x1780 <_exit>

000000e8 <__bad_interrupt>:
      e8:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ec <task1>:
// putchar and getchar are in uart.c
//FILE uart_str = FDEV_SETUP_STREAM(uart_putchar, uart_getchar, _FDEV_SETUP_RW);

//******************************* 
//Task 1  
void task1(void) {
      ec:	cf 93       	push	r28
      ee:	df 93       	push	r29
	time1=0;  //reset the task timer
      f0:	10 92 bf 01 	sts	0x01BF, r1
      f4:	10 92 be 01 	sts	0x01BE, r1

	//get lower nibble
	PORTDIR = 0x0f;
      f8:	8f e0       	ldi	r24, 0x0F	; 15
      fa:	81 b9       	out	0x01, r24	; 1
	PORTDATA = 0xf0; 
      fc:	90 ef       	ldi	r25, 0xF0	; 240
      fe:	92 b9       	out	0x02, r25	; 2
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     100:	2a e1       	ldi	r18, 0x1A	; 26
     102:	2a 95       	dec	r18
     104:	f1 f7       	brne	.-4      	; 0x102 <task1+0x16>
     106:	00 c0       	rjmp	.+0      	; 0x108 <task1+0x1c>
	_delay_us(5);
	key = PORTIN;
     108:	20 b1       	in	r18, 0x00	; 0
     10a:	20 93 c2 01 	sts	0x01C2, r18
  
	//get upper nibble
	PORTDIR = 0xf0;
     10e:	91 b9       	out	0x01, r25	; 1
	PORTDATA = 0x0f; 
     110:	82 b9       	out	0x02, r24	; 2
     112:	8a e1       	ldi	r24, 0x1A	; 26
     114:	8a 95       	dec	r24
     116:	f1 f7       	brne	.-4      	; 0x114 <task1+0x28>
     118:	00 c0       	rjmp	.+0      	; 0x11a <task1+0x2e>
	_delay_us(5);
	key = key | PORTIN;
     11a:	90 b1       	in	r25, 0x00	; 0
     11c:	80 91 c2 01 	lds	r24, 0x01C2
     120:	98 2b       	or	r25, r24
     122:	90 93 c2 01 	sts	0x01C2, r25
  
	//find matching keycode in keytbl
	if (key != 0xff) {
     126:	9f 3f       	cpi	r25, 0xFF	; 255
     128:	a9 f0       	breq	.+42     	; 0x154 <task1+0x68>
	  for (butnum=0; butnum<maxkeys; butnum++) {   
     12a:	80 e0       	ldi	r24, 0x00	; 0
     12c:	0a c0       	rjmp	.+20     	; 0x142 <task1+0x56>
     12e:	28 2f       	mov	r18, r24
     130:	2f 5f       	subi	r18, 0xFF	; 255
	  	if (keytbl[butnum]==key)  break;   
     132:	e8 2f       	mov	r30, r24
     134:	f0 e0       	ldi	r31, 0x00	; 0
     136:	e0 5d       	subi	r30, 0xD0	; 208
     138:	fe 4f       	sbci	r31, 0xFE	; 254
     13a:	30 81       	ld	r19, Z
     13c:	39 17       	cp	r19, r25
     13e:	31 f0       	breq	.+12     	; 0x14c <task1+0x60>
     140:	82 2f       	mov	r24, r18
	_delay_us(5);
	key = key | PORTIN;
  
	//find matching keycode in keytbl
	if (key != 0xff) {
	  for (butnum=0; butnum<maxkeys; butnum++) {   
     142:	8c 30       	cpi	r24, 0x0C	; 12
     144:	a0 f3       	brcs	.-24     	; 0x12e <task1+0x42>
	  	if (keytbl[butnum]==key)  break;   
	  }

	  if (butnum==maxkeys) butnum=0;
     146:	8c 30       	cpi	r24, 0x0C	; 12
     148:	09 f4       	brne	.+2      	; 0x14c <task1+0x60>
     14a:	04 c0       	rjmp	.+8      	; 0x154 <task1+0x68>
	  else butnum++;	   //adjust by one to make range 1-16
     14c:	8f 5f       	subi	r24, 0xFF	; 255
     14e:	80 93 ba 01 	sts	0x01BA, r24
     152:	02 c0       	rjmp	.+4      	; 0x158 <task1+0x6c>
	}
	else butnum=0;
     154:	10 92 ba 01 	sts	0x01BA, r1
	
	// Switching in the finite state machine.
	switch (PushState) {
     158:	80 91 c6 01 	lds	r24, 0x01C6
     15c:	82 30       	cpi	r24, 0x02	; 2
     15e:	91 f0       	breq	.+36     	; 0x184 <task1+0x98>
     160:	20 f4       	brcc	.+8      	; 0x16a <task1+0x7e>
     162:	81 30       	cpi	r24, 0x01	; 1
     164:	09 f0       	breq	.+2      	; 0x168 <task1+0x7c>
     166:	66 c0       	rjmp	.+204    	; 0x234 <task1+0x148>
     168:	06 c0       	rjmp	.+12     	; 0x176 <task1+0x8a>
     16a:	83 30       	cpi	r24, 0x03	; 3
     16c:	d1 f0       	breq	.+52     	; 0x1a2 <task1+0xb6>
     16e:	84 30       	cpi	r24, 0x04	; 4
     170:	09 f0       	breq	.+2      	; 0x174 <task1+0x88>
     172:	60 c0       	rjmp	.+192    	; 0x234 <task1+0x148>
     174:	52 c0       	rjmp	.+164    	; 0x21a <task1+0x12e>
     case NoPush: 
        if (butnum != 0) {
     176:	80 91 ba 01 	lds	r24, 0x01BA
     17a:	88 23       	and	r24, r24
     17c:	09 f4       	brne	.+2      	; 0x180 <task1+0x94>
     17e:	5a c0       	rjmp	.+180    	; 0x234 <task1+0x148>
			PushState=MaybePush;
     180:	82 e0       	ldi	r24, 0x02	; 2
     182:	50 c0       	rjmp	.+160    	; 0x224 <task1+0x138>
		}
        else PushState=NoPush;
        break;
     case MaybePush:
        if (butnum != 0) {
     184:	80 91 ba 01 	lds	r24, 0x01BA
     188:	88 23       	and	r24, r24
     18a:	49 f0       	breq	.+18     	; 0x19e <task1+0xb2>
           	PushState=Pushed; 
     18c:	83 e0       	ldi	r24, 0x03	; 3
     18e:	80 93 c6 01 	sts	0x01C6, r24
			PushFlag=1;
     192:	81 e0       	ldi	r24, 0x01	; 1
     194:	80 93 bb 01 	sts	0x01BB, r24
			//Test mode override
			if (~PINB & 0x01) {
     198:	18 99       	sbic	0x03, 0	; 3
     19a:	4c c0       	rjmp	.+152    	; 0x234 <task1+0x148>
     19c:	49 c0       	rjmp	.+146    	; 0x230 <task1+0x144>
		 		PushFlag=0;			
		   	}  
        }
        else PushState=NoPush;
     19e:	81 e0       	ldi	r24, 0x01	; 1
     1a0:	41 c0       	rjmp	.+130    	; 0x224 <task1+0x138>
        break;
     case Pushed:  
        if (butnum != 0) {
     1a2:	80 91 ba 01 	lds	r24, 0x01BA
     1a6:	88 23       	and	r24, r24
     1a8:	b1 f1       	breq	.+108    	; 0x216 <task1+0x12a>
			PushState=Pushed;
			//Test mode override
			if (~PINB & 0x01) {
     1aa:	18 99       	sbic	0x03, 0	; 3
     1ac:	43 c0       	rjmp	.+134    	; 0x234 <task1+0x148>
		 		switch (butnum) {
     1ae:	84 30       	cpi	r24, 0x04	; 4
     1b0:	e1 f0       	breq	.+56     	; 0x1ea <task1+0xfe>
     1b2:	30 f4       	brcc	.+12     	; 0x1c0 <task1+0xd4>
     1b4:	82 30       	cpi	r24, 0x02	; 2
     1b6:	79 f0       	breq	.+30     	; 0x1d6 <task1+0xea>
     1b8:	98 f4       	brcc	.+38     	; 0x1e0 <task1+0xf4>
     1ba:	81 30       	cpi	r24, 0x01	; 1
     1bc:	d9 f5       	brne	.+118    	; 0x234 <task1+0x148>
     1be:	06 c0       	rjmp	.+12     	; 0x1cc <task1+0xe0>
     1c0:	86 30       	cpi	r24, 0x06	; 6
     1c2:	e9 f0       	breq	.+58     	; 0x1fe <task1+0x112>
     1c4:	b8 f0       	brcs	.+46     	; 0x1f4 <task1+0x108>
     1c6:	87 30       	cpi	r24, 0x07	; 7
     1c8:	a9 f5       	brne	.+106    	; 0x234 <task1+0x148>
     1ca:	1e c0       	rjmp	.+60     	; 0x208 <task1+0x11c>
					case 1: 
						play(697, 0);
     1cc:	60 e0       	ldi	r22, 0x00	; 0
     1ce:	70 e0       	ldi	r23, 0x00	; 0
     1d0:	89 eb       	ldi	r24, 0xB9	; 185
     1d2:	92 e0       	ldi	r25, 0x02	; 2
     1d4:	1d c0       	rjmp	.+58     	; 0x210 <task1+0x124>
						break;
					case 2: 
						play(770, 0);
     1d6:	60 e0       	ldi	r22, 0x00	; 0
     1d8:	70 e0       	ldi	r23, 0x00	; 0
     1da:	82 e0       	ldi	r24, 0x02	; 2
     1dc:	93 e0       	ldi	r25, 0x03	; 3
     1de:	18 c0       	rjmp	.+48     	; 0x210 <task1+0x124>
						break;
					case 3: 
						play(852, 0);
     1e0:	60 e0       	ldi	r22, 0x00	; 0
     1e2:	70 e0       	ldi	r23, 0x00	; 0
     1e4:	84 e5       	ldi	r24, 0x54	; 84
     1e6:	93 e0       	ldi	r25, 0x03	; 3
     1e8:	13 c0       	rjmp	.+38     	; 0x210 <task1+0x124>
						break;
					case 4: 
						play(941, 0);
     1ea:	60 e0       	ldi	r22, 0x00	; 0
     1ec:	70 e0       	ldi	r23, 0x00	; 0
     1ee:	8d ea       	ldi	r24, 0xAD	; 173
     1f0:	93 e0       	ldi	r25, 0x03	; 3
     1f2:	0e c0       	rjmp	.+28     	; 0x210 <task1+0x124>
						break;
					case 5:
						play(1209, 0);
     1f4:	60 e0       	ldi	r22, 0x00	; 0
     1f6:	70 e0       	ldi	r23, 0x00	; 0
     1f8:	89 eb       	ldi	r24, 0xB9	; 185
     1fa:	94 e0       	ldi	r25, 0x04	; 4
     1fc:	09 c0       	rjmp	.+18     	; 0x210 <task1+0x124>
						break;
					case 6:
						play(1336, 0);
     1fe:	60 e0       	ldi	r22, 0x00	; 0
     200:	70 e0       	ldi	r23, 0x00	; 0
     202:	88 e3       	ldi	r24, 0x38	; 56
     204:	95 e0       	ldi	r25, 0x05	; 5
     206:	04 c0       	rjmp	.+8      	; 0x210 <task1+0x124>
						break;
					case 7: 
						play(1477, 0);
     208:	60 e0       	ldi	r22, 0x00	; 0
     20a:	70 e0       	ldi	r23, 0x00	; 0
     20c:	85 ec       	ldi	r24, 0xC5	; 197
     20e:	95 e0       	ldi	r25, 0x05	; 5
     210:	0e 94 7c 03 	call	0x6f8	; 0x6f8 <play>
						break;
     214:	0f c0       	rjmp	.+30     	; 0x234 <task1+0x148>
					default:
						break;
				}	
		   	}  
		}
        else PushState=MaybeNoPush;    
     216:	84 e0       	ldi	r24, 0x04	; 4
     218:	05 c0       	rjmp	.+10     	; 0x224 <task1+0x138>
        break;
     case MaybeNoPush:
        if (butnum != 0) PushState=Pushed; 
     21a:	80 91 ba 01 	lds	r24, 0x01BA
     21e:	88 23       	and	r24, r24
     220:	21 f0       	breq	.+8      	; 0x22a <task1+0x13e>
     222:	83 e0       	ldi	r24, 0x03	; 3
     224:	80 93 c6 01 	sts	0x01C6, r24
     228:	05 c0       	rjmp	.+10     	; 0x234 <task1+0x148>
        else {
           PushState=NoPush;
     22a:	81 e0       	ldi	r24, 0x01	; 1
     22c:	80 93 c6 01 	sts	0x01C6, r24
           PushFlag=0;
     230:	10 92 bb 01 	sts	0x01BB, r1
        }    
        break;
  	}

	if (PushState == NoPush) {
     234:	80 91 c6 01 	lds	r24, 0x01C6
     238:	81 30       	cpi	r24, 0x01	; 1
     23a:	11 f4       	brne	.+4      	; 0x240 <task1+0x154>
		//fprintf(stdout, "Depressed...\n\r");
		stop_playing();
     23c:	0e 94 01 04 	call	0x802	; 0x802 <stop_playing>
	}	

	if (PushFlag) {
     240:	80 91 bb 01 	lds	r24, 0x01BB
     244:	88 23       	and	r24, r24
     246:	09 f4       	brne	.+2      	; 0x24a <task1+0x15e>
     248:	53 c0       	rjmp	.+166    	; 0x2f0 <task1+0x204>
		PushFlag = 0;
     24a:	10 92 bb 01 	sts	0x01BB, r1
		// The * button was pressed. Clear all memory.
		if (butnum == 10) {
     24e:	80 91 ba 01 	lds	r24, 0x01BA
     252:	8a 30       	cpi	r24, 0x0A	; 10
     254:	69 f4       	brne	.+26     	; 0x270 <task1+0x184>
     256:	e0 e5       	ldi	r30, 0x50	; 80
     258:	f1 e0       	ldi	r31, 0x01	; 1
			//fprintf(stdout, "%u\n\r", butnum);
			for (int i = 0; i < 12; i++) {
				mem[i] = 0;
     25a:	11 92       	st	Z+, r1
     25c:	11 92       	st	Z+, r1
	if (PushFlag) {
		PushFlag = 0;
		// The * button was pressed. Clear all memory.
		if (butnum == 10) {
			//fprintf(stdout, "%u\n\r", butnum);
			for (int i = 0; i < 12; i++) {
     25e:	21 e0       	ldi	r18, 0x01	; 1
     260:	e8 36       	cpi	r30, 0x68	; 104
     262:	f2 07       	cpc	r31, r18
     264:	d1 f7       	brne	.-12     	; 0x25a <task1+0x16e>
				mem[i] = 0;
			}
			mem_index = 0;
     266:	10 92 c4 01 	sts	0x01C4, r1
     26a:	10 92 c3 01 	sts	0x01C3, r1
     26e:	40 c0       	rjmp	.+128    	; 0x2f0 <task1+0x204>
		}
		// The # button was pressed. Play all sounds in memory.
		else if (butnum == 12) {
     270:	8c 30       	cpi	r24, 0x0C	; 12
     272:	c9 f4       	brne	.+50     	; 0x2a6 <task1+0x1ba>
     274:	c0 e5       	ldi	r28, 0x50	; 80
     276:	d1 e0       	ldi	r29, 0x01	; 1
			//fprintf(stdout, "%u\n\r", butnum);
			for (int i = 0; i < 12; i++) {
				if (mem[i] != 0) {
     278:	89 91       	ld	r24, Y+
     27a:	99 91       	ld	r25, Y+
     27c:	00 97       	sbiw	r24, 0x00	; 0
     27e:	71 f0       	breq	.+28     	; 0x29c <task1+0x1b0>
					play(high_freq[mem[i]], low_freq[mem[i]]);
     280:	88 0f       	add	r24, r24
     282:	99 1f       	adc	r25, r25
     284:	fc 01       	movw	r30, r24
     286:	e0 50       	subi	r30, 0x00	; 0
     288:	ff 4f       	sbci	r31, 0xFF	; 255
     28a:	60 81       	ld	r22, Z
     28c:	71 81       	ldd	r23, Z+1	; 0x01
     28e:	fc 01       	movw	r30, r24
     290:	e8 5e       	subi	r30, 0xE8	; 232
     292:	fe 4f       	sbci	r31, 0xFE	; 254
     294:	80 81       	ld	r24, Z
     296:	91 81       	ldd	r25, Z+1	; 0x01
     298:	0e 94 7c 03 	call	0x6f8	; 0x6f8 <play>
			mem_index = 0;
		}
		// The # button was pressed. Play all sounds in memory.
		else if (butnum == 12) {
			//fprintf(stdout, "%u\n\r", butnum);
			for (int i = 0; i < 12; i++) {
     29c:	81 e0       	ldi	r24, 0x01	; 1
     29e:	c8 36       	cpi	r28, 0x68	; 104
     2a0:	d8 07       	cpc	r29, r24
     2a2:	51 f7       	brne	.-44     	; 0x278 <task1+0x18c>
     2a4:	25 c0       	rjmp	.+74     	; 0x2f0 <task1+0x204>
			}
		}
		// A normal button press. 
		else {
			//fprintf(stdout, "%u\n\r", butnum);
			if (mem_index < 12) {
     2a6:	20 91 c3 01 	lds	r18, 0x01C3
     2aa:	30 91 c4 01 	lds	r19, 0x01C4
     2ae:	2c 30       	cpi	r18, 0x0C	; 12
     2b0:	31 05       	cpc	r19, r1
     2b2:	f0 f4       	brcc	.+60     	; 0x2f0 <task1+0x204>
				mem[mem_index] = butnum;
     2b4:	f9 01       	movw	r30, r18
     2b6:	ee 0f       	add	r30, r30
     2b8:	ff 1f       	adc	r31, r31
     2ba:	e0 5b       	subi	r30, 0xB0	; 176
     2bc:	fe 4f       	sbci	r31, 0xFE	; 254
     2be:	80 83       	st	Z, r24
     2c0:	11 82       	std	Z+1, r1	; 0x01
				mem_index++;
     2c2:	2f 5f       	subi	r18, 0xFF	; 255
     2c4:	3f 4f       	sbci	r19, 0xFF	; 255
     2c6:	30 93 c4 01 	sts	0x01C4, r19
     2ca:	20 93 c3 01 	sts	0x01C3, r18
				play(high_freq[butnum], low_freq[butnum]);
     2ce:	90 e0       	ldi	r25, 0x00	; 0
     2d0:	88 0f       	add	r24, r24
     2d2:	99 1f       	adc	r25, r25
     2d4:	fc 01       	movw	r30, r24
     2d6:	e0 50       	subi	r30, 0x00	; 0
     2d8:	ff 4f       	sbci	r31, 0xFF	; 255
     2da:	60 81       	ld	r22, Z
     2dc:	71 81       	ldd	r23, Z+1	; 0x01
     2de:	fc 01       	movw	r30, r24
     2e0:	e8 5e       	subi	r30, 0xE8	; 232
     2e2:	fe 4f       	sbci	r31, 0xFE	; 254
     2e4:	80 81       	ld	r24, Z
     2e6:	91 81       	ldd	r25, Z+1	; 0x01
			}		
		}
	}
} 
     2e8:	df 91       	pop	r29
     2ea:	cf 91       	pop	r28
		else {
			//fprintf(stdout, "%u\n\r", butnum);
			if (mem_index < 12) {
				mem[mem_index] = butnum;
				mem_index++;
				play(high_freq[butnum], low_freq[butnum]);
     2ec:	0c 94 7c 03 	jmp	0x6f8	; 0x6f8 <play>
			}		
		}
	}
} 
     2f0:	df 91       	pop	r29
     2f2:	cf 91       	pop	r28
     2f4:	08 95       	ret

000002f6 <initialize>:
 
//Initialization used for the timer interrupts for debouncing
void initialize(void) {
	//set up timer 0 for 1 mSec timebase 
	OCR0A = 249;  		//set the compare re to 250 time ticks
     2f6:	89 ef       	ldi	r24, 0xF9	; 249
     2f8:	87 bd       	out	0x27, r24	; 39
	TIMSK0= (1<<OCIE0A);	//turn on timer 0 cmp match ISR 
     2fa:	82 e0       	ldi	r24, 0x02	; 2
     2fc:	80 93 6e 00 	sts	0x006E, r24
	//set prescalar to divide by 64 
	TCCR0B= 3; //0b00000011;	
     300:	93 e0       	ldi	r25, 0x03	; 3
     302:	95 bd       	out	0x25, r25	; 37
	// turn on clear-on-match
	TCCR0A= (1<<WGM01) ;
     304:	84 bd       	out	0x24, r24	; 36

	//init the task timers
	time1=0;  
     306:	10 92 bf 01 	sts	0x01BF, r1
     30a:	10 92 be 01 	sts	0x01BE, r1
	// PORT B is an input
	DDRB = 0x00;
     30e:	14 b8       	out	0x04, r1	; 4
	//for no button push
	PushFlag = 0;
     310:	10 92 bb 01 	sts	0x01BB, r1
	//init the state machine
	PushState = NoPush;
     314:	81 e0       	ldi	r24, 0x01	; 1
     316:	80 93 c6 01 	sts	0x01C6, r24

	mem_index = 0;
     31a:	10 92 c4 01 	sts	0x01C4, r1
     31e:	10 92 c3 01 	sts	0x01C3, r1

	init_dtmf();
     322:	0e 94 27 03 	call	0x64e	; 0x64e <init_dtmf>
	//crank up the ISRs
	sei() ;
     326:	78 94       	sei
     328:	08 95       	ret

0000032a <uart_init>:
{
#if F_CPU < 2000000UL && defined(U2X)
  UCSR0A = _BV(U2X);             /* improve baud rate error by using 2x clk */
  UBRR0L = (F_CPU / (8UL * UART_BAUD)) - 1;
#else
  UBRR0L = (F_CPU / (16UL * UART_BAUD)) - 1;
     32a:	87 e6       	ldi	r24, 0x67	; 103
     32c:	80 93 c4 00 	sts	0x00C4, r24
#endif
  UCSR0B = _BV(TXEN0) | _BV(RXEN0); /* tx/rx enable */
     330:	88 e1       	ldi	r24, 0x18	; 24
     332:	80 93 c1 00 	sts	0x00C1, r24
     336:	08 95       	ret

00000338 <uart_putchar>:
 * Send character c down the UART Tx, wait until tx holding register
 * is empty.
 */
int
uart_putchar(char c, FILE *stream)
{
     338:	cf 93       	push	r28
     33a:	c8 2f       	mov	r28, r24

  if (c == '\a')
     33c:	87 30       	cpi	r24, 0x07	; 7
     33e:	49 f4       	brne	.+18     	; 0x352 <uart_putchar+0x1a>
    {
      fputs("*ring*\n", stderr);
     340:	60 91 f4 03 	lds	r22, 0x03F4
     344:	70 91 f5 03 	lds	r23, 0x03F5
     348:	88 e4       	ldi	r24, 0x48	; 72
     34a:	91 e0       	ldi	r25, 0x01	; 1
     34c:	0e 94 00 0a 	call	0x1400	; 0x1400 <fputs>
     350:	0b c0       	rjmp	.+22     	; 0x368 <uart_putchar+0x30>
      return 0;
    }

  if (c == '\n')
     352:	8a 30       	cpi	r24, 0x0A	; 10
     354:	19 f4       	brne	.+6      	; 0x35c <uart_putchar+0x24>
    uart_putchar('\r', stream);
     356:	8d e0       	ldi	r24, 0x0D	; 13
     358:	0e 94 9c 01 	call	0x338	; 0x338 <uart_putchar>
  loop_until_bit_is_set(UCSR0A, UDRE0);
     35c:	80 91 c0 00 	lds	r24, 0x00C0
     360:	85 ff       	sbrs	r24, 5
     362:	fc cf       	rjmp	.-8      	; 0x35c <uart_putchar+0x24>
  UDR0 = c;
     364:	c0 93 c6 00 	sts	0x00C6, r28

  return 0;
}
     368:	80 e0       	ldi	r24, 0x00	; 0
     36a:	90 e0       	ldi	r25, 0x00	; 0
     36c:	cf 91       	pop	r28
     36e:	08 95       	ret

00000370 <uart_getchar>:
 * Successive calls to uart_getchar() will be satisfied from the
 * internal buffer until that buffer is emptied again.
 */
int
uart_getchar(FILE *stream)
{
     370:	ef 92       	push	r14
     372:	ff 92       	push	r15
     374:	0f 93       	push	r16
     376:	1f 93       	push	r17
     378:	cf 93       	push	r28
     37a:	df 93       	push	r29
     37c:	8c 01       	movw	r16, r24
  uint8_t c;
  char *cp, *cp2;
  static char b[RX_BUFSIZE];
  static char *rxp;

  if (rxp == 0)
     37e:	80 91 68 01 	lds	r24, 0x0168
     382:	90 91 69 01 	lds	r25, 0x0169
     386:	89 2b       	or	r24, r25
     388:	09 f0       	breq	.+2      	; 0x38c <uart_getchar+0x1c>
     38a:	a1 c0       	rjmp	.+322    	; 0x4ce <uart_getchar+0x15e>
     38c:	ca e6       	ldi	r28, 0x6A	; 106
     38e:	d1 e0       	ldi	r29, 0x01	; 1
    for (cp = b;;)
      {
	loop_until_bit_is_set(UCSR0A, RXC0);
     390:	80 91 c0 00 	lds	r24, 0x00C0
     394:	87 ff       	sbrs	r24, 7
     396:	fc cf       	rjmp	.-8      	; 0x390 <uart_getchar+0x20>
	if (UCSR0A & _BV(FE0))
     398:	80 91 c0 00 	lds	r24, 0x00C0
     39c:	84 fd       	sbrc	r24, 4
     39e:	aa c0       	rjmp	.+340    	; 0x4f4 <uart_getchar+0x184>
	  return _FDEV_EOF;
	if (UCSR0A & _BV(DOR0))
     3a0:	80 91 c0 00 	lds	r24, 0x00C0
     3a4:	83 fd       	sbrc	r24, 3
     3a6:	a9 c0       	rjmp	.+338    	; 0x4fa <uart_getchar+0x18a>
	  return _FDEV_ERR;
	c = UDR0;
     3a8:	80 91 c6 00 	lds	r24, 0x00C6
	/* behaviour similar to Unix stty ICRNL */
	if (c == '\r')
     3ac:	8d 30       	cpi	r24, 0x0D	; 13
     3ae:	61 f4       	brne	.+24     	; 0x3c8 <uart_getchar+0x58>
	  c = '\n';
	if (c == '\n')
	  {
	    *cp = c;
     3b0:	8a e0       	ldi	r24, 0x0A	; 10
     3b2:	88 83       	st	Y, r24
	    uart_putchar(c, stream);
     3b4:	b8 01       	movw	r22, r16
     3b6:	0e 94 9c 01 	call	0x338	; 0x338 <uart_putchar>
	    rxp = b;
     3ba:	8a e6       	ldi	r24, 0x6A	; 106
     3bc:	91 e0       	ldi	r25, 0x01	; 1
     3be:	90 93 69 01 	sts	0x0169, r25
     3c2:	80 93 68 01 	sts	0x0168, r24
	    break;
     3c6:	83 c0       	rjmp	.+262    	; 0x4ce <uart_getchar+0x15e>
	  return _FDEV_ERR;
	c = UDR0;
	/* behaviour similar to Unix stty ICRNL */
	if (c == '\r')
	  c = '\n';
	if (c == '\n')
     3c8:	8a 30       	cpi	r24, 0x0A	; 10
     3ca:	91 f3       	breq	.-28     	; 0x3b0 <uart_getchar+0x40>
	    *cp = c;
	    uart_putchar(c, stream);
	    rxp = b;
	    break;
	  }
	else if (c == '\t')
     3cc:	89 30       	cpi	r24, 0x09	; 9
     3ce:	09 f4       	brne	.+2      	; 0x3d2 <uart_getchar+0x62>
	  c = ' ';
     3d0:	80 e2       	ldi	r24, 0x20	; 32

	if ((c >= (uint8_t)' ' && c <= (uint8_t)'\x7e') ||
     3d2:	98 2f       	mov	r25, r24
     3d4:	90 52       	subi	r25, 0x20	; 32
     3d6:	9f 35       	cpi	r25, 0x5F	; 95
     3d8:	10 f0       	brcs	.+4      	; 0x3de <uart_getchar+0x6e>
     3da:	80 3a       	cpi	r24, 0xA0	; 160
     3dc:	90 f0       	brcs	.+36     	; 0x402 <uart_getchar+0x92>
	    c >= (uint8_t)'\xa0')
	  {
	    if (cp == b + RX_BUFSIZE - 1)
     3de:	91 e0       	ldi	r25, 0x01	; 1
     3e0:	c9 3b       	cpi	r28, 0xB9	; 185
     3e2:	d9 07       	cpc	r29, r25
     3e4:	49 f4       	brne	.+18     	; 0x3f8 <uart_getchar+0x88>
uart_putchar(char c, FILE *stream)
{

  if (c == '\a')
    {
      fputs("*ring*\n", stderr);
     3e6:	60 91 f4 03 	lds	r22, 0x03F4
     3ea:	70 91 f5 03 	lds	r23, 0x03F5
     3ee:	88 e4       	ldi	r24, 0x48	; 72
     3f0:	91 e0       	ldi	r25, 0x01	; 1
     3f2:	0e 94 00 0a 	call	0x1400	; 0x1400 <fputs>
     3f6:	cc cf       	rjmp	.-104    	; 0x390 <uart_getchar+0x20>
	  {
	    if (cp == b + RX_BUFSIZE - 1)
	      uart_putchar('\a', stream);
	    else
	      {
		*cp++ = c;
     3f8:	89 93       	st	Y+, r24
		uart_putchar(c, stream);
     3fa:	b8 01       	movw	r22, r16
     3fc:	0e 94 9c 01 	call	0x338	; 0x338 <uart_putchar>
     400:	c7 cf       	rjmp	.-114    	; 0x390 <uart_getchar+0x20>
	      }
	    continue;
	  }

	switch (c)
     402:	82 31       	cpi	r24, 0x12	; 18
     404:	29 f1       	breq	.+74     	; 0x450 <uart_getchar+0xe0>
     406:	38 f4       	brcc	.+14     	; 0x416 <uart_getchar+0xa6>
     408:	83 30       	cpi	r24, 0x03	; 3
     40a:	09 f4       	brne	.+2      	; 0x40e <uart_getchar+0x9e>
     40c:	76 c0       	rjmp	.+236    	; 0x4fa <uart_getchar+0x18a>
     40e:	88 30       	cpi	r24, 0x08	; 8
     410:	09 f0       	breq	.+2      	; 0x414 <uart_getchar+0xa4>
     412:	be cf       	rjmp	.-132    	; 0x390 <uart_getchar+0x20>
     414:	09 c0       	rjmp	.+18     	; 0x428 <uart_getchar+0xb8>
     416:	87 31       	cpi	r24, 0x17	; 23
     418:	09 f4       	brne	.+2      	; 0x41c <uart_getchar+0xac>
     41a:	4d c0       	rjmp	.+154    	; 0x4b6 <uart_getchar+0x146>
     41c:	8f 37       	cpi	r24, 0x7F	; 127
     41e:	21 f0       	breq	.+8      	; 0x428 <uart_getchar+0xb8>
     420:	85 31       	cpi	r24, 0x15	; 21
     422:	09 f0       	breq	.+2      	; 0x426 <uart_getchar+0xb6>
     424:	b5 cf       	rjmp	.-150    	; 0x390 <uart_getchar+0x20>
     426:	34 c0       	rjmp	.+104    	; 0x490 <uart_getchar+0x120>
	  case 'c' & 0x1f:
	    return -1;

	  case '\b':
	  case '\x7f':
	    if (cp > b)
     428:	e1 e0       	ldi	r30, 0x01	; 1
     42a:	ca 36       	cpi	r28, 0x6A	; 106
     42c:	de 07       	cpc	r29, r30
     42e:	09 f0       	breq	.+2      	; 0x432 <uart_getchar+0xc2>
     430:	08 f4       	brcc	.+2      	; 0x434 <uart_getchar+0xc4>
     432:	ae cf       	rjmp	.-164    	; 0x390 <uart_getchar+0x20>
	      {
		uart_putchar('\b', stream);
     434:	b8 01       	movw	r22, r16
     436:	88 e0       	ldi	r24, 0x08	; 8
     438:	0e 94 9c 01 	call	0x338	; 0x338 <uart_putchar>
		uart_putchar(' ', stream);
     43c:	b8 01       	movw	r22, r16
     43e:	80 e2       	ldi	r24, 0x20	; 32
     440:	0e 94 9c 01 	call	0x338	; 0x338 <uart_putchar>
		uart_putchar('\b', stream);
     444:	b8 01       	movw	r22, r16
     446:	88 e0       	ldi	r24, 0x08	; 8
     448:	0e 94 9c 01 	call	0x338	; 0x338 <uart_putchar>
		cp--;
     44c:	21 97       	sbiw	r28, 0x01	; 1
     44e:	a0 cf       	rjmp	.-192    	; 0x390 <uart_getchar+0x20>
	      }
	    break;

	  case 'r' & 0x1f:
	    uart_putchar('\r', stream);
     450:	b8 01       	movw	r22, r16
     452:	8d e0       	ldi	r24, 0x0D	; 13
     454:	0e 94 9c 01 	call	0x338	; 0x338 <uart_putchar>
	    for (cp2 = b; cp2 < cp; cp2++)
     458:	8a e6       	ldi	r24, 0x6A	; 106
     45a:	e8 2e       	mov	r14, r24
     45c:	81 e0       	ldi	r24, 0x01	; 1
     45e:	f8 2e       	mov	r15, r24
     460:	06 c0       	rjmp	.+12     	; 0x46e <uart_getchar+0xfe>
	      uart_putchar(*cp2, stream);
     462:	b8 01       	movw	r22, r16
     464:	f7 01       	movw	r30, r14
     466:	81 91       	ld	r24, Z+
     468:	7f 01       	movw	r14, r30
     46a:	0e 94 9c 01 	call	0x338	; 0x338 <uart_putchar>
	      }
	    break;

	  case 'r' & 0x1f:
	    uart_putchar('\r', stream);
	    for (cp2 = b; cp2 < cp; cp2++)
     46e:	ec 16       	cp	r14, r28
     470:	fd 06       	cpc	r15, r29
     472:	b8 f3       	brcs	.-18     	; 0x462 <uart_getchar+0xf2>
     474:	8d cf       	rjmp	.-230    	; 0x390 <uart_getchar+0x20>
	    break;

	  case 'u' & 0x1f:
	    while (cp > b)
	      {
		uart_putchar('\b', stream);
     476:	b8 01       	movw	r22, r16
     478:	88 e0       	ldi	r24, 0x08	; 8
     47a:	0e 94 9c 01 	call	0x338	; 0x338 <uart_putchar>
		uart_putchar(' ', stream);
     47e:	b8 01       	movw	r22, r16
     480:	80 e2       	ldi	r24, 0x20	; 32
     482:	0e 94 9c 01 	call	0x338	; 0x338 <uart_putchar>
		uart_putchar('\b', stream);
     486:	b8 01       	movw	r22, r16
     488:	88 e0       	ldi	r24, 0x08	; 8
     48a:	0e 94 9c 01 	call	0x338	; 0x338 <uart_putchar>
		cp--;
     48e:	21 97       	sbiw	r28, 0x01	; 1
	    for (cp2 = b; cp2 < cp; cp2++)
	      uart_putchar(*cp2, stream);
	    break;

	  case 'u' & 0x1f:
	    while (cp > b)
     490:	f1 e0       	ldi	r31, 0x01	; 1
     492:	ca 36       	cpi	r28, 0x6A	; 106
     494:	df 07       	cpc	r29, r31
     496:	09 f0       	breq	.+2      	; 0x49a <uart_getchar+0x12a>
     498:	70 f7       	brcc	.-36     	; 0x476 <uart_getchar+0x106>
     49a:	7a cf       	rjmp	.-268    	; 0x390 <uart_getchar+0x20>
	    break;

	  case 'w' & 0x1f:
	    while (cp > b && cp[-1] != ' ')
	      {
		uart_putchar('\b', stream);
     49c:	b8 01       	movw	r22, r16
     49e:	88 e0       	ldi	r24, 0x08	; 8
     4a0:	0e 94 9c 01 	call	0x338	; 0x338 <uart_putchar>
		uart_putchar(' ', stream);
     4a4:	b8 01       	movw	r22, r16
     4a6:	80 e2       	ldi	r24, 0x20	; 32
     4a8:	0e 94 9c 01 	call	0x338	; 0x338 <uart_putchar>
		uart_putchar('\b', stream);
     4ac:	b8 01       	movw	r22, r16
     4ae:	88 e0       	ldi	r24, 0x08	; 8
     4b0:	0e 94 9c 01 	call	0x338	; 0x338 <uart_putchar>
		cp--;
     4b4:	e7 01       	movw	r28, r14
		cp--;
	      }
	    break;

	  case 'w' & 0x1f:
	    while (cp > b && cp[-1] != ' ')
     4b6:	81 e0       	ldi	r24, 0x01	; 1
     4b8:	ca 36       	cpi	r28, 0x6A	; 106
     4ba:	d8 07       	cpc	r29, r24
     4bc:	09 f0       	breq	.+2      	; 0x4c0 <uart_getchar+0x150>
     4be:	08 f4       	brcc	.+2      	; 0x4c2 <uart_getchar+0x152>
     4c0:	67 cf       	rjmp	.-306    	; 0x390 <uart_getchar+0x20>
     4c2:	fe 01       	movw	r30, r28
     4c4:	82 91       	ld	r24, -Z
     4c6:	7f 01       	movw	r14, r30
     4c8:	80 32       	cpi	r24, 0x20	; 32
     4ca:	41 f7       	brne	.-48     	; 0x49c <uart_getchar+0x12c>
     4cc:	61 cf       	rjmp	.-318    	; 0x390 <uart_getchar+0x20>
	      }
	    break;
	  }
      }

  c = *rxp++;
     4ce:	e0 91 68 01 	lds	r30, 0x0168
     4d2:	f0 91 69 01 	lds	r31, 0x0169
     4d6:	20 81       	ld	r18, Z
  if (c == '\n')
     4d8:	2a 30       	cpi	r18, 0x0A	; 10
     4da:	31 f0       	breq	.+12     	; 0x4e8 <uart_getchar+0x178>
	      }
	    break;
	  }
      }

  c = *rxp++;
     4dc:	31 96       	adiw	r30, 0x01	; 1
     4de:	f0 93 69 01 	sts	0x0169, r31
     4e2:	e0 93 68 01 	sts	0x0168, r30
     4e6:	04 c0       	rjmp	.+8      	; 0x4f0 <uart_getchar+0x180>
  if (c == '\n')
    rxp = 0;
     4e8:	10 92 69 01 	sts	0x0169, r1
     4ec:	10 92 68 01 	sts	0x0168, r1

  return c;
     4f0:	30 e0       	ldi	r19, 0x00	; 0
     4f2:	05 c0       	rjmp	.+10     	; 0x4fe <uart_getchar+0x18e>
  if (rxp == 0)
    for (cp = b;;)
      {
	loop_until_bit_is_set(UCSR0A, RXC0);
	if (UCSR0A & _BV(FE0))
	  return _FDEV_EOF;
     4f4:	2e ef       	ldi	r18, 0xFE	; 254
     4f6:	3f ef       	ldi	r19, 0xFF	; 255
     4f8:	02 c0       	rjmp	.+4      	; 0x4fe <uart_getchar+0x18e>
	  }

	switch (c)
	  {
	  case 'c' & 0x1f:
	    return -1;
     4fa:	2f ef       	ldi	r18, 0xFF	; 255
     4fc:	3f ef       	ldi	r19, 0xFF	; 255
  c = *rxp++;
  if (c == '\n')
    rxp = 0;

  return c;
}
     4fe:	c9 01       	movw	r24, r18
     500:	df 91       	pop	r29
     502:	cf 91       	pop	r28
     504:	1f 91       	pop	r17
     506:	0f 91       	pop	r16
     508:	ff 90       	pop	r15
     50a:	ef 90       	pop	r14
     50c:	08 95       	ret

0000050e <__vector_18>:
volatile unsigned long accumulator ;
volatile unsigned char changed;


volatile unsigned long increment;
ISR( TIMER0_OVF_vect){
     50e:	1f 92       	push	r1
     510:	0f 92       	push	r0
     512:	0f b6       	in	r0, 0x3f	; 63
     514:	0f 92       	push	r0
     516:	11 24       	eor	r1, r1
     518:	0b b6       	in	r0, 0x3b	; 59
     51a:	0f 92       	push	r0
     51c:	2f 93       	push	r18
     51e:	3f 93       	push	r19
     520:	4f 93       	push	r20
     522:	5f 93       	push	r21
     524:	6f 93       	push	r22
     526:	7f 93       	push	r23
     528:	8f 93       	push	r24
     52a:	9f 93       	push	r25
     52c:	af 93       	push	r26
     52e:	bf 93       	push	r27
     530:	cf 93       	push	r28
     532:	df 93       	push	r29
     534:	ef 93       	push	r30
     536:	ff 93       	push	r31
	//accumulator = accumulator + increment ;
	//highbyte = (char)(accumulator >> 24) ;
	
	// output the wavefrom sample
	//OCR0A = 128 + ((sineTable[highbyte] * rampTable[rampCount])>>7) ;
	changed = TRUE;
     538:	81 e0       	ldi	r24, 0x01	; 1
     53a:	80 93 dd 03 	sts	0x03DD, r24


	OCR0A = 128 + 
	   ( (
	   	   (sineTable[(accumulator_a >> 24)] + sineTable[(accumulator_b >> 24)]) * rampTable[rampCount]
     53e:	40 91 d5 03 	lds	r20, 0x03D5
     542:	50 91 d6 03 	lds	r21, 0x03D6
     546:	60 91 d7 03 	lds	r22, 0x03D7
     54a:	70 91 d8 03 	lds	r23, 0x03D8
     54e:	80 91 e0 03 	lds	r24, 0x03E0
     552:	90 91 e1 03 	lds	r25, 0x03E1
     556:	a0 91 e2 03 	lds	r26, 0x03E2
     55a:	b0 91 e3 03 	lds	r27, 0x03E3
     55e:	e0 91 de 03 	lds	r30, 0x03DE
     562:	f0 91 df 03 	lds	r31, 0x03DF
     566:	47 2f       	mov	r20, r23
     568:	55 27       	eor	r21, r21
     56a:	66 27       	eor	r22, r22
     56c:	77 27       	eor	r23, r23
     56e:	ea 01       	movw	r28, r20
     570:	cb 52       	subi	r28, 0x2B	; 43
     572:	dd 4f       	sbci	r29, 0xFD	; 253
     574:	28 81       	ld	r18, Y
     576:	8b 2f       	mov	r24, r27
     578:	99 27       	eor	r25, r25
     57a:	aa 27       	eor	r26, r26
     57c:	bb 27       	eor	r27, r27
     57e:	dc 01       	movw	r26, r24
     580:	ab 52       	subi	r26, 0x2B	; 43
     582:	bd 4f       	sbci	r27, 0xFD	; 253
     584:	8c 91       	ld	r24, X
     586:	99 27       	eor	r25, r25
     588:	87 fd       	sbrc	r24, 7
     58a:	90 95       	com	r25
     58c:	82 0f       	add	r24, r18
     58e:	91 1d       	adc	r25, r1
     590:	27 fd       	sbrc	r18, 7
     592:	9a 95       	dec	r25
     594:	e4 53       	subi	r30, 0x34	; 52
     596:	fe 4f       	sbci	r31, 0xFE	; 254
     598:	40 81       	ld	r20, Z
     59a:	48 9f       	mul	r20, r24
     59c:	90 01       	movw	r18, r0
     59e:	49 9f       	mul	r20, r25
     5a0:	30 0d       	add	r19, r0
     5a2:	11 24       	eor	r1, r1
	// output the wavefrom sample
	//OCR0A = 128 + ((sineTable[highbyte] * rampTable[rampCount])>>7) ;
	changed = TRUE;


	OCR0A = 128 + 
     5a4:	83 2f       	mov	r24, r19
     5a6:	80 58       	subi	r24, 0x80	; 128
     5a8:	87 bd       	out	0x27, r24	; 39
	   ( (
	   	   (sineTable[(accumulator_a >> 24)] + sineTable[(accumulator_b >> 24)]) * rampTable[rampCount]
	   	 ) >> 8
	   );
	accumulator_a += increment_a;
     5aa:	80 91 d5 03 	lds	r24, 0x03D5
     5ae:	90 91 d6 03 	lds	r25, 0x03D6
     5b2:	a0 91 d7 03 	lds	r26, 0x03D7
     5b6:	b0 91 d8 03 	lds	r27, 0x03D8
     5ba:	40 91 c8 01 	lds	r20, 0x01C8
     5be:	50 91 c9 01 	lds	r21, 0x01C9
     5c2:	60 91 ca 01 	lds	r22, 0x01CA
     5c6:	70 91 cb 01 	lds	r23, 0x01CB
     5ca:	84 0f       	add	r24, r20
     5cc:	95 1f       	adc	r25, r21
     5ce:	a6 1f       	adc	r26, r22
     5d0:	b7 1f       	adc	r27, r23
     5d2:	80 93 d5 03 	sts	0x03D5, r24
     5d6:	90 93 d6 03 	sts	0x03D6, r25
     5da:	a0 93 d7 03 	sts	0x03D7, r26
     5de:	b0 93 d8 03 	sts	0x03D8, r27
	accumulator_b += increment_b;
     5e2:	80 91 e0 03 	lds	r24, 0x03E0
     5e6:	90 91 e1 03 	lds	r25, 0x03E1
     5ea:	a0 91 e2 03 	lds	r26, 0x03E2
     5ee:	b0 91 e3 03 	lds	r27, 0x03E3
     5f2:	40 91 e9 03 	lds	r20, 0x03E9
     5f6:	50 91 ea 03 	lds	r21, 0x03EA
     5fa:	60 91 eb 03 	lds	r22, 0x03EB
     5fe:	70 91 ec 03 	lds	r23, 0x03EC
     602:	84 0f       	add	r24, r20
     604:	95 1f       	adc	r25, r21
     606:	a6 1f       	adc	r26, r22
     608:	b7 1f       	adc	r27, r23
     60a:	80 93 e0 03 	sts	0x03E0, r24
     60e:	90 93 e1 03 	sts	0x03E1, r25
     612:	a0 93 e2 03 	sts	0x03E2, r26
     616:	b0 93 e3 03 	sts	0x03E3, r27
	//generates a 1 ms timebase
	count--;	
     61a:	80 91 c5 01 	lds	r24, 0x01C5
     61e:	81 50       	subi	r24, 0x01	; 1
     620:	80 93 c5 01 	sts	0x01C5, r24
}
     624:	ff 91       	pop	r31
     626:	ef 91       	pop	r30
     628:	df 91       	pop	r29
     62a:	cf 91       	pop	r28
     62c:	bf 91       	pop	r27
     62e:	af 91       	pop	r26
     630:	9f 91       	pop	r25
     632:	8f 91       	pop	r24
     634:	7f 91       	pop	r23
     636:	6f 91       	pop	r22
     638:	5f 91       	pop	r21
     63a:	4f 91       	pop	r20
     63c:	3f 91       	pop	r19
     63e:	2f 91       	pop	r18
     640:	0f 90       	pop	r0
     642:	0b be       	out	0x3b, r0	; 59
     644:	0f 90       	pop	r0
     646:	0f be       	out	0x3f, r0	; 63
     648:	0f 90       	pop	r0
     64a:	1f 90       	pop	r1
     64c:	18 95       	reti

0000064e <init_dtmf>:


void init_dtmf(){
     64e:	ef 92       	push	r14
     650:	ff 92       	push	r15
     652:	0f 93       	push	r16
     654:	1f 93       	push	r17
     656:	cf 93       	push	r28
     658:	df 93       	push	r29
	DDRB = 0;
     65a:	14 b8       	out	0x04, r1	; 4
	DDRB |= OUTPUT_PIN;
     65c:	23 9a       	sbi	0x04, 3	; 4
     65e:	55 ed       	ldi	r21, 0xD5	; 213
     660:	e5 2e       	mov	r14, r21
     662:	52 e0       	ldi	r21, 0x02	; 2
     664:	f5 2e       	mov	r15, r21
     666:	0c ec       	ldi	r16, 0xCC	; 204
     668:	11 e0       	ldi	r17, 0x01	; 1
	int i;
	for (i=0; i<256; i++){
     66a:	c0 e0       	ldi	r28, 0x00	; 0
     66c:	d0 e0       	ldi	r29, 0x00	; 0
		sineTable[i] = (char)(127.0 * sin(6.283*((float)i)/256.0)) ;
     66e:	be 01       	movw	r22, r28
     670:	88 27       	eor	r24, r24
     672:	77 fd       	sbrc	r23, 7
     674:	80 95       	com	r24
     676:	98 2f       	mov	r25, r24
     678:	0e 94 49 07 	call	0xe92	; 0xe92 <__floatsisf>
     67c:	26 e5       	ldi	r18, 0x56	; 86
     67e:	3e e0       	ldi	r19, 0x0E	; 14
     680:	49 ec       	ldi	r20, 0xC9	; 201
     682:	50 e4       	ldi	r21, 0x40	; 64
     684:	0e 94 35 06 	call	0xc6a	; 0xc6a <__mulsf3>
     688:	20 e0       	ldi	r18, 0x00	; 0
     68a:	30 e0       	ldi	r19, 0x00	; 0
     68c:	40 e8       	ldi	r20, 0x80	; 128
     68e:	5b e3       	ldi	r21, 0x3B	; 59
     690:	0e 94 35 06 	call	0xc6a	; 0xc6a <__mulsf3>
     694:	0e 94 2b 0a 	call	0x1456	; 0x1456 <sin>
     698:	20 e0       	ldi	r18, 0x00	; 0
     69a:	30 e0       	ldi	r19, 0x00	; 0
     69c:	4e ef       	ldi	r20, 0xFE	; 254
     69e:	52 e4       	ldi	r21, 0x42	; 66
     6a0:	0e 94 35 06 	call	0xc6a	; 0xc6a <__mulsf3>
     6a4:	0e 94 50 04 	call	0x8a0	; 0x8a0 <__fixunssfsi>
     6a8:	f7 01       	movw	r30, r14
     6aa:	61 93       	st	Z+, r22
     6ac:	7f 01       	movw	r14, r30
		// the following table needs 
		// rampTable[0]=0 and rampTable[255]=127
		rampTable[i] = i>>1 ;
     6ae:	ce 01       	movw	r24, r28
     6b0:	95 95       	asr	r25
     6b2:	87 95       	ror	r24
     6b4:	f8 01       	movw	r30, r16
     6b6:	81 93       	st	Z+, r24
     6b8:	8f 01       	movw	r16, r30

void init_dtmf(){
	DDRB = 0;
	DDRB |= OUTPUT_PIN;
	int i;
	for (i=0; i<256; i++){
     6ba:	21 96       	adiw	r28, 0x01	; 1
     6bc:	c1 15       	cp	r28, r1
     6be:	f1 e0       	ldi	r31, 0x01	; 1
     6c0:	df 07       	cpc	r29, r31
     6c2:	a9 f6       	brne	.-86     	; 0x66e <init_dtmf+0x20>
		sineTable[i] = (char)(127.0 * sin(6.283*((float)i)/256.0)) ;
		// the following table needs 
		// rampTable[0]=0 and rampTable[255]=127
		rampTable[i] = i>>1 ;
	}
	time = 0;
     6c4:	10 92 c1 01 	sts	0x01C1, r1
     6c8:	10 92 c0 01 	sts	0x01C0, r1

	// TCCR0B = 0;
	// //set divider to 1, run T0 at 16 MHz 
	// TCCR0B |= T0_CS00;
	TCCR0B = 1;
     6cc:	81 e0       	ldi	r24, 0x01	; 1
     6ce:	85 bd       	out	0x25, r24	; 37
	TIMSK0 = 0;
     6d0:	10 92 6e 00 	sts	0x006E, r1
	TIMSK0 |= TIMER0_OVERFLOW_INTERRUPT_ENABLE;
     6d4:	80 91 6e 00 	lds	r24, 0x006E
     6d8:	81 60       	ori	r24, 0x01	; 1
     6da:	80 93 6e 00 	sts	0x006E, r24
	//turn on fast PWM and OC0A - output 
	TCCR0A = 0;
     6de:	14 bc       	out	0x24, r1	; 36
	TCCR0A = (1<<COM0A0) | (1<<COM0A1) | (1<<WGM00) | (1<<WGM01) ; 
     6e0:	83 ec       	ldi	r24, 0xC3	; 195
     6e2:	84 bd       	out	0x24, r24	; 36

	//TCCR0A |= WAVE_GEN_M00 + WAVE_GEN_M01 + COMPARE_MATCH_OUTPUT_A0 + COMPARE_MATCH_OUTPUT_A1; 
	OCR0A = 128;
     6e4:	80 e8       	ldi	r24, 0x80	; 128
     6e6:	87 bd       	out	0x27, r24	; 39
	//increment = INCREMENT_941;
	//increment_a = INCREMENT_941;
	//increment_b = INCREMENT_941;
	sei();
     6e8:	78 94       	sei
}
     6ea:	df 91       	pop	r29
     6ec:	cf 91       	pop	r28
     6ee:	1f 91       	pop	r17
     6f0:	0f 91       	pop	r16
     6f2:	ff 90       	pop	r15
     6f4:	ef 90       	pop	r14
     6f6:	08 95       	ret

000006f8 <play>:

//plays fA and fB for a duration of duration ms
void play(int fA, int fB){
	//if( !is_playing ){
		//is_playing = TRUE;
		switch( fA){
     6f8:	89 3b       	cpi	r24, 0xB9	; 185
     6fa:	24 e0       	ldi	r18, 0x04	; 4
     6fc:	92 07       	cpc	r25, r18
     6fe:	89 f0       	breq	.+34     	; 0x722 <play+0x2a>
     700:	44 f4       	brge	.+16     	; 0x712 <play+0x1a>
     702:	89 3b       	cpi	r24, 0xB9	; 185
     704:	22 e0       	ldi	r18, 0x02	; 2
     706:	92 07       	cpc	r25, r18
     708:	19 f1       	breq	.+70     	; 0x750 <play+0x58>
     70a:	8d 3a       	cpi	r24, 0xAD	; 173
     70c:	93 40       	sbci	r25, 0x03	; 3
     70e:	51 f5       	brne	.+84     	; 0x764 <play+0x6c>
     710:	24 c0       	rjmp	.+72     	; 0x75a <play+0x62>
     712:	88 33       	cpi	r24, 0x38	; 56
     714:	25 e0       	ldi	r18, 0x05	; 5
     716:	92 07       	cpc	r25, r18
     718:	49 f0       	breq	.+18     	; 0x72c <play+0x34>
     71a:	85 3c       	cpi	r24, 0xC5	; 197
     71c:	95 40       	sbci	r25, 0x05	; 5
     71e:	11 f5       	brne	.+68     	; 0x764 <play+0x6c>
     720:	12 c0       	rjmp	.+36     	; 0x746 <play+0x4e>
			case 1209: increment_a = INCREMENT_1209; break;
     722:	87 e3       	ldi	r24, 0x37	; 55
     724:	98 eb       	ldi	r25, 0xB8	; 184
     726:	a3 ef       	ldi	r26, 0xF3	; 243
     728:	b4 e0       	ldi	r27, 0x04	; 4
     72a:	04 c0       	rjmp	.+8      	; 0x734 <play+0x3c>
			case 1336: increment_a = INCREMENT_1336; break;
     72c:	88 e4       	ldi	r24, 0x48	; 72
     72e:	93 ee       	ldi	r25, 0xE3	; 227
     730:	a8 e7       	ldi	r26, 0x78	; 120
     732:	b5 e0       	ldi	r27, 0x05	; 5
     734:	80 93 c8 01 	sts	0x01C8, r24
     738:	90 93 c9 01 	sts	0x01C9, r25
     73c:	a0 93 ca 01 	sts	0x01CA, r26
     740:	b0 93 cb 01 	sts	0x01CB, r27
     744:	17 c0       	rjmp	.+46     	; 0x774 <play+0x7c>
			case 1477: increment_a = INCREMENT_1477; break;
     746:	8b e6       	ldi	r24, 0x6B	; 107
     748:	9c eb       	ldi	r25, 0xBC	; 188
     74a:	ac e0       	ldi	r26, 0x0C	; 12
     74c:	b6 e0       	ldi	r27, 0x06	; 6
     74e:	f2 cf       	rjmp	.-28     	; 0x734 <play+0x3c>
			case 697:  increment_a = INCREMENT_697; break;
     750:	87 e3       	ldi	r24, 0x37	; 55
     752:	9a ed       	ldi	r25, 0xDA	; 218
     754:	aa ed       	ldi	r26, 0xDA	; 218
     756:	b2 e0       	ldi	r27, 0x02	; 2
     758:	ed cf       	rjmp	.-38     	; 0x734 <play+0x3c>
			case 941: increment_a = INCREMENT_941; break;
     75a:	83 e0       	ldi	r24, 0x03	; 3
     75c:	94 eb       	ldi	r25, 0xB4	; 180
     75e:	aa ed       	ldi	r26, 0xDA	; 218
     760:	b3 e0       	ldi	r27, 0x03	; 3
     762:	e8 cf       	rjmp	.-48     	; 0x734 <play+0x3c>
			default: increment_a = 0; break;
     764:	10 92 c8 01 	sts	0x01C8, r1
     768:	10 92 c9 01 	sts	0x01C9, r1
     76c:	10 92 ca 01 	sts	0x01CA, r1
     770:	10 92 cb 01 	sts	0x01CB, r1
		}

		switch ( fB) {
     774:	64 35       	cpi	r22, 0x54	; 84
     776:	83 e0       	ldi	r24, 0x03	; 3
     778:	78 07       	cpc	r23, r24
     77a:	d9 f0       	breq	.+54     	; 0x7b2 <play+0xba>
     77c:	44 f4       	brge	.+16     	; 0x78e <play+0x96>
     77e:	69 3b       	cpi	r22, 0xB9	; 185
     780:	82 e0       	ldi	r24, 0x02	; 2
     782:	78 07       	cpc	r23, r24
     784:	61 f0       	breq	.+24     	; 0x79e <play+0xa6>
     786:	62 30       	cpi	r22, 0x02	; 2
     788:	73 40       	sbci	r23, 0x03	; 3
     78a:	91 f5       	brne	.+100    	; 0x7f0 <play+0xf8>
     78c:	0d c0       	rjmp	.+26     	; 0x7a8 <play+0xb0>
     78e:	6d 3a       	cpi	r22, 0xAD	; 173
     790:	83 e0       	ldi	r24, 0x03	; 3
     792:	78 07       	cpc	r23, r24
     794:	99 f0       	breq	.+38     	; 0x7bc <play+0xc4>
     796:	69 3b       	cpi	r22, 0xB9	; 185
     798:	74 40       	sbci	r23, 0x04	; 4
     79a:	51 f5       	brne	.+84     	; 0x7f0 <play+0xf8>
     79c:	1c c0       	rjmp	.+56     	; 0x7d6 <play+0xde>
			case 697: increment_b = INCREMENT_697; break;
     79e:	87 e3       	ldi	r24, 0x37	; 55
     7a0:	9a ed       	ldi	r25, 0xDA	; 218
     7a2:	aa ed       	ldi	r26, 0xDA	; 218
     7a4:	b2 e0       	ldi	r27, 0x02	; 2
     7a6:	0e c0       	rjmp	.+28     	; 0x7c4 <play+0xcc>
			case 770: increment_b = INCREMENT_770; break;
     7a8:	8e ed       	ldi	r24, 0xDE	; 222
     7aa:	95 e6       	ldi	r25, 0x65	; 101
     7ac:	a7 e2       	ldi	r26, 0x27	; 39
     7ae:	b3 e0       	ldi	r27, 0x03	; 3
     7b0:	09 c0       	rjmp	.+18     	; 0x7c4 <play+0xcc>
			case 852: increment_b = INCREMENT_852; break;
     7b2:	8c e6       	ldi	r24, 0x6C	; 108
     7b4:	91 e6       	ldi	r25, 0x61	; 97
     7b6:	ad e7       	ldi	r26, 0x7D	; 125
     7b8:	b3 e0       	ldi	r27, 0x03	; 3
     7ba:	04 c0       	rjmp	.+8      	; 0x7c4 <play+0xcc>
			case 941: increment_b = INCREMENT_941; break;
     7bc:	83 e0       	ldi	r24, 0x03	; 3
     7be:	94 eb       	ldi	r25, 0xB4	; 180
     7c0:	aa ed       	ldi	r26, 0xDA	; 218
     7c2:	b3 e0       	ldi	r27, 0x03	; 3
     7c4:	80 93 e9 03 	sts	0x03E9, r24
     7c8:	90 93 ea 03 	sts	0x03EA, r25
     7cc:	a0 93 eb 03 	sts	0x03EB, r26
     7d0:	b0 93 ec 03 	sts	0x03EC, r27
     7d4:	08 95       	ret
			case 1209: increment_a = INCREMENT_1209; break;
     7d6:	87 e3       	ldi	r24, 0x37	; 55
     7d8:	98 eb       	ldi	r25, 0xB8	; 184
     7da:	a3 ef       	ldi	r26, 0xF3	; 243
     7dc:	b4 e0       	ldi	r27, 0x04	; 4
     7de:	80 93 c8 01 	sts	0x01C8, r24
     7e2:	90 93 c9 01 	sts	0x01C9, r25
     7e6:	a0 93 ca 01 	sts	0x01CA, r26
     7ea:	b0 93 cb 01 	sts	0x01CB, r27
     7ee:	08 95       	ret
			default: increment_b = 0; break;
     7f0:	10 92 e9 03 	sts	0x03E9, r1
     7f4:	10 92 ea 03 	sts	0x03EA, r1
     7f8:	10 92 eb 03 	sts	0x03EB, r1
     7fc:	10 92 ec 03 	sts	0x03EC, r1
     800:	08 95       	ret

00000802 <stop_playing>:


}

void stop_playing(){
	is_playing = FALSE;
     802:	10 92 c7 01 	sts	0x01C7, r1
	sample = 0;
     806:	10 92 ef 03 	sts	0x03EF, r1
     80a:	10 92 ee 03 	sts	0x03EE, r1
	rampCount = 0;
     80e:	10 92 df 03 	sts	0x03DF, r1
     812:	10 92 de 03 	sts	0x03DE, r1
	increment_a = increment_b = 0;
     816:	10 92 e9 03 	sts	0x03E9, r1
     81a:	10 92 ea 03 	sts	0x03EA, r1
     81e:	10 92 eb 03 	sts	0x03EB, r1
     822:	10 92 ec 03 	sts	0x03EC, r1
     826:	10 92 c8 01 	sts	0x01C8, r1
     82a:	10 92 c9 01 	sts	0x01C9, r1
     82e:	10 92 ca 01 	sts	0x01CA, r1
     832:	10 92 cb 01 	sts	0x01CB, r1
	accumulator_a = accumulator_b = 0;
     836:	10 92 e0 03 	sts	0x03E0, r1
     83a:	10 92 e1 03 	sts	0x03E1, r1
     83e:	10 92 e2 03 	sts	0x03E2, r1
     842:	10 92 e3 03 	sts	0x03E3, r1
     846:	10 92 d5 03 	sts	0x03D5, r1
     84a:	10 92 d6 03 	sts	0x03D6, r1
     84e:	10 92 d7 03 	sts	0x03D7, r1
     852:	10 92 d8 03 	sts	0x03D8, r1
     856:	08 95       	ret

00000858 <update_status_variables>:
}


void update_status_variables(){
	if(changed == TRUE){
     858:	80 91 dd 03 	lds	r24, 0x03DD
     85c:	81 30       	cpi	r24, 0x01	; 1
     85e:	f9 f4       	brne	.+62     	; 0x89e <update_status_variables+0x46>
		changed = FALSE;
     860:	10 92 dd 03 	sts	0x03DD, r1

		if (PushState == Pushed && rampCount < 255) {
     864:	80 91 c6 01 	lds	r24, 0x01C6
     868:	83 30       	cpi	r24, 0x03	; 3
     86a:	41 f4       	brne	.+16     	; 0x87c <update_status_variables+0x24>
     86c:	80 91 de 03 	lds	r24, 0x03DE
     870:	90 91 df 03 	lds	r25, 0x03DF
     874:	8f 3f       	cpi	r24, 0xFF	; 255
     876:	91 05       	cpc	r25, r1
     878:	90 f4       	brcc	.+36     	; 0x89e <update_status_variables+0x46>
     87a:	08 c0       	rjmp	.+16     	; 0x88c <update_status_variables+0x34>
			rampCount++;
		}
		if (PushState == NoPush && rampCount > 0 ) {
     87c:	81 30       	cpi	r24, 0x01	; 1
     87e:	79 f4       	brne	.+30     	; 0x89e <update_status_variables+0x46>
     880:	80 91 de 03 	lds	r24, 0x03DE
     884:	90 91 df 03 	lds	r25, 0x03DF
     888:	89 2b       	or	r24, r25
     88a:	49 f0       	breq	.+18     	; 0x89e <update_status_variables+0x46>
			rampCount++;
     88c:	80 91 de 03 	lds	r24, 0x03DE
     890:	90 91 df 03 	lds	r25, 0x03DF
     894:	01 96       	adiw	r24, 0x01	; 1
     896:	90 93 df 03 	sts	0x03DF, r25
     89a:	80 93 de 03 	sts	0x03DE, r24
     89e:	08 95       	ret

000008a0 <__fixunssfsi>:
     8a0:	cf 92       	push	r12
     8a2:	df 92       	push	r13
     8a4:	ef 92       	push	r14
     8a6:	ff 92       	push	r15
     8a8:	0f 93       	push	r16
     8aa:	1f 93       	push	r17
     8ac:	6b 01       	movw	r12, r22
     8ae:	7c 01       	movw	r14, r24
     8b0:	20 e0       	ldi	r18, 0x00	; 0
     8b2:	30 e0       	ldi	r19, 0x00	; 0
     8b4:	40 e0       	ldi	r20, 0x00	; 0
     8b6:	5f e4       	ldi	r21, 0x4F	; 79
     8b8:	0e 94 1a 07 	call	0xe34	; 0xe34 <__gesf2>
     8bc:	87 fd       	sbrc	r24, 7
     8be:	0e c0       	rjmp	.+28     	; 0x8dc <__fixunssfsi+0x3c>
     8c0:	20 e0       	ldi	r18, 0x00	; 0
     8c2:	30 e0       	ldi	r19, 0x00	; 0
     8c4:	40 e0       	ldi	r20, 0x00	; 0
     8c6:	5f e4       	ldi	r21, 0x4F	; 79
     8c8:	c7 01       	movw	r24, r14
     8ca:	b6 01       	movw	r22, r12
     8cc:	0e 94 05 06 	call	0xc0a	; 0xc0a <__subsf3>
     8d0:	0e 94 a5 07 	call	0xf4a	; 0xf4a <__fixsfsi>
     8d4:	8b 01       	movw	r16, r22
     8d6:	9c 01       	movw	r18, r24
     8d8:	30 58       	subi	r19, 0x80	; 128
     8da:	06 c0       	rjmp	.+12     	; 0x8e8 <__fixunssfsi+0x48>
     8dc:	c7 01       	movw	r24, r14
     8de:	b6 01       	movw	r22, r12
     8e0:	0e 94 a5 07 	call	0xf4a	; 0xf4a <__fixsfsi>
     8e4:	8b 01       	movw	r16, r22
     8e6:	9c 01       	movw	r18, r24
     8e8:	b8 01       	movw	r22, r16
     8ea:	c9 01       	movw	r24, r18
     8ec:	1f 91       	pop	r17
     8ee:	0f 91       	pop	r16
     8f0:	ff 90       	pop	r15
     8f2:	ef 90       	pop	r14
     8f4:	df 90       	pop	r13
     8f6:	cf 90       	pop	r12
     8f8:	08 95       	ret

000008fa <_fpadd_parts>:
     8fa:	a4 e0       	ldi	r26, 0x04	; 4
     8fc:	b0 e0       	ldi	r27, 0x00	; 0
     8fe:	e3 e8       	ldi	r30, 0x83	; 131
     900:	f4 e0       	ldi	r31, 0x04	; 4
     902:	0c 94 cb 09 	jmp	0x1396	; 0x1396 <__prologue_saves__+0x4>
     906:	7c 01       	movw	r14, r24
     908:	6a 01       	movw	r12, r20
     90a:	fc 01       	movw	r30, r24
     90c:	80 81       	ld	r24, Z
     90e:	82 30       	cpi	r24, 0x02	; 2
     910:	08 f4       	brcc	.+2      	; 0x914 <_fpadd_parts+0x1a>
     912:	4a c1       	rjmp	.+660    	; 0xba8 <_fpadd_parts+0x2ae>
     914:	fb 01       	movw	r30, r22
     916:	90 81       	ld	r25, Z
     918:	92 30       	cpi	r25, 0x02	; 2
     91a:	08 f4       	brcc	.+2      	; 0x91e <_fpadd_parts+0x24>
     91c:	42 c1       	rjmp	.+644    	; 0xba2 <_fpadd_parts+0x2a8>
     91e:	84 30       	cpi	r24, 0x04	; 4
     920:	79 f4       	brne	.+30     	; 0x940 <_fpadd_parts+0x46>
     922:	94 30       	cpi	r25, 0x04	; 4
     924:	09 f0       	breq	.+2      	; 0x928 <_fpadd_parts+0x2e>
     926:	40 c1       	rjmp	.+640    	; 0xba8 <_fpadd_parts+0x2ae>
     928:	f7 01       	movw	r30, r14
     92a:	91 81       	ldd	r25, Z+1	; 0x01
     92c:	fb 01       	movw	r30, r22
     92e:	81 81       	ldd	r24, Z+1	; 0x01
     930:	98 17       	cp	r25, r24
     932:	09 f4       	brne	.+2      	; 0x936 <_fpadd_parts+0x3c>
     934:	39 c1       	rjmp	.+626    	; 0xba8 <_fpadd_parts+0x2ae>
     936:	a0 e4       	ldi	r26, 0x40	; 64
     938:	ea 2e       	mov	r14, r26
     93a:	a1 e0       	ldi	r26, 0x01	; 1
     93c:	fa 2e       	mov	r15, r26
     93e:	34 c1       	rjmp	.+616    	; 0xba8 <_fpadd_parts+0x2ae>
     940:	94 30       	cpi	r25, 0x04	; 4
     942:	09 f4       	brne	.+2      	; 0x946 <_fpadd_parts+0x4c>
     944:	2e c1       	rjmp	.+604    	; 0xba2 <_fpadd_parts+0x2a8>
     946:	92 30       	cpi	r25, 0x02	; 2
     948:	91 f4       	brne	.+36     	; 0x96e <_fpadd_parts+0x74>
     94a:	82 30       	cpi	r24, 0x02	; 2
     94c:	09 f0       	breq	.+2      	; 0x950 <_fpadd_parts+0x56>
     94e:	2c c1       	rjmp	.+600    	; 0xba8 <_fpadd_parts+0x2ae>
     950:	88 e0       	ldi	r24, 0x08	; 8
     952:	f7 01       	movw	r30, r14
     954:	da 01       	movw	r26, r20
     956:	01 90       	ld	r0, Z+
     958:	0d 92       	st	X+, r0
     95a:	8a 95       	dec	r24
     95c:	e1 f7       	brne	.-8      	; 0x956 <_fpadd_parts+0x5c>
     95e:	fb 01       	movw	r30, r22
     960:	81 81       	ldd	r24, Z+1	; 0x01
     962:	f7 01       	movw	r30, r14
     964:	91 81       	ldd	r25, Z+1	; 0x01
     966:	89 23       	and	r24, r25
     968:	fa 01       	movw	r30, r20
     96a:	81 83       	std	Z+1, r24	; 0x01
     96c:	1c c1       	rjmp	.+568    	; 0xba6 <_fpadd_parts+0x2ac>
     96e:	82 30       	cpi	r24, 0x02	; 2
     970:	09 f4       	brne	.+2      	; 0x974 <_fpadd_parts+0x7a>
     972:	17 c1       	rjmp	.+558    	; 0xba2 <_fpadd_parts+0x2a8>
     974:	f7 01       	movw	r30, r14
     976:	82 81       	ldd	r24, Z+2	; 0x02
     978:	93 81       	ldd	r25, Z+3	; 0x03
     97a:	fb 01       	movw	r30, r22
     97c:	a2 81       	ldd	r26, Z+2	; 0x02
     97e:	b3 81       	ldd	r27, Z+3	; 0x03
     980:	f7 01       	movw	r30, r14
     982:	04 81       	ldd	r16, Z+4	; 0x04
     984:	15 81       	ldd	r17, Z+5	; 0x05
     986:	26 81       	ldd	r18, Z+6	; 0x06
     988:	37 81       	ldd	r19, Z+7	; 0x07
     98a:	fb 01       	movw	r30, r22
     98c:	84 80       	ldd	r8, Z+4	; 0x04
     98e:	95 80       	ldd	r9, Z+5	; 0x05
     990:	a6 80       	ldd	r10, Z+6	; 0x06
     992:	b7 80       	ldd	r11, Z+7	; 0x07
     994:	fc 01       	movw	r30, r24
     996:	ea 1b       	sub	r30, r26
     998:	fb 0b       	sbc	r31, r27
     99a:	af 01       	movw	r20, r30
     99c:	f7 ff       	sbrs	r31, 7
     99e:	04 c0       	rjmp	.+8      	; 0x9a8 <_fpadd_parts+0xae>
     9a0:	44 27       	eor	r20, r20
     9a2:	55 27       	eor	r21, r21
     9a4:	4e 1b       	sub	r20, r30
     9a6:	5f 0b       	sbc	r21, r31
     9a8:	40 32       	cpi	r20, 0x20	; 32
     9aa:	51 05       	cpc	r21, r1
     9ac:	0c f0       	brlt	.+2      	; 0x9b0 <_fpadd_parts+0xb6>
     9ae:	74 c0       	rjmp	.+232    	; 0xa98 <_fpadd_parts+0x19e>
     9b0:	1e 16       	cp	r1, r30
     9b2:	1f 06       	cpc	r1, r31
     9b4:	b4 f5       	brge	.+108    	; 0xa22 <_fpadd_parts+0x128>
     9b6:	24 01       	movw	r4, r8
     9b8:	35 01       	movw	r6, r10
     9ba:	04 2e       	mov	r0, r20
     9bc:	04 c0       	rjmp	.+8      	; 0x9c6 <_fpadd_parts+0xcc>
     9be:	76 94       	lsr	r7
     9c0:	67 94       	ror	r6
     9c2:	57 94       	ror	r5
     9c4:	47 94       	ror	r4
     9c6:	0a 94       	dec	r0
     9c8:	d2 f7       	brpl	.-12     	; 0x9be <_fpadd_parts+0xc4>
     9ca:	49 82       	std	Y+1, r4	; 0x01
     9cc:	5a 82       	std	Y+2, r5	; 0x02
     9ce:	6b 82       	std	Y+3, r6	; 0x03
     9d0:	7c 82       	std	Y+4, r7	; 0x04
     9d2:	41 2c       	mov	r4, r1
     9d4:	51 2c       	mov	r5, r1
     9d6:	32 01       	movw	r6, r4
     9d8:	43 94       	inc	r4
     9da:	04 c0       	rjmp	.+8      	; 0x9e4 <_fpadd_parts+0xea>
     9dc:	44 0c       	add	r4, r4
     9de:	55 1c       	adc	r5, r5
     9e0:	66 1c       	adc	r6, r6
     9e2:	77 1c       	adc	r7, r7
     9e4:	4a 95       	dec	r20
     9e6:	d2 f7       	brpl	.-12     	; 0x9dc <_fpadd_parts+0xe2>
     9e8:	41 e0       	ldi	r20, 0x01	; 1
     9ea:	44 1a       	sub	r4, r20
     9ec:	51 08       	sbc	r5, r1
     9ee:	61 08       	sbc	r6, r1
     9f0:	71 08       	sbc	r7, r1
     9f2:	48 20       	and	r4, r8
     9f4:	59 20       	and	r5, r9
     9f6:	6a 20       	and	r6, r10
     9f8:	7b 20       	and	r7, r11
     9fa:	81 2c       	mov	r8, r1
     9fc:	91 2c       	mov	r9, r1
     9fe:	54 01       	movw	r10, r8
     a00:	83 94       	inc	r8
     a02:	45 28       	or	r4, r5
     a04:	46 28       	or	r4, r6
     a06:	47 28       	or	r4, r7
     a08:	19 f4       	brne	.+6      	; 0xa10 <_fpadd_parts+0x116>
     a0a:	81 2c       	mov	r8, r1
     a0c:	91 2c       	mov	r9, r1
     a0e:	54 01       	movw	r10, r8
     a10:	49 80       	ldd	r4, Y+1	; 0x01
     a12:	5a 80       	ldd	r5, Y+2	; 0x02
     a14:	6b 80       	ldd	r6, Y+3	; 0x03
     a16:	7c 80       	ldd	r7, Y+4	; 0x04
     a18:	84 28       	or	r8, r4
     a1a:	95 28       	or	r9, r5
     a1c:	a6 28       	or	r10, r6
     a1e:	b7 28       	or	r11, r7
     a20:	46 c0       	rjmp	.+140    	; 0xaae <_fpadd_parts+0x1b4>
     a22:	ef 2b       	or	r30, r31
     a24:	09 f4       	brne	.+2      	; 0xa28 <_fpadd_parts+0x12e>
     a26:	43 c0       	rjmp	.+134    	; 0xaae <_fpadd_parts+0x1b4>
     a28:	84 0f       	add	r24, r20
     a2a:	95 1f       	adc	r25, r21
     a2c:	28 01       	movw	r4, r16
     a2e:	39 01       	movw	r6, r18
     a30:	04 2e       	mov	r0, r20
     a32:	04 c0       	rjmp	.+8      	; 0xa3c <_fpadd_parts+0x142>
     a34:	76 94       	lsr	r7
     a36:	67 94       	ror	r6
     a38:	57 94       	ror	r5
     a3a:	47 94       	ror	r4
     a3c:	0a 94       	dec	r0
     a3e:	d2 f7       	brpl	.-12     	; 0xa34 <_fpadd_parts+0x13a>
     a40:	49 82       	std	Y+1, r4	; 0x01
     a42:	5a 82       	std	Y+2, r5	; 0x02
     a44:	6b 82       	std	Y+3, r6	; 0x03
     a46:	7c 82       	std	Y+4, r7	; 0x04
     a48:	41 2c       	mov	r4, r1
     a4a:	51 2c       	mov	r5, r1
     a4c:	32 01       	movw	r6, r4
     a4e:	43 94       	inc	r4
     a50:	04 c0       	rjmp	.+8      	; 0xa5a <_fpadd_parts+0x160>
     a52:	44 0c       	add	r4, r4
     a54:	55 1c       	adc	r5, r5
     a56:	66 1c       	adc	r6, r6
     a58:	77 1c       	adc	r7, r7
     a5a:	4a 95       	dec	r20
     a5c:	d2 f7       	brpl	.-12     	; 0xa52 <_fpadd_parts+0x158>
     a5e:	41 e0       	ldi	r20, 0x01	; 1
     a60:	44 1a       	sub	r4, r20
     a62:	51 08       	sbc	r5, r1
     a64:	61 08       	sbc	r6, r1
     a66:	71 08       	sbc	r7, r1
     a68:	40 22       	and	r4, r16
     a6a:	51 22       	and	r5, r17
     a6c:	62 22       	and	r6, r18
     a6e:	73 22       	and	r7, r19
     a70:	01 e0       	ldi	r16, 0x01	; 1
     a72:	10 e0       	ldi	r17, 0x00	; 0
     a74:	20 e0       	ldi	r18, 0x00	; 0
     a76:	30 e0       	ldi	r19, 0x00	; 0
     a78:	45 28       	or	r4, r5
     a7a:	46 28       	or	r4, r6
     a7c:	47 28       	or	r4, r7
     a7e:	19 f4       	brne	.+6      	; 0xa86 <_fpadd_parts+0x18c>
     a80:	00 e0       	ldi	r16, 0x00	; 0
     a82:	10 e0       	ldi	r17, 0x00	; 0
     a84:	98 01       	movw	r18, r16
     a86:	49 80       	ldd	r4, Y+1	; 0x01
     a88:	5a 80       	ldd	r5, Y+2	; 0x02
     a8a:	6b 80       	ldd	r6, Y+3	; 0x03
     a8c:	7c 80       	ldd	r7, Y+4	; 0x04
     a8e:	04 29       	or	r16, r4
     a90:	15 29       	or	r17, r5
     a92:	26 29       	or	r18, r6
     a94:	37 29       	or	r19, r7
     a96:	0b c0       	rjmp	.+22     	; 0xaae <_fpadd_parts+0x1b4>
     a98:	a8 17       	cp	r26, r24
     a9a:	b9 07       	cpc	r27, r25
     a9c:	24 f4       	brge	.+8      	; 0xaa6 <_fpadd_parts+0x1ac>
     a9e:	81 2c       	mov	r8, r1
     aa0:	91 2c       	mov	r9, r1
     aa2:	54 01       	movw	r10, r8
     aa4:	04 c0       	rjmp	.+8      	; 0xaae <_fpadd_parts+0x1b4>
     aa6:	cd 01       	movw	r24, r26
     aa8:	00 e0       	ldi	r16, 0x00	; 0
     aaa:	10 e0       	ldi	r17, 0x00	; 0
     aac:	98 01       	movw	r18, r16
     aae:	f7 01       	movw	r30, r14
     ab0:	41 81       	ldd	r20, Z+1	; 0x01
     ab2:	fb 01       	movw	r30, r22
     ab4:	51 81       	ldd	r21, Z+1	; 0x01
     ab6:	45 17       	cp	r20, r21
     ab8:	09 f4       	brne	.+2      	; 0xabc <_fpadd_parts+0x1c2>
     aba:	46 c0       	rjmp	.+140    	; 0xb48 <_fpadd_parts+0x24e>
     abc:	44 23       	and	r20, r20
     abe:	49 f0       	breq	.+18     	; 0xad2 <_fpadd_parts+0x1d8>
     ac0:	24 01       	movw	r4, r8
     ac2:	35 01       	movw	r6, r10
     ac4:	40 1a       	sub	r4, r16
     ac6:	51 0a       	sbc	r5, r17
     ac8:	62 0a       	sbc	r6, r18
     aca:	73 0a       	sbc	r7, r19
     acc:	93 01       	movw	r18, r6
     ace:	82 01       	movw	r16, r4
     ad0:	04 c0       	rjmp	.+8      	; 0xada <_fpadd_parts+0x1e0>
     ad2:	08 19       	sub	r16, r8
     ad4:	19 09       	sbc	r17, r9
     ad6:	2a 09       	sbc	r18, r10
     ad8:	3b 09       	sbc	r19, r11
     ada:	37 fd       	sbrc	r19, 7
     adc:	05 c0       	rjmp	.+10     	; 0xae8 <_fpadd_parts+0x1ee>
     ade:	f6 01       	movw	r30, r12
     ae0:	11 82       	std	Z+1, r1	; 0x01
     ae2:	93 83       	std	Z+3, r25	; 0x03
     ae4:	82 83       	std	Z+2, r24	; 0x02
     ae6:	0c c0       	rjmp	.+24     	; 0xb00 <_fpadd_parts+0x206>
     ae8:	41 e0       	ldi	r20, 0x01	; 1
     aea:	f6 01       	movw	r30, r12
     aec:	41 83       	std	Z+1, r20	; 0x01
     aee:	93 83       	std	Z+3, r25	; 0x03
     af0:	82 83       	std	Z+2, r24	; 0x02
     af2:	30 95       	com	r19
     af4:	20 95       	com	r18
     af6:	10 95       	com	r17
     af8:	01 95       	neg	r16
     afa:	1f 4f       	sbci	r17, 0xFF	; 255
     afc:	2f 4f       	sbci	r18, 0xFF	; 255
     afe:	3f 4f       	sbci	r19, 0xFF	; 255
     b00:	04 83       	std	Z+4, r16	; 0x04
     b02:	15 83       	std	Z+5, r17	; 0x05
     b04:	26 83       	std	Z+6, r18	; 0x06
     b06:	37 83       	std	Z+7, r19	; 0x07
     b08:	0e c0       	rjmp	.+28     	; 0xb26 <_fpadd_parts+0x22c>
     b0a:	88 0f       	add	r24, r24
     b0c:	99 1f       	adc	r25, r25
     b0e:	aa 1f       	adc	r26, r26
     b10:	bb 1f       	adc	r27, r27
     b12:	f6 01       	movw	r30, r12
     b14:	84 83       	std	Z+4, r24	; 0x04
     b16:	95 83       	std	Z+5, r25	; 0x05
     b18:	a6 83       	std	Z+6, r26	; 0x06
     b1a:	b7 83       	std	Z+7, r27	; 0x07
     b1c:	82 81       	ldd	r24, Z+2	; 0x02
     b1e:	93 81       	ldd	r25, Z+3	; 0x03
     b20:	01 97       	sbiw	r24, 0x01	; 1
     b22:	93 83       	std	Z+3, r25	; 0x03
     b24:	82 83       	std	Z+2, r24	; 0x02
     b26:	f6 01       	movw	r30, r12
     b28:	84 81       	ldd	r24, Z+4	; 0x04
     b2a:	95 81       	ldd	r25, Z+5	; 0x05
     b2c:	a6 81       	ldd	r26, Z+6	; 0x06
     b2e:	b7 81       	ldd	r27, Z+7	; 0x07
     b30:	ac 01       	movw	r20, r24
     b32:	bd 01       	movw	r22, r26
     b34:	41 50       	subi	r20, 0x01	; 1
     b36:	51 09       	sbc	r21, r1
     b38:	61 09       	sbc	r22, r1
     b3a:	71 09       	sbc	r23, r1
     b3c:	4f 3f       	cpi	r20, 0xFF	; 255
     b3e:	5f 4f       	sbci	r21, 0xFF	; 255
     b40:	6f 4f       	sbci	r22, 0xFF	; 255
     b42:	7f 43       	sbci	r23, 0x3F	; 63
     b44:	10 f3       	brcs	.-60     	; 0xb0a <_fpadd_parts+0x210>
     b46:	0c c0       	rjmp	.+24     	; 0xb60 <_fpadd_parts+0x266>
     b48:	f6 01       	movw	r30, r12
     b4a:	41 83       	std	Z+1, r20	; 0x01
     b4c:	93 83       	std	Z+3, r25	; 0x03
     b4e:	82 83       	std	Z+2, r24	; 0x02
     b50:	08 0d       	add	r16, r8
     b52:	19 1d       	adc	r17, r9
     b54:	2a 1d       	adc	r18, r10
     b56:	3b 1d       	adc	r19, r11
     b58:	04 83       	std	Z+4, r16	; 0x04
     b5a:	15 83       	std	Z+5, r17	; 0x05
     b5c:	26 83       	std	Z+6, r18	; 0x06
     b5e:	37 83       	std	Z+7, r19	; 0x07
     b60:	83 e0       	ldi	r24, 0x03	; 3
     b62:	f6 01       	movw	r30, r12
     b64:	80 83       	st	Z, r24
     b66:	44 81       	ldd	r20, Z+4	; 0x04
     b68:	55 81       	ldd	r21, Z+5	; 0x05
     b6a:	66 81       	ldd	r22, Z+6	; 0x06
     b6c:	77 81       	ldd	r23, Z+7	; 0x07
     b6e:	77 ff       	sbrs	r23, 7
     b70:	1a c0       	rjmp	.+52     	; 0xba6 <_fpadd_parts+0x2ac>
     b72:	db 01       	movw	r26, r22
     b74:	ca 01       	movw	r24, r20
     b76:	81 70       	andi	r24, 0x01	; 1
     b78:	99 27       	eor	r25, r25
     b7a:	aa 27       	eor	r26, r26
     b7c:	bb 27       	eor	r27, r27
     b7e:	76 95       	lsr	r23
     b80:	67 95       	ror	r22
     b82:	57 95       	ror	r21
     b84:	47 95       	ror	r20
     b86:	84 2b       	or	r24, r20
     b88:	95 2b       	or	r25, r21
     b8a:	a6 2b       	or	r26, r22
     b8c:	b7 2b       	or	r27, r23
     b8e:	84 83       	std	Z+4, r24	; 0x04
     b90:	95 83       	std	Z+5, r25	; 0x05
     b92:	a6 83       	std	Z+6, r26	; 0x06
     b94:	b7 83       	std	Z+7, r27	; 0x07
     b96:	82 81       	ldd	r24, Z+2	; 0x02
     b98:	93 81       	ldd	r25, Z+3	; 0x03
     b9a:	01 96       	adiw	r24, 0x01	; 1
     b9c:	93 83       	std	Z+3, r25	; 0x03
     b9e:	82 83       	std	Z+2, r24	; 0x02
     ba0:	02 c0       	rjmp	.+4      	; 0xba6 <_fpadd_parts+0x2ac>
     ba2:	7b 01       	movw	r14, r22
     ba4:	01 c0       	rjmp	.+2      	; 0xba8 <_fpadd_parts+0x2ae>
     ba6:	76 01       	movw	r14, r12
     ba8:	c7 01       	movw	r24, r14
     baa:	24 96       	adiw	r28, 0x04	; 4
     bac:	e0 e1       	ldi	r30, 0x10	; 16
     bae:	0c 94 e7 09 	jmp	0x13ce	; 0x13ce <__epilogue_restores__+0x4>

00000bb2 <__addsf3>:
     bb2:	a0 e2       	ldi	r26, 0x20	; 32
     bb4:	b0 e0       	ldi	r27, 0x00	; 0
     bb6:	ef ed       	ldi	r30, 0xDF	; 223
     bb8:	f5 e0       	ldi	r31, 0x05	; 5
     bba:	0c 94 d9 09 	jmp	0x13b2	; 0x13b2 <__prologue_saves__+0x20>
     bbe:	6d 8f       	std	Y+29, r22	; 0x1d
     bc0:	7e 8f       	std	Y+30, r23	; 0x1e
     bc2:	8f 8f       	std	Y+31, r24	; 0x1f
     bc4:	98 a3       	std	Y+32, r25	; 0x20
     bc6:	29 8f       	std	Y+25, r18	; 0x19
     bc8:	3a 8f       	std	Y+26, r19	; 0x1a
     bca:	4b 8f       	std	Y+27, r20	; 0x1b
     bcc:	5c 8f       	std	Y+28, r21	; 0x1c
     bce:	be 01       	movw	r22, r28
     bd0:	6f 5e       	subi	r22, 0xEF	; 239
     bd2:	7f 4f       	sbci	r23, 0xFF	; 255
     bd4:	ce 01       	movw	r24, r28
     bd6:	4d 96       	adiw	r24, 0x1d	; 29
     bd8:	0e 94 be 08 	call	0x117c	; 0x117c <__unpack_f>
     bdc:	be 01       	movw	r22, r28
     bde:	67 5f       	subi	r22, 0xF7	; 247
     be0:	7f 4f       	sbci	r23, 0xFF	; 255
     be2:	ce 01       	movw	r24, r28
     be4:	49 96       	adiw	r24, 0x19	; 25
     be6:	0e 94 be 08 	call	0x117c	; 0x117c <__unpack_f>
     bea:	ae 01       	movw	r20, r28
     bec:	4f 5f       	subi	r20, 0xFF	; 255
     bee:	5f 4f       	sbci	r21, 0xFF	; 255
     bf0:	be 01       	movw	r22, r28
     bf2:	67 5f       	subi	r22, 0xF7	; 247
     bf4:	7f 4f       	sbci	r23, 0xFF	; 255
     bf6:	ce 01       	movw	r24, r28
     bf8:	41 96       	adiw	r24, 0x11	; 17
     bfa:	0e 94 7d 04 	call	0x8fa	; 0x8fa <_fpadd_parts>
     bfe:	0e 94 f4 07 	call	0xfe8	; 0xfe8 <__pack_f>
     c02:	a0 96       	adiw	r28, 0x20	; 32
     c04:	e2 e0       	ldi	r30, 0x02	; 2
     c06:	0c 94 f5 09 	jmp	0x13ea	; 0x13ea <__epilogue_restores__+0x20>

00000c0a <__subsf3>:
     c0a:	a0 e2       	ldi	r26, 0x20	; 32
     c0c:	b0 e0       	ldi	r27, 0x00	; 0
     c0e:	eb e0       	ldi	r30, 0x0B	; 11
     c10:	f6 e0       	ldi	r31, 0x06	; 6
     c12:	0c 94 d9 09 	jmp	0x13b2	; 0x13b2 <__prologue_saves__+0x20>
     c16:	6d 8f       	std	Y+29, r22	; 0x1d
     c18:	7e 8f       	std	Y+30, r23	; 0x1e
     c1a:	8f 8f       	std	Y+31, r24	; 0x1f
     c1c:	98 a3       	std	Y+32, r25	; 0x20
     c1e:	29 8f       	std	Y+25, r18	; 0x19
     c20:	3a 8f       	std	Y+26, r19	; 0x1a
     c22:	4b 8f       	std	Y+27, r20	; 0x1b
     c24:	5c 8f       	std	Y+28, r21	; 0x1c
     c26:	be 01       	movw	r22, r28
     c28:	6f 5e       	subi	r22, 0xEF	; 239
     c2a:	7f 4f       	sbci	r23, 0xFF	; 255
     c2c:	ce 01       	movw	r24, r28
     c2e:	4d 96       	adiw	r24, 0x1d	; 29
     c30:	0e 94 be 08 	call	0x117c	; 0x117c <__unpack_f>
     c34:	be 01       	movw	r22, r28
     c36:	67 5f       	subi	r22, 0xF7	; 247
     c38:	7f 4f       	sbci	r23, 0xFF	; 255
     c3a:	ce 01       	movw	r24, r28
     c3c:	49 96       	adiw	r24, 0x19	; 25
     c3e:	0e 94 be 08 	call	0x117c	; 0x117c <__unpack_f>
     c42:	8a 85       	ldd	r24, Y+10	; 0x0a
     c44:	91 e0       	ldi	r25, 0x01	; 1
     c46:	89 27       	eor	r24, r25
     c48:	8a 87       	std	Y+10, r24	; 0x0a
     c4a:	ae 01       	movw	r20, r28
     c4c:	4f 5f       	subi	r20, 0xFF	; 255
     c4e:	5f 4f       	sbci	r21, 0xFF	; 255
     c50:	be 01       	movw	r22, r28
     c52:	67 5f       	subi	r22, 0xF7	; 247
     c54:	7f 4f       	sbci	r23, 0xFF	; 255
     c56:	ce 01       	movw	r24, r28
     c58:	41 96       	adiw	r24, 0x11	; 17
     c5a:	0e 94 7d 04 	call	0x8fa	; 0x8fa <_fpadd_parts>
     c5e:	0e 94 f4 07 	call	0xfe8	; 0xfe8 <__pack_f>
     c62:	a0 96       	adiw	r28, 0x20	; 32
     c64:	e2 e0       	ldi	r30, 0x02	; 2
     c66:	0c 94 f5 09 	jmp	0x13ea	; 0x13ea <__epilogue_restores__+0x20>

00000c6a <__mulsf3>:
     c6a:	a0 e2       	ldi	r26, 0x20	; 32
     c6c:	b0 e0       	ldi	r27, 0x00	; 0
     c6e:	eb e3       	ldi	r30, 0x3B	; 59
     c70:	f6 e0       	ldi	r31, 0x06	; 6
     c72:	0c 94 cb 09 	jmp	0x1396	; 0x1396 <__prologue_saves__+0x4>
     c76:	6d 8f       	std	Y+29, r22	; 0x1d
     c78:	7e 8f       	std	Y+30, r23	; 0x1e
     c7a:	8f 8f       	std	Y+31, r24	; 0x1f
     c7c:	98 a3       	std	Y+32, r25	; 0x20
     c7e:	29 8f       	std	Y+25, r18	; 0x19
     c80:	3a 8f       	std	Y+26, r19	; 0x1a
     c82:	4b 8f       	std	Y+27, r20	; 0x1b
     c84:	5c 8f       	std	Y+28, r21	; 0x1c
     c86:	be 01       	movw	r22, r28
     c88:	6f 5e       	subi	r22, 0xEF	; 239
     c8a:	7f 4f       	sbci	r23, 0xFF	; 255
     c8c:	ce 01       	movw	r24, r28
     c8e:	4d 96       	adiw	r24, 0x1d	; 29
     c90:	0e 94 be 08 	call	0x117c	; 0x117c <__unpack_f>
     c94:	be 01       	movw	r22, r28
     c96:	67 5f       	subi	r22, 0xF7	; 247
     c98:	7f 4f       	sbci	r23, 0xFF	; 255
     c9a:	ce 01       	movw	r24, r28
     c9c:	49 96       	adiw	r24, 0x19	; 25
     c9e:	0e 94 be 08 	call	0x117c	; 0x117c <__unpack_f>
     ca2:	99 89       	ldd	r25, Y+17	; 0x11
     ca4:	92 30       	cpi	r25, 0x02	; 2
     ca6:	08 f4       	brcc	.+2      	; 0xcaa <__mulsf3+0x40>
     ca8:	12 c0       	rjmp	.+36     	; 0xcce <__mulsf3+0x64>
     caa:	89 85       	ldd	r24, Y+9	; 0x09
     cac:	82 30       	cpi	r24, 0x02	; 2
     cae:	08 f4       	brcc	.+2      	; 0xcb2 <__mulsf3+0x48>
     cb0:	1a c0       	rjmp	.+52     	; 0xce6 <__mulsf3+0x7c>
     cb2:	94 30       	cpi	r25, 0x04	; 4
     cb4:	21 f4       	brne	.+8      	; 0xcbe <__mulsf3+0x54>
     cb6:	82 30       	cpi	r24, 0x02	; 2
     cb8:	09 f4       	brne	.+2      	; 0xcbc <__mulsf3+0x52>
     cba:	b4 c0       	rjmp	.+360    	; 0xe24 <__mulsf3+0x1ba>
     cbc:	08 c0       	rjmp	.+16     	; 0xcce <__mulsf3+0x64>
     cbe:	84 30       	cpi	r24, 0x04	; 4
     cc0:	21 f4       	brne	.+8      	; 0xcca <__mulsf3+0x60>
     cc2:	92 30       	cpi	r25, 0x02	; 2
     cc4:	09 f4       	brne	.+2      	; 0xcc8 <__mulsf3+0x5e>
     cc6:	ae c0       	rjmp	.+348    	; 0xe24 <__mulsf3+0x1ba>
     cc8:	0e c0       	rjmp	.+28     	; 0xce6 <__mulsf3+0x7c>
     cca:	92 30       	cpi	r25, 0x02	; 2
     ccc:	51 f4       	brne	.+20     	; 0xce2 <__mulsf3+0x78>
     cce:	81 e0       	ldi	r24, 0x01	; 1
     cd0:	2a 89       	ldd	r18, Y+18	; 0x12
     cd2:	9a 85       	ldd	r25, Y+10	; 0x0a
     cd4:	29 13       	cpse	r18, r25
     cd6:	01 c0       	rjmp	.+2      	; 0xcda <__mulsf3+0x70>
     cd8:	80 e0       	ldi	r24, 0x00	; 0
     cda:	8a 8b       	std	Y+18, r24	; 0x12
     cdc:	ce 01       	movw	r24, r28
     cde:	41 96       	adiw	r24, 0x11	; 17
     ce0:	a3 c0       	rjmp	.+326    	; 0xe28 <__mulsf3+0x1be>
     ce2:	82 30       	cpi	r24, 0x02	; 2
     ce4:	51 f4       	brne	.+20     	; 0xcfa <__mulsf3+0x90>
     ce6:	81 e0       	ldi	r24, 0x01	; 1
     ce8:	2a 89       	ldd	r18, Y+18	; 0x12
     cea:	9a 85       	ldd	r25, Y+10	; 0x0a
     cec:	29 13       	cpse	r18, r25
     cee:	01 c0       	rjmp	.+2      	; 0xcf2 <__mulsf3+0x88>
     cf0:	80 e0       	ldi	r24, 0x00	; 0
     cf2:	8a 87       	std	Y+10, r24	; 0x0a
     cf4:	ce 01       	movw	r24, r28
     cf6:	09 96       	adiw	r24, 0x09	; 9
     cf8:	97 c0       	rjmp	.+302    	; 0xe28 <__mulsf3+0x1be>
     cfa:	8d 88       	ldd	r8, Y+21	; 0x15
     cfc:	9e 88       	ldd	r9, Y+22	; 0x16
     cfe:	af 88       	ldd	r10, Y+23	; 0x17
     d00:	b8 8c       	ldd	r11, Y+24	; 0x18
     d02:	0d 85       	ldd	r16, Y+13	; 0x0d
     d04:	1e 85       	ldd	r17, Y+14	; 0x0e
     d06:	2f 85       	ldd	r18, Y+15	; 0x0f
     d08:	38 89       	ldd	r19, Y+16	; 0x10
     d0a:	e0 e2       	ldi	r30, 0x20	; 32
     d0c:	f0 e0       	ldi	r31, 0x00	; 0
     d0e:	80 e0       	ldi	r24, 0x00	; 0
     d10:	90 e0       	ldi	r25, 0x00	; 0
     d12:	dc 01       	movw	r26, r24
     d14:	c1 2c       	mov	r12, r1
     d16:	d1 2c       	mov	r13, r1
     d18:	76 01       	movw	r14, r12
     d1a:	40 e0       	ldi	r20, 0x00	; 0
     d1c:	50 e0       	ldi	r21, 0x00	; 0
     d1e:	ba 01       	movw	r22, r20
     d20:	80 fe       	sbrs	r8, 0
     d22:	18 c0       	rjmp	.+48     	; 0xd54 <__mulsf3+0xea>
     d24:	40 0f       	add	r20, r16
     d26:	51 1f       	adc	r21, r17
     d28:	62 1f       	adc	r22, r18
     d2a:	73 1f       	adc	r23, r19
     d2c:	8c 0d       	add	r24, r12
     d2e:	9d 1d       	adc	r25, r13
     d30:	ae 1d       	adc	r26, r14
     d32:	bf 1d       	adc	r27, r15
     d34:	41 2c       	mov	r4, r1
     d36:	51 2c       	mov	r5, r1
     d38:	32 01       	movw	r6, r4
     d3a:	43 94       	inc	r4
     d3c:	40 17       	cp	r20, r16
     d3e:	51 07       	cpc	r21, r17
     d40:	62 07       	cpc	r22, r18
     d42:	73 07       	cpc	r23, r19
     d44:	18 f0       	brcs	.+6      	; 0xd4c <__mulsf3+0xe2>
     d46:	41 2c       	mov	r4, r1
     d48:	51 2c       	mov	r5, r1
     d4a:	32 01       	movw	r6, r4
     d4c:	84 0d       	add	r24, r4
     d4e:	95 1d       	adc	r25, r5
     d50:	a6 1d       	adc	r26, r6
     d52:	b7 1d       	adc	r27, r7
     d54:	cc 0c       	add	r12, r12
     d56:	dd 1c       	adc	r13, r13
     d58:	ee 1c       	adc	r14, r14
     d5a:	ff 1c       	adc	r15, r15
     d5c:	37 ff       	sbrs	r19, 7
     d5e:	02 c0       	rjmp	.+4      	; 0xd64 <__mulsf3+0xfa>
     d60:	68 94       	set
     d62:	c0 f8       	bld	r12, 0
     d64:	00 0f       	add	r16, r16
     d66:	11 1f       	adc	r17, r17
     d68:	22 1f       	adc	r18, r18
     d6a:	33 1f       	adc	r19, r19
     d6c:	b6 94       	lsr	r11
     d6e:	a7 94       	ror	r10
     d70:	97 94       	ror	r9
     d72:	87 94       	ror	r8
     d74:	31 97       	sbiw	r30, 0x01	; 1
     d76:	a1 f6       	brne	.-88     	; 0xd20 <__mulsf3+0xb6>
     d78:	2b 89       	ldd	r18, Y+19	; 0x13
     d7a:	3c 89       	ldd	r19, Y+20	; 0x14
     d7c:	eb 85       	ldd	r30, Y+11	; 0x0b
     d7e:	fc 85       	ldd	r31, Y+12	; 0x0c
     d80:	2e 0f       	add	r18, r30
     d82:	3f 1f       	adc	r19, r31
     d84:	2e 5f       	subi	r18, 0xFE	; 254
     d86:	3f 4f       	sbci	r19, 0xFF	; 255
     d88:	3c 83       	std	Y+4, r19	; 0x04
     d8a:	2b 83       	std	Y+3, r18	; 0x03
     d8c:	21 e0       	ldi	r18, 0x01	; 1
     d8e:	ea 89       	ldd	r30, Y+18	; 0x12
     d90:	3a 85       	ldd	r19, Y+10	; 0x0a
     d92:	e3 13       	cpse	r30, r19
     d94:	01 c0       	rjmp	.+2      	; 0xd98 <__mulsf3+0x12e>
     d96:	20 e0       	ldi	r18, 0x00	; 0
     d98:	2a 83       	std	Y+2, r18	; 0x02
     d9a:	eb 81       	ldd	r30, Y+3	; 0x03
     d9c:	fc 81       	ldd	r31, Y+4	; 0x04
     d9e:	0c c0       	rjmp	.+24     	; 0xdb8 <__mulsf3+0x14e>
     da0:	80 ff       	sbrs	r24, 0
     da2:	05 c0       	rjmp	.+10     	; 0xdae <__mulsf3+0x144>
     da4:	76 95       	lsr	r23
     da6:	67 95       	ror	r22
     da8:	57 95       	ror	r21
     daa:	47 95       	ror	r20
     dac:	70 68       	ori	r23, 0x80	; 128
     dae:	b6 95       	lsr	r27
     db0:	a7 95       	ror	r26
     db2:	97 95       	ror	r25
     db4:	87 95       	ror	r24
     db6:	31 96       	adiw	r30, 0x01	; 1
     db8:	b7 fd       	sbrc	r27, 7
     dba:	f2 cf       	rjmp	.-28     	; 0xda0 <__mulsf3+0x136>
     dbc:	9f 01       	movw	r18, r30
     dbe:	0c c0       	rjmp	.+24     	; 0xdd8 <__mulsf3+0x16e>
     dc0:	88 0f       	add	r24, r24
     dc2:	99 1f       	adc	r25, r25
     dc4:	aa 1f       	adc	r26, r26
     dc6:	bb 1f       	adc	r27, r27
     dc8:	77 fd       	sbrc	r23, 7
     dca:	81 60       	ori	r24, 0x01	; 1
     dcc:	44 0f       	add	r20, r20
     dce:	55 1f       	adc	r21, r21
     dd0:	66 1f       	adc	r22, r22
     dd2:	77 1f       	adc	r23, r23
     dd4:	21 50       	subi	r18, 0x01	; 1
     dd6:	31 09       	sbc	r19, r1
     dd8:	00 97       	sbiw	r24, 0x00	; 0
     dda:	a1 05       	cpc	r26, r1
     ddc:	e0 e4       	ldi	r30, 0x40	; 64
     dde:	be 07       	cpc	r27, r30
     de0:	78 f3       	brcs	.-34     	; 0xdc0 <__mulsf3+0x156>
     de2:	2b 83       	std	Y+3, r18	; 0x03
     de4:	3c 83       	std	Y+4, r19	; 0x04
     de6:	8c 01       	movw	r16, r24
     de8:	9d 01       	movw	r18, r26
     dea:	0f 77       	andi	r16, 0x7F	; 127
     dec:	11 27       	eor	r17, r17
     dee:	22 27       	eor	r18, r18
     df0:	33 27       	eor	r19, r19
     df2:	00 34       	cpi	r16, 0x40	; 64
     df4:	11 05       	cpc	r17, r1
     df6:	21 05       	cpc	r18, r1
     df8:	31 05       	cpc	r19, r1
     dfa:	59 f4       	brne	.+22     	; 0xe12 <__mulsf3+0x1a8>
     dfc:	87 fd       	sbrc	r24, 7
     dfe:	09 c0       	rjmp	.+18     	; 0xe12 <__mulsf3+0x1a8>
     e00:	45 2b       	or	r20, r21
     e02:	46 2b       	or	r20, r22
     e04:	47 2b       	or	r20, r23
     e06:	29 f0       	breq	.+10     	; 0xe12 <__mulsf3+0x1a8>
     e08:	80 5c       	subi	r24, 0xC0	; 192
     e0a:	9f 4f       	sbci	r25, 0xFF	; 255
     e0c:	af 4f       	sbci	r26, 0xFF	; 255
     e0e:	bf 4f       	sbci	r27, 0xFF	; 255
     e10:	80 78       	andi	r24, 0x80	; 128
     e12:	8d 83       	std	Y+5, r24	; 0x05
     e14:	9e 83       	std	Y+6, r25	; 0x06
     e16:	af 83       	std	Y+7, r26	; 0x07
     e18:	b8 87       	std	Y+8, r27	; 0x08
     e1a:	83 e0       	ldi	r24, 0x03	; 3
     e1c:	89 83       	std	Y+1, r24	; 0x01
     e1e:	ce 01       	movw	r24, r28
     e20:	01 96       	adiw	r24, 0x01	; 1
     e22:	02 c0       	rjmp	.+4      	; 0xe28 <__mulsf3+0x1be>
     e24:	80 e4       	ldi	r24, 0x40	; 64
     e26:	91 e0       	ldi	r25, 0x01	; 1
     e28:	0e 94 f4 07 	call	0xfe8	; 0xfe8 <__pack_f>
     e2c:	a0 96       	adiw	r28, 0x20	; 32
     e2e:	e0 e1       	ldi	r30, 0x10	; 16
     e30:	0c 94 e7 09 	jmp	0x13ce	; 0x13ce <__epilogue_restores__+0x4>

00000e34 <__gesf2>:
     e34:	a8 e1       	ldi	r26, 0x18	; 24
     e36:	b0 e0       	ldi	r27, 0x00	; 0
     e38:	e0 e2       	ldi	r30, 0x20	; 32
     e3a:	f7 e0       	ldi	r31, 0x07	; 7
     e3c:	0c 94 d9 09 	jmp	0x13b2	; 0x13b2 <__prologue_saves__+0x20>
     e40:	6d 8b       	std	Y+21, r22	; 0x15
     e42:	7e 8b       	std	Y+22, r23	; 0x16
     e44:	8f 8b       	std	Y+23, r24	; 0x17
     e46:	98 8f       	std	Y+24, r25	; 0x18
     e48:	29 8b       	std	Y+17, r18	; 0x11
     e4a:	3a 8b       	std	Y+18, r19	; 0x12
     e4c:	4b 8b       	std	Y+19, r20	; 0x13
     e4e:	5c 8b       	std	Y+20, r21	; 0x14
     e50:	be 01       	movw	r22, r28
     e52:	67 5f       	subi	r22, 0xF7	; 247
     e54:	7f 4f       	sbci	r23, 0xFF	; 255
     e56:	ce 01       	movw	r24, r28
     e58:	45 96       	adiw	r24, 0x15	; 21
     e5a:	0e 94 be 08 	call	0x117c	; 0x117c <__unpack_f>
     e5e:	be 01       	movw	r22, r28
     e60:	6f 5f       	subi	r22, 0xFF	; 255
     e62:	7f 4f       	sbci	r23, 0xFF	; 255
     e64:	ce 01       	movw	r24, r28
     e66:	41 96       	adiw	r24, 0x11	; 17
     e68:	0e 94 be 08 	call	0x117c	; 0x117c <__unpack_f>
     e6c:	89 85       	ldd	r24, Y+9	; 0x09
     e6e:	82 30       	cpi	r24, 0x02	; 2
     e70:	58 f0       	brcs	.+22     	; 0xe88 <__gesf2+0x54>
     e72:	89 81       	ldd	r24, Y+1	; 0x01
     e74:	82 30       	cpi	r24, 0x02	; 2
     e76:	40 f0       	brcs	.+16     	; 0xe88 <__gesf2+0x54>
     e78:	be 01       	movw	r22, r28
     e7a:	6f 5f       	subi	r22, 0xFF	; 255
     e7c:	7f 4f       	sbci	r23, 0xFF	; 255
     e7e:	ce 01       	movw	r24, r28
     e80:	09 96       	adiw	r24, 0x09	; 9
     e82:	0e 94 2d 09 	call	0x125a	; 0x125a <__fpcmp_parts_f>
     e86:	01 c0       	rjmp	.+2      	; 0xe8a <__gesf2+0x56>
     e88:	8f ef       	ldi	r24, 0xFF	; 255
     e8a:	68 96       	adiw	r28, 0x18	; 24
     e8c:	e2 e0       	ldi	r30, 0x02	; 2
     e8e:	0c 94 f5 09 	jmp	0x13ea	; 0x13ea <__epilogue_restores__+0x20>

00000e92 <__floatsisf>:
     e92:	a8 e0       	ldi	r26, 0x08	; 8
     e94:	b0 e0       	ldi	r27, 0x00	; 0
     e96:	ef e4       	ldi	r30, 0x4F	; 79
     e98:	f7 e0       	ldi	r31, 0x07	; 7
     e9a:	0c 94 d7 09 	jmp	0x13ae	; 0x13ae <__prologue_saves__+0x1c>
     e9e:	23 e0       	ldi	r18, 0x03	; 3
     ea0:	29 83       	std	Y+1, r18	; 0x01
     ea2:	8b 01       	movw	r16, r22
     ea4:	9c 01       	movw	r18, r24
     ea6:	00 27       	eor	r16, r16
     ea8:	37 fd       	sbrc	r19, 7
     eaa:	03 95       	inc	r16
     eac:	11 27       	eor	r17, r17
     eae:	22 27       	eor	r18, r18
     eb0:	33 27       	eor	r19, r19
     eb2:	40 2f       	mov	r20, r16
     eb4:	0a 83       	std	Y+2, r16	; 0x02
     eb6:	61 15       	cp	r22, r1
     eb8:	71 05       	cpc	r23, r1
     eba:	81 05       	cpc	r24, r1
     ebc:	91 05       	cpc	r25, r1
     ebe:	19 f4       	brne	.+6      	; 0xec6 <__floatsisf+0x34>
     ec0:	82 e0       	ldi	r24, 0x02	; 2
     ec2:	89 83       	std	Y+1, r24	; 0x01
     ec4:	35 c0       	rjmp	.+106    	; 0xf30 <__floatsisf+0x9e>
     ec6:	2e e1       	ldi	r18, 0x1E	; 30
     ec8:	30 e0       	ldi	r19, 0x00	; 0
     eca:	3c 83       	std	Y+4, r19	; 0x04
     ecc:	2b 83       	std	Y+3, r18	; 0x03
     ece:	44 23       	and	r20, r20
     ed0:	71 f0       	breq	.+28     	; 0xeee <__floatsisf+0x5c>
     ed2:	61 15       	cp	r22, r1
     ed4:	71 05       	cpc	r23, r1
     ed6:	81 05       	cpc	r24, r1
     ed8:	20 e8       	ldi	r18, 0x80	; 128
     eda:	92 07       	cpc	r25, r18
     edc:	71 f1       	breq	.+92     	; 0xf3a <__floatsisf+0xa8>
     ede:	00 27       	eor	r16, r16
     ee0:	11 27       	eor	r17, r17
     ee2:	98 01       	movw	r18, r16
     ee4:	06 1b       	sub	r16, r22
     ee6:	17 0b       	sbc	r17, r23
     ee8:	28 0b       	sbc	r18, r24
     eea:	39 0b       	sbc	r19, r25
     eec:	02 c0       	rjmp	.+4      	; 0xef2 <__floatsisf+0x60>
     eee:	8b 01       	movw	r16, r22
     ef0:	9c 01       	movw	r18, r24
     ef2:	c9 01       	movw	r24, r18
     ef4:	b8 01       	movw	r22, r16
     ef6:	0e 94 ae 09 	call	0x135c	; 0x135c <__clzsi2>
     efa:	01 97       	sbiw	r24, 0x01	; 1
     efc:	18 16       	cp	r1, r24
     efe:	19 06       	cpc	r1, r25
     f00:	2c f0       	brlt	.+10     	; 0xf0c <__floatsisf+0x7a>
     f02:	0d 83       	std	Y+5, r16	; 0x05
     f04:	1e 83       	std	Y+6, r17	; 0x06
     f06:	2f 83       	std	Y+7, r18	; 0x07
     f08:	38 87       	std	Y+8, r19	; 0x08
     f0a:	12 c0       	rjmp	.+36     	; 0xf30 <__floatsisf+0x9e>
     f0c:	08 2e       	mov	r0, r24
     f0e:	04 c0       	rjmp	.+8      	; 0xf18 <__floatsisf+0x86>
     f10:	00 0f       	add	r16, r16
     f12:	11 1f       	adc	r17, r17
     f14:	22 1f       	adc	r18, r18
     f16:	33 1f       	adc	r19, r19
     f18:	0a 94       	dec	r0
     f1a:	d2 f7       	brpl	.-12     	; 0xf10 <__floatsisf+0x7e>
     f1c:	0d 83       	std	Y+5, r16	; 0x05
     f1e:	1e 83       	std	Y+6, r17	; 0x06
     f20:	2f 83       	std	Y+7, r18	; 0x07
     f22:	38 87       	std	Y+8, r19	; 0x08
     f24:	2e e1       	ldi	r18, 0x1E	; 30
     f26:	30 e0       	ldi	r19, 0x00	; 0
     f28:	28 1b       	sub	r18, r24
     f2a:	39 0b       	sbc	r19, r25
     f2c:	3c 83       	std	Y+4, r19	; 0x04
     f2e:	2b 83       	std	Y+3, r18	; 0x03
     f30:	ce 01       	movw	r24, r28
     f32:	01 96       	adiw	r24, 0x01	; 1
     f34:	0e 94 f4 07 	call	0xfe8	; 0xfe8 <__pack_f>
     f38:	04 c0       	rjmp	.+8      	; 0xf42 <__floatsisf+0xb0>
     f3a:	60 e0       	ldi	r22, 0x00	; 0
     f3c:	70 e0       	ldi	r23, 0x00	; 0
     f3e:	80 e0       	ldi	r24, 0x00	; 0
     f40:	9f ec       	ldi	r25, 0xCF	; 207
     f42:	28 96       	adiw	r28, 0x08	; 8
     f44:	e4 e0       	ldi	r30, 0x04	; 4
     f46:	0c 94 f3 09 	jmp	0x13e6	; 0x13e6 <__epilogue_restores__+0x1c>

00000f4a <__fixsfsi>:
     f4a:	ac e0       	ldi	r26, 0x0C	; 12
     f4c:	b0 e0       	ldi	r27, 0x00	; 0
     f4e:	eb ea       	ldi	r30, 0xAB	; 171
     f50:	f7 e0       	ldi	r31, 0x07	; 7
     f52:	0c 94 d7 09 	jmp	0x13ae	; 0x13ae <__prologue_saves__+0x1c>
     f56:	69 87       	std	Y+9, r22	; 0x09
     f58:	7a 87       	std	Y+10, r23	; 0x0a
     f5a:	8b 87       	std	Y+11, r24	; 0x0b
     f5c:	9c 87       	std	Y+12, r25	; 0x0c
     f5e:	be 01       	movw	r22, r28
     f60:	6f 5f       	subi	r22, 0xFF	; 255
     f62:	7f 4f       	sbci	r23, 0xFF	; 255
     f64:	ce 01       	movw	r24, r28
     f66:	09 96       	adiw	r24, 0x09	; 9
     f68:	0e 94 be 08 	call	0x117c	; 0x117c <__unpack_f>
     f6c:	89 81       	ldd	r24, Y+1	; 0x01
     f6e:	82 30       	cpi	r24, 0x02	; 2
     f70:	91 f1       	breq	.+100    	; 0xfd6 <__fixsfsi+0x8c>
     f72:	82 30       	cpi	r24, 0x02	; 2
     f74:	80 f1       	brcs	.+96     	; 0xfd6 <__fixsfsi+0x8c>
     f76:	84 30       	cpi	r24, 0x04	; 4
     f78:	41 f4       	brne	.+16     	; 0xf8a <__fixsfsi+0x40>
     f7a:	8a 81       	ldd	r24, Y+2	; 0x02
     f7c:	88 23       	and	r24, r24
     f7e:	31 f1       	breq	.+76     	; 0xfcc <__fixsfsi+0x82>
     f80:	00 e0       	ldi	r16, 0x00	; 0
     f82:	10 e0       	ldi	r17, 0x00	; 0
     f84:	20 e0       	ldi	r18, 0x00	; 0
     f86:	30 e8       	ldi	r19, 0x80	; 128
     f88:	29 c0       	rjmp	.+82     	; 0xfdc <__fixsfsi+0x92>
     f8a:	2b 81       	ldd	r18, Y+3	; 0x03
     f8c:	3c 81       	ldd	r19, Y+4	; 0x04
     f8e:	37 fd       	sbrc	r19, 7
     f90:	22 c0       	rjmp	.+68     	; 0xfd6 <__fixsfsi+0x8c>
     f92:	2f 31       	cpi	r18, 0x1F	; 31
     f94:	31 05       	cpc	r19, r1
     f96:	8c f7       	brge	.-30     	; 0xf7a <__fixsfsi+0x30>
     f98:	8e e1       	ldi	r24, 0x1E	; 30
     f9a:	90 e0       	ldi	r25, 0x00	; 0
     f9c:	82 1b       	sub	r24, r18
     f9e:	93 0b       	sbc	r25, r19
     fa0:	0d 81       	ldd	r16, Y+5	; 0x05
     fa2:	1e 81       	ldd	r17, Y+6	; 0x06
     fa4:	2f 81       	ldd	r18, Y+7	; 0x07
     fa6:	38 85       	ldd	r19, Y+8	; 0x08
     fa8:	04 c0       	rjmp	.+8      	; 0xfb2 <__fixsfsi+0x68>
     faa:	36 95       	lsr	r19
     fac:	27 95       	ror	r18
     fae:	17 95       	ror	r17
     fb0:	07 95       	ror	r16
     fb2:	8a 95       	dec	r24
     fb4:	d2 f7       	brpl	.-12     	; 0xfaa <__fixsfsi+0x60>
     fb6:	8a 81       	ldd	r24, Y+2	; 0x02
     fb8:	88 23       	and	r24, r24
     fba:	81 f0       	breq	.+32     	; 0xfdc <__fixsfsi+0x92>
     fbc:	30 95       	com	r19
     fbe:	20 95       	com	r18
     fc0:	10 95       	com	r17
     fc2:	01 95       	neg	r16
     fc4:	1f 4f       	sbci	r17, 0xFF	; 255
     fc6:	2f 4f       	sbci	r18, 0xFF	; 255
     fc8:	3f 4f       	sbci	r19, 0xFF	; 255
     fca:	08 c0       	rjmp	.+16     	; 0xfdc <__fixsfsi+0x92>
     fcc:	0f ef       	ldi	r16, 0xFF	; 255
     fce:	1f ef       	ldi	r17, 0xFF	; 255
     fd0:	2f ef       	ldi	r18, 0xFF	; 255
     fd2:	3f e7       	ldi	r19, 0x7F	; 127
     fd4:	03 c0       	rjmp	.+6      	; 0xfdc <__fixsfsi+0x92>
     fd6:	00 e0       	ldi	r16, 0x00	; 0
     fd8:	10 e0       	ldi	r17, 0x00	; 0
     fda:	98 01       	movw	r18, r16
     fdc:	b8 01       	movw	r22, r16
     fde:	c9 01       	movw	r24, r18
     fe0:	2c 96       	adiw	r28, 0x0c	; 12
     fe2:	e4 e0       	ldi	r30, 0x04	; 4
     fe4:	0c 94 f3 09 	jmp	0x13e6	; 0x13e6 <__epilogue_restores__+0x1c>

00000fe8 <__pack_f>:
     fe8:	0f 93       	push	r16
     fea:	1f 93       	push	r17
     fec:	cf 93       	push	r28
     fee:	df 93       	push	r29
     ff0:	dc 01       	movw	r26, r24
     ff2:	14 96       	adiw	r26, 0x04	; 4
     ff4:	4d 91       	ld	r20, X+
     ff6:	5d 91       	ld	r21, X+
     ff8:	6d 91       	ld	r22, X+
     ffa:	7c 91       	ld	r23, X
     ffc:	17 97       	sbiw	r26, 0x07	; 7
     ffe:	11 96       	adiw	r26, 0x01	; 1
    1000:	ec 91       	ld	r30, X
    1002:	11 97       	sbiw	r26, 0x01	; 1
    1004:	8c 91       	ld	r24, X
    1006:	82 30       	cpi	r24, 0x02	; 2
    1008:	20 f4       	brcc	.+8      	; 0x1012 <__pack_f+0x2a>
    100a:	60 61       	ori	r22, 0x10	; 16
    100c:	8f ef       	ldi	r24, 0xFF	; 255
    100e:	90 e0       	ldi	r25, 0x00	; 0
    1010:	a6 c0       	rjmp	.+332    	; 0x115e <__pack_f+0x176>
    1012:	84 30       	cpi	r24, 0x04	; 4
    1014:	09 f4       	brne	.+2      	; 0x1018 <__pack_f+0x30>
    1016:	9e c0       	rjmp	.+316    	; 0x1154 <__pack_f+0x16c>
    1018:	82 30       	cpi	r24, 0x02	; 2
    101a:	09 f4       	brne	.+2      	; 0x101e <__pack_f+0x36>
    101c:	95 c0       	rjmp	.+298    	; 0x1148 <__pack_f+0x160>
    101e:	41 15       	cp	r20, r1
    1020:	51 05       	cpc	r21, r1
    1022:	61 05       	cpc	r22, r1
    1024:	71 05       	cpc	r23, r1
    1026:	09 f4       	brne	.+2      	; 0x102a <__pack_f+0x42>
    1028:	92 c0       	rjmp	.+292    	; 0x114e <__pack_f+0x166>
    102a:	12 96       	adiw	r26, 0x02	; 2
    102c:	2d 91       	ld	r18, X+
    102e:	3c 91       	ld	r19, X
    1030:	13 97       	sbiw	r26, 0x03	; 3
    1032:	22 38       	cpi	r18, 0x82	; 130
    1034:	8f ef       	ldi	r24, 0xFF	; 255
    1036:	38 07       	cpc	r19, r24
    1038:	0c f0       	brlt	.+2      	; 0x103c <__pack_f+0x54>
    103a:	58 c0       	rjmp	.+176    	; 0x10ec <__pack_f+0x104>
    103c:	c2 e8       	ldi	r28, 0x82	; 130
    103e:	df ef       	ldi	r29, 0xFF	; 255
    1040:	c2 1b       	sub	r28, r18
    1042:	d3 0b       	sbc	r29, r19
    1044:	ca 31       	cpi	r28, 0x1A	; 26
    1046:	d1 05       	cpc	r29, r1
    1048:	6c f5       	brge	.+90     	; 0x10a4 <__pack_f+0xbc>
    104a:	8a 01       	movw	r16, r20
    104c:	9b 01       	movw	r18, r22
    104e:	0c 2e       	mov	r0, r28
    1050:	04 c0       	rjmp	.+8      	; 0x105a <__pack_f+0x72>
    1052:	36 95       	lsr	r19
    1054:	27 95       	ror	r18
    1056:	17 95       	ror	r17
    1058:	07 95       	ror	r16
    105a:	0a 94       	dec	r0
    105c:	d2 f7       	brpl	.-12     	; 0x1052 <__pack_f+0x6a>
    105e:	81 e0       	ldi	r24, 0x01	; 1
    1060:	90 e0       	ldi	r25, 0x00	; 0
    1062:	a0 e0       	ldi	r26, 0x00	; 0
    1064:	b0 e0       	ldi	r27, 0x00	; 0
    1066:	0c 2e       	mov	r0, r28
    1068:	04 c0       	rjmp	.+8      	; 0x1072 <__pack_f+0x8a>
    106a:	88 0f       	add	r24, r24
    106c:	99 1f       	adc	r25, r25
    106e:	aa 1f       	adc	r26, r26
    1070:	bb 1f       	adc	r27, r27
    1072:	0a 94       	dec	r0
    1074:	d2 f7       	brpl	.-12     	; 0x106a <__pack_f+0x82>
    1076:	01 97       	sbiw	r24, 0x01	; 1
    1078:	a1 09       	sbc	r26, r1
    107a:	b1 09       	sbc	r27, r1
    107c:	84 23       	and	r24, r20
    107e:	95 23       	and	r25, r21
    1080:	a6 23       	and	r26, r22
    1082:	b7 23       	and	r27, r23
    1084:	41 e0       	ldi	r20, 0x01	; 1
    1086:	50 e0       	ldi	r21, 0x00	; 0
    1088:	60 e0       	ldi	r22, 0x00	; 0
    108a:	70 e0       	ldi	r23, 0x00	; 0
    108c:	89 2b       	or	r24, r25
    108e:	8a 2b       	or	r24, r26
    1090:	8b 2b       	or	r24, r27
    1092:	19 f4       	brne	.+6      	; 0x109a <__pack_f+0xb2>
    1094:	40 e0       	ldi	r20, 0x00	; 0
    1096:	50 e0       	ldi	r21, 0x00	; 0
    1098:	ba 01       	movw	r22, r20
    109a:	40 2b       	or	r20, r16
    109c:	51 2b       	or	r21, r17
    109e:	62 2b       	or	r22, r18
    10a0:	73 2b       	or	r23, r19
    10a2:	03 c0       	rjmp	.+6      	; 0x10aa <__pack_f+0xc2>
    10a4:	40 e0       	ldi	r20, 0x00	; 0
    10a6:	50 e0       	ldi	r21, 0x00	; 0
    10a8:	ba 01       	movw	r22, r20
    10aa:	db 01       	movw	r26, r22
    10ac:	ca 01       	movw	r24, r20
    10ae:	8f 77       	andi	r24, 0x7F	; 127
    10b0:	99 27       	eor	r25, r25
    10b2:	aa 27       	eor	r26, r26
    10b4:	bb 27       	eor	r27, r27
    10b6:	80 34       	cpi	r24, 0x40	; 64
    10b8:	91 05       	cpc	r25, r1
    10ba:	a1 05       	cpc	r26, r1
    10bc:	b1 05       	cpc	r27, r1
    10be:	39 f4       	brne	.+14     	; 0x10ce <__pack_f+0xe6>
    10c0:	47 ff       	sbrs	r20, 7
    10c2:	09 c0       	rjmp	.+18     	; 0x10d6 <__pack_f+0xee>
    10c4:	40 5c       	subi	r20, 0xC0	; 192
    10c6:	5f 4f       	sbci	r21, 0xFF	; 255
    10c8:	6f 4f       	sbci	r22, 0xFF	; 255
    10ca:	7f 4f       	sbci	r23, 0xFF	; 255
    10cc:	04 c0       	rjmp	.+8      	; 0x10d6 <__pack_f+0xee>
    10ce:	41 5c       	subi	r20, 0xC1	; 193
    10d0:	5f 4f       	sbci	r21, 0xFF	; 255
    10d2:	6f 4f       	sbci	r22, 0xFF	; 255
    10d4:	7f 4f       	sbci	r23, 0xFF	; 255
    10d6:	81 e0       	ldi	r24, 0x01	; 1
    10d8:	90 e0       	ldi	r25, 0x00	; 0
    10da:	41 15       	cp	r20, r1
    10dc:	51 05       	cpc	r21, r1
    10de:	61 05       	cpc	r22, r1
    10e0:	20 e4       	ldi	r18, 0x40	; 64
    10e2:	72 07       	cpc	r23, r18
    10e4:	48 f5       	brcc	.+82     	; 0x1138 <__pack_f+0x150>
    10e6:	80 e0       	ldi	r24, 0x00	; 0
    10e8:	90 e0       	ldi	r25, 0x00	; 0
    10ea:	26 c0       	rjmp	.+76     	; 0x1138 <__pack_f+0x150>
    10ec:	20 38       	cpi	r18, 0x80	; 128
    10ee:	31 05       	cpc	r19, r1
    10f0:	8c f5       	brge	.+98     	; 0x1154 <__pack_f+0x16c>
    10f2:	db 01       	movw	r26, r22
    10f4:	ca 01       	movw	r24, r20
    10f6:	8f 77       	andi	r24, 0x7F	; 127
    10f8:	99 27       	eor	r25, r25
    10fa:	aa 27       	eor	r26, r26
    10fc:	bb 27       	eor	r27, r27
    10fe:	80 34       	cpi	r24, 0x40	; 64
    1100:	91 05       	cpc	r25, r1
    1102:	a1 05       	cpc	r26, r1
    1104:	b1 05       	cpc	r27, r1
    1106:	39 f4       	brne	.+14     	; 0x1116 <__pack_f+0x12e>
    1108:	47 ff       	sbrs	r20, 7
    110a:	09 c0       	rjmp	.+18     	; 0x111e <__pack_f+0x136>
    110c:	40 5c       	subi	r20, 0xC0	; 192
    110e:	5f 4f       	sbci	r21, 0xFF	; 255
    1110:	6f 4f       	sbci	r22, 0xFF	; 255
    1112:	7f 4f       	sbci	r23, 0xFF	; 255
    1114:	04 c0       	rjmp	.+8      	; 0x111e <__pack_f+0x136>
    1116:	41 5c       	subi	r20, 0xC1	; 193
    1118:	5f 4f       	sbci	r21, 0xFF	; 255
    111a:	6f 4f       	sbci	r22, 0xFF	; 255
    111c:	7f 4f       	sbci	r23, 0xFF	; 255
    111e:	77 fd       	sbrc	r23, 7
    1120:	04 c0       	rjmp	.+8      	; 0x112a <__pack_f+0x142>
    1122:	c9 01       	movw	r24, r18
    1124:	81 58       	subi	r24, 0x81	; 129
    1126:	9f 4f       	sbci	r25, 0xFF	; 255
    1128:	07 c0       	rjmp	.+14     	; 0x1138 <__pack_f+0x150>
    112a:	76 95       	lsr	r23
    112c:	67 95       	ror	r22
    112e:	57 95       	ror	r21
    1130:	47 95       	ror	r20
    1132:	c9 01       	movw	r24, r18
    1134:	80 58       	subi	r24, 0x80	; 128
    1136:	9f 4f       	sbci	r25, 0xFF	; 255
    1138:	97 e0       	ldi	r25, 0x07	; 7
    113a:	76 95       	lsr	r23
    113c:	67 95       	ror	r22
    113e:	57 95       	ror	r21
    1140:	47 95       	ror	r20
    1142:	9a 95       	dec	r25
    1144:	d1 f7       	brne	.-12     	; 0x113a <__pack_f+0x152>
    1146:	0b c0       	rjmp	.+22     	; 0x115e <__pack_f+0x176>
    1148:	80 e0       	ldi	r24, 0x00	; 0
    114a:	90 e0       	ldi	r25, 0x00	; 0
    114c:	05 c0       	rjmp	.+10     	; 0x1158 <__pack_f+0x170>
    114e:	80 e0       	ldi	r24, 0x00	; 0
    1150:	90 e0       	ldi	r25, 0x00	; 0
    1152:	05 c0       	rjmp	.+10     	; 0x115e <__pack_f+0x176>
    1154:	8f ef       	ldi	r24, 0xFF	; 255
    1156:	90 e0       	ldi	r25, 0x00	; 0
    1158:	40 e0       	ldi	r20, 0x00	; 0
    115a:	50 e0       	ldi	r21, 0x00	; 0
    115c:	ba 01       	movw	r22, r20
    115e:	98 2f       	mov	r25, r24
    1160:	96 95       	lsr	r25
    1162:	e0 fb       	bst	r30, 0
    1164:	97 f9       	bld	r25, 7
    1166:	36 2f       	mov	r19, r22
    1168:	80 fb       	bst	r24, 0
    116a:	37 f9       	bld	r19, 7
    116c:	64 2f       	mov	r22, r20
    116e:	75 2f       	mov	r23, r21
    1170:	83 2f       	mov	r24, r19
    1172:	df 91       	pop	r29
    1174:	cf 91       	pop	r28
    1176:	1f 91       	pop	r17
    1178:	0f 91       	pop	r16
    117a:	08 95       	ret

0000117c <__unpack_f>:
    117c:	cf 92       	push	r12
    117e:	df 92       	push	r13
    1180:	ef 92       	push	r14
    1182:	dc 01       	movw	r26, r24
    1184:	fb 01       	movw	r30, r22
    1186:	cc 90       	ld	r12, X
    1188:	11 96       	adiw	r26, 0x01	; 1
    118a:	dc 90       	ld	r13, X
    118c:	11 97       	sbiw	r26, 0x01	; 1
    118e:	12 96       	adiw	r26, 0x02	; 2
    1190:	8c 91       	ld	r24, X
    1192:	12 97       	sbiw	r26, 0x02	; 2
    1194:	3f e7       	ldi	r19, 0x7F	; 127
    1196:	e3 2e       	mov	r14, r19
    1198:	e8 22       	and	r14, r24
    119a:	6e 2d       	mov	r22, r14
    119c:	a6 01       	movw	r20, r12
    119e:	70 e0       	ldi	r23, 0x00	; 0
    11a0:	98 2f       	mov	r25, r24
    11a2:	99 1f       	adc	r25, r25
    11a4:	99 27       	eor	r25, r25
    11a6:	99 1f       	adc	r25, r25
    11a8:	13 96       	adiw	r26, 0x03	; 3
    11aa:	2c 91       	ld	r18, X
    11ac:	82 2f       	mov	r24, r18
    11ae:	88 0f       	add	r24, r24
    11b0:	89 2b       	or	r24, r25
    11b2:	90 e0       	ldi	r25, 0x00	; 0
    11b4:	27 fb       	bst	r18, 7
    11b6:	22 27       	eor	r18, r18
    11b8:	20 f9       	bld	r18, 0
    11ba:	21 83       	std	Z+1, r18	; 0x01
    11bc:	00 97       	sbiw	r24, 0x00	; 0
    11be:	29 f5       	brne	.+74     	; 0x120a <__unpack_f+0x8e>
    11c0:	41 15       	cp	r20, r1
    11c2:	51 05       	cpc	r21, r1
    11c4:	61 05       	cpc	r22, r1
    11c6:	71 05       	cpc	r23, r1
    11c8:	11 f4       	brne	.+4      	; 0x11ce <__unpack_f+0x52>
    11ca:	82 e0       	ldi	r24, 0x02	; 2
    11cc:	27 c0       	rjmp	.+78     	; 0x121c <__unpack_f+0xa0>
    11ce:	82 e8       	ldi	r24, 0x82	; 130
    11d0:	9f ef       	ldi	r25, 0xFF	; 255
    11d2:	93 83       	std	Z+3, r25	; 0x03
    11d4:	82 83       	std	Z+2, r24	; 0x02
    11d6:	27 e0       	ldi	r18, 0x07	; 7
    11d8:	44 0f       	add	r20, r20
    11da:	55 1f       	adc	r21, r21
    11dc:	66 1f       	adc	r22, r22
    11de:	77 1f       	adc	r23, r23
    11e0:	2a 95       	dec	r18
    11e2:	d1 f7       	brne	.-12     	; 0x11d8 <__unpack_f+0x5c>
    11e4:	83 e0       	ldi	r24, 0x03	; 3
    11e6:	80 83       	st	Z, r24
    11e8:	09 c0       	rjmp	.+18     	; 0x11fc <__unpack_f+0x80>
    11ea:	44 0f       	add	r20, r20
    11ec:	55 1f       	adc	r21, r21
    11ee:	66 1f       	adc	r22, r22
    11f0:	77 1f       	adc	r23, r23
    11f2:	82 81       	ldd	r24, Z+2	; 0x02
    11f4:	93 81       	ldd	r25, Z+3	; 0x03
    11f6:	01 97       	sbiw	r24, 0x01	; 1
    11f8:	93 83       	std	Z+3, r25	; 0x03
    11fa:	82 83       	std	Z+2, r24	; 0x02
    11fc:	41 15       	cp	r20, r1
    11fe:	51 05       	cpc	r21, r1
    1200:	61 05       	cpc	r22, r1
    1202:	80 e4       	ldi	r24, 0x40	; 64
    1204:	78 07       	cpc	r23, r24
    1206:	88 f3       	brcs	.-30     	; 0x11ea <__unpack_f+0x6e>
    1208:	20 c0       	rjmp	.+64     	; 0x124a <__unpack_f+0xce>
    120a:	8f 3f       	cpi	r24, 0xFF	; 255
    120c:	91 05       	cpc	r25, r1
    120e:	79 f4       	brne	.+30     	; 0x122e <__unpack_f+0xb2>
    1210:	41 15       	cp	r20, r1
    1212:	51 05       	cpc	r21, r1
    1214:	61 05       	cpc	r22, r1
    1216:	71 05       	cpc	r23, r1
    1218:	19 f4       	brne	.+6      	; 0x1220 <__unpack_f+0xa4>
    121a:	84 e0       	ldi	r24, 0x04	; 4
    121c:	80 83       	st	Z, r24
    121e:	19 c0       	rjmp	.+50     	; 0x1252 <__unpack_f+0xd6>
    1220:	e4 fe       	sbrs	r14, 4
    1222:	03 c0       	rjmp	.+6      	; 0x122a <__unpack_f+0xae>
    1224:	81 e0       	ldi	r24, 0x01	; 1
    1226:	80 83       	st	Z, r24
    1228:	10 c0       	rjmp	.+32     	; 0x124a <__unpack_f+0xce>
    122a:	10 82       	st	Z, r1
    122c:	0e c0       	rjmp	.+28     	; 0x124a <__unpack_f+0xce>
    122e:	8f 57       	subi	r24, 0x7F	; 127
    1230:	91 09       	sbc	r25, r1
    1232:	93 83       	std	Z+3, r25	; 0x03
    1234:	82 83       	std	Z+2, r24	; 0x02
    1236:	83 e0       	ldi	r24, 0x03	; 3
    1238:	80 83       	st	Z, r24
    123a:	87 e0       	ldi	r24, 0x07	; 7
    123c:	44 0f       	add	r20, r20
    123e:	55 1f       	adc	r21, r21
    1240:	66 1f       	adc	r22, r22
    1242:	77 1f       	adc	r23, r23
    1244:	8a 95       	dec	r24
    1246:	d1 f7       	brne	.-12     	; 0x123c <__unpack_f+0xc0>
    1248:	70 64       	ori	r23, 0x40	; 64
    124a:	44 83       	std	Z+4, r20	; 0x04
    124c:	55 83       	std	Z+5, r21	; 0x05
    124e:	66 83       	std	Z+6, r22	; 0x06
    1250:	77 83       	std	Z+7, r23	; 0x07
    1252:	ef 90       	pop	r14
    1254:	df 90       	pop	r13
    1256:	cf 90       	pop	r12
    1258:	08 95       	ret

0000125a <__fpcmp_parts_f>:
    125a:	cf 93       	push	r28
    125c:	fc 01       	movw	r30, r24
    125e:	db 01       	movw	r26, r22
    1260:	90 81       	ld	r25, Z
    1262:	92 30       	cpi	r25, 0x02	; 2
    1264:	08 f4       	brcc	.+2      	; 0x1268 <__fpcmp_parts_f+0xe>
    1266:	52 c0       	rjmp	.+164    	; 0x130c <__fpcmp_parts_f+0xb2>
    1268:	8c 91       	ld	r24, X
    126a:	82 30       	cpi	r24, 0x02	; 2
    126c:	08 f4       	brcc	.+2      	; 0x1270 <__fpcmp_parts_f+0x16>
    126e:	4e c0       	rjmp	.+156    	; 0x130c <__fpcmp_parts_f+0xb2>
    1270:	94 30       	cpi	r25, 0x04	; 4
    1272:	71 f4       	brne	.+28     	; 0x1290 <__fpcmp_parts_f+0x36>
    1274:	84 30       	cpi	r24, 0x04	; 4
    1276:	39 f4       	brne	.+14     	; 0x1286 <__fpcmp_parts_f+0x2c>
    1278:	11 96       	adiw	r26, 0x01	; 1
    127a:	2c 91       	ld	r18, X
    127c:	30 e0       	ldi	r19, 0x00	; 0
    127e:	81 81       	ldd	r24, Z+1	; 0x01
    1280:	28 1b       	sub	r18, r24
    1282:	31 09       	sbc	r19, r1
    1284:	48 c0       	rjmp	.+144    	; 0x1316 <__fpcmp_parts_f+0xbc>
    1286:	81 81       	ldd	r24, Z+1	; 0x01
    1288:	88 23       	and	r24, r24
    128a:	09 f4       	brne	.+2      	; 0x128e <__fpcmp_parts_f+0x34>
    128c:	3f c0       	rjmp	.+126    	; 0x130c <__fpcmp_parts_f+0xb2>
    128e:	3b c0       	rjmp	.+118    	; 0x1306 <__fpcmp_parts_f+0xac>
    1290:	84 30       	cpi	r24, 0x04	; 4
    1292:	29 f4       	brne	.+10     	; 0x129e <__fpcmp_parts_f+0x44>
    1294:	11 96       	adiw	r26, 0x01	; 1
    1296:	8c 91       	ld	r24, X
    1298:	81 11       	cpse	r24, r1
    129a:	38 c0       	rjmp	.+112    	; 0x130c <__fpcmp_parts_f+0xb2>
    129c:	34 c0       	rjmp	.+104    	; 0x1306 <__fpcmp_parts_f+0xac>
    129e:	92 30       	cpi	r25, 0x02	; 2
    12a0:	19 f4       	brne	.+6      	; 0x12a8 <__fpcmp_parts_f+0x4e>
    12a2:	82 30       	cpi	r24, 0x02	; 2
    12a4:	b9 f7       	brne	.-18     	; 0x1294 <__fpcmp_parts_f+0x3a>
    12a6:	35 c0       	rjmp	.+106    	; 0x1312 <__fpcmp_parts_f+0xb8>
    12a8:	82 30       	cpi	r24, 0x02	; 2
    12aa:	69 f3       	breq	.-38     	; 0x1286 <__fpcmp_parts_f+0x2c>
    12ac:	c1 81       	ldd	r28, Z+1	; 0x01
    12ae:	11 96       	adiw	r26, 0x01	; 1
    12b0:	8c 91       	ld	r24, X
    12b2:	11 97       	sbiw	r26, 0x01	; 1
    12b4:	c8 13       	cpse	r28, r24
    12b6:	1d c0       	rjmp	.+58     	; 0x12f2 <__fpcmp_parts_f+0x98>
    12b8:	22 81       	ldd	r18, Z+2	; 0x02
    12ba:	33 81       	ldd	r19, Z+3	; 0x03
    12bc:	12 96       	adiw	r26, 0x02	; 2
    12be:	8d 91       	ld	r24, X+
    12c0:	9c 91       	ld	r25, X
    12c2:	13 97       	sbiw	r26, 0x03	; 3
    12c4:	82 17       	cp	r24, r18
    12c6:	93 07       	cpc	r25, r19
    12c8:	0c f4       	brge	.+2      	; 0x12cc <__fpcmp_parts_f+0x72>
    12ca:	13 c0       	rjmp	.+38     	; 0x12f2 <__fpcmp_parts_f+0x98>
    12cc:	28 17       	cp	r18, r24
    12ce:	39 07       	cpc	r19, r25
    12d0:	0c f4       	brge	.+2      	; 0x12d4 <__fpcmp_parts_f+0x7a>
    12d2:	17 c0       	rjmp	.+46     	; 0x1302 <__fpcmp_parts_f+0xa8>
    12d4:	44 81       	ldd	r20, Z+4	; 0x04
    12d6:	55 81       	ldd	r21, Z+5	; 0x05
    12d8:	66 81       	ldd	r22, Z+6	; 0x06
    12da:	77 81       	ldd	r23, Z+7	; 0x07
    12dc:	14 96       	adiw	r26, 0x04	; 4
    12de:	8d 91       	ld	r24, X+
    12e0:	9d 91       	ld	r25, X+
    12e2:	0d 90       	ld	r0, X+
    12e4:	bc 91       	ld	r27, X
    12e6:	a0 2d       	mov	r26, r0
    12e8:	84 17       	cp	r24, r20
    12ea:	95 07       	cpc	r25, r21
    12ec:	a6 07       	cpc	r26, r22
    12ee:	b7 07       	cpc	r27, r23
    12f0:	18 f4       	brcc	.+6      	; 0x12f8 <__fpcmp_parts_f+0x9e>
    12f2:	c1 11       	cpse	r28, r1
    12f4:	08 c0       	rjmp	.+16     	; 0x1306 <__fpcmp_parts_f+0xac>
    12f6:	0a c0       	rjmp	.+20     	; 0x130c <__fpcmp_parts_f+0xb2>
    12f8:	48 17       	cp	r20, r24
    12fa:	59 07       	cpc	r21, r25
    12fc:	6a 07       	cpc	r22, r26
    12fe:	7b 07       	cpc	r23, r27
    1300:	40 f4       	brcc	.+16     	; 0x1312 <__fpcmp_parts_f+0xb8>
    1302:	c1 11       	cpse	r28, r1
    1304:	03 c0       	rjmp	.+6      	; 0x130c <__fpcmp_parts_f+0xb2>
    1306:	2f ef       	ldi	r18, 0xFF	; 255
    1308:	3f ef       	ldi	r19, 0xFF	; 255
    130a:	05 c0       	rjmp	.+10     	; 0x1316 <__fpcmp_parts_f+0xbc>
    130c:	21 e0       	ldi	r18, 0x01	; 1
    130e:	30 e0       	ldi	r19, 0x00	; 0
    1310:	02 c0       	rjmp	.+4      	; 0x1316 <__fpcmp_parts_f+0xbc>
    1312:	20 e0       	ldi	r18, 0x00	; 0
    1314:	30 e0       	ldi	r19, 0x00	; 0
    1316:	c9 01       	movw	r24, r18
    1318:	cf 91       	pop	r28
    131a:	08 95       	ret

0000131c <main>:
}

int main(void) {
  // Init port B to show keyboard result
  DDRB = 0xff;
    131c:	8f ef       	ldi	r24, 0xFF	; 255
    131e:	84 b9       	out	0x04, r24	; 4
  // and turn out the LEDs
  PORTB = 0xff;   
    1320:	85 b9       	out	0x05, r24	; 5
  
  // init the UART
  //uart_init();
  //stdout = stdin = stderr = &uart_str;
  //fprintf(stdout, "Starting...\n\r");
  	initialize();
    1322:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <initialize>
	
  //endless loop to read keyboard
  while(1) {
	// Used for keeping track of time.
	if( count <= 0){
		count = COUNTMS;
    1326:	ce e3       	ldi	r28, 0x3E	; 62
  //play(1336, 852);
	
  //endless loop to read keyboard
  while(1) {
	// Used for keeping track of time.
	if( count <= 0){
    1328:	80 91 c5 01 	lds	r24, 0x01C5
    132c:	81 11       	cpse	r24, r1
    132e:	0b c0       	rjmp	.+22     	; 0x1346 <main+0x2a>
		count = COUNTMS;
    1330:	c0 93 c5 01 	sts	0x01C5, r28
		time1++;
    1334:	80 91 be 01 	lds	r24, 0x01BE
    1338:	90 91 bf 01 	lds	r25, 0x01BF
    133c:	01 96       	adiw	r24, 0x01	; 1
    133e:	90 93 bf 01 	sts	0x01BF, r25
    1342:	80 93 be 01 	sts	0x01BE, r24
	}
	update_status_variables();
    1346:	0e 94 2c 04 	call	0x858	; 0x858 <update_status_variables>
	//Used for debouncing
    if (time1>=t1) {
    134a:	80 91 be 01 	lds	r24, 0x01BE
    134e:	90 91 bf 01 	lds	r25, 0x01BF
    1352:	44 97       	sbiw	r24, 0x14	; 20
    1354:	48 f3       	brcs	.-46     	; 0x1328 <main+0xc>
		task1();
    1356:	0e 94 76 00 	call	0xec	; 0xec <task1>
    135a:	e6 cf       	rjmp	.-52     	; 0x1328 <main+0xc>

0000135c <__clzsi2>:
    135c:	0e 94 b7 09 	call	0x136e	; 0x136e <__clzhi2>
    1360:	84 ff       	sbrs	r24, 4
    1362:	08 95       	ret
    1364:	cb 01       	movw	r24, r22
    1366:	0e 94 b7 09 	call	0x136e	; 0x136e <__clzhi2>
    136a:	80 5f       	subi	r24, 0xF0	; 240
    136c:	08 95       	ret

0000136e <__clzhi2>:
    136e:	aa 27       	eor	r26, r26
    1370:	99 23       	and	r25, r25
    1372:	29 f4       	brne	.+10     	; 0x137e <__clzhi2+0x10>
    1374:	a8 5f       	subi	r26, 0xF8	; 248
    1376:	98 2b       	or	r25, r24
    1378:	11 f4       	brne	.+4      	; 0x137e <__clzhi2+0x10>
    137a:	80 e1       	ldi	r24, 0x10	; 16
    137c:	08 95       	ret
    137e:	90 31       	cpi	r25, 0x10	; 16
    1380:	18 f4       	brcc	.+6      	; 0x1388 <__clzhi2+0x1a>
    1382:	ad 5f       	subi	r26, 0xFD	; 253
    1384:	92 95       	swap	r25
    1386:	a3 95       	inc	r26
    1388:	99 0f       	add	r25, r25
    138a:	e8 f7       	brcc	.-6      	; 0x1386 <__clzhi2+0x18>
    138c:	8a 2f       	mov	r24, r26
    138e:	99 27       	eor	r25, r25
    1390:	08 95       	ret

00001392 <__prologue_saves__>:
    1392:	2f 92       	push	r2
    1394:	3f 92       	push	r3
    1396:	4f 92       	push	r4
    1398:	5f 92       	push	r5
    139a:	6f 92       	push	r6
    139c:	7f 92       	push	r7
    139e:	8f 92       	push	r8
    13a0:	9f 92       	push	r9
    13a2:	af 92       	push	r10
    13a4:	bf 92       	push	r11
    13a6:	cf 92       	push	r12
    13a8:	df 92       	push	r13
    13aa:	ef 92       	push	r14
    13ac:	ff 92       	push	r15
    13ae:	0f 93       	push	r16
    13b0:	1f 93       	push	r17
    13b2:	cf 93       	push	r28
    13b4:	df 93       	push	r29
    13b6:	cd b7       	in	r28, 0x3d	; 61
    13b8:	de b7       	in	r29, 0x3e	; 62
    13ba:	ca 1b       	sub	r28, r26
    13bc:	db 0b       	sbc	r29, r27
    13be:	0f b6       	in	r0, 0x3f	; 63
    13c0:	f8 94       	cli
    13c2:	de bf       	out	0x3e, r29	; 62
    13c4:	0f be       	out	0x3f, r0	; 63
    13c6:	cd bf       	out	0x3d, r28	; 61
    13c8:	09 94       	ijmp

000013ca <__epilogue_restores__>:
    13ca:	2a 88       	ldd	r2, Y+18	; 0x12
    13cc:	39 88       	ldd	r3, Y+17	; 0x11
    13ce:	48 88       	ldd	r4, Y+16	; 0x10
    13d0:	5f 84       	ldd	r5, Y+15	; 0x0f
    13d2:	6e 84       	ldd	r6, Y+14	; 0x0e
    13d4:	7d 84       	ldd	r7, Y+13	; 0x0d
    13d6:	8c 84       	ldd	r8, Y+12	; 0x0c
    13d8:	9b 84       	ldd	r9, Y+11	; 0x0b
    13da:	aa 84       	ldd	r10, Y+10	; 0x0a
    13dc:	b9 84       	ldd	r11, Y+9	; 0x09
    13de:	c8 84       	ldd	r12, Y+8	; 0x08
    13e0:	df 80       	ldd	r13, Y+7	; 0x07
    13e2:	ee 80       	ldd	r14, Y+6	; 0x06
    13e4:	fd 80       	ldd	r15, Y+5	; 0x05
    13e6:	0c 81       	ldd	r16, Y+4	; 0x04
    13e8:	1b 81       	ldd	r17, Y+3	; 0x03
    13ea:	aa 81       	ldd	r26, Y+2	; 0x02
    13ec:	b9 81       	ldd	r27, Y+1	; 0x01
    13ee:	ce 0f       	add	r28, r30
    13f0:	d1 1d       	adc	r29, r1
    13f2:	0f b6       	in	r0, 0x3f	; 63
    13f4:	f8 94       	cli
    13f6:	de bf       	out	0x3e, r29	; 62
    13f8:	0f be       	out	0x3f, r0	; 63
    13fa:	cd bf       	out	0x3d, r28	; 61
    13fc:	ed 01       	movw	r28, r26
    13fe:	08 95       	ret

00001400 <fputs>:
    1400:	ef 92       	push	r14
    1402:	ff 92       	push	r15
    1404:	0f 93       	push	r16
    1406:	1f 93       	push	r17
    1408:	cf 93       	push	r28
    140a:	df 93       	push	r29
    140c:	7c 01       	movw	r14, r24
    140e:	8b 01       	movw	r16, r22
    1410:	db 01       	movw	r26, r22
    1412:	13 96       	adiw	r26, 0x03	; 3
    1414:	8c 91       	ld	r24, X
    1416:	81 ff       	sbrs	r24, 1
    1418:	14 c0       	rjmp	.+40     	; 0x1442 <fputs+0x42>
    141a:	c0 e0       	ldi	r28, 0x00	; 0
    141c:	d0 e0       	ldi	r29, 0x00	; 0
    141e:	0b c0       	rjmp	.+22     	; 0x1436 <fputs+0x36>
    1420:	d8 01       	movw	r26, r16
    1422:	18 96       	adiw	r26, 0x08	; 8
    1424:	ed 91       	ld	r30, X+
    1426:	fc 91       	ld	r31, X
    1428:	19 97       	sbiw	r26, 0x09	; 9
    142a:	b8 01       	movw	r22, r16
    142c:	09 95       	icall
    142e:	89 2b       	or	r24, r25
    1430:	11 f0       	breq	.+4      	; 0x1436 <fputs+0x36>
    1432:	cf ef       	ldi	r28, 0xFF	; 255
    1434:	df ef       	ldi	r29, 0xFF	; 255
    1436:	f7 01       	movw	r30, r14
    1438:	81 91       	ld	r24, Z+
    143a:	7f 01       	movw	r14, r30
    143c:	81 11       	cpse	r24, r1
    143e:	f0 cf       	rjmp	.-32     	; 0x1420 <fputs+0x20>
    1440:	02 c0       	rjmp	.+4      	; 0x1446 <fputs+0x46>
    1442:	cf ef       	ldi	r28, 0xFF	; 255
    1444:	df ef       	ldi	r29, 0xFF	; 255
    1446:	ce 01       	movw	r24, r28
    1448:	df 91       	pop	r29
    144a:	cf 91       	pop	r28
    144c:	1f 91       	pop	r17
    144e:	0f 91       	pop	r16
    1450:	ff 90       	pop	r15
    1452:	ef 90       	pop	r14
    1454:	08 95       	ret

00001456 <sin>:
    1456:	9f 93       	push	r25
    1458:	05 d0       	rcall	.+10     	; 0x1464 <__fp_rempio2>
    145a:	0f 90       	pop	r0
    145c:	07 fc       	sbrc	r0, 7
    145e:	ee 5f       	subi	r30, 0xFE	; 254
    1460:	28 c0       	rjmp	.+80     	; 0x14b2 <__fp_sinus>
    1462:	ce c0       	rjmp	.+412    	; 0x1600 <__fp_nan>

00001464 <__fp_rempio2>:
    1464:	3f d0       	rcall	.+126    	; 0x14e4 <__fp_splitA>
    1466:	e8 f3       	brcs	.-6      	; 0x1462 <sin+0xc>
    1468:	e8 94       	clt
    146a:	e0 e0       	ldi	r30, 0x00	; 0
    146c:	bb 27       	eor	r27, r27
    146e:	9f 57       	subi	r25, 0x7F	; 127
    1470:	f0 f0       	brcs	.+60     	; 0x14ae <__fp_rempio2+0x4a>
    1472:	2a ed       	ldi	r18, 0xDA	; 218
    1474:	3f e0       	ldi	r19, 0x0F	; 15
    1476:	49 ec       	ldi	r20, 0xC9	; 201
    1478:	06 c0       	rjmp	.+12     	; 0x1486 <__fp_rempio2+0x22>
    147a:	ee 0f       	add	r30, r30
    147c:	bb 0f       	add	r27, r27
    147e:	66 1f       	adc	r22, r22
    1480:	77 1f       	adc	r23, r23
    1482:	88 1f       	adc	r24, r24
    1484:	28 f0       	brcs	.+10     	; 0x1490 <__fp_rempio2+0x2c>
    1486:	b2 3a       	cpi	r27, 0xA2	; 162
    1488:	62 07       	cpc	r22, r18
    148a:	73 07       	cpc	r23, r19
    148c:	84 07       	cpc	r24, r20
    148e:	28 f0       	brcs	.+10     	; 0x149a <__fp_rempio2+0x36>
    1490:	b2 5a       	subi	r27, 0xA2	; 162
    1492:	62 0b       	sbc	r22, r18
    1494:	73 0b       	sbc	r23, r19
    1496:	84 0b       	sbc	r24, r20
    1498:	e3 95       	inc	r30
    149a:	9a 95       	dec	r25
    149c:	72 f7       	brpl	.-36     	; 0x147a <__fp_rempio2+0x16>
    149e:	80 38       	cpi	r24, 0x80	; 128
    14a0:	30 f4       	brcc	.+12     	; 0x14ae <__fp_rempio2+0x4a>
    14a2:	9a 95       	dec	r25
    14a4:	bb 0f       	add	r27, r27
    14a6:	66 1f       	adc	r22, r22
    14a8:	77 1f       	adc	r23, r23
    14aa:	88 1f       	adc	r24, r24
    14ac:	d2 f7       	brpl	.-12     	; 0x14a2 <__fp_rempio2+0x3e>
    14ae:	90 48       	sbci	r25, 0x80	; 128
    14b0:	9b c0       	rjmp	.+310    	; 0x15e8 <__fp_mpack_finite>

000014b2 <__fp_sinus>:
    14b2:	ef 93       	push	r30
    14b4:	e0 ff       	sbrs	r30, 0
    14b6:	06 c0       	rjmp	.+12     	; 0x14c4 <__fp_sinus+0x12>
    14b8:	a2 ea       	ldi	r26, 0xA2	; 162
    14ba:	2a ed       	ldi	r18, 0xDA	; 218
    14bc:	3f e0       	ldi	r19, 0x0F	; 15
    14be:	49 ec       	ldi	r20, 0xC9	; 201
    14c0:	5f eb       	ldi	r21, 0xBF	; 191
    14c2:	37 d0       	rcall	.+110    	; 0x1532 <__addsf3x>
    14c4:	bf d0       	rcall	.+382    	; 0x1644 <__fp_round>
    14c6:	0f 90       	pop	r0
    14c8:	03 94       	inc	r0
    14ca:	01 fc       	sbrc	r0, 1
    14cc:	90 58       	subi	r25, 0x80	; 128
    14ce:	ec e8       	ldi	r30, 0x8C	; 140
    14d0:	f0 e0       	ldi	r31, 0x00	; 0
    14d2:	99 c0       	rjmp	.+306    	; 0x1606 <__fp_powsodd>

000014d4 <__fp_split3>:
    14d4:	57 fd       	sbrc	r21, 7
    14d6:	90 58       	subi	r25, 0x80	; 128
    14d8:	44 0f       	add	r20, r20
    14da:	55 1f       	adc	r21, r21
    14dc:	59 f0       	breq	.+22     	; 0x14f4 <__fp_splitA+0x10>
    14de:	5f 3f       	cpi	r21, 0xFF	; 255
    14e0:	71 f0       	breq	.+28     	; 0x14fe <__fp_splitA+0x1a>
    14e2:	47 95       	ror	r20

000014e4 <__fp_splitA>:
    14e4:	88 0f       	add	r24, r24
    14e6:	97 fb       	bst	r25, 7
    14e8:	99 1f       	adc	r25, r25
    14ea:	61 f0       	breq	.+24     	; 0x1504 <__fp_splitA+0x20>
    14ec:	9f 3f       	cpi	r25, 0xFF	; 255
    14ee:	79 f0       	breq	.+30     	; 0x150e <__fp_splitA+0x2a>
    14f0:	87 95       	ror	r24
    14f2:	08 95       	ret
    14f4:	12 16       	cp	r1, r18
    14f6:	13 06       	cpc	r1, r19
    14f8:	14 06       	cpc	r1, r20
    14fa:	55 1f       	adc	r21, r21
    14fc:	f2 cf       	rjmp	.-28     	; 0x14e2 <__fp_split3+0xe>
    14fe:	46 95       	lsr	r20
    1500:	f1 df       	rcall	.-30     	; 0x14e4 <__fp_splitA>
    1502:	08 c0       	rjmp	.+16     	; 0x1514 <__fp_splitA+0x30>
    1504:	16 16       	cp	r1, r22
    1506:	17 06       	cpc	r1, r23
    1508:	18 06       	cpc	r1, r24
    150a:	99 1f       	adc	r25, r25
    150c:	f1 cf       	rjmp	.-30     	; 0x14f0 <__fp_splitA+0xc>
    150e:	86 95       	lsr	r24
    1510:	71 05       	cpc	r23, r1
    1512:	61 05       	cpc	r22, r1
    1514:	08 94       	sec
    1516:	08 95       	ret
    1518:	87 d0       	rcall	.+270    	; 0x1628 <__fp_pscA>
    151a:	30 f0       	brcs	.+12     	; 0x1528 <__fp_splitA+0x44>
    151c:	8c d0       	rcall	.+280    	; 0x1636 <__fp_pscB>
    151e:	20 f0       	brcs	.+8      	; 0x1528 <__fp_splitA+0x44>
    1520:	31 f4       	brne	.+12     	; 0x152e <__fp_splitA+0x4a>
    1522:	9f 3f       	cpi	r25, 0xFF	; 255
    1524:	11 f4       	brne	.+4      	; 0x152a <__fp_splitA+0x46>
    1526:	1e f4       	brtc	.+6      	; 0x152e <__fp_splitA+0x4a>
    1528:	6b c0       	rjmp	.+214    	; 0x1600 <__fp_nan>
    152a:	0e f4       	brtc	.+2      	; 0x152e <__fp_splitA+0x4a>
    152c:	e0 95       	com	r30
    152e:	e7 fb       	bst	r30, 7
    1530:	53 c0       	rjmp	.+166    	; 0x15d8 <__fp_inf>

00001532 <__addsf3x>:
    1532:	e9 2f       	mov	r30, r25
    1534:	cf df       	rcall	.-98     	; 0x14d4 <__fp_split3>
    1536:	80 f3       	brcs	.-32     	; 0x1518 <__fp_splitA+0x34>
    1538:	ba 17       	cp	r27, r26
    153a:	62 07       	cpc	r22, r18
    153c:	73 07       	cpc	r23, r19
    153e:	84 07       	cpc	r24, r20
    1540:	95 07       	cpc	r25, r21
    1542:	18 f0       	brcs	.+6      	; 0x154a <__addsf3x+0x18>
    1544:	71 f4       	brne	.+28     	; 0x1562 <__addsf3x+0x30>
    1546:	9e f5       	brtc	.+102    	; 0x15ae <__addsf3x+0x7c>
    1548:	8e c0       	rjmp	.+284    	; 0x1666 <__fp_zero>
    154a:	0e f4       	brtc	.+2      	; 0x154e <__addsf3x+0x1c>
    154c:	e0 95       	com	r30
    154e:	0b 2e       	mov	r0, r27
    1550:	ba 2f       	mov	r27, r26
    1552:	a0 2d       	mov	r26, r0
    1554:	0b 01       	movw	r0, r22
    1556:	b9 01       	movw	r22, r18
    1558:	90 01       	movw	r18, r0
    155a:	0c 01       	movw	r0, r24
    155c:	ca 01       	movw	r24, r20
    155e:	a0 01       	movw	r20, r0
    1560:	11 24       	eor	r1, r1
    1562:	ff 27       	eor	r31, r31
    1564:	59 1b       	sub	r21, r25
    1566:	99 f0       	breq	.+38     	; 0x158e <__addsf3x+0x5c>
    1568:	59 3f       	cpi	r21, 0xF9	; 249
    156a:	50 f4       	brcc	.+20     	; 0x1580 <__addsf3x+0x4e>
    156c:	50 3e       	cpi	r21, 0xE0	; 224
    156e:	68 f1       	brcs	.+90     	; 0x15ca <__addsf3x+0x98>
    1570:	1a 16       	cp	r1, r26
    1572:	f0 40       	sbci	r31, 0x00	; 0
    1574:	a2 2f       	mov	r26, r18
    1576:	23 2f       	mov	r18, r19
    1578:	34 2f       	mov	r19, r20
    157a:	44 27       	eor	r20, r20
    157c:	58 5f       	subi	r21, 0xF8	; 248
    157e:	f3 cf       	rjmp	.-26     	; 0x1566 <__addsf3x+0x34>
    1580:	46 95       	lsr	r20
    1582:	37 95       	ror	r19
    1584:	27 95       	ror	r18
    1586:	a7 95       	ror	r26
    1588:	f0 40       	sbci	r31, 0x00	; 0
    158a:	53 95       	inc	r21
    158c:	c9 f7       	brne	.-14     	; 0x1580 <__addsf3x+0x4e>
    158e:	7e f4       	brtc	.+30     	; 0x15ae <__addsf3x+0x7c>
    1590:	1f 16       	cp	r1, r31
    1592:	ba 0b       	sbc	r27, r26
    1594:	62 0b       	sbc	r22, r18
    1596:	73 0b       	sbc	r23, r19
    1598:	84 0b       	sbc	r24, r20
    159a:	ba f0       	brmi	.+46     	; 0x15ca <__addsf3x+0x98>
    159c:	91 50       	subi	r25, 0x01	; 1
    159e:	a1 f0       	breq	.+40     	; 0x15c8 <__addsf3x+0x96>
    15a0:	ff 0f       	add	r31, r31
    15a2:	bb 1f       	adc	r27, r27
    15a4:	66 1f       	adc	r22, r22
    15a6:	77 1f       	adc	r23, r23
    15a8:	88 1f       	adc	r24, r24
    15aa:	c2 f7       	brpl	.-16     	; 0x159c <__addsf3x+0x6a>
    15ac:	0e c0       	rjmp	.+28     	; 0x15ca <__addsf3x+0x98>
    15ae:	ba 0f       	add	r27, r26
    15b0:	62 1f       	adc	r22, r18
    15b2:	73 1f       	adc	r23, r19
    15b4:	84 1f       	adc	r24, r20
    15b6:	48 f4       	brcc	.+18     	; 0x15ca <__addsf3x+0x98>
    15b8:	87 95       	ror	r24
    15ba:	77 95       	ror	r23
    15bc:	67 95       	ror	r22
    15be:	b7 95       	ror	r27
    15c0:	f7 95       	ror	r31
    15c2:	9e 3f       	cpi	r25, 0xFE	; 254
    15c4:	08 f0       	brcs	.+2      	; 0x15c8 <__addsf3x+0x96>
    15c6:	b3 cf       	rjmp	.-154    	; 0x152e <__fp_splitA+0x4a>
    15c8:	93 95       	inc	r25
    15ca:	88 0f       	add	r24, r24
    15cc:	08 f0       	brcs	.+2      	; 0x15d0 <__addsf3x+0x9e>
    15ce:	99 27       	eor	r25, r25
    15d0:	ee 0f       	add	r30, r30
    15d2:	97 95       	ror	r25
    15d4:	87 95       	ror	r24
    15d6:	08 95       	ret

000015d8 <__fp_inf>:
    15d8:	97 f9       	bld	r25, 7
    15da:	9f 67       	ori	r25, 0x7F	; 127
    15dc:	80 e8       	ldi	r24, 0x80	; 128
    15de:	70 e0       	ldi	r23, 0x00	; 0
    15e0:	60 e0       	ldi	r22, 0x00	; 0
    15e2:	08 95       	ret

000015e4 <__fp_mpack>:
    15e4:	9f 3f       	cpi	r25, 0xFF	; 255
    15e6:	31 f0       	breq	.+12     	; 0x15f4 <__fp_mpack_finite+0xc>

000015e8 <__fp_mpack_finite>:
    15e8:	91 50       	subi	r25, 0x01	; 1
    15ea:	20 f4       	brcc	.+8      	; 0x15f4 <__fp_mpack_finite+0xc>
    15ec:	87 95       	ror	r24
    15ee:	77 95       	ror	r23
    15f0:	67 95       	ror	r22
    15f2:	b7 95       	ror	r27
    15f4:	88 0f       	add	r24, r24
    15f6:	91 1d       	adc	r25, r1
    15f8:	96 95       	lsr	r25
    15fa:	87 95       	ror	r24
    15fc:	97 f9       	bld	r25, 7
    15fe:	08 95       	ret

00001600 <__fp_nan>:
    1600:	9f ef       	ldi	r25, 0xFF	; 255
    1602:	80 ec       	ldi	r24, 0xC0	; 192
    1604:	08 95       	ret

00001606 <__fp_powsodd>:
    1606:	9f 93       	push	r25
    1608:	8f 93       	push	r24
    160a:	7f 93       	push	r23
    160c:	6f 93       	push	r22
    160e:	ff 93       	push	r31
    1610:	ef 93       	push	r30
    1612:	9b 01       	movw	r18, r22
    1614:	ac 01       	movw	r20, r24
    1616:	29 db       	rcall	.-2478   	; 0xc6a <__mulsf3>
    1618:	ef 91       	pop	r30
    161a:	ff 91       	pop	r31
    161c:	2b d0       	rcall	.+86     	; 0x1674 <__fp_powser>
    161e:	2f 91       	pop	r18
    1620:	3f 91       	pop	r19
    1622:	4f 91       	pop	r20
    1624:	5f 91       	pop	r21
    1626:	21 cb       	rjmp	.-2494   	; 0xc6a <__mulsf3>

00001628 <__fp_pscA>:
    1628:	00 24       	eor	r0, r0
    162a:	0a 94       	dec	r0
    162c:	16 16       	cp	r1, r22
    162e:	17 06       	cpc	r1, r23
    1630:	18 06       	cpc	r1, r24
    1632:	09 06       	cpc	r0, r25
    1634:	08 95       	ret

00001636 <__fp_pscB>:
    1636:	00 24       	eor	r0, r0
    1638:	0a 94       	dec	r0
    163a:	12 16       	cp	r1, r18
    163c:	13 06       	cpc	r1, r19
    163e:	14 06       	cpc	r1, r20
    1640:	05 06       	cpc	r0, r21
    1642:	08 95       	ret

00001644 <__fp_round>:
    1644:	09 2e       	mov	r0, r25
    1646:	03 94       	inc	r0
    1648:	00 0c       	add	r0, r0
    164a:	11 f4       	brne	.+4      	; 0x1650 <__fp_round+0xc>
    164c:	88 23       	and	r24, r24
    164e:	52 f0       	brmi	.+20     	; 0x1664 <__fp_round+0x20>
    1650:	bb 0f       	add	r27, r27
    1652:	40 f4       	brcc	.+16     	; 0x1664 <__fp_round+0x20>
    1654:	bf 2b       	or	r27, r31
    1656:	11 f4       	brne	.+4      	; 0x165c <__fp_round+0x18>
    1658:	60 ff       	sbrs	r22, 0
    165a:	04 c0       	rjmp	.+8      	; 0x1664 <__fp_round+0x20>
    165c:	6f 5f       	subi	r22, 0xFF	; 255
    165e:	7f 4f       	sbci	r23, 0xFF	; 255
    1660:	8f 4f       	sbci	r24, 0xFF	; 255
    1662:	9f 4f       	sbci	r25, 0xFF	; 255
    1664:	08 95       	ret

00001666 <__fp_zero>:
    1666:	e8 94       	clt

00001668 <__fp_szero>:
    1668:	bb 27       	eor	r27, r27
    166a:	66 27       	eor	r22, r22
    166c:	77 27       	eor	r23, r23
    166e:	cb 01       	movw	r24, r22
    1670:	97 f9       	bld	r25, 7
    1672:	08 95       	ret

00001674 <__fp_powser>:
    1674:	df 93       	push	r29
    1676:	cf 93       	push	r28
    1678:	1f 93       	push	r17
    167a:	0f 93       	push	r16
    167c:	ff 92       	push	r15
    167e:	ef 92       	push	r14
    1680:	df 92       	push	r13
    1682:	7b 01       	movw	r14, r22
    1684:	8c 01       	movw	r16, r24
    1686:	68 94       	set
    1688:	05 c0       	rjmp	.+10     	; 0x1694 <__fp_powser+0x20>
    168a:	da 2e       	mov	r13, r26
    168c:	ef 01       	movw	r28, r30
    168e:	21 d0       	rcall	.+66     	; 0x16d2 <__mulsf3x>
    1690:	fe 01       	movw	r30, r28
    1692:	e8 94       	clt
    1694:	a5 91       	lpm	r26, Z+
    1696:	25 91       	lpm	r18, Z+
    1698:	35 91       	lpm	r19, Z+
    169a:	45 91       	lpm	r20, Z+
    169c:	55 91       	lpm	r21, Z+
    169e:	ae f3       	brts	.-22     	; 0x168a <__fp_powser+0x16>
    16a0:	ef 01       	movw	r28, r30
    16a2:	47 df       	rcall	.-370    	; 0x1532 <__addsf3x>
    16a4:	fe 01       	movw	r30, r28
    16a6:	97 01       	movw	r18, r14
    16a8:	a8 01       	movw	r20, r16
    16aa:	da 94       	dec	r13
    16ac:	79 f7       	brne	.-34     	; 0x168c <__fp_powser+0x18>
    16ae:	df 90       	pop	r13
    16b0:	ef 90       	pop	r14
    16b2:	ff 90       	pop	r15
    16b4:	0f 91       	pop	r16
    16b6:	1f 91       	pop	r17
    16b8:	cf 91       	pop	r28
    16ba:	df 91       	pop	r29
    16bc:	08 95       	ret
    16be:	b4 df       	rcall	.-152    	; 0x1628 <__fp_pscA>
    16c0:	28 f0       	brcs	.+10     	; 0x16cc <__fp_powser+0x58>
    16c2:	b9 df       	rcall	.-142    	; 0x1636 <__fp_pscB>
    16c4:	18 f0       	brcs	.+6      	; 0x16cc <__fp_powser+0x58>
    16c6:	95 23       	and	r25, r21
    16c8:	09 f0       	breq	.+2      	; 0x16cc <__fp_powser+0x58>
    16ca:	86 cf       	rjmp	.-244    	; 0x15d8 <__fp_inf>
    16cc:	99 cf       	rjmp	.-206    	; 0x1600 <__fp_nan>
    16ce:	11 24       	eor	r1, r1
    16d0:	cb cf       	rjmp	.-106    	; 0x1668 <__fp_szero>

000016d2 <__mulsf3x>:
    16d2:	00 df       	rcall	.-512    	; 0x14d4 <__fp_split3>
    16d4:	a0 f3       	brcs	.-24     	; 0x16be <__fp_powser+0x4a>

000016d6 <__mulsf3_pse>:
    16d6:	95 9f       	mul	r25, r21
    16d8:	d1 f3       	breq	.-12     	; 0x16ce <__fp_powser+0x5a>
    16da:	95 0f       	add	r25, r21
    16dc:	50 e0       	ldi	r21, 0x00	; 0
    16de:	55 1f       	adc	r21, r21
    16e0:	62 9f       	mul	r22, r18
    16e2:	f0 01       	movw	r30, r0
    16e4:	72 9f       	mul	r23, r18
    16e6:	bb 27       	eor	r27, r27
    16e8:	f0 0d       	add	r31, r0
    16ea:	b1 1d       	adc	r27, r1
    16ec:	63 9f       	mul	r22, r19
    16ee:	aa 27       	eor	r26, r26
    16f0:	f0 0d       	add	r31, r0
    16f2:	b1 1d       	adc	r27, r1
    16f4:	aa 1f       	adc	r26, r26
    16f6:	64 9f       	mul	r22, r20
    16f8:	66 27       	eor	r22, r22
    16fa:	b0 0d       	add	r27, r0
    16fc:	a1 1d       	adc	r26, r1
    16fe:	66 1f       	adc	r22, r22
    1700:	82 9f       	mul	r24, r18
    1702:	22 27       	eor	r18, r18
    1704:	b0 0d       	add	r27, r0
    1706:	a1 1d       	adc	r26, r1
    1708:	62 1f       	adc	r22, r18
    170a:	73 9f       	mul	r23, r19
    170c:	b0 0d       	add	r27, r0
    170e:	a1 1d       	adc	r26, r1
    1710:	62 1f       	adc	r22, r18
    1712:	83 9f       	mul	r24, r19
    1714:	a0 0d       	add	r26, r0
    1716:	61 1d       	adc	r22, r1
    1718:	22 1f       	adc	r18, r18
    171a:	74 9f       	mul	r23, r20
    171c:	33 27       	eor	r19, r19
    171e:	a0 0d       	add	r26, r0
    1720:	61 1d       	adc	r22, r1
    1722:	23 1f       	adc	r18, r19
    1724:	84 9f       	mul	r24, r20
    1726:	60 0d       	add	r22, r0
    1728:	21 1d       	adc	r18, r1
    172a:	82 2f       	mov	r24, r18
    172c:	76 2f       	mov	r23, r22
    172e:	6a 2f       	mov	r22, r26
    1730:	11 24       	eor	r1, r1
    1732:	9f 57       	subi	r25, 0x7F	; 127
    1734:	50 40       	sbci	r21, 0x00	; 0
    1736:	8a f0       	brmi	.+34     	; 0x175a <__mulsf3_pse+0x84>
    1738:	e1 f0       	breq	.+56     	; 0x1772 <__mulsf3_pse+0x9c>
    173a:	88 23       	and	r24, r24
    173c:	4a f0       	brmi	.+18     	; 0x1750 <__mulsf3_pse+0x7a>
    173e:	ee 0f       	add	r30, r30
    1740:	ff 1f       	adc	r31, r31
    1742:	bb 1f       	adc	r27, r27
    1744:	66 1f       	adc	r22, r22
    1746:	77 1f       	adc	r23, r23
    1748:	88 1f       	adc	r24, r24
    174a:	91 50       	subi	r25, 0x01	; 1
    174c:	50 40       	sbci	r21, 0x00	; 0
    174e:	a9 f7       	brne	.-22     	; 0x173a <__mulsf3_pse+0x64>
    1750:	9e 3f       	cpi	r25, 0xFE	; 254
    1752:	51 05       	cpc	r21, r1
    1754:	70 f0       	brcs	.+28     	; 0x1772 <__mulsf3_pse+0x9c>
    1756:	40 cf       	rjmp	.-384    	; 0x15d8 <__fp_inf>
    1758:	87 cf       	rjmp	.-242    	; 0x1668 <__fp_szero>
    175a:	5f 3f       	cpi	r21, 0xFF	; 255
    175c:	ec f3       	brlt	.-6      	; 0x1758 <__mulsf3_pse+0x82>
    175e:	98 3e       	cpi	r25, 0xE8	; 232
    1760:	dc f3       	brlt	.-10     	; 0x1758 <__mulsf3_pse+0x82>
    1762:	86 95       	lsr	r24
    1764:	77 95       	ror	r23
    1766:	67 95       	ror	r22
    1768:	b7 95       	ror	r27
    176a:	f7 95       	ror	r31
    176c:	e7 95       	ror	r30
    176e:	9f 5f       	subi	r25, 0xFF	; 255
    1770:	c1 f7       	brne	.-16     	; 0x1762 <__mulsf3_pse+0x8c>
    1772:	fe 2b       	or	r31, r30
    1774:	88 0f       	add	r24, r24
    1776:	91 1d       	adc	r25, r1
    1778:	96 95       	lsr	r25
    177a:	87 95       	ror	r24
    177c:	97 f9       	bld	r25, 7
    177e:	08 95       	ret

00001780 <_exit>:
    1780:	f8 94       	cli

00001782 <__stop_program>:
    1782:	ff cf       	rjmp	.-2      	; 0x1782 <__stop_program>
