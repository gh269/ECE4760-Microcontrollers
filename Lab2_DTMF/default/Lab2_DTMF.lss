
Lab2_DTMF.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000bc  00800100  00001eb2  00001f46  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001eb2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000002a6  008001bc  008001bc  00002002  2**0
                  ALLOC
  3 .stab         000022a4  00000000  00000000  00002004  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000008d1  00000000  00000000  000042a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000002f  00000000  00000000  00004b79  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 00000238  00000000  00000000  00004ba8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00003534  00000000  00000000  00004de0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000019d0  00000000  00000000  00008314  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00001406  00000000  00000000  00009ce4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000560  00000000  00000000  0000b0ec  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000883  00000000  00000000  0000b64c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00001b56  00000000  00000000  0000becf  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 000000a0  00000000  00000000  0000da25  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 55 00 	jmp	0xaa	; 0xaa <__ctors_end>
       4:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
       8:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
       c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      10:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      14:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      18:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      1c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      20:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      24:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      28:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      2c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      30:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      34:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      38:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      3c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      40:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      44:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      48:	0c 94 35 03 	jmp	0x66a	; 0x66a <__vector_18>
      4c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      50:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      54:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      58:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      5c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      60:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      64:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      68:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      6c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      70:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      74:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      78:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      7c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      80:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      84:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      88:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      8c:	05 a8       	ldd	r0, Z+53	; 0x35
      8e:	4c cd       	rjmp	.-1384   	; 0xfffffb28 <__eeprom_end+0xff7efb28>
      90:	b2 d4       	rcall	.+2404   	; 0x9f6 <update_status_variables+0x6>
      92:	4e b9       	out	0x0e, r20	; 14
      94:	38 36       	cpi	r19, 0x68	; 104
      96:	a9 02       	muls	r26, r25
      98:	0c 50       	subi	r16, 0x0C	; 12
      9a:	b9 91       	ld	r27, Y+
      9c:	86 88       	ldd	r8, Z+22	; 0x16
      9e:	08 3c       	cpi	r16, 0xC8	; 200
      a0:	a6 aa       	std	Z+54, r10	; 0x36
      a2:	aa 2a       	or	r10, r26
      a4:	be 00       	.word	0x00be	; ????
      a6:	00 00       	nop
      a8:	80 3f       	cpi	r24, 0xF0	; 240

000000aa <__ctors_end>:
      aa:	11 24       	eor	r1, r1
      ac:	1f be       	out	0x3f, r1	; 63
      ae:	cf ef       	ldi	r28, 0xFF	; 255
      b0:	d0 e4       	ldi	r29, 0x40	; 64
      b2:	de bf       	out	0x3e, r29	; 62
      b4:	cd bf       	out	0x3d, r28	; 61

000000b6 <__do_copy_data>:
      b6:	11 e0       	ldi	r17, 0x01	; 1
      b8:	a0 e0       	ldi	r26, 0x00	; 0
      ba:	b1 e0       	ldi	r27, 0x01	; 1
      bc:	e2 eb       	ldi	r30, 0xB2	; 178
      be:	fe e1       	ldi	r31, 0x1E	; 30
      c0:	00 e0       	ldi	r16, 0x00	; 0
      c2:	0b bf       	out	0x3b, r16	; 59
      c4:	02 c0       	rjmp	.+4      	; 0xca <__do_copy_data+0x14>
      c6:	07 90       	elpm	r0, Z+
      c8:	0d 92       	st	X+, r0
      ca:	ac 3b       	cpi	r26, 0xBC	; 188
      cc:	b1 07       	cpc	r27, r17
      ce:	d9 f7       	brne	.-10     	; 0xc6 <__do_copy_data+0x10>

000000d0 <__do_clear_bss>:
      d0:	24 e0       	ldi	r18, 0x04	; 4
      d2:	ac eb       	ldi	r26, 0xBC	; 188
      d4:	b1 e0       	ldi	r27, 0x01	; 1
      d6:	01 c0       	rjmp	.+2      	; 0xda <.do_clear_bss_start>

000000d8 <.do_clear_bss_loop>:
      d8:	1d 92       	st	X+, r1

000000da <.do_clear_bss_start>:
      da:	a2 36       	cpi	r26, 0x62	; 98
      dc:	b2 07       	cpc	r27, r18
      de:	e1 f7       	brne	.-8      	; 0xd8 <.do_clear_bss_loop>
      e0:	0e 94 5a 0a 	call	0x14b4	; 0x14b4 <main>
      e4:	0c 94 57 0f 	jmp	0x1eae	; 0x1eae <_exit>

000000e8 <__bad_interrupt>:
      e8:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ec <task1>:
// putchar and getchar are in uart.c
FILE uart_str = FDEV_SETUP_STREAM(uart_putchar, uart_getchar, _FDEV_SETUP_RW);

//******************************* 
//Task 1  
void task1(void) {
      ec:	ff 92       	push	r15
      ee:	0f 93       	push	r16
      f0:	1f 93       	push	r17
      f2:	cf 93       	push	r28
      f4:	df 93       	push	r29
	time1=0;  //reset the task timer
      f6:	10 92 2b 02 	sts	0x022B, r1
      fa:	10 92 2a 02 	sts	0x022A, r1

	//get lower nibble
	PORTDIR = 0x0f;
      fe:	8f e0       	ldi	r24, 0x0F	; 15
     100:	81 b9       	out	0x01, r24	; 1
	PORTDATA = 0xf0; 
     102:	90 ef       	ldi	r25, 0xF0	; 240
     104:	92 b9       	out	0x02, r25	; 2
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     106:	2a e1       	ldi	r18, 0x1A	; 26
     108:	2a 95       	dec	r18
     10a:	f1 f7       	brne	.-4      	; 0x108 <task1+0x1c>
     10c:	00 c0       	rjmp	.+0      	; 0x10e <task1+0x22>
	_delay_us(5);
	key = PORTIN;
     10e:	20 b1       	in	r18, 0x00	; 0
     110:	20 93 2e 02 	sts	0x022E, r18
  
	//get upper nibble
	PORTDIR = 0xf0;
     114:	91 b9       	out	0x01, r25	; 1
	PORTDATA = 0x0f; 
     116:	82 b9       	out	0x02, r24	; 2
     118:	8a e1       	ldi	r24, 0x1A	; 26
     11a:	8a 95       	dec	r24
     11c:	f1 f7       	brne	.-4      	; 0x11a <task1+0x2e>
     11e:	00 c0       	rjmp	.+0      	; 0x120 <task1+0x34>
	_delay_us(5);
	key = key | PORTIN;
     120:	90 b1       	in	r25, 0x00	; 0
     122:	80 91 2e 02 	lds	r24, 0x022E
     126:	98 2b       	or	r25, r24
     128:	90 93 2e 02 	sts	0x022E, r25
  
	//find matching keycode in keytbl
	if (key != 0xff) {
     12c:	9f 3f       	cpi	r25, 0xFF	; 255
     12e:	a9 f0       	breq	.+42     	; 0x15a <task1+0x6e>
	  for (butnum=0; butnum<maxkeys; butnum++) {   
     130:	80 e0       	ldi	r24, 0x00	; 0
     132:	0a c0       	rjmp	.+20     	; 0x148 <task1+0x5c>
     134:	28 2f       	mov	r18, r24
     136:	2f 5f       	subi	r18, 0xFF	; 255
	  	if (keytbl[butnum]==key)  break;   
     138:	e8 2f       	mov	r30, r24
     13a:	f0 e0       	ldi	r31, 0x00	; 0
     13c:	e2 5c       	subi	r30, 0xC2	; 194
     13e:	fe 4f       	sbci	r31, 0xFE	; 254
     140:	30 81       	ld	r19, Z
     142:	39 17       	cp	r19, r25
     144:	31 f0       	breq	.+12     	; 0x152 <task1+0x66>
     146:	82 2f       	mov	r24, r18
	_delay_us(5);
	key = key | PORTIN;
  
	//find matching keycode in keytbl
	if (key != 0xff) {
	  for (butnum=0; butnum<maxkeys; butnum++) {   
     148:	8c 30       	cpi	r24, 0x0C	; 12
     14a:	a0 f3       	brcs	.-24     	; 0x134 <task1+0x48>
	  	if (keytbl[butnum]==key)  break;   
	  }

	  if (butnum==maxkeys) butnum=0;
     14c:	8c 30       	cpi	r24, 0x0C	; 12
     14e:	09 f4       	brne	.+2      	; 0x152 <task1+0x66>
     150:	04 c0       	rjmp	.+8      	; 0x15a <task1+0x6e>
	  else butnum++;	   //adjust by one to make range 1-16
     152:	8f 5f       	subi	r24, 0xFF	; 255
     154:	80 93 26 02 	sts	0x0226, r24
     158:	02 c0       	rjmp	.+4      	; 0x15e <task1+0x72>
	}
	else butnum=0;
     15a:	10 92 26 02 	sts	0x0226, r1
	
	// Switching in the finite state machine.
	switch (PushState) {
     15e:	80 91 32 02 	lds	r24, 0x0232
     162:	82 30       	cpi	r24, 0x02	; 2
     164:	91 f0       	breq	.+36     	; 0x18a <task1+0x9e>
     166:	20 f4       	brcc	.+8      	; 0x170 <task1+0x84>
     168:	81 30       	cpi	r24, 0x01	; 1
     16a:	09 f0       	breq	.+2      	; 0x16e <task1+0x82>
     16c:	60 c0       	rjmp	.+192    	; 0x22e <task1+0x142>
     16e:	06 c0       	rjmp	.+12     	; 0x17c <task1+0x90>
     170:	83 30       	cpi	r24, 0x03	; 3
     172:	d1 f0       	breq	.+52     	; 0x1a8 <task1+0xbc>
     174:	84 30       	cpi	r24, 0x04	; 4
     176:	09 f0       	breq	.+2      	; 0x17a <task1+0x8e>
     178:	5a c0       	rjmp	.+180    	; 0x22e <task1+0x142>
     17a:	4c c0       	rjmp	.+152    	; 0x214 <task1+0x128>
     case NoPush: 
        if (butnum != 0) {
     17c:	80 91 26 02 	lds	r24, 0x0226
     180:	88 23       	and	r24, r24
     182:	09 f4       	brne	.+2      	; 0x186 <task1+0x9a>
     184:	54 c0       	rjmp	.+168    	; 0x22e <task1+0x142>
			PushState=MaybePush;
     186:	82 e0       	ldi	r24, 0x02	; 2
     188:	4a c0       	rjmp	.+148    	; 0x21e <task1+0x132>
		}
        else PushState=NoPush;
        break;
     case MaybePush:
        if (butnum != 0) {
     18a:	80 91 26 02 	lds	r24, 0x0226
     18e:	88 23       	and	r24, r24
     190:	49 f0       	breq	.+18     	; 0x1a4 <task1+0xb8>
           	PushState=Pushed; 
     192:	83 e0       	ldi	r24, 0x03	; 3
     194:	80 93 32 02 	sts	0x0232, r24
			PushFlag=1;
     198:	81 e0       	ldi	r24, 0x01	; 1
     19a:	80 93 27 02 	sts	0x0227, r24
			//Test mode override
			if (~PINB & 0x01) {
     19e:	18 99       	sbic	0x03, 0	; 3
     1a0:	46 c0       	rjmp	.+140    	; 0x22e <task1+0x142>
     1a2:	43 c0       	rjmp	.+134    	; 0x22a <task1+0x13e>
				//fprintf(stdout, "PINB is pressed.\n\r");
		 		PushFlag=0;			
		   	}  
        }
        else PushState=NoPush;
     1a4:	81 e0       	ldi	r24, 0x01	; 1
     1a6:	3b c0       	rjmp	.+118    	; 0x21e <task1+0x132>
        break;
     case Pushed:  
        if (butnum != 0) {
     1a8:	80 91 26 02 	lds	r24, 0x0226
     1ac:	88 23       	and	r24, r24
     1ae:	81 f1       	breq	.+96     	; 0x210 <task1+0x124>
			PushState=Pushed;
			//Test mode override
			if (~PINB & 0x01) {
     1b0:	18 99       	sbic	0x03, 0	; 3
     1b2:	3d c0       	rjmp	.+122    	; 0x22e <task1+0x142>
		 		switch (butnum) {
     1b4:	84 30       	cpi	r24, 0x04	; 4
     1b6:	c1 f0       	breq	.+48     	; 0x1e8 <task1+0xfc>
     1b8:	30 f4       	brcc	.+12     	; 0x1c6 <task1+0xda>
     1ba:	82 30       	cpi	r24, 0x02	; 2
     1bc:	69 f0       	breq	.+26     	; 0x1d8 <task1+0xec>
     1be:	88 f4       	brcc	.+34     	; 0x1e2 <task1+0xf6>
     1c0:	81 30       	cpi	r24, 0x01	; 1
     1c2:	a9 f5       	brne	.+106    	; 0x22e <task1+0x142>
     1c4:	06 c0       	rjmp	.+12     	; 0x1d2 <task1+0xe6>
     1c6:	86 30       	cpi	r24, 0x06	; 6
     1c8:	b9 f0       	breq	.+46     	; 0x1f8 <task1+0x10c>
     1ca:	88 f0       	brcs	.+34     	; 0x1ee <task1+0x102>
     1cc:	87 30       	cpi	r24, 0x07	; 7
     1ce:	79 f5       	brne	.+94     	; 0x22e <task1+0x142>
     1d0:	18 c0       	rjmp	.+48     	; 0x202 <task1+0x116>
					case 1: 
						play(0, 697);
     1d2:	69 eb       	ldi	r22, 0xB9	; 185
     1d4:	72 e0       	ldi	r23, 0x02	; 2
     1d6:	02 c0       	rjmp	.+4      	; 0x1dc <task1+0xf0>
						break;
					case 2: 
						play(0, 770);
     1d8:	62 e0       	ldi	r22, 0x02	; 2
     1da:	73 e0       	ldi	r23, 0x03	; 3
     1dc:	80 e0       	ldi	r24, 0x00	; 0
     1de:	90 e0       	ldi	r25, 0x00	; 0
     1e0:	14 c0       	rjmp	.+40     	; 0x20a <task1+0x11e>
						break;
					case 3: 
						play(0, 852);
     1e2:	64 e5       	ldi	r22, 0x54	; 84
     1e4:	73 e0       	ldi	r23, 0x03	; 3
     1e6:	fa cf       	rjmp	.-12     	; 0x1dc <task1+0xf0>
						break;
					case 4: 
						play(0, 941);
     1e8:	6d ea       	ldi	r22, 0xAD	; 173
     1ea:	73 e0       	ldi	r23, 0x03	; 3
     1ec:	f7 cf       	rjmp	.-18     	; 0x1dc <task1+0xf0>
						break;
					case 5:
						play(1209, 0);
     1ee:	60 e0       	ldi	r22, 0x00	; 0
     1f0:	70 e0       	ldi	r23, 0x00	; 0
     1f2:	89 eb       	ldi	r24, 0xB9	; 185
     1f4:	94 e0       	ldi	r25, 0x04	; 4
     1f6:	09 c0       	rjmp	.+18     	; 0x20a <task1+0x11e>
						break;
					case 6:
						play(1336, 0);
     1f8:	60 e0       	ldi	r22, 0x00	; 0
     1fa:	70 e0       	ldi	r23, 0x00	; 0
     1fc:	88 e3       	ldi	r24, 0x38	; 56
     1fe:	95 e0       	ldi	r25, 0x05	; 5
     200:	04 c0       	rjmp	.+8      	; 0x20a <task1+0x11e>
						break;
					case 7: 
						play(1477, 0);
     202:	60 e0       	ldi	r22, 0x00	; 0
     204:	70 e0       	ldi	r23, 0x00	; 0
     206:	85 ec       	ldi	r24, 0xC5	; 197
     208:	95 e0       	ldi	r25, 0x05	; 5
     20a:	0e 94 3e 04 	call	0x87c	; 0x87c <play>
						break;
     20e:	0f c0       	rjmp	.+30     	; 0x22e <task1+0x142>
					default:
						break;
				}	
		   	}  
		}
        else PushState=MaybeNoPush;    
     210:	84 e0       	ldi	r24, 0x04	; 4
     212:	05 c0       	rjmp	.+10     	; 0x21e <task1+0x132>
        break;
     case MaybeNoPush:
        if (butnum != 0) PushState=Pushed; 
     214:	80 91 26 02 	lds	r24, 0x0226
     218:	88 23       	and	r24, r24
     21a:	21 f0       	breq	.+8      	; 0x224 <task1+0x138>
     21c:	83 e0       	ldi	r24, 0x03	; 3
     21e:	80 93 32 02 	sts	0x0232, r24
     222:	05 c0       	rjmp	.+10     	; 0x22e <task1+0x142>
        else {
           PushState=NoPush;
     224:	81 e0       	ldi	r24, 0x01	; 1
     226:	80 93 32 02 	sts	0x0232, r24
           PushFlag=0;
     22a:	10 92 27 02 	sts	0x0227, r1
        }    
        break;
  	}

	if (PushState == NoPush) {
     22e:	80 91 32 02 	lds	r24, 0x0232
     232:	81 30       	cpi	r24, 0x01	; 1
     234:	11 f4       	brne	.+4      	; 0x23a <task1+0x14e>
		//fprintf(stdout, "Depressed...\n\r");
		stop_playing();
     236:	0e 94 cd 04 	call	0x99a	; 0x99a <stop_playing>
	}	

	if (PushFlag) {
     23a:	80 91 27 02 	lds	r24, 0x0227
     23e:	88 23       	and	r24, r24
     240:	09 f4       	brne	.+2      	; 0x244 <task1+0x158>
     242:	01 c1       	rjmp	.+514    	; 0x446 <task1+0x35a>
		PushFlag = 0;
     244:	10 92 27 02 	sts	0x0227, r1
		// The * button was pressed. Clear all memory.
		if (butnum == 10) {
     248:	80 91 26 02 	lds	r24, 0x0226
     24c:	8a 30       	cpi	r24, 0x0A	; 10
     24e:	09 f5       	brne	.+66     	; 0x292 <task1+0x1a6>
			fprintf(stdout, "%u\n\r", butnum);
     250:	1f 92       	push	r1
     252:	8f 93       	push	r24
     254:	8b e5       	ldi	r24, 0x5B	; 91
     256:	91 e0       	ldi	r25, 0x01	; 1
     258:	9f 93       	push	r25
     25a:	8f 93       	push	r24
     25c:	80 91 5f 04 	lds	r24, 0x045F
     260:	8f 93       	push	r24
     262:	80 91 5e 04 	lds	r24, 0x045E
     266:	8f 93       	push	r24
     268:	0e 94 e2 0a 	call	0x15c4	; 0x15c4 <fprintf>
     26c:	ec eb       	ldi	r30, 0xBC	; 188
     26e:	f1 e0       	ldi	r31, 0x01	; 1
// putchar and getchar are in uart.c
FILE uart_str = FDEV_SETUP_STREAM(uart_putchar, uart_getchar, _FDEV_SETUP_RW);

//******************************* 
//Task 1  
void task1(void) {
     270:	0f 90       	pop	r0
     272:	0f 90       	pop	r0
     274:	0f 90       	pop	r0
     276:	0f 90       	pop	r0
     278:	0f 90       	pop	r0
     27a:	0f 90       	pop	r0
		PushFlag = 0;
		// The * button was pressed. Clear all memory.
		if (butnum == 10) {
			fprintf(stdout, "%u\n\r", butnum);
			for (int i = 0; i < 12; i++) {
				mem[i] = 0;
     27c:	11 92       	st	Z+, r1
     27e:	11 92       	st	Z+, r1
	if (PushFlag) {
		PushFlag = 0;
		// The * button was pressed. Clear all memory.
		if (butnum == 10) {
			fprintf(stdout, "%u\n\r", butnum);
			for (int i = 0; i < 12; i++) {
     280:	21 e0       	ldi	r18, 0x01	; 1
     282:	e4 3d       	cpi	r30, 0xD4	; 212
     284:	f2 07       	cpc	r31, r18
     286:	d1 f7       	brne	.-12     	; 0x27c <task1+0x190>
				mem[i] = 0;
			}
			mem_index = 0;
     288:	10 92 30 02 	sts	0x0230, r1
     28c:	10 92 2f 02 	sts	0x022F, r1
     290:	da c0       	rjmp	.+436    	; 0x446 <task1+0x35a>
		}
		// The # button was pressed. Play all sounds in memory.
		else if (butnum == 12) {
     292:	8c 30       	cpi	r24, 0x0C	; 12
     294:	09 f0       	breq	.+2      	; 0x298 <task1+0x1ac>
     296:	96 c0       	rjmp	.+300    	; 0x3c4 <task1+0x2d8>
			fprintf(stdout, "%u\n\r", butnum);
     298:	1f 92       	push	r1
     29a:	8f 93       	push	r24
     29c:	8b e5       	ldi	r24, 0x5B	; 91
     29e:	91 e0       	ldi	r25, 0x01	; 1
     2a0:	9f 93       	push	r25
     2a2:	8f 93       	push	r24
     2a4:	80 91 5f 04 	lds	r24, 0x045F
     2a8:	8f 93       	push	r24
     2aa:	80 91 5e 04 	lds	r24, 0x045E
     2ae:	8f 93       	push	r24
     2b0:	0e 94 e2 0a 	call	0x15c4	; 0x15c4 <fprintf>
			int i = 0;
			is_playing = FALSE;
     2b4:	10 92 33 02 	sts	0x0233, r1
     2b8:	0f 90       	pop	r0
     2ba:	0f 90       	pop	r0
     2bc:	0f 90       	pop	r0
     2be:	0f 90       	pop	r0
     2c0:	0f 90       	pop	r0
     2c2:	0f 90       	pop	r0
			char silence;
			silence = FALSE;
     2c4:	f1 2c       	mov	r15, r1
			mem_index = 0;
		}
		// The # button was pressed. Play all sounds in memory.
		else if (butnum == 12) {
			fprintf(stdout, "%u\n\r", butnum);
			int i = 0;
     2c6:	c0 e0       	ldi	r28, 0x00	; 0
     2c8:	d0 e0       	ldi	r29, 0x00	; 0
			char silence;
			silence = FALSE;


			while( i < 12 ){
				fprintf(stdout, "Int: %u\n\r", i);
     2ca:	06 e5       	ldi	r16, 0x56	; 86
     2cc:	11 e0       	ldi	r17, 0x01	; 1
     2ce:	df 93       	push	r29
     2d0:	cf 93       	push	r28
     2d2:	1f 93       	push	r17
     2d4:	0f 93       	push	r16
     2d6:	80 91 5f 04 	lds	r24, 0x045F
     2da:	8f 93       	push	r24
     2dc:	80 91 5e 04 	lds	r24, 0x045E
     2e0:	8f 93       	push	r24
     2e2:	0e 94 e2 0a 	call	0x15c4	; 0x15c4 <fprintf>
				if(silence == FALSE && !is_playing){
     2e6:	0f 90       	pop	r0
     2e8:	0f 90       	pop	r0
     2ea:	0f 90       	pop	r0
     2ec:	0f 90       	pop	r0
     2ee:	0f 90       	pop	r0
     2f0:	0f 90       	pop	r0
     2f2:	80 91 33 02 	lds	r24, 0x0233
     2f6:	f1 10       	cpse	r15, r1
     2f8:	a3 c0       	rjmp	.+326    	; 0x440 <task1+0x354>
     2fa:	81 11       	cpse	r24, r1
     2fc:	2e c0       	rjmp	.+92     	; 0x35a <task1+0x26e>
					timed_play(high_freq[mem[i]], low_freq[mem[i]], 100);
     2fe:	fe 01       	movw	r30, r28
     300:	ee 0f       	add	r30, r30
     302:	ff 1f       	adc	r31, r31
     304:	e4 54       	subi	r30, 0x44	; 68
     306:	fe 4f       	sbci	r31, 0xFE	; 254
     308:	80 81       	ld	r24, Z
     30a:	91 81       	ldd	r25, Z+1	; 0x01
     30c:	88 0f       	add	r24, r24
     30e:	99 1f       	adc	r25, r25
     310:	fc 01       	movw	r30, r24
     312:	e2 5f       	subi	r30, 0xF2	; 242
     314:	fe 4f       	sbci	r31, 0xFE	; 254
     316:	60 81       	ld	r22, Z
     318:	71 81       	ldd	r23, Z+1	; 0x01
     31a:	fc 01       	movw	r30, r24
     31c:	ea 5d       	subi	r30, 0xDA	; 218
     31e:	fe 4f       	sbci	r31, 0xFE	; 254
     320:	44 e6       	ldi	r20, 0x64	; 100
     322:	50 e0       	ldi	r21, 0x00	; 0
     324:	80 81       	ld	r24, Z
     326:	91 81       	ldd	r25, Z+1	; 0x01
     328:	0e 94 c3 04 	call	0x986	; 0x986 <timed_play>
					fprintf(stdout, "Playing sound\n\r");
     32c:	60 91 5e 04 	lds	r22, 0x045E
     330:	70 91 5f 04 	lds	r23, 0x045F
     334:	80 e6       	ldi	r24, 0x60	; 96
     336:	91 e0       	ldi	r25, 0x01	; 1
     338:	0e c0       	rjmp	.+28     	; 0x356 <task1+0x26a>
				}
				if(silence == TRUE && !is_playing) {
					timed_play(0, 0, 30);
     33a:	4e e1       	ldi	r20, 0x1E	; 30
     33c:	50 e0       	ldi	r21, 0x00	; 0
     33e:	60 e0       	ldi	r22, 0x00	; 0
     340:	70 e0       	ldi	r23, 0x00	; 0
     342:	80 e0       	ldi	r24, 0x00	; 0
     344:	90 e0       	ldi	r25, 0x00	; 0
     346:	0e 94 c3 04 	call	0x986	; 0x986 <timed_play>
					fprintf(stdout, "Playing silence\n\r");
     34a:	60 91 5e 04 	lds	r22, 0x045E
     34e:	70 91 5f 04 	lds	r23, 0x045F
     352:	80 e7       	ldi	r24, 0x70	; 112
     354:	91 e0       	ldi	r25, 0x01	; 1
     356:	0e 94 f2 0a 	call	0x15e4	; 0x15e4 <fputs>
				}
				if(is_playing && dds_duration <= 0 && !silence){
     35a:	80 91 33 02 	lds	r24, 0x0233
     35e:	88 23       	and	r24, r24
     360:	a1 f0       	breq	.+40     	; 0x38a <task1+0x29e>
     362:	80 91 28 02 	lds	r24, 0x0228
     366:	90 91 29 02 	lds	r25, 0x0229
     36a:	18 16       	cp	r1, r24
     36c:	19 06       	cpc	r1, r25
     36e:	6c f0       	brlt	.+26     	; 0x38a <task1+0x29e>
     370:	f1 10       	cpse	r15, r1
     372:	0d c0       	rjmp	.+26     	; 0x38e <task1+0x2a2>
					fprintf(stdout, "Playing timeout\n\r");
     374:	60 91 5e 04 	lds	r22, 0x045E
     378:	70 91 5f 04 	lds	r23, 0x045F
     37c:	82 e8       	ldi	r24, 0x82	; 130
     37e:	91 e0       	ldi	r25, 0x01	; 1
     380:	0e 94 f2 0a 	call	0x15e4	; 0x15e4 <fputs>
					silence = TRUE;
					is_playing = FALSE;
     384:	10 92 33 02 	sts	0x0233, r1
     388:	02 c0       	rjmp	.+4      	; 0x38e <task1+0x2a2>
				}
				if(silence && dds_duration <= 0){
     38a:	ff 20       	and	r15, r15
     38c:	b1 f0       	breq	.+44     	; 0x3ba <task1+0x2ce>
     38e:	80 91 28 02 	lds	r24, 0x0228
     392:	90 91 29 02 	lds	r25, 0x0229
     396:	18 16       	cp	r1, r24
     398:	19 06       	cpc	r1, r25
     39a:	6c f0       	brlt	.+26     	; 0x3b6 <task1+0x2ca>
					fprintf(stdout, "Silence timeout\n\r");
     39c:	60 91 5e 04 	lds	r22, 0x045E
     3a0:	70 91 5f 04 	lds	r23, 0x045F
     3a4:	84 e9       	ldi	r24, 0x94	; 148
     3a6:	91 e0       	ldi	r25, 0x01	; 1
     3a8:	0e 94 f2 0a 	call	0x15e4	; 0x15e4 <fputs>
					i++;
     3ac:	21 96       	adiw	r28, 0x01	; 1
					silence = FALSE;
					is_playing = FALSE;
     3ae:	10 92 33 02 	sts	0x0233, r1
					is_playing = FALSE;
				}
				if(silence && dds_duration <= 0){
					fprintf(stdout, "Silence timeout\n\r");
					i++;
					silence = FALSE;
     3b2:	f1 2c       	mov	r15, r1
     3b4:	02 c0       	rjmp	.+4      	; 0x3ba <task1+0x2ce>
				if(is_playing && dds_duration <= 0 && !silence){
					fprintf(stdout, "Playing timeout\n\r");
					silence = TRUE;
					is_playing = FALSE;
				}
				if(silence && dds_duration <= 0){
     3b6:	ff 24       	eor	r15, r15
     3b8:	f3 94       	inc	r15
			is_playing = FALSE;
			char silence;
			silence = FALSE;


			while( i < 12 ){
     3ba:	cc 30       	cpi	r28, 0x0C	; 12
     3bc:	d1 05       	cpc	r29, r1
     3be:	0c f4       	brge	.+2      	; 0x3c2 <task1+0x2d6>
     3c0:	86 cf       	rjmp	.-244    	; 0x2ce <task1+0x1e2>
     3c2:	41 c0       	rjmp	.+130    	; 0x446 <task1+0x35a>
			// 	}
			// }
		}
		// A normal button press. 
		else {
			fprintf(stdout, "%u\n\r", butnum);
     3c4:	1f 92       	push	r1
     3c6:	8f 93       	push	r24
     3c8:	8b e5       	ldi	r24, 0x5B	; 91
     3ca:	91 e0       	ldi	r25, 0x01	; 1
     3cc:	9f 93       	push	r25
     3ce:	8f 93       	push	r24
     3d0:	80 91 5f 04 	lds	r24, 0x045F
     3d4:	8f 93       	push	r24
     3d6:	80 91 5e 04 	lds	r24, 0x045E
     3da:	8f 93       	push	r24
     3dc:	0e 94 e2 0a 	call	0x15c4	; 0x15c4 <fprintf>
			if (mem_index < 12) {
     3e0:	20 91 2f 02 	lds	r18, 0x022F
     3e4:	30 91 30 02 	lds	r19, 0x0230
     3e8:	0f 90       	pop	r0
     3ea:	0f 90       	pop	r0
     3ec:	0f 90       	pop	r0
     3ee:	0f 90       	pop	r0
     3f0:	0f 90       	pop	r0
     3f2:	0f 90       	pop	r0
     3f4:	2c 30       	cpi	r18, 0x0C	; 12
     3f6:	31 05       	cpc	r19, r1
     3f8:	30 f5       	brcc	.+76     	; 0x446 <task1+0x35a>
				mem[mem_index] = butnum;
     3fa:	80 91 26 02 	lds	r24, 0x0226
     3fe:	f9 01       	movw	r30, r18
     400:	ee 0f       	add	r30, r30
     402:	ff 1f       	adc	r31, r31
     404:	e4 54       	subi	r30, 0x44	; 68
     406:	fe 4f       	sbci	r31, 0xFE	; 254
     408:	80 83       	st	Z, r24
     40a:	11 82       	std	Z+1, r1	; 0x01
				mem_index++;
     40c:	2f 5f       	subi	r18, 0xFF	; 255
     40e:	3f 4f       	sbci	r19, 0xFF	; 255
     410:	30 93 30 02 	sts	0x0230, r19
     414:	20 93 2f 02 	sts	0x022F, r18
				play(high_freq[butnum], low_freq[butnum]);
     418:	90 e0       	ldi	r25, 0x00	; 0
     41a:	88 0f       	add	r24, r24
     41c:	99 1f       	adc	r25, r25
     41e:	fc 01       	movw	r30, r24
     420:	e2 5f       	subi	r30, 0xF2	; 242
     422:	fe 4f       	sbci	r31, 0xFE	; 254
     424:	60 81       	ld	r22, Z
     426:	71 81       	ldd	r23, Z+1	; 0x01
     428:	fc 01       	movw	r30, r24
     42a:	ea 5d       	subi	r30, 0xDA	; 218
     42c:	fe 4f       	sbci	r31, 0xFE	; 254
     42e:	80 81       	ld	r24, Z
     430:	91 81       	ldd	r25, Z+1	; 0x01
			}		
		}
	}
} 
     432:	df 91       	pop	r29
     434:	cf 91       	pop	r28
     436:	1f 91       	pop	r17
     438:	0f 91       	pop	r16
     43a:	ff 90       	pop	r15
		else {
			fprintf(stdout, "%u\n\r", butnum);
			if (mem_index < 12) {
				mem[mem_index] = butnum;
				mem_index++;
				play(high_freq[butnum], low_freq[butnum]);
     43c:	0c 94 3e 04 	jmp	0x87c	; 0x87c <play>
				fprintf(stdout, "Int: %u\n\r", i);
				if(silence == FALSE && !is_playing){
					timed_play(high_freq[mem[i]], low_freq[mem[i]], 100);
					fprintf(stdout, "Playing sound\n\r");
				}
				if(silence == TRUE && !is_playing) {
     440:	81 11       	cpse	r24, r1
     442:	8b cf       	rjmp	.-234    	; 0x35a <task1+0x26e>
     444:	7a cf       	rjmp	.-268    	; 0x33a <task1+0x24e>
				mem_index++;
				play(high_freq[butnum], low_freq[butnum]);
			}		
		}
	}
} 
     446:	df 91       	pop	r29
     448:	cf 91       	pop	r28
     44a:	1f 91       	pop	r17
     44c:	0f 91       	pop	r16
     44e:	ff 90       	pop	r15
     450:	08 95       	ret

00000452 <initialize>:
 
//Initialization used for the timer interrupts for debouncing
void initialize(void) {
	//set up timer 0 for 1 mSec timebase 
	OCR0A = 249;  		//set the compare re to 250 time ticks
     452:	89 ef       	ldi	r24, 0xF9	; 249
     454:	87 bd       	out	0x27, r24	; 39
	TIMSK0= (1<<OCIE0A);	//turn on timer 0 cmp match ISR 
     456:	82 e0       	ldi	r24, 0x02	; 2
     458:	80 93 6e 00 	sts	0x006E, r24
	//set prescalar to divide by 64 
	TCCR0B= 3; //0b00000011;	
     45c:	93 e0       	ldi	r25, 0x03	; 3
     45e:	95 bd       	out	0x25, r25	; 37
	// turn on clear-on-match
	TCCR0A= (1<<WGM01) ;
     460:	84 bd       	out	0x24, r24	; 36

	//init the task timers
	time1=0;  
     462:	10 92 2b 02 	sts	0x022B, r1
     466:	10 92 2a 02 	sts	0x022A, r1
	// PORT B is an input
	DDRB = 0x00;
     46a:	14 b8       	out	0x04, r1	; 4
	//for no button push
	PushFlag = 0;
     46c:	10 92 27 02 	sts	0x0227, r1
	//init the state machine
	PushState = NoPush;
     470:	81 e0       	ldi	r24, 0x01	; 1
     472:	80 93 32 02 	sts	0x0232, r24

	mem_index = 0;
     476:	10 92 30 02 	sts	0x0230, r1
     47a:	10 92 2f 02 	sts	0x022F, r1

	init_dtmf();
     47e:	0e 94 e9 03 	call	0x7d2	; 0x7d2 <init_dtmf>
	//crank up the ISRs
	sei() ;
     482:	78 94       	sei
     484:	08 95       	ret

00000486 <uart_init>:
{
#if F_CPU < 2000000UL && defined(U2X)
  UCSR0A = _BV(U2X);             /* improve baud rate error by using 2x clk */
  UBRR0L = (F_CPU / (8UL * UART_BAUD)) - 1;
#else
  UBRR0L = (F_CPU / (16UL * UART_BAUD)) - 1;
     486:	87 e6       	ldi	r24, 0x67	; 103
     488:	80 93 c4 00 	sts	0x00C4, r24
#endif
  UCSR0B = _BV(TXEN0) | _BV(RXEN0); /* tx/rx enable */
     48c:	88 e1       	ldi	r24, 0x18	; 24
     48e:	80 93 c1 00 	sts	0x00C1, r24
     492:	08 95       	ret

00000494 <uart_putchar>:
 * Send character c down the UART Tx, wait until tx holding register
 * is empty.
 */
int
uart_putchar(char c, FILE *stream)
{
     494:	cf 93       	push	r28
     496:	c8 2f       	mov	r28, r24

  if (c == '\a')
     498:	87 30       	cpi	r24, 0x07	; 7
     49a:	49 f4       	brne	.+18     	; 0x4ae <uart_putchar+0x1a>
    {
      fputs("*ring*\n", stderr);
     49c:	60 91 60 04 	lds	r22, 0x0460
     4a0:	70 91 61 04 	lds	r23, 0x0461
     4a4:	84 eb       	ldi	r24, 0xB4	; 180
     4a6:	91 e0       	ldi	r25, 0x01	; 1
     4a8:	0e 94 f2 0a 	call	0x15e4	; 0x15e4 <fputs>
     4ac:	0b c0       	rjmp	.+22     	; 0x4c4 <uart_putchar+0x30>
      return 0;
    }

  if (c == '\n')
     4ae:	8a 30       	cpi	r24, 0x0A	; 10
     4b0:	19 f4       	brne	.+6      	; 0x4b8 <uart_putchar+0x24>
    uart_putchar('\r', stream);
     4b2:	8d e0       	ldi	r24, 0x0D	; 13
     4b4:	0e 94 4a 02 	call	0x494	; 0x494 <uart_putchar>
  loop_until_bit_is_set(UCSR0A, UDRE0);
     4b8:	80 91 c0 00 	lds	r24, 0x00C0
     4bc:	85 ff       	sbrs	r24, 5
     4be:	fc cf       	rjmp	.-8      	; 0x4b8 <uart_putchar+0x24>
  UDR0 = c;
     4c0:	c0 93 c6 00 	sts	0x00C6, r28

  return 0;
}
     4c4:	80 e0       	ldi	r24, 0x00	; 0
     4c6:	90 e0       	ldi	r25, 0x00	; 0
     4c8:	cf 91       	pop	r28
     4ca:	08 95       	ret

000004cc <uart_getchar>:
 * Successive calls to uart_getchar() will be satisfied from the
 * internal buffer until that buffer is emptied again.
 */
int
uart_getchar(FILE *stream)
{
     4cc:	ef 92       	push	r14
     4ce:	ff 92       	push	r15
     4d0:	0f 93       	push	r16
     4d2:	1f 93       	push	r17
     4d4:	cf 93       	push	r28
     4d6:	df 93       	push	r29
     4d8:	8c 01       	movw	r16, r24
  uint8_t c;
  char *cp, *cp2;
  static char b[RX_BUFSIZE];
  static char *rxp;

  if (rxp == 0)
     4da:	80 91 d4 01 	lds	r24, 0x01D4
     4de:	90 91 d5 01 	lds	r25, 0x01D5
     4e2:	89 2b       	or	r24, r25
     4e4:	09 f0       	breq	.+2      	; 0x4e8 <uart_getchar+0x1c>
     4e6:	a1 c0       	rjmp	.+322    	; 0x62a <uart_getchar+0x15e>
     4e8:	c6 ed       	ldi	r28, 0xD6	; 214
     4ea:	d1 e0       	ldi	r29, 0x01	; 1
    for (cp = b;;)
      {
	loop_until_bit_is_set(UCSR0A, RXC0);
     4ec:	80 91 c0 00 	lds	r24, 0x00C0
     4f0:	87 ff       	sbrs	r24, 7
     4f2:	fc cf       	rjmp	.-8      	; 0x4ec <uart_getchar+0x20>
	if (UCSR0A & _BV(FE0))
     4f4:	80 91 c0 00 	lds	r24, 0x00C0
     4f8:	84 fd       	sbrc	r24, 4
     4fa:	aa c0       	rjmp	.+340    	; 0x650 <uart_getchar+0x184>
	  return _FDEV_EOF;
	if (UCSR0A & _BV(DOR0))
     4fc:	80 91 c0 00 	lds	r24, 0x00C0
     500:	83 fd       	sbrc	r24, 3
     502:	a9 c0       	rjmp	.+338    	; 0x656 <uart_getchar+0x18a>
	  return _FDEV_ERR;
	c = UDR0;
     504:	80 91 c6 00 	lds	r24, 0x00C6
	/* behaviour similar to Unix stty ICRNL */
	if (c == '\r')
     508:	8d 30       	cpi	r24, 0x0D	; 13
     50a:	61 f4       	brne	.+24     	; 0x524 <uart_getchar+0x58>
	  c = '\n';
	if (c == '\n')
	  {
	    *cp = c;
     50c:	8a e0       	ldi	r24, 0x0A	; 10
     50e:	88 83       	st	Y, r24
	    uart_putchar(c, stream);
     510:	b8 01       	movw	r22, r16
     512:	0e 94 4a 02 	call	0x494	; 0x494 <uart_putchar>
	    rxp = b;
     516:	86 ed       	ldi	r24, 0xD6	; 214
     518:	91 e0       	ldi	r25, 0x01	; 1
     51a:	90 93 d5 01 	sts	0x01D5, r25
     51e:	80 93 d4 01 	sts	0x01D4, r24
	    break;
     522:	83 c0       	rjmp	.+262    	; 0x62a <uart_getchar+0x15e>
	  return _FDEV_ERR;
	c = UDR0;
	/* behaviour similar to Unix stty ICRNL */
	if (c == '\r')
	  c = '\n';
	if (c == '\n')
     524:	8a 30       	cpi	r24, 0x0A	; 10
     526:	91 f3       	breq	.-28     	; 0x50c <uart_getchar+0x40>
	    *cp = c;
	    uart_putchar(c, stream);
	    rxp = b;
	    break;
	  }
	else if (c == '\t')
     528:	89 30       	cpi	r24, 0x09	; 9
     52a:	09 f4       	brne	.+2      	; 0x52e <uart_getchar+0x62>
	  c = ' ';
     52c:	80 e2       	ldi	r24, 0x20	; 32

	if ((c >= (uint8_t)' ' && c <= (uint8_t)'\x7e') ||
     52e:	98 2f       	mov	r25, r24
     530:	90 52       	subi	r25, 0x20	; 32
     532:	9f 35       	cpi	r25, 0x5F	; 95
     534:	10 f0       	brcs	.+4      	; 0x53a <uart_getchar+0x6e>
     536:	80 3a       	cpi	r24, 0xA0	; 160
     538:	90 f0       	brcs	.+36     	; 0x55e <uart_getchar+0x92>
	    c >= (uint8_t)'\xa0')
	  {
	    if (cp == b + RX_BUFSIZE - 1)
     53a:	92 e0       	ldi	r25, 0x02	; 2
     53c:	c5 32       	cpi	r28, 0x25	; 37
     53e:	d9 07       	cpc	r29, r25
     540:	49 f4       	brne	.+18     	; 0x554 <uart_getchar+0x88>
uart_putchar(char c, FILE *stream)
{

  if (c == '\a')
    {
      fputs("*ring*\n", stderr);
     542:	60 91 60 04 	lds	r22, 0x0460
     546:	70 91 61 04 	lds	r23, 0x0461
     54a:	84 eb       	ldi	r24, 0xB4	; 180
     54c:	91 e0       	ldi	r25, 0x01	; 1
     54e:	0e 94 f2 0a 	call	0x15e4	; 0x15e4 <fputs>
     552:	cc cf       	rjmp	.-104    	; 0x4ec <uart_getchar+0x20>
	  {
	    if (cp == b + RX_BUFSIZE - 1)
	      uart_putchar('\a', stream);
	    else
	      {
		*cp++ = c;
     554:	89 93       	st	Y+, r24
		uart_putchar(c, stream);
     556:	b8 01       	movw	r22, r16
     558:	0e 94 4a 02 	call	0x494	; 0x494 <uart_putchar>
     55c:	c7 cf       	rjmp	.-114    	; 0x4ec <uart_getchar+0x20>
	      }
	    continue;
	  }

	switch (c)
     55e:	82 31       	cpi	r24, 0x12	; 18
     560:	29 f1       	breq	.+74     	; 0x5ac <uart_getchar+0xe0>
     562:	38 f4       	brcc	.+14     	; 0x572 <uart_getchar+0xa6>
     564:	83 30       	cpi	r24, 0x03	; 3
     566:	09 f4       	brne	.+2      	; 0x56a <uart_getchar+0x9e>
     568:	76 c0       	rjmp	.+236    	; 0x656 <uart_getchar+0x18a>
     56a:	88 30       	cpi	r24, 0x08	; 8
     56c:	09 f0       	breq	.+2      	; 0x570 <uart_getchar+0xa4>
     56e:	be cf       	rjmp	.-132    	; 0x4ec <uart_getchar+0x20>
     570:	09 c0       	rjmp	.+18     	; 0x584 <uart_getchar+0xb8>
     572:	87 31       	cpi	r24, 0x17	; 23
     574:	09 f4       	brne	.+2      	; 0x578 <uart_getchar+0xac>
     576:	4d c0       	rjmp	.+154    	; 0x612 <uart_getchar+0x146>
     578:	8f 37       	cpi	r24, 0x7F	; 127
     57a:	21 f0       	breq	.+8      	; 0x584 <uart_getchar+0xb8>
     57c:	85 31       	cpi	r24, 0x15	; 21
     57e:	09 f0       	breq	.+2      	; 0x582 <uart_getchar+0xb6>
     580:	b5 cf       	rjmp	.-150    	; 0x4ec <uart_getchar+0x20>
     582:	34 c0       	rjmp	.+104    	; 0x5ec <uart_getchar+0x120>
	  case 'c' & 0x1f:
	    return -1;

	  case '\b':
	  case '\x7f':
	    if (cp > b)
     584:	e1 e0       	ldi	r30, 0x01	; 1
     586:	c6 3d       	cpi	r28, 0xD6	; 214
     588:	de 07       	cpc	r29, r30
     58a:	09 f0       	breq	.+2      	; 0x58e <uart_getchar+0xc2>
     58c:	08 f4       	brcc	.+2      	; 0x590 <uart_getchar+0xc4>
     58e:	ae cf       	rjmp	.-164    	; 0x4ec <uart_getchar+0x20>
	      {
		uart_putchar('\b', stream);
     590:	b8 01       	movw	r22, r16
     592:	88 e0       	ldi	r24, 0x08	; 8
     594:	0e 94 4a 02 	call	0x494	; 0x494 <uart_putchar>
		uart_putchar(' ', stream);
     598:	b8 01       	movw	r22, r16
     59a:	80 e2       	ldi	r24, 0x20	; 32
     59c:	0e 94 4a 02 	call	0x494	; 0x494 <uart_putchar>
		uart_putchar('\b', stream);
     5a0:	b8 01       	movw	r22, r16
     5a2:	88 e0       	ldi	r24, 0x08	; 8
     5a4:	0e 94 4a 02 	call	0x494	; 0x494 <uart_putchar>
		cp--;
     5a8:	21 97       	sbiw	r28, 0x01	; 1
     5aa:	a0 cf       	rjmp	.-192    	; 0x4ec <uart_getchar+0x20>
	      }
	    break;

	  case 'r' & 0x1f:
	    uart_putchar('\r', stream);
     5ac:	b8 01       	movw	r22, r16
     5ae:	8d e0       	ldi	r24, 0x0D	; 13
     5b0:	0e 94 4a 02 	call	0x494	; 0x494 <uart_putchar>
	    for (cp2 = b; cp2 < cp; cp2++)
     5b4:	86 ed       	ldi	r24, 0xD6	; 214
     5b6:	e8 2e       	mov	r14, r24
     5b8:	81 e0       	ldi	r24, 0x01	; 1
     5ba:	f8 2e       	mov	r15, r24
     5bc:	06 c0       	rjmp	.+12     	; 0x5ca <uart_getchar+0xfe>
	      uart_putchar(*cp2, stream);
     5be:	b8 01       	movw	r22, r16
     5c0:	f7 01       	movw	r30, r14
     5c2:	81 91       	ld	r24, Z+
     5c4:	7f 01       	movw	r14, r30
     5c6:	0e 94 4a 02 	call	0x494	; 0x494 <uart_putchar>
	      }
	    break;

	  case 'r' & 0x1f:
	    uart_putchar('\r', stream);
	    for (cp2 = b; cp2 < cp; cp2++)
     5ca:	ec 16       	cp	r14, r28
     5cc:	fd 06       	cpc	r15, r29
     5ce:	b8 f3       	brcs	.-18     	; 0x5be <uart_getchar+0xf2>
     5d0:	8d cf       	rjmp	.-230    	; 0x4ec <uart_getchar+0x20>
	    break;

	  case 'u' & 0x1f:
	    while (cp > b)
	      {
		uart_putchar('\b', stream);
     5d2:	b8 01       	movw	r22, r16
     5d4:	88 e0       	ldi	r24, 0x08	; 8
     5d6:	0e 94 4a 02 	call	0x494	; 0x494 <uart_putchar>
		uart_putchar(' ', stream);
     5da:	b8 01       	movw	r22, r16
     5dc:	80 e2       	ldi	r24, 0x20	; 32
     5de:	0e 94 4a 02 	call	0x494	; 0x494 <uart_putchar>
		uart_putchar('\b', stream);
     5e2:	b8 01       	movw	r22, r16
     5e4:	88 e0       	ldi	r24, 0x08	; 8
     5e6:	0e 94 4a 02 	call	0x494	; 0x494 <uart_putchar>
		cp--;
     5ea:	21 97       	sbiw	r28, 0x01	; 1
	    for (cp2 = b; cp2 < cp; cp2++)
	      uart_putchar(*cp2, stream);
	    break;

	  case 'u' & 0x1f:
	    while (cp > b)
     5ec:	f1 e0       	ldi	r31, 0x01	; 1
     5ee:	c6 3d       	cpi	r28, 0xD6	; 214
     5f0:	df 07       	cpc	r29, r31
     5f2:	09 f0       	breq	.+2      	; 0x5f6 <uart_getchar+0x12a>
     5f4:	70 f7       	brcc	.-36     	; 0x5d2 <uart_getchar+0x106>
     5f6:	7a cf       	rjmp	.-268    	; 0x4ec <uart_getchar+0x20>
	    break;

	  case 'w' & 0x1f:
	    while (cp > b && cp[-1] != ' ')
	      {
		uart_putchar('\b', stream);
     5f8:	b8 01       	movw	r22, r16
     5fa:	88 e0       	ldi	r24, 0x08	; 8
     5fc:	0e 94 4a 02 	call	0x494	; 0x494 <uart_putchar>
		uart_putchar(' ', stream);
     600:	b8 01       	movw	r22, r16
     602:	80 e2       	ldi	r24, 0x20	; 32
     604:	0e 94 4a 02 	call	0x494	; 0x494 <uart_putchar>
		uart_putchar('\b', stream);
     608:	b8 01       	movw	r22, r16
     60a:	88 e0       	ldi	r24, 0x08	; 8
     60c:	0e 94 4a 02 	call	0x494	; 0x494 <uart_putchar>
		cp--;
     610:	e7 01       	movw	r28, r14
		cp--;
	      }
	    break;

	  case 'w' & 0x1f:
	    while (cp > b && cp[-1] != ' ')
     612:	81 e0       	ldi	r24, 0x01	; 1
     614:	c6 3d       	cpi	r28, 0xD6	; 214
     616:	d8 07       	cpc	r29, r24
     618:	09 f0       	breq	.+2      	; 0x61c <uart_getchar+0x150>
     61a:	08 f4       	brcc	.+2      	; 0x61e <uart_getchar+0x152>
     61c:	67 cf       	rjmp	.-306    	; 0x4ec <uart_getchar+0x20>
     61e:	fe 01       	movw	r30, r28
     620:	82 91       	ld	r24, -Z
     622:	7f 01       	movw	r14, r30
     624:	80 32       	cpi	r24, 0x20	; 32
     626:	41 f7       	brne	.-48     	; 0x5f8 <uart_getchar+0x12c>
     628:	61 cf       	rjmp	.-318    	; 0x4ec <uart_getchar+0x20>
	      }
	    break;
	  }
      }

  c = *rxp++;
     62a:	e0 91 d4 01 	lds	r30, 0x01D4
     62e:	f0 91 d5 01 	lds	r31, 0x01D5
     632:	20 81       	ld	r18, Z
  if (c == '\n')
     634:	2a 30       	cpi	r18, 0x0A	; 10
     636:	31 f0       	breq	.+12     	; 0x644 <uart_getchar+0x178>
	      }
	    break;
	  }
      }

  c = *rxp++;
     638:	31 96       	adiw	r30, 0x01	; 1
     63a:	f0 93 d5 01 	sts	0x01D5, r31
     63e:	e0 93 d4 01 	sts	0x01D4, r30
     642:	04 c0       	rjmp	.+8      	; 0x64c <uart_getchar+0x180>
  if (c == '\n')
    rxp = 0;
     644:	10 92 d5 01 	sts	0x01D5, r1
     648:	10 92 d4 01 	sts	0x01D4, r1

  return c;
     64c:	30 e0       	ldi	r19, 0x00	; 0
     64e:	05 c0       	rjmp	.+10     	; 0x65a <uart_getchar+0x18e>
  if (rxp == 0)
    for (cp = b;;)
      {
	loop_until_bit_is_set(UCSR0A, RXC0);
	if (UCSR0A & _BV(FE0))
	  return _FDEV_EOF;
     650:	2e ef       	ldi	r18, 0xFE	; 254
     652:	3f ef       	ldi	r19, 0xFF	; 255
     654:	02 c0       	rjmp	.+4      	; 0x65a <uart_getchar+0x18e>
	  }

	switch (c)
	  {
	  case 'c' & 0x1f:
	    return -1;
     656:	2f ef       	ldi	r18, 0xFF	; 255
     658:	3f ef       	ldi	r19, 0xFF	; 255
  c = *rxp++;
  if (c == '\n')
    rxp = 0;

  return c;
}
     65a:	c9 01       	movw	r24, r18
     65c:	df 91       	pop	r29
     65e:	cf 91       	pop	r28
     660:	1f 91       	pop	r17
     662:	0f 91       	pop	r16
     664:	ff 90       	pop	r15
     666:	ef 90       	pop	r14
     668:	08 95       	ret

0000066a <__vector_18>:
volatile unsigned long accumulator ;
volatile unsigned char changed;


volatile unsigned long increment;
ISR( TIMER0_OVF_vect){
     66a:	1f 92       	push	r1
     66c:	0f 92       	push	r0
     66e:	0f b6       	in	r0, 0x3f	; 63
     670:	0f 92       	push	r0
     672:	11 24       	eor	r1, r1
     674:	0b b6       	in	r0, 0x3b	; 59
     676:	0f 92       	push	r0
     678:	2f 93       	push	r18
     67a:	3f 93       	push	r19
     67c:	4f 93       	push	r20
     67e:	5f 93       	push	r21
     680:	6f 93       	push	r22
     682:	7f 93       	push	r23
     684:	8f 93       	push	r24
     686:	9f 93       	push	r25
     688:	af 93       	push	r26
     68a:	bf 93       	push	r27
     68c:	cf 93       	push	r28
     68e:	df 93       	push	r29
     690:	ef 93       	push	r30
     692:	ff 93       	push	r31
	//accumulator = accumulator + increment ;
	//highbyte = (char)(accumulator >> 24) ;
	
	// output the wavefrom sample
	//OCR0A = 128 + ((sineTable[highbyte] * rampTable[rampCount])>>7) ;
	changed = TRUE;
     694:	81 e0       	ldi	r24, 0x01	; 1
     696:	80 93 49 04 	sts	0x0449, r24


	OCR0A = 128 + 
	   ( (
	   	   (sineTable[(accumulator_a >> 24)] + sineTable[(accumulator_b >> 24)]) * rampTable[rampCount]
     69a:	40 91 41 04 	lds	r20, 0x0441
     69e:	50 91 42 04 	lds	r21, 0x0442
     6a2:	60 91 43 04 	lds	r22, 0x0443
     6a6:	70 91 44 04 	lds	r23, 0x0444
     6aa:	80 91 4c 04 	lds	r24, 0x044C
     6ae:	90 91 4d 04 	lds	r25, 0x044D
     6b2:	a0 91 4e 04 	lds	r26, 0x044E
     6b6:	b0 91 4f 04 	lds	r27, 0x044F
     6ba:	e0 91 4a 04 	lds	r30, 0x044A
     6be:	f0 91 4b 04 	lds	r31, 0x044B
     6c2:	47 2f       	mov	r20, r23
     6c4:	55 27       	eor	r21, r21
     6c6:	66 27       	eor	r22, r22
     6c8:	77 27       	eor	r23, r23
     6ca:	ea 01       	movw	r28, r20
     6cc:	cf 5b       	subi	r28, 0xBF	; 191
     6ce:	dc 4f       	sbci	r29, 0xFC	; 252
     6d0:	28 81       	ld	r18, Y
     6d2:	8b 2f       	mov	r24, r27
     6d4:	99 27       	eor	r25, r25
     6d6:	aa 27       	eor	r26, r26
     6d8:	bb 27       	eor	r27, r27
     6da:	dc 01       	movw	r26, r24
     6dc:	af 5b       	subi	r26, 0xBF	; 191
     6de:	bc 4f       	sbci	r27, 0xFC	; 252
     6e0:	8c 91       	ld	r24, X
     6e2:	99 27       	eor	r25, r25
     6e4:	87 fd       	sbrc	r24, 7
     6e6:	90 95       	com	r25
     6e8:	82 0f       	add	r24, r18
     6ea:	91 1d       	adc	r25, r1
     6ec:	27 fd       	sbrc	r18, 7
     6ee:	9a 95       	dec	r25
     6f0:	e8 5c       	subi	r30, 0xC8	; 200
     6f2:	fd 4f       	sbci	r31, 0xFD	; 253
     6f4:	40 81       	ld	r20, Z
     6f6:	48 9f       	mul	r20, r24
     6f8:	90 01       	movw	r18, r0
     6fa:	49 9f       	mul	r20, r25
     6fc:	30 0d       	add	r19, r0
     6fe:	11 24       	eor	r1, r1
	// output the wavefrom sample
	//OCR0A = 128 + ((sineTable[highbyte] * rampTable[rampCount])>>7) ;
	changed = TRUE;


	OCR0A = 128 + 
     700:	83 2f       	mov	r24, r19
     702:	80 58       	subi	r24, 0x80	; 128
     704:	87 bd       	out	0x27, r24	; 39
	   ( (
	   	   (sineTable[(accumulator_a >> 24)] + sineTable[(accumulator_b >> 24)]) * rampTable[rampCount]
	   	 ) >> 8
	   );
	accumulator_a += increment_a;
     706:	80 91 41 04 	lds	r24, 0x0441
     70a:	90 91 42 04 	lds	r25, 0x0442
     70e:	a0 91 43 04 	lds	r26, 0x0443
     712:	b0 91 44 04 	lds	r27, 0x0444
     716:	40 91 34 02 	lds	r20, 0x0234
     71a:	50 91 35 02 	lds	r21, 0x0235
     71e:	60 91 36 02 	lds	r22, 0x0236
     722:	70 91 37 02 	lds	r23, 0x0237
     726:	84 0f       	add	r24, r20
     728:	95 1f       	adc	r25, r21
     72a:	a6 1f       	adc	r26, r22
     72c:	b7 1f       	adc	r27, r23
     72e:	80 93 41 04 	sts	0x0441, r24
     732:	90 93 42 04 	sts	0x0442, r25
     736:	a0 93 43 04 	sts	0x0443, r26
     73a:	b0 93 44 04 	sts	0x0444, r27
	accumulator_b += increment_b;
     73e:	80 91 4c 04 	lds	r24, 0x044C
     742:	90 91 4d 04 	lds	r25, 0x044D
     746:	a0 91 4e 04 	lds	r26, 0x044E
     74a:	b0 91 4f 04 	lds	r27, 0x044F
     74e:	40 91 55 04 	lds	r20, 0x0455
     752:	50 91 56 04 	lds	r21, 0x0456
     756:	60 91 57 04 	lds	r22, 0x0457
     75a:	70 91 58 04 	lds	r23, 0x0458
     75e:	84 0f       	add	r24, r20
     760:	95 1f       	adc	r25, r21
     762:	a6 1f       	adc	r26, r22
     764:	b7 1f       	adc	r27, r23
     766:	80 93 4c 04 	sts	0x044C, r24
     76a:	90 93 4d 04 	sts	0x044D, r25
     76e:	a0 93 4e 04 	sts	0x044E, r26
     772:	b0 93 4f 04 	sts	0x044F, r27
	//generates a 1 ms timebase
	count--;	
     776:	80 91 31 02 	lds	r24, 0x0231
     77a:	81 50       	subi	r24, 0x01	; 1
     77c:	80 93 31 02 	sts	0x0231, r24
	if( is_playing && dds_duration > 0){
     780:	80 91 33 02 	lds	r24, 0x0233
     784:	88 23       	and	r24, r24
     786:	81 f0       	breq	.+32     	; 0x7a8 <__vector_18+0x13e>
     788:	80 91 28 02 	lds	r24, 0x0228
     78c:	90 91 29 02 	lds	r25, 0x0229
     790:	18 16       	cp	r1, r24
     792:	19 06       	cpc	r1, r25
     794:	4c f4       	brge	.+18     	; 0x7a8 <__vector_18+0x13e>
		dds_duration--;
     796:	80 91 28 02 	lds	r24, 0x0228
     79a:	90 91 29 02 	lds	r25, 0x0229
     79e:	01 97       	sbiw	r24, 0x01	; 1
     7a0:	90 93 29 02 	sts	0x0229, r25
     7a4:	80 93 28 02 	sts	0x0228, r24
	}
}
     7a8:	ff 91       	pop	r31
     7aa:	ef 91       	pop	r30
     7ac:	df 91       	pop	r29
     7ae:	cf 91       	pop	r28
     7b0:	bf 91       	pop	r27
     7b2:	af 91       	pop	r26
     7b4:	9f 91       	pop	r25
     7b6:	8f 91       	pop	r24
     7b8:	7f 91       	pop	r23
     7ba:	6f 91       	pop	r22
     7bc:	5f 91       	pop	r21
     7be:	4f 91       	pop	r20
     7c0:	3f 91       	pop	r19
     7c2:	2f 91       	pop	r18
     7c4:	0f 90       	pop	r0
     7c6:	0b be       	out	0x3b, r0	; 59
     7c8:	0f 90       	pop	r0
     7ca:	0f be       	out	0x3f, r0	; 63
     7cc:	0f 90       	pop	r0
     7ce:	1f 90       	pop	r1
     7d0:	18 95       	reti

000007d2 <init_dtmf>:


void init_dtmf(){
     7d2:	ef 92       	push	r14
     7d4:	ff 92       	push	r15
     7d6:	0f 93       	push	r16
     7d8:	1f 93       	push	r17
     7da:	cf 93       	push	r28
     7dc:	df 93       	push	r29
	DDRB = 0;
     7de:	14 b8       	out	0x04, r1	; 4
	DDRB |= OUTPUT_PIN;
     7e0:	23 9a       	sbi	0x04, 3	; 4
     7e2:	51 e4       	ldi	r21, 0x41	; 65
     7e4:	e5 2e       	mov	r14, r21
     7e6:	53 e0       	ldi	r21, 0x03	; 3
     7e8:	f5 2e       	mov	r15, r21
     7ea:	08 e3       	ldi	r16, 0x38	; 56
     7ec:	12 e0       	ldi	r17, 0x02	; 2
	int i;
	for (i=0; i<256; i++){
     7ee:	c0 e0       	ldi	r28, 0x00	; 0
     7f0:	d0 e0       	ldi	r29, 0x00	; 0
		sineTable[i] = (char)(127.0 * sin(6.283*((float)i)/256.0)) ;
     7f2:	be 01       	movw	r22, r28
     7f4:	88 27       	eor	r24, r24
     7f6:	77 fd       	sbrc	r23, 7
     7f8:	80 95       	com	r24
     7fa:	98 2f       	mov	r25, r24
     7fc:	0e 94 15 08 	call	0x102a	; 0x102a <__floatsisf>
     800:	26 e5       	ldi	r18, 0x56	; 86
     802:	3e e0       	ldi	r19, 0x0E	; 14
     804:	49 ec       	ldi	r20, 0xC9	; 201
     806:	50 e4       	ldi	r21, 0x40	; 64
     808:	0e 94 01 07 	call	0xe02	; 0xe02 <__mulsf3>
     80c:	20 e0       	ldi	r18, 0x00	; 0
     80e:	30 e0       	ldi	r19, 0x00	; 0
     810:	40 e8       	ldi	r20, 0x80	; 128
     812:	5b e3       	ldi	r21, 0x3B	; 59
     814:	0e 94 01 07 	call	0xe02	; 0xe02 <__mulsf3>
     818:	0e 94 1d 0b 	call	0x163a	; 0x163a <sin>
     81c:	20 e0       	ldi	r18, 0x00	; 0
     81e:	30 e0       	ldi	r19, 0x00	; 0
     820:	4e ef       	ldi	r20, 0xFE	; 254
     822:	52 e4       	ldi	r21, 0x42	; 66
     824:	0e 94 01 07 	call	0xe02	; 0xe02 <__mulsf3>
     828:	0e 94 1c 05 	call	0xa38	; 0xa38 <__fixunssfsi>
     82c:	f7 01       	movw	r30, r14
     82e:	61 93       	st	Z+, r22
     830:	7f 01       	movw	r14, r30
		// the following table needs 
		// rampTable[0]=0 and rampTable[255]=127
		rampTable[i] = i>>1 ;
     832:	ce 01       	movw	r24, r28
     834:	95 95       	asr	r25
     836:	87 95       	ror	r24
     838:	f8 01       	movw	r30, r16
     83a:	81 93       	st	Z+, r24
     83c:	8f 01       	movw	r16, r30

void init_dtmf(){
	DDRB = 0;
	DDRB |= OUTPUT_PIN;
	int i;
	for (i=0; i<256; i++){
     83e:	21 96       	adiw	r28, 0x01	; 1
     840:	c1 15       	cp	r28, r1
     842:	f1 e0       	ldi	r31, 0x01	; 1
     844:	df 07       	cpc	r29, r31
     846:	a9 f6       	brne	.-86     	; 0x7f2 <init_dtmf+0x20>
		sineTable[i] = (char)(127.0 * sin(6.283*((float)i)/256.0)) ;
		// the following table needs 
		// rampTable[0]=0 and rampTable[255]=127
		rampTable[i] = i>>1 ;
	}
	time = 0;
     848:	10 92 2d 02 	sts	0x022D, r1
     84c:	10 92 2c 02 	sts	0x022C, r1

	// TCCR0B = 0;
	// //set divider to 1, run T0 at 16 MHz 
	// TCCR0B |= T0_CS00;
	TCCR0B = 1;
     850:	81 e0       	ldi	r24, 0x01	; 1
     852:	85 bd       	out	0x25, r24	; 37
	TIMSK0 = 0;
     854:	10 92 6e 00 	sts	0x006E, r1
	TIMSK0 |= TIMER0_OVERFLOW_INTERRUPT_ENABLE;
     858:	80 91 6e 00 	lds	r24, 0x006E
     85c:	81 60       	ori	r24, 0x01	; 1
     85e:	80 93 6e 00 	sts	0x006E, r24
	//turn on fast PWM and OC0A - output 
	TCCR0A = 0;
     862:	14 bc       	out	0x24, r1	; 36
	TCCR0A = (1<<COM0A0) | (1<<COM0A1) | (1<<WGM00) | (1<<WGM01) ; 
     864:	83 ec       	ldi	r24, 0xC3	; 195
     866:	84 bd       	out	0x24, r24	; 36

	//TCCR0A |= WAVE_GEN_M00 + WAVE_GEN_M01 + COMPARE_MATCH_OUTPUT_A0 + COMPARE_MATCH_OUTPUT_A1; 
	OCR0A = 128;
     868:	80 e8       	ldi	r24, 0x80	; 128
     86a:	87 bd       	out	0x27, r24	; 39
	//increment = INCREMENT_941;
	//increment_a = INCREMENT_941;
	//increment_b = INCREMENT_941;
	sei();
     86c:	78 94       	sei
}
     86e:	df 91       	pop	r29
     870:	cf 91       	pop	r28
     872:	1f 91       	pop	r17
     874:	0f 91       	pop	r16
     876:	ff 90       	pop	r15
     878:	ef 90       	pop	r14
     87a:	08 95       	ret

0000087c <play>:

//plays fA and fB for a duration of duration ms
void play(int fA, int fB){
	//if( !is_playing ){
		//is_playing = TRUE;
		switch( fA){
     87c:	89 3b       	cpi	r24, 0xB9	; 185
     87e:	24 e0       	ldi	r18, 0x04	; 4
     880:	92 07       	cpc	r25, r18
     882:	89 f0       	breq	.+34     	; 0x8a6 <play+0x2a>
     884:	44 f4       	brge	.+16     	; 0x896 <play+0x1a>
     886:	89 3b       	cpi	r24, 0xB9	; 185
     888:	22 e0       	ldi	r18, 0x02	; 2
     88a:	92 07       	cpc	r25, r18
     88c:	19 f1       	breq	.+70     	; 0x8d4 <play+0x58>
     88e:	8d 3a       	cpi	r24, 0xAD	; 173
     890:	93 40       	sbci	r25, 0x03	; 3
     892:	51 f5       	brne	.+84     	; 0x8e8 <play+0x6c>
     894:	24 c0       	rjmp	.+72     	; 0x8de <play+0x62>
     896:	88 33       	cpi	r24, 0x38	; 56
     898:	25 e0       	ldi	r18, 0x05	; 5
     89a:	92 07       	cpc	r25, r18
     89c:	49 f0       	breq	.+18     	; 0x8b0 <play+0x34>
     89e:	85 3c       	cpi	r24, 0xC5	; 197
     8a0:	95 40       	sbci	r25, 0x05	; 5
     8a2:	11 f5       	brne	.+68     	; 0x8e8 <play+0x6c>
     8a4:	12 c0       	rjmp	.+36     	; 0x8ca <play+0x4e>
			case 1209: increment_a = INCREMENT_1209; break;
     8a6:	87 e3       	ldi	r24, 0x37	; 55
     8a8:	98 eb       	ldi	r25, 0xB8	; 184
     8aa:	a3 ef       	ldi	r26, 0xF3	; 243
     8ac:	b4 e0       	ldi	r27, 0x04	; 4
     8ae:	04 c0       	rjmp	.+8      	; 0x8b8 <play+0x3c>
			case 1336: increment_a = INCREMENT_1336; break;
     8b0:	88 e4       	ldi	r24, 0x48	; 72
     8b2:	93 ee       	ldi	r25, 0xE3	; 227
     8b4:	a8 e7       	ldi	r26, 0x78	; 120
     8b6:	b5 e0       	ldi	r27, 0x05	; 5
     8b8:	80 93 34 02 	sts	0x0234, r24
     8bc:	90 93 35 02 	sts	0x0235, r25
     8c0:	a0 93 36 02 	sts	0x0236, r26
     8c4:	b0 93 37 02 	sts	0x0237, r27
     8c8:	17 c0       	rjmp	.+46     	; 0x8f8 <play+0x7c>
			case 1477: increment_a = INCREMENT_1477; break;
     8ca:	8b e6       	ldi	r24, 0x6B	; 107
     8cc:	9c eb       	ldi	r25, 0xBC	; 188
     8ce:	ac e0       	ldi	r26, 0x0C	; 12
     8d0:	b6 e0       	ldi	r27, 0x06	; 6
     8d2:	f2 cf       	rjmp	.-28     	; 0x8b8 <play+0x3c>
			case 697:  increment_a = INCREMENT_697; break;
     8d4:	87 e3       	ldi	r24, 0x37	; 55
     8d6:	9a ed       	ldi	r25, 0xDA	; 218
     8d8:	aa ed       	ldi	r26, 0xDA	; 218
     8da:	b2 e0       	ldi	r27, 0x02	; 2
     8dc:	ed cf       	rjmp	.-38     	; 0x8b8 <play+0x3c>
			case 941: increment_a = INCREMENT_941; break;
     8de:	83 e0       	ldi	r24, 0x03	; 3
     8e0:	94 eb       	ldi	r25, 0xB4	; 180
     8e2:	aa ed       	ldi	r26, 0xDA	; 218
     8e4:	b3 e0       	ldi	r27, 0x03	; 3
     8e6:	e8 cf       	rjmp	.-48     	; 0x8b8 <play+0x3c>
			default: increment_a = 0; break;
     8e8:	10 92 34 02 	sts	0x0234, r1
     8ec:	10 92 35 02 	sts	0x0235, r1
     8f0:	10 92 36 02 	sts	0x0236, r1
     8f4:	10 92 37 02 	sts	0x0237, r1
		}

		switch ( fB) {
     8f8:	64 35       	cpi	r22, 0x54	; 84
     8fa:	83 e0       	ldi	r24, 0x03	; 3
     8fc:	78 07       	cpc	r23, r24
     8fe:	d9 f0       	breq	.+54     	; 0x936 <play+0xba>
     900:	44 f4       	brge	.+16     	; 0x912 <play+0x96>
     902:	69 3b       	cpi	r22, 0xB9	; 185
     904:	82 e0       	ldi	r24, 0x02	; 2
     906:	78 07       	cpc	r23, r24
     908:	61 f0       	breq	.+24     	; 0x922 <play+0xa6>
     90a:	62 30       	cpi	r22, 0x02	; 2
     90c:	73 40       	sbci	r23, 0x03	; 3
     90e:	91 f5       	brne	.+100    	; 0x974 <play+0xf8>
     910:	0d c0       	rjmp	.+26     	; 0x92c <play+0xb0>
     912:	6d 3a       	cpi	r22, 0xAD	; 173
     914:	83 e0       	ldi	r24, 0x03	; 3
     916:	78 07       	cpc	r23, r24
     918:	99 f0       	breq	.+38     	; 0x940 <play+0xc4>
     91a:	69 3b       	cpi	r22, 0xB9	; 185
     91c:	74 40       	sbci	r23, 0x04	; 4
     91e:	51 f5       	brne	.+84     	; 0x974 <play+0xf8>
     920:	1c c0       	rjmp	.+56     	; 0x95a <play+0xde>
			case 697: increment_b = INCREMENT_697; break;
     922:	87 e3       	ldi	r24, 0x37	; 55
     924:	9a ed       	ldi	r25, 0xDA	; 218
     926:	aa ed       	ldi	r26, 0xDA	; 218
     928:	b2 e0       	ldi	r27, 0x02	; 2
     92a:	0e c0       	rjmp	.+28     	; 0x948 <play+0xcc>
			case 770: increment_b = INCREMENT_770; break;
     92c:	8e ed       	ldi	r24, 0xDE	; 222
     92e:	95 e6       	ldi	r25, 0x65	; 101
     930:	a7 e2       	ldi	r26, 0x27	; 39
     932:	b3 e0       	ldi	r27, 0x03	; 3
     934:	09 c0       	rjmp	.+18     	; 0x948 <play+0xcc>
			case 852: increment_b = INCREMENT_852; break;
     936:	8c e6       	ldi	r24, 0x6C	; 108
     938:	91 e6       	ldi	r25, 0x61	; 97
     93a:	ad e7       	ldi	r26, 0x7D	; 125
     93c:	b3 e0       	ldi	r27, 0x03	; 3
     93e:	04 c0       	rjmp	.+8      	; 0x948 <play+0xcc>
			case 941: increment_b = INCREMENT_941; break;
     940:	83 e0       	ldi	r24, 0x03	; 3
     942:	94 eb       	ldi	r25, 0xB4	; 180
     944:	aa ed       	ldi	r26, 0xDA	; 218
     946:	b3 e0       	ldi	r27, 0x03	; 3
     948:	80 93 55 04 	sts	0x0455, r24
     94c:	90 93 56 04 	sts	0x0456, r25
     950:	a0 93 57 04 	sts	0x0457, r26
     954:	b0 93 58 04 	sts	0x0458, r27
     958:	08 95       	ret
			case 1209: increment_a = INCREMENT_1209; break;
     95a:	87 e3       	ldi	r24, 0x37	; 55
     95c:	98 eb       	ldi	r25, 0xB8	; 184
     95e:	a3 ef       	ldi	r26, 0xF3	; 243
     960:	b4 e0       	ldi	r27, 0x04	; 4
     962:	80 93 34 02 	sts	0x0234, r24
     966:	90 93 35 02 	sts	0x0235, r25
     96a:	a0 93 36 02 	sts	0x0236, r26
     96e:	b0 93 37 02 	sts	0x0237, r27
     972:	08 95       	ret
			default: increment_b = 0; break;
     974:	10 92 55 04 	sts	0x0455, r1
     978:	10 92 56 04 	sts	0x0456, r1
     97c:	10 92 57 04 	sts	0x0457, r1
     980:	10 92 58 04 	sts	0x0458, r1
     984:	08 95       	ret

00000986 <timed_play>:
		//OCR0A = 128;	
	//}
}

void timed_play(int fA, int fB, int duration){
	dds_duration = duration;
     986:	50 93 29 02 	sts	0x0229, r21
     98a:	40 93 28 02 	sts	0x0228, r20
	play(fA, fB);
     98e:	0e 94 3e 04 	call	0x87c	; 0x87c <play>
	is_playing=TRUE;
     992:	81 e0       	ldi	r24, 0x01	; 1
     994:	80 93 33 02 	sts	0x0233, r24
     998:	08 95       	ret

0000099a <stop_playing>:
}

void stop_playing(){
	is_playing = FALSE;
     99a:	10 92 33 02 	sts	0x0233, r1
	sample = 0;
     99e:	10 92 5b 04 	sts	0x045B, r1
     9a2:	10 92 5a 04 	sts	0x045A, r1
	rampCount = 0;
     9a6:	10 92 4b 04 	sts	0x044B, r1
     9aa:	10 92 4a 04 	sts	0x044A, r1
	increment_a = increment_b = 0;
     9ae:	10 92 55 04 	sts	0x0455, r1
     9b2:	10 92 56 04 	sts	0x0456, r1
     9b6:	10 92 57 04 	sts	0x0457, r1
     9ba:	10 92 58 04 	sts	0x0458, r1
     9be:	10 92 34 02 	sts	0x0234, r1
     9c2:	10 92 35 02 	sts	0x0235, r1
     9c6:	10 92 36 02 	sts	0x0236, r1
     9ca:	10 92 37 02 	sts	0x0237, r1
	accumulator_a = accumulator_b = 0;
     9ce:	10 92 4c 04 	sts	0x044C, r1
     9d2:	10 92 4d 04 	sts	0x044D, r1
     9d6:	10 92 4e 04 	sts	0x044E, r1
     9da:	10 92 4f 04 	sts	0x044F, r1
     9de:	10 92 41 04 	sts	0x0441, r1
     9e2:	10 92 42 04 	sts	0x0442, r1
     9e6:	10 92 43 04 	sts	0x0443, r1
     9ea:	10 92 44 04 	sts	0x0444, r1
     9ee:	08 95       	ret

000009f0 <update_status_variables>:
}


void update_status_variables(){
	if(changed == TRUE){
     9f0:	80 91 49 04 	lds	r24, 0x0449
     9f4:	81 30       	cpi	r24, 0x01	; 1
     9f6:	f9 f4       	brne	.+62     	; 0xa36 <update_status_variables+0x46>
		changed = FALSE;
     9f8:	10 92 49 04 	sts	0x0449, r1

		if (PushState == Pushed && rampCount < 255) {
     9fc:	80 91 32 02 	lds	r24, 0x0232
     a00:	83 30       	cpi	r24, 0x03	; 3
     a02:	41 f4       	brne	.+16     	; 0xa14 <update_status_variables+0x24>
     a04:	80 91 4a 04 	lds	r24, 0x044A
     a08:	90 91 4b 04 	lds	r25, 0x044B
     a0c:	8f 3f       	cpi	r24, 0xFF	; 255
     a0e:	91 05       	cpc	r25, r1
     a10:	90 f4       	brcc	.+36     	; 0xa36 <update_status_variables+0x46>
     a12:	08 c0       	rjmp	.+16     	; 0xa24 <update_status_variables+0x34>
			rampCount++;
		}
		if (PushState == NoPush && rampCount > 0 ) {
     a14:	81 30       	cpi	r24, 0x01	; 1
     a16:	79 f4       	brne	.+30     	; 0xa36 <update_status_variables+0x46>
     a18:	80 91 4a 04 	lds	r24, 0x044A
     a1c:	90 91 4b 04 	lds	r25, 0x044B
     a20:	89 2b       	or	r24, r25
     a22:	49 f0       	breq	.+18     	; 0xa36 <update_status_variables+0x46>
			rampCount++;
     a24:	80 91 4a 04 	lds	r24, 0x044A
     a28:	90 91 4b 04 	lds	r25, 0x044B
     a2c:	01 96       	adiw	r24, 0x01	; 1
     a2e:	90 93 4b 04 	sts	0x044B, r25
     a32:	80 93 4a 04 	sts	0x044A, r24
     a36:	08 95       	ret

00000a38 <__fixunssfsi>:
     a38:	cf 92       	push	r12
     a3a:	df 92       	push	r13
     a3c:	ef 92       	push	r14
     a3e:	ff 92       	push	r15
     a40:	0f 93       	push	r16
     a42:	1f 93       	push	r17
     a44:	6b 01       	movw	r12, r22
     a46:	7c 01       	movw	r14, r24
     a48:	20 e0       	ldi	r18, 0x00	; 0
     a4a:	30 e0       	ldi	r19, 0x00	; 0
     a4c:	40 e0       	ldi	r20, 0x00	; 0
     a4e:	5f e4       	ldi	r21, 0x4F	; 79
     a50:	0e 94 e6 07 	call	0xfcc	; 0xfcc <__gesf2>
     a54:	87 fd       	sbrc	r24, 7
     a56:	0e c0       	rjmp	.+28     	; 0xa74 <__fixunssfsi+0x3c>
     a58:	20 e0       	ldi	r18, 0x00	; 0
     a5a:	30 e0       	ldi	r19, 0x00	; 0
     a5c:	40 e0       	ldi	r20, 0x00	; 0
     a5e:	5f e4       	ldi	r21, 0x4F	; 79
     a60:	c7 01       	movw	r24, r14
     a62:	b6 01       	movw	r22, r12
     a64:	0e 94 d1 06 	call	0xda2	; 0xda2 <__subsf3>
     a68:	0e 94 71 08 	call	0x10e2	; 0x10e2 <__fixsfsi>
     a6c:	8b 01       	movw	r16, r22
     a6e:	9c 01       	movw	r18, r24
     a70:	30 58       	subi	r19, 0x80	; 128
     a72:	06 c0       	rjmp	.+12     	; 0xa80 <__fixunssfsi+0x48>
     a74:	c7 01       	movw	r24, r14
     a76:	b6 01       	movw	r22, r12
     a78:	0e 94 71 08 	call	0x10e2	; 0x10e2 <__fixsfsi>
     a7c:	8b 01       	movw	r16, r22
     a7e:	9c 01       	movw	r18, r24
     a80:	b8 01       	movw	r22, r16
     a82:	c9 01       	movw	r24, r18
     a84:	1f 91       	pop	r17
     a86:	0f 91       	pop	r16
     a88:	ff 90       	pop	r15
     a8a:	ef 90       	pop	r14
     a8c:	df 90       	pop	r13
     a8e:	cf 90       	pop	r12
     a90:	08 95       	ret

00000a92 <_fpadd_parts>:
     a92:	a4 e0       	ldi	r26, 0x04	; 4
     a94:	b0 e0       	ldi	r27, 0x00	; 0
     a96:	ef e4       	ldi	r30, 0x4F	; 79
     a98:	f5 e0       	ldi	r31, 0x05	; 5
     a9a:	0c 94 ad 0a 	jmp	0x155a	; 0x155a <__prologue_saves__+0x4>
     a9e:	7c 01       	movw	r14, r24
     aa0:	6a 01       	movw	r12, r20
     aa2:	fc 01       	movw	r30, r24
     aa4:	80 81       	ld	r24, Z
     aa6:	82 30       	cpi	r24, 0x02	; 2
     aa8:	08 f4       	brcc	.+2      	; 0xaac <_fpadd_parts+0x1a>
     aaa:	4a c1       	rjmp	.+660    	; 0xd40 <_fpadd_parts+0x2ae>
     aac:	fb 01       	movw	r30, r22
     aae:	90 81       	ld	r25, Z
     ab0:	92 30       	cpi	r25, 0x02	; 2
     ab2:	08 f4       	brcc	.+2      	; 0xab6 <_fpadd_parts+0x24>
     ab4:	42 c1       	rjmp	.+644    	; 0xd3a <_fpadd_parts+0x2a8>
     ab6:	84 30       	cpi	r24, 0x04	; 4
     ab8:	79 f4       	brne	.+30     	; 0xad8 <_fpadd_parts+0x46>
     aba:	94 30       	cpi	r25, 0x04	; 4
     abc:	09 f0       	breq	.+2      	; 0xac0 <_fpadd_parts+0x2e>
     abe:	40 c1       	rjmp	.+640    	; 0xd40 <_fpadd_parts+0x2ae>
     ac0:	f7 01       	movw	r30, r14
     ac2:	91 81       	ldd	r25, Z+1	; 0x01
     ac4:	fb 01       	movw	r30, r22
     ac6:	81 81       	ldd	r24, Z+1	; 0x01
     ac8:	98 17       	cp	r25, r24
     aca:	09 f4       	brne	.+2      	; 0xace <_fpadd_parts+0x3c>
     acc:	39 c1       	rjmp	.+626    	; 0xd40 <_fpadd_parts+0x2ae>
     ace:	ae e4       	ldi	r26, 0x4E	; 78
     ad0:	ea 2e       	mov	r14, r26
     ad2:	a1 e0       	ldi	r26, 0x01	; 1
     ad4:	fa 2e       	mov	r15, r26
     ad6:	34 c1       	rjmp	.+616    	; 0xd40 <_fpadd_parts+0x2ae>
     ad8:	94 30       	cpi	r25, 0x04	; 4
     ada:	09 f4       	brne	.+2      	; 0xade <_fpadd_parts+0x4c>
     adc:	2e c1       	rjmp	.+604    	; 0xd3a <_fpadd_parts+0x2a8>
     ade:	92 30       	cpi	r25, 0x02	; 2
     ae0:	91 f4       	brne	.+36     	; 0xb06 <_fpadd_parts+0x74>
     ae2:	82 30       	cpi	r24, 0x02	; 2
     ae4:	09 f0       	breq	.+2      	; 0xae8 <_fpadd_parts+0x56>
     ae6:	2c c1       	rjmp	.+600    	; 0xd40 <_fpadd_parts+0x2ae>
     ae8:	88 e0       	ldi	r24, 0x08	; 8
     aea:	f7 01       	movw	r30, r14
     aec:	da 01       	movw	r26, r20
     aee:	01 90       	ld	r0, Z+
     af0:	0d 92       	st	X+, r0
     af2:	8a 95       	dec	r24
     af4:	e1 f7       	brne	.-8      	; 0xaee <_fpadd_parts+0x5c>
     af6:	fb 01       	movw	r30, r22
     af8:	81 81       	ldd	r24, Z+1	; 0x01
     afa:	f7 01       	movw	r30, r14
     afc:	91 81       	ldd	r25, Z+1	; 0x01
     afe:	89 23       	and	r24, r25
     b00:	fa 01       	movw	r30, r20
     b02:	81 83       	std	Z+1, r24	; 0x01
     b04:	1c c1       	rjmp	.+568    	; 0xd3e <_fpadd_parts+0x2ac>
     b06:	82 30       	cpi	r24, 0x02	; 2
     b08:	09 f4       	brne	.+2      	; 0xb0c <_fpadd_parts+0x7a>
     b0a:	17 c1       	rjmp	.+558    	; 0xd3a <_fpadd_parts+0x2a8>
     b0c:	f7 01       	movw	r30, r14
     b0e:	82 81       	ldd	r24, Z+2	; 0x02
     b10:	93 81       	ldd	r25, Z+3	; 0x03
     b12:	fb 01       	movw	r30, r22
     b14:	a2 81       	ldd	r26, Z+2	; 0x02
     b16:	b3 81       	ldd	r27, Z+3	; 0x03
     b18:	f7 01       	movw	r30, r14
     b1a:	04 81       	ldd	r16, Z+4	; 0x04
     b1c:	15 81       	ldd	r17, Z+5	; 0x05
     b1e:	26 81       	ldd	r18, Z+6	; 0x06
     b20:	37 81       	ldd	r19, Z+7	; 0x07
     b22:	fb 01       	movw	r30, r22
     b24:	84 80       	ldd	r8, Z+4	; 0x04
     b26:	95 80       	ldd	r9, Z+5	; 0x05
     b28:	a6 80       	ldd	r10, Z+6	; 0x06
     b2a:	b7 80       	ldd	r11, Z+7	; 0x07
     b2c:	fc 01       	movw	r30, r24
     b2e:	ea 1b       	sub	r30, r26
     b30:	fb 0b       	sbc	r31, r27
     b32:	af 01       	movw	r20, r30
     b34:	f7 ff       	sbrs	r31, 7
     b36:	04 c0       	rjmp	.+8      	; 0xb40 <_fpadd_parts+0xae>
     b38:	44 27       	eor	r20, r20
     b3a:	55 27       	eor	r21, r21
     b3c:	4e 1b       	sub	r20, r30
     b3e:	5f 0b       	sbc	r21, r31
     b40:	40 32       	cpi	r20, 0x20	; 32
     b42:	51 05       	cpc	r21, r1
     b44:	0c f0       	brlt	.+2      	; 0xb48 <_fpadd_parts+0xb6>
     b46:	74 c0       	rjmp	.+232    	; 0xc30 <_fpadd_parts+0x19e>
     b48:	1e 16       	cp	r1, r30
     b4a:	1f 06       	cpc	r1, r31
     b4c:	b4 f5       	brge	.+108    	; 0xbba <_fpadd_parts+0x128>
     b4e:	24 01       	movw	r4, r8
     b50:	35 01       	movw	r6, r10
     b52:	04 2e       	mov	r0, r20
     b54:	04 c0       	rjmp	.+8      	; 0xb5e <_fpadd_parts+0xcc>
     b56:	76 94       	lsr	r7
     b58:	67 94       	ror	r6
     b5a:	57 94       	ror	r5
     b5c:	47 94       	ror	r4
     b5e:	0a 94       	dec	r0
     b60:	d2 f7       	brpl	.-12     	; 0xb56 <_fpadd_parts+0xc4>
     b62:	49 82       	std	Y+1, r4	; 0x01
     b64:	5a 82       	std	Y+2, r5	; 0x02
     b66:	6b 82       	std	Y+3, r6	; 0x03
     b68:	7c 82       	std	Y+4, r7	; 0x04
     b6a:	41 2c       	mov	r4, r1
     b6c:	51 2c       	mov	r5, r1
     b6e:	32 01       	movw	r6, r4
     b70:	43 94       	inc	r4
     b72:	04 c0       	rjmp	.+8      	; 0xb7c <_fpadd_parts+0xea>
     b74:	44 0c       	add	r4, r4
     b76:	55 1c       	adc	r5, r5
     b78:	66 1c       	adc	r6, r6
     b7a:	77 1c       	adc	r7, r7
     b7c:	4a 95       	dec	r20
     b7e:	d2 f7       	brpl	.-12     	; 0xb74 <_fpadd_parts+0xe2>
     b80:	41 e0       	ldi	r20, 0x01	; 1
     b82:	44 1a       	sub	r4, r20
     b84:	51 08       	sbc	r5, r1
     b86:	61 08       	sbc	r6, r1
     b88:	71 08       	sbc	r7, r1
     b8a:	48 20       	and	r4, r8
     b8c:	59 20       	and	r5, r9
     b8e:	6a 20       	and	r6, r10
     b90:	7b 20       	and	r7, r11
     b92:	81 2c       	mov	r8, r1
     b94:	91 2c       	mov	r9, r1
     b96:	54 01       	movw	r10, r8
     b98:	83 94       	inc	r8
     b9a:	45 28       	or	r4, r5
     b9c:	46 28       	or	r4, r6
     b9e:	47 28       	or	r4, r7
     ba0:	19 f4       	brne	.+6      	; 0xba8 <_fpadd_parts+0x116>
     ba2:	81 2c       	mov	r8, r1
     ba4:	91 2c       	mov	r9, r1
     ba6:	54 01       	movw	r10, r8
     ba8:	49 80       	ldd	r4, Y+1	; 0x01
     baa:	5a 80       	ldd	r5, Y+2	; 0x02
     bac:	6b 80       	ldd	r6, Y+3	; 0x03
     bae:	7c 80       	ldd	r7, Y+4	; 0x04
     bb0:	84 28       	or	r8, r4
     bb2:	95 28       	or	r9, r5
     bb4:	a6 28       	or	r10, r6
     bb6:	b7 28       	or	r11, r7
     bb8:	46 c0       	rjmp	.+140    	; 0xc46 <_fpadd_parts+0x1b4>
     bba:	ef 2b       	or	r30, r31
     bbc:	09 f4       	brne	.+2      	; 0xbc0 <_fpadd_parts+0x12e>
     bbe:	43 c0       	rjmp	.+134    	; 0xc46 <_fpadd_parts+0x1b4>
     bc0:	84 0f       	add	r24, r20
     bc2:	95 1f       	adc	r25, r21
     bc4:	28 01       	movw	r4, r16
     bc6:	39 01       	movw	r6, r18
     bc8:	04 2e       	mov	r0, r20
     bca:	04 c0       	rjmp	.+8      	; 0xbd4 <_fpadd_parts+0x142>
     bcc:	76 94       	lsr	r7
     bce:	67 94       	ror	r6
     bd0:	57 94       	ror	r5
     bd2:	47 94       	ror	r4
     bd4:	0a 94       	dec	r0
     bd6:	d2 f7       	brpl	.-12     	; 0xbcc <_fpadd_parts+0x13a>
     bd8:	49 82       	std	Y+1, r4	; 0x01
     bda:	5a 82       	std	Y+2, r5	; 0x02
     bdc:	6b 82       	std	Y+3, r6	; 0x03
     bde:	7c 82       	std	Y+4, r7	; 0x04
     be0:	41 2c       	mov	r4, r1
     be2:	51 2c       	mov	r5, r1
     be4:	32 01       	movw	r6, r4
     be6:	43 94       	inc	r4
     be8:	04 c0       	rjmp	.+8      	; 0xbf2 <_fpadd_parts+0x160>
     bea:	44 0c       	add	r4, r4
     bec:	55 1c       	adc	r5, r5
     bee:	66 1c       	adc	r6, r6
     bf0:	77 1c       	adc	r7, r7
     bf2:	4a 95       	dec	r20
     bf4:	d2 f7       	brpl	.-12     	; 0xbea <_fpadd_parts+0x158>
     bf6:	41 e0       	ldi	r20, 0x01	; 1
     bf8:	44 1a       	sub	r4, r20
     bfa:	51 08       	sbc	r5, r1
     bfc:	61 08       	sbc	r6, r1
     bfe:	71 08       	sbc	r7, r1
     c00:	40 22       	and	r4, r16
     c02:	51 22       	and	r5, r17
     c04:	62 22       	and	r6, r18
     c06:	73 22       	and	r7, r19
     c08:	01 e0       	ldi	r16, 0x01	; 1
     c0a:	10 e0       	ldi	r17, 0x00	; 0
     c0c:	20 e0       	ldi	r18, 0x00	; 0
     c0e:	30 e0       	ldi	r19, 0x00	; 0
     c10:	45 28       	or	r4, r5
     c12:	46 28       	or	r4, r6
     c14:	47 28       	or	r4, r7
     c16:	19 f4       	brne	.+6      	; 0xc1e <_fpadd_parts+0x18c>
     c18:	00 e0       	ldi	r16, 0x00	; 0
     c1a:	10 e0       	ldi	r17, 0x00	; 0
     c1c:	98 01       	movw	r18, r16
     c1e:	49 80       	ldd	r4, Y+1	; 0x01
     c20:	5a 80       	ldd	r5, Y+2	; 0x02
     c22:	6b 80       	ldd	r6, Y+3	; 0x03
     c24:	7c 80       	ldd	r7, Y+4	; 0x04
     c26:	04 29       	or	r16, r4
     c28:	15 29       	or	r17, r5
     c2a:	26 29       	or	r18, r6
     c2c:	37 29       	or	r19, r7
     c2e:	0b c0       	rjmp	.+22     	; 0xc46 <_fpadd_parts+0x1b4>
     c30:	a8 17       	cp	r26, r24
     c32:	b9 07       	cpc	r27, r25
     c34:	24 f4       	brge	.+8      	; 0xc3e <_fpadd_parts+0x1ac>
     c36:	81 2c       	mov	r8, r1
     c38:	91 2c       	mov	r9, r1
     c3a:	54 01       	movw	r10, r8
     c3c:	04 c0       	rjmp	.+8      	; 0xc46 <_fpadd_parts+0x1b4>
     c3e:	cd 01       	movw	r24, r26
     c40:	00 e0       	ldi	r16, 0x00	; 0
     c42:	10 e0       	ldi	r17, 0x00	; 0
     c44:	98 01       	movw	r18, r16
     c46:	f7 01       	movw	r30, r14
     c48:	41 81       	ldd	r20, Z+1	; 0x01
     c4a:	fb 01       	movw	r30, r22
     c4c:	51 81       	ldd	r21, Z+1	; 0x01
     c4e:	45 17       	cp	r20, r21
     c50:	09 f4       	brne	.+2      	; 0xc54 <_fpadd_parts+0x1c2>
     c52:	46 c0       	rjmp	.+140    	; 0xce0 <_fpadd_parts+0x24e>
     c54:	44 23       	and	r20, r20
     c56:	49 f0       	breq	.+18     	; 0xc6a <_fpadd_parts+0x1d8>
     c58:	24 01       	movw	r4, r8
     c5a:	35 01       	movw	r6, r10
     c5c:	40 1a       	sub	r4, r16
     c5e:	51 0a       	sbc	r5, r17
     c60:	62 0a       	sbc	r6, r18
     c62:	73 0a       	sbc	r7, r19
     c64:	93 01       	movw	r18, r6
     c66:	82 01       	movw	r16, r4
     c68:	04 c0       	rjmp	.+8      	; 0xc72 <_fpadd_parts+0x1e0>
     c6a:	08 19       	sub	r16, r8
     c6c:	19 09       	sbc	r17, r9
     c6e:	2a 09       	sbc	r18, r10
     c70:	3b 09       	sbc	r19, r11
     c72:	37 fd       	sbrc	r19, 7
     c74:	05 c0       	rjmp	.+10     	; 0xc80 <_fpadd_parts+0x1ee>
     c76:	f6 01       	movw	r30, r12
     c78:	11 82       	std	Z+1, r1	; 0x01
     c7a:	93 83       	std	Z+3, r25	; 0x03
     c7c:	82 83       	std	Z+2, r24	; 0x02
     c7e:	0c c0       	rjmp	.+24     	; 0xc98 <_fpadd_parts+0x206>
     c80:	41 e0       	ldi	r20, 0x01	; 1
     c82:	f6 01       	movw	r30, r12
     c84:	41 83       	std	Z+1, r20	; 0x01
     c86:	93 83       	std	Z+3, r25	; 0x03
     c88:	82 83       	std	Z+2, r24	; 0x02
     c8a:	30 95       	com	r19
     c8c:	20 95       	com	r18
     c8e:	10 95       	com	r17
     c90:	01 95       	neg	r16
     c92:	1f 4f       	sbci	r17, 0xFF	; 255
     c94:	2f 4f       	sbci	r18, 0xFF	; 255
     c96:	3f 4f       	sbci	r19, 0xFF	; 255
     c98:	04 83       	std	Z+4, r16	; 0x04
     c9a:	15 83       	std	Z+5, r17	; 0x05
     c9c:	26 83       	std	Z+6, r18	; 0x06
     c9e:	37 83       	std	Z+7, r19	; 0x07
     ca0:	0e c0       	rjmp	.+28     	; 0xcbe <_fpadd_parts+0x22c>
     ca2:	88 0f       	add	r24, r24
     ca4:	99 1f       	adc	r25, r25
     ca6:	aa 1f       	adc	r26, r26
     ca8:	bb 1f       	adc	r27, r27
     caa:	f6 01       	movw	r30, r12
     cac:	84 83       	std	Z+4, r24	; 0x04
     cae:	95 83       	std	Z+5, r25	; 0x05
     cb0:	a6 83       	std	Z+6, r26	; 0x06
     cb2:	b7 83       	std	Z+7, r27	; 0x07
     cb4:	82 81       	ldd	r24, Z+2	; 0x02
     cb6:	93 81       	ldd	r25, Z+3	; 0x03
     cb8:	01 97       	sbiw	r24, 0x01	; 1
     cba:	93 83       	std	Z+3, r25	; 0x03
     cbc:	82 83       	std	Z+2, r24	; 0x02
     cbe:	f6 01       	movw	r30, r12
     cc0:	84 81       	ldd	r24, Z+4	; 0x04
     cc2:	95 81       	ldd	r25, Z+5	; 0x05
     cc4:	a6 81       	ldd	r26, Z+6	; 0x06
     cc6:	b7 81       	ldd	r27, Z+7	; 0x07
     cc8:	ac 01       	movw	r20, r24
     cca:	bd 01       	movw	r22, r26
     ccc:	41 50       	subi	r20, 0x01	; 1
     cce:	51 09       	sbc	r21, r1
     cd0:	61 09       	sbc	r22, r1
     cd2:	71 09       	sbc	r23, r1
     cd4:	4f 3f       	cpi	r20, 0xFF	; 255
     cd6:	5f 4f       	sbci	r21, 0xFF	; 255
     cd8:	6f 4f       	sbci	r22, 0xFF	; 255
     cda:	7f 43       	sbci	r23, 0x3F	; 63
     cdc:	10 f3       	brcs	.-60     	; 0xca2 <_fpadd_parts+0x210>
     cde:	0c c0       	rjmp	.+24     	; 0xcf8 <_fpadd_parts+0x266>
     ce0:	f6 01       	movw	r30, r12
     ce2:	41 83       	std	Z+1, r20	; 0x01
     ce4:	93 83       	std	Z+3, r25	; 0x03
     ce6:	82 83       	std	Z+2, r24	; 0x02
     ce8:	08 0d       	add	r16, r8
     cea:	19 1d       	adc	r17, r9
     cec:	2a 1d       	adc	r18, r10
     cee:	3b 1d       	adc	r19, r11
     cf0:	04 83       	std	Z+4, r16	; 0x04
     cf2:	15 83       	std	Z+5, r17	; 0x05
     cf4:	26 83       	std	Z+6, r18	; 0x06
     cf6:	37 83       	std	Z+7, r19	; 0x07
     cf8:	83 e0       	ldi	r24, 0x03	; 3
     cfa:	f6 01       	movw	r30, r12
     cfc:	80 83       	st	Z, r24
     cfe:	44 81       	ldd	r20, Z+4	; 0x04
     d00:	55 81       	ldd	r21, Z+5	; 0x05
     d02:	66 81       	ldd	r22, Z+6	; 0x06
     d04:	77 81       	ldd	r23, Z+7	; 0x07
     d06:	77 ff       	sbrs	r23, 7
     d08:	1a c0       	rjmp	.+52     	; 0xd3e <_fpadd_parts+0x2ac>
     d0a:	db 01       	movw	r26, r22
     d0c:	ca 01       	movw	r24, r20
     d0e:	81 70       	andi	r24, 0x01	; 1
     d10:	99 27       	eor	r25, r25
     d12:	aa 27       	eor	r26, r26
     d14:	bb 27       	eor	r27, r27
     d16:	76 95       	lsr	r23
     d18:	67 95       	ror	r22
     d1a:	57 95       	ror	r21
     d1c:	47 95       	ror	r20
     d1e:	84 2b       	or	r24, r20
     d20:	95 2b       	or	r25, r21
     d22:	a6 2b       	or	r26, r22
     d24:	b7 2b       	or	r27, r23
     d26:	84 83       	std	Z+4, r24	; 0x04
     d28:	95 83       	std	Z+5, r25	; 0x05
     d2a:	a6 83       	std	Z+6, r26	; 0x06
     d2c:	b7 83       	std	Z+7, r27	; 0x07
     d2e:	82 81       	ldd	r24, Z+2	; 0x02
     d30:	93 81       	ldd	r25, Z+3	; 0x03
     d32:	01 96       	adiw	r24, 0x01	; 1
     d34:	93 83       	std	Z+3, r25	; 0x03
     d36:	82 83       	std	Z+2, r24	; 0x02
     d38:	02 c0       	rjmp	.+4      	; 0xd3e <_fpadd_parts+0x2ac>
     d3a:	7b 01       	movw	r14, r22
     d3c:	01 c0       	rjmp	.+2      	; 0xd40 <_fpadd_parts+0x2ae>
     d3e:	76 01       	movw	r14, r12
     d40:	c7 01       	movw	r24, r14
     d42:	24 96       	adiw	r28, 0x04	; 4
     d44:	e0 e1       	ldi	r30, 0x10	; 16
     d46:	0c 94 c9 0a 	jmp	0x1592	; 0x1592 <__epilogue_restores__+0x4>

00000d4a <__addsf3>:
     d4a:	a0 e2       	ldi	r26, 0x20	; 32
     d4c:	b0 e0       	ldi	r27, 0x00	; 0
     d4e:	eb ea       	ldi	r30, 0xAB	; 171
     d50:	f6 e0       	ldi	r31, 0x06	; 6
     d52:	0c 94 bb 0a 	jmp	0x1576	; 0x1576 <__prologue_saves__+0x20>
     d56:	6d 8f       	std	Y+29, r22	; 0x1d
     d58:	7e 8f       	std	Y+30, r23	; 0x1e
     d5a:	8f 8f       	std	Y+31, r24	; 0x1f
     d5c:	98 a3       	std	Y+32, r25	; 0x20
     d5e:	29 8f       	std	Y+25, r18	; 0x19
     d60:	3a 8f       	std	Y+26, r19	; 0x1a
     d62:	4b 8f       	std	Y+27, r20	; 0x1b
     d64:	5c 8f       	std	Y+28, r21	; 0x1c
     d66:	be 01       	movw	r22, r28
     d68:	6f 5e       	subi	r22, 0xEF	; 239
     d6a:	7f 4f       	sbci	r23, 0xFF	; 255
     d6c:	ce 01       	movw	r24, r28
     d6e:	4d 96       	adiw	r24, 0x1d	; 29
     d70:	0e 94 8a 09 	call	0x1314	; 0x1314 <__unpack_f>
     d74:	be 01       	movw	r22, r28
     d76:	67 5f       	subi	r22, 0xF7	; 247
     d78:	7f 4f       	sbci	r23, 0xFF	; 255
     d7a:	ce 01       	movw	r24, r28
     d7c:	49 96       	adiw	r24, 0x19	; 25
     d7e:	0e 94 8a 09 	call	0x1314	; 0x1314 <__unpack_f>
     d82:	ae 01       	movw	r20, r28
     d84:	4f 5f       	subi	r20, 0xFF	; 255
     d86:	5f 4f       	sbci	r21, 0xFF	; 255
     d88:	be 01       	movw	r22, r28
     d8a:	67 5f       	subi	r22, 0xF7	; 247
     d8c:	7f 4f       	sbci	r23, 0xFF	; 255
     d8e:	ce 01       	movw	r24, r28
     d90:	41 96       	adiw	r24, 0x11	; 17
     d92:	0e 94 49 05 	call	0xa92	; 0xa92 <_fpadd_parts>
     d96:	0e 94 c0 08 	call	0x1180	; 0x1180 <__pack_f>
     d9a:	a0 96       	adiw	r28, 0x20	; 32
     d9c:	e2 e0       	ldi	r30, 0x02	; 2
     d9e:	0c 94 d7 0a 	jmp	0x15ae	; 0x15ae <__epilogue_restores__+0x20>

00000da2 <__subsf3>:
     da2:	a0 e2       	ldi	r26, 0x20	; 32
     da4:	b0 e0       	ldi	r27, 0x00	; 0
     da6:	e7 ed       	ldi	r30, 0xD7	; 215
     da8:	f6 e0       	ldi	r31, 0x06	; 6
     daa:	0c 94 bb 0a 	jmp	0x1576	; 0x1576 <__prologue_saves__+0x20>
     dae:	6d 8f       	std	Y+29, r22	; 0x1d
     db0:	7e 8f       	std	Y+30, r23	; 0x1e
     db2:	8f 8f       	std	Y+31, r24	; 0x1f
     db4:	98 a3       	std	Y+32, r25	; 0x20
     db6:	29 8f       	std	Y+25, r18	; 0x19
     db8:	3a 8f       	std	Y+26, r19	; 0x1a
     dba:	4b 8f       	std	Y+27, r20	; 0x1b
     dbc:	5c 8f       	std	Y+28, r21	; 0x1c
     dbe:	be 01       	movw	r22, r28
     dc0:	6f 5e       	subi	r22, 0xEF	; 239
     dc2:	7f 4f       	sbci	r23, 0xFF	; 255
     dc4:	ce 01       	movw	r24, r28
     dc6:	4d 96       	adiw	r24, 0x1d	; 29
     dc8:	0e 94 8a 09 	call	0x1314	; 0x1314 <__unpack_f>
     dcc:	be 01       	movw	r22, r28
     dce:	67 5f       	subi	r22, 0xF7	; 247
     dd0:	7f 4f       	sbci	r23, 0xFF	; 255
     dd2:	ce 01       	movw	r24, r28
     dd4:	49 96       	adiw	r24, 0x19	; 25
     dd6:	0e 94 8a 09 	call	0x1314	; 0x1314 <__unpack_f>
     dda:	8a 85       	ldd	r24, Y+10	; 0x0a
     ddc:	91 e0       	ldi	r25, 0x01	; 1
     dde:	89 27       	eor	r24, r25
     de0:	8a 87       	std	Y+10, r24	; 0x0a
     de2:	ae 01       	movw	r20, r28
     de4:	4f 5f       	subi	r20, 0xFF	; 255
     de6:	5f 4f       	sbci	r21, 0xFF	; 255
     de8:	be 01       	movw	r22, r28
     dea:	67 5f       	subi	r22, 0xF7	; 247
     dec:	7f 4f       	sbci	r23, 0xFF	; 255
     dee:	ce 01       	movw	r24, r28
     df0:	41 96       	adiw	r24, 0x11	; 17
     df2:	0e 94 49 05 	call	0xa92	; 0xa92 <_fpadd_parts>
     df6:	0e 94 c0 08 	call	0x1180	; 0x1180 <__pack_f>
     dfa:	a0 96       	adiw	r28, 0x20	; 32
     dfc:	e2 e0       	ldi	r30, 0x02	; 2
     dfe:	0c 94 d7 0a 	jmp	0x15ae	; 0x15ae <__epilogue_restores__+0x20>

00000e02 <__mulsf3>:
     e02:	a0 e2       	ldi	r26, 0x20	; 32
     e04:	b0 e0       	ldi	r27, 0x00	; 0
     e06:	e7 e0       	ldi	r30, 0x07	; 7
     e08:	f7 e0       	ldi	r31, 0x07	; 7
     e0a:	0c 94 ad 0a 	jmp	0x155a	; 0x155a <__prologue_saves__+0x4>
     e0e:	6d 8f       	std	Y+29, r22	; 0x1d
     e10:	7e 8f       	std	Y+30, r23	; 0x1e
     e12:	8f 8f       	std	Y+31, r24	; 0x1f
     e14:	98 a3       	std	Y+32, r25	; 0x20
     e16:	29 8f       	std	Y+25, r18	; 0x19
     e18:	3a 8f       	std	Y+26, r19	; 0x1a
     e1a:	4b 8f       	std	Y+27, r20	; 0x1b
     e1c:	5c 8f       	std	Y+28, r21	; 0x1c
     e1e:	be 01       	movw	r22, r28
     e20:	6f 5e       	subi	r22, 0xEF	; 239
     e22:	7f 4f       	sbci	r23, 0xFF	; 255
     e24:	ce 01       	movw	r24, r28
     e26:	4d 96       	adiw	r24, 0x1d	; 29
     e28:	0e 94 8a 09 	call	0x1314	; 0x1314 <__unpack_f>
     e2c:	be 01       	movw	r22, r28
     e2e:	67 5f       	subi	r22, 0xF7	; 247
     e30:	7f 4f       	sbci	r23, 0xFF	; 255
     e32:	ce 01       	movw	r24, r28
     e34:	49 96       	adiw	r24, 0x19	; 25
     e36:	0e 94 8a 09 	call	0x1314	; 0x1314 <__unpack_f>
     e3a:	99 89       	ldd	r25, Y+17	; 0x11
     e3c:	92 30       	cpi	r25, 0x02	; 2
     e3e:	08 f4       	brcc	.+2      	; 0xe42 <__mulsf3+0x40>
     e40:	12 c0       	rjmp	.+36     	; 0xe66 <__mulsf3+0x64>
     e42:	89 85       	ldd	r24, Y+9	; 0x09
     e44:	82 30       	cpi	r24, 0x02	; 2
     e46:	08 f4       	brcc	.+2      	; 0xe4a <__mulsf3+0x48>
     e48:	1a c0       	rjmp	.+52     	; 0xe7e <__mulsf3+0x7c>
     e4a:	94 30       	cpi	r25, 0x04	; 4
     e4c:	21 f4       	brne	.+8      	; 0xe56 <__mulsf3+0x54>
     e4e:	82 30       	cpi	r24, 0x02	; 2
     e50:	09 f4       	brne	.+2      	; 0xe54 <__mulsf3+0x52>
     e52:	b4 c0       	rjmp	.+360    	; 0xfbc <__mulsf3+0x1ba>
     e54:	08 c0       	rjmp	.+16     	; 0xe66 <__mulsf3+0x64>
     e56:	84 30       	cpi	r24, 0x04	; 4
     e58:	21 f4       	brne	.+8      	; 0xe62 <__mulsf3+0x60>
     e5a:	92 30       	cpi	r25, 0x02	; 2
     e5c:	09 f4       	brne	.+2      	; 0xe60 <__mulsf3+0x5e>
     e5e:	ae c0       	rjmp	.+348    	; 0xfbc <__mulsf3+0x1ba>
     e60:	0e c0       	rjmp	.+28     	; 0xe7e <__mulsf3+0x7c>
     e62:	92 30       	cpi	r25, 0x02	; 2
     e64:	51 f4       	brne	.+20     	; 0xe7a <__mulsf3+0x78>
     e66:	81 e0       	ldi	r24, 0x01	; 1
     e68:	2a 89       	ldd	r18, Y+18	; 0x12
     e6a:	9a 85       	ldd	r25, Y+10	; 0x0a
     e6c:	29 13       	cpse	r18, r25
     e6e:	01 c0       	rjmp	.+2      	; 0xe72 <__mulsf3+0x70>
     e70:	80 e0       	ldi	r24, 0x00	; 0
     e72:	8a 8b       	std	Y+18, r24	; 0x12
     e74:	ce 01       	movw	r24, r28
     e76:	41 96       	adiw	r24, 0x11	; 17
     e78:	a3 c0       	rjmp	.+326    	; 0xfc0 <__mulsf3+0x1be>
     e7a:	82 30       	cpi	r24, 0x02	; 2
     e7c:	51 f4       	brne	.+20     	; 0xe92 <__mulsf3+0x90>
     e7e:	81 e0       	ldi	r24, 0x01	; 1
     e80:	2a 89       	ldd	r18, Y+18	; 0x12
     e82:	9a 85       	ldd	r25, Y+10	; 0x0a
     e84:	29 13       	cpse	r18, r25
     e86:	01 c0       	rjmp	.+2      	; 0xe8a <__mulsf3+0x88>
     e88:	80 e0       	ldi	r24, 0x00	; 0
     e8a:	8a 87       	std	Y+10, r24	; 0x0a
     e8c:	ce 01       	movw	r24, r28
     e8e:	09 96       	adiw	r24, 0x09	; 9
     e90:	97 c0       	rjmp	.+302    	; 0xfc0 <__mulsf3+0x1be>
     e92:	8d 88       	ldd	r8, Y+21	; 0x15
     e94:	9e 88       	ldd	r9, Y+22	; 0x16
     e96:	af 88       	ldd	r10, Y+23	; 0x17
     e98:	b8 8c       	ldd	r11, Y+24	; 0x18
     e9a:	0d 85       	ldd	r16, Y+13	; 0x0d
     e9c:	1e 85       	ldd	r17, Y+14	; 0x0e
     e9e:	2f 85       	ldd	r18, Y+15	; 0x0f
     ea0:	38 89       	ldd	r19, Y+16	; 0x10
     ea2:	e0 e2       	ldi	r30, 0x20	; 32
     ea4:	f0 e0       	ldi	r31, 0x00	; 0
     ea6:	80 e0       	ldi	r24, 0x00	; 0
     ea8:	90 e0       	ldi	r25, 0x00	; 0
     eaa:	dc 01       	movw	r26, r24
     eac:	c1 2c       	mov	r12, r1
     eae:	d1 2c       	mov	r13, r1
     eb0:	76 01       	movw	r14, r12
     eb2:	40 e0       	ldi	r20, 0x00	; 0
     eb4:	50 e0       	ldi	r21, 0x00	; 0
     eb6:	ba 01       	movw	r22, r20
     eb8:	80 fe       	sbrs	r8, 0
     eba:	18 c0       	rjmp	.+48     	; 0xeec <__mulsf3+0xea>
     ebc:	40 0f       	add	r20, r16
     ebe:	51 1f       	adc	r21, r17
     ec0:	62 1f       	adc	r22, r18
     ec2:	73 1f       	adc	r23, r19
     ec4:	8c 0d       	add	r24, r12
     ec6:	9d 1d       	adc	r25, r13
     ec8:	ae 1d       	adc	r26, r14
     eca:	bf 1d       	adc	r27, r15
     ecc:	41 2c       	mov	r4, r1
     ece:	51 2c       	mov	r5, r1
     ed0:	32 01       	movw	r6, r4
     ed2:	43 94       	inc	r4
     ed4:	40 17       	cp	r20, r16
     ed6:	51 07       	cpc	r21, r17
     ed8:	62 07       	cpc	r22, r18
     eda:	73 07       	cpc	r23, r19
     edc:	18 f0       	brcs	.+6      	; 0xee4 <__mulsf3+0xe2>
     ede:	41 2c       	mov	r4, r1
     ee0:	51 2c       	mov	r5, r1
     ee2:	32 01       	movw	r6, r4
     ee4:	84 0d       	add	r24, r4
     ee6:	95 1d       	adc	r25, r5
     ee8:	a6 1d       	adc	r26, r6
     eea:	b7 1d       	adc	r27, r7
     eec:	cc 0c       	add	r12, r12
     eee:	dd 1c       	adc	r13, r13
     ef0:	ee 1c       	adc	r14, r14
     ef2:	ff 1c       	adc	r15, r15
     ef4:	37 ff       	sbrs	r19, 7
     ef6:	02 c0       	rjmp	.+4      	; 0xefc <__mulsf3+0xfa>
     ef8:	68 94       	set
     efa:	c0 f8       	bld	r12, 0
     efc:	00 0f       	add	r16, r16
     efe:	11 1f       	adc	r17, r17
     f00:	22 1f       	adc	r18, r18
     f02:	33 1f       	adc	r19, r19
     f04:	b6 94       	lsr	r11
     f06:	a7 94       	ror	r10
     f08:	97 94       	ror	r9
     f0a:	87 94       	ror	r8
     f0c:	31 97       	sbiw	r30, 0x01	; 1
     f0e:	a1 f6       	brne	.-88     	; 0xeb8 <__mulsf3+0xb6>
     f10:	2b 89       	ldd	r18, Y+19	; 0x13
     f12:	3c 89       	ldd	r19, Y+20	; 0x14
     f14:	eb 85       	ldd	r30, Y+11	; 0x0b
     f16:	fc 85       	ldd	r31, Y+12	; 0x0c
     f18:	2e 0f       	add	r18, r30
     f1a:	3f 1f       	adc	r19, r31
     f1c:	2e 5f       	subi	r18, 0xFE	; 254
     f1e:	3f 4f       	sbci	r19, 0xFF	; 255
     f20:	3c 83       	std	Y+4, r19	; 0x04
     f22:	2b 83       	std	Y+3, r18	; 0x03
     f24:	21 e0       	ldi	r18, 0x01	; 1
     f26:	ea 89       	ldd	r30, Y+18	; 0x12
     f28:	3a 85       	ldd	r19, Y+10	; 0x0a
     f2a:	e3 13       	cpse	r30, r19
     f2c:	01 c0       	rjmp	.+2      	; 0xf30 <__mulsf3+0x12e>
     f2e:	20 e0       	ldi	r18, 0x00	; 0
     f30:	2a 83       	std	Y+2, r18	; 0x02
     f32:	eb 81       	ldd	r30, Y+3	; 0x03
     f34:	fc 81       	ldd	r31, Y+4	; 0x04
     f36:	0c c0       	rjmp	.+24     	; 0xf50 <__mulsf3+0x14e>
     f38:	80 ff       	sbrs	r24, 0
     f3a:	05 c0       	rjmp	.+10     	; 0xf46 <__mulsf3+0x144>
     f3c:	76 95       	lsr	r23
     f3e:	67 95       	ror	r22
     f40:	57 95       	ror	r21
     f42:	47 95       	ror	r20
     f44:	70 68       	ori	r23, 0x80	; 128
     f46:	b6 95       	lsr	r27
     f48:	a7 95       	ror	r26
     f4a:	97 95       	ror	r25
     f4c:	87 95       	ror	r24
     f4e:	31 96       	adiw	r30, 0x01	; 1
     f50:	b7 fd       	sbrc	r27, 7
     f52:	f2 cf       	rjmp	.-28     	; 0xf38 <__mulsf3+0x136>
     f54:	9f 01       	movw	r18, r30
     f56:	0c c0       	rjmp	.+24     	; 0xf70 <__mulsf3+0x16e>
     f58:	88 0f       	add	r24, r24
     f5a:	99 1f       	adc	r25, r25
     f5c:	aa 1f       	adc	r26, r26
     f5e:	bb 1f       	adc	r27, r27
     f60:	77 fd       	sbrc	r23, 7
     f62:	81 60       	ori	r24, 0x01	; 1
     f64:	44 0f       	add	r20, r20
     f66:	55 1f       	adc	r21, r21
     f68:	66 1f       	adc	r22, r22
     f6a:	77 1f       	adc	r23, r23
     f6c:	21 50       	subi	r18, 0x01	; 1
     f6e:	31 09       	sbc	r19, r1
     f70:	00 97       	sbiw	r24, 0x00	; 0
     f72:	a1 05       	cpc	r26, r1
     f74:	e0 e4       	ldi	r30, 0x40	; 64
     f76:	be 07       	cpc	r27, r30
     f78:	78 f3       	brcs	.-34     	; 0xf58 <__mulsf3+0x156>
     f7a:	2b 83       	std	Y+3, r18	; 0x03
     f7c:	3c 83       	std	Y+4, r19	; 0x04
     f7e:	8c 01       	movw	r16, r24
     f80:	9d 01       	movw	r18, r26
     f82:	0f 77       	andi	r16, 0x7F	; 127
     f84:	11 27       	eor	r17, r17
     f86:	22 27       	eor	r18, r18
     f88:	33 27       	eor	r19, r19
     f8a:	00 34       	cpi	r16, 0x40	; 64
     f8c:	11 05       	cpc	r17, r1
     f8e:	21 05       	cpc	r18, r1
     f90:	31 05       	cpc	r19, r1
     f92:	59 f4       	brne	.+22     	; 0xfaa <__mulsf3+0x1a8>
     f94:	87 fd       	sbrc	r24, 7
     f96:	09 c0       	rjmp	.+18     	; 0xfaa <__mulsf3+0x1a8>
     f98:	45 2b       	or	r20, r21
     f9a:	46 2b       	or	r20, r22
     f9c:	47 2b       	or	r20, r23
     f9e:	29 f0       	breq	.+10     	; 0xfaa <__mulsf3+0x1a8>
     fa0:	80 5c       	subi	r24, 0xC0	; 192
     fa2:	9f 4f       	sbci	r25, 0xFF	; 255
     fa4:	af 4f       	sbci	r26, 0xFF	; 255
     fa6:	bf 4f       	sbci	r27, 0xFF	; 255
     fa8:	80 78       	andi	r24, 0x80	; 128
     faa:	8d 83       	std	Y+5, r24	; 0x05
     fac:	9e 83       	std	Y+6, r25	; 0x06
     fae:	af 83       	std	Y+7, r26	; 0x07
     fb0:	b8 87       	std	Y+8, r27	; 0x08
     fb2:	83 e0       	ldi	r24, 0x03	; 3
     fb4:	89 83       	std	Y+1, r24	; 0x01
     fb6:	ce 01       	movw	r24, r28
     fb8:	01 96       	adiw	r24, 0x01	; 1
     fba:	02 c0       	rjmp	.+4      	; 0xfc0 <__mulsf3+0x1be>
     fbc:	8e e4       	ldi	r24, 0x4E	; 78
     fbe:	91 e0       	ldi	r25, 0x01	; 1
     fc0:	0e 94 c0 08 	call	0x1180	; 0x1180 <__pack_f>
     fc4:	a0 96       	adiw	r28, 0x20	; 32
     fc6:	e0 e1       	ldi	r30, 0x10	; 16
     fc8:	0c 94 c9 0a 	jmp	0x1592	; 0x1592 <__epilogue_restores__+0x4>

00000fcc <__gesf2>:
     fcc:	a8 e1       	ldi	r26, 0x18	; 24
     fce:	b0 e0       	ldi	r27, 0x00	; 0
     fd0:	ec ee       	ldi	r30, 0xEC	; 236
     fd2:	f7 e0       	ldi	r31, 0x07	; 7
     fd4:	0c 94 bb 0a 	jmp	0x1576	; 0x1576 <__prologue_saves__+0x20>
     fd8:	6d 8b       	std	Y+21, r22	; 0x15
     fda:	7e 8b       	std	Y+22, r23	; 0x16
     fdc:	8f 8b       	std	Y+23, r24	; 0x17
     fde:	98 8f       	std	Y+24, r25	; 0x18
     fe0:	29 8b       	std	Y+17, r18	; 0x11
     fe2:	3a 8b       	std	Y+18, r19	; 0x12
     fe4:	4b 8b       	std	Y+19, r20	; 0x13
     fe6:	5c 8b       	std	Y+20, r21	; 0x14
     fe8:	be 01       	movw	r22, r28
     fea:	67 5f       	subi	r22, 0xF7	; 247
     fec:	7f 4f       	sbci	r23, 0xFF	; 255
     fee:	ce 01       	movw	r24, r28
     ff0:	45 96       	adiw	r24, 0x15	; 21
     ff2:	0e 94 8a 09 	call	0x1314	; 0x1314 <__unpack_f>
     ff6:	be 01       	movw	r22, r28
     ff8:	6f 5f       	subi	r22, 0xFF	; 255
     ffa:	7f 4f       	sbci	r23, 0xFF	; 255
     ffc:	ce 01       	movw	r24, r28
     ffe:	41 96       	adiw	r24, 0x11	; 17
    1000:	0e 94 8a 09 	call	0x1314	; 0x1314 <__unpack_f>
    1004:	89 85       	ldd	r24, Y+9	; 0x09
    1006:	82 30       	cpi	r24, 0x02	; 2
    1008:	58 f0       	brcs	.+22     	; 0x1020 <__gesf2+0x54>
    100a:	89 81       	ldd	r24, Y+1	; 0x01
    100c:	82 30       	cpi	r24, 0x02	; 2
    100e:	40 f0       	brcs	.+16     	; 0x1020 <__gesf2+0x54>
    1010:	be 01       	movw	r22, r28
    1012:	6f 5f       	subi	r22, 0xFF	; 255
    1014:	7f 4f       	sbci	r23, 0xFF	; 255
    1016:	ce 01       	movw	r24, r28
    1018:	09 96       	adiw	r24, 0x09	; 9
    101a:	0e 94 f9 09 	call	0x13f2	; 0x13f2 <__fpcmp_parts_f>
    101e:	01 c0       	rjmp	.+2      	; 0x1022 <__gesf2+0x56>
    1020:	8f ef       	ldi	r24, 0xFF	; 255
    1022:	68 96       	adiw	r28, 0x18	; 24
    1024:	e2 e0       	ldi	r30, 0x02	; 2
    1026:	0c 94 d7 0a 	jmp	0x15ae	; 0x15ae <__epilogue_restores__+0x20>

0000102a <__floatsisf>:
    102a:	a8 e0       	ldi	r26, 0x08	; 8
    102c:	b0 e0       	ldi	r27, 0x00	; 0
    102e:	eb e1       	ldi	r30, 0x1B	; 27
    1030:	f8 e0       	ldi	r31, 0x08	; 8
    1032:	0c 94 b9 0a 	jmp	0x1572	; 0x1572 <__prologue_saves__+0x1c>
    1036:	23 e0       	ldi	r18, 0x03	; 3
    1038:	29 83       	std	Y+1, r18	; 0x01
    103a:	8b 01       	movw	r16, r22
    103c:	9c 01       	movw	r18, r24
    103e:	00 27       	eor	r16, r16
    1040:	37 fd       	sbrc	r19, 7
    1042:	03 95       	inc	r16
    1044:	11 27       	eor	r17, r17
    1046:	22 27       	eor	r18, r18
    1048:	33 27       	eor	r19, r19
    104a:	40 2f       	mov	r20, r16
    104c:	0a 83       	std	Y+2, r16	; 0x02
    104e:	61 15       	cp	r22, r1
    1050:	71 05       	cpc	r23, r1
    1052:	81 05       	cpc	r24, r1
    1054:	91 05       	cpc	r25, r1
    1056:	19 f4       	brne	.+6      	; 0x105e <__floatsisf+0x34>
    1058:	82 e0       	ldi	r24, 0x02	; 2
    105a:	89 83       	std	Y+1, r24	; 0x01
    105c:	35 c0       	rjmp	.+106    	; 0x10c8 <__floatsisf+0x9e>
    105e:	2e e1       	ldi	r18, 0x1E	; 30
    1060:	30 e0       	ldi	r19, 0x00	; 0
    1062:	3c 83       	std	Y+4, r19	; 0x04
    1064:	2b 83       	std	Y+3, r18	; 0x03
    1066:	44 23       	and	r20, r20
    1068:	71 f0       	breq	.+28     	; 0x1086 <__floatsisf+0x5c>
    106a:	61 15       	cp	r22, r1
    106c:	71 05       	cpc	r23, r1
    106e:	81 05       	cpc	r24, r1
    1070:	20 e8       	ldi	r18, 0x80	; 128
    1072:	92 07       	cpc	r25, r18
    1074:	71 f1       	breq	.+92     	; 0x10d2 <__floatsisf+0xa8>
    1076:	00 27       	eor	r16, r16
    1078:	11 27       	eor	r17, r17
    107a:	98 01       	movw	r18, r16
    107c:	06 1b       	sub	r16, r22
    107e:	17 0b       	sbc	r17, r23
    1080:	28 0b       	sbc	r18, r24
    1082:	39 0b       	sbc	r19, r25
    1084:	02 c0       	rjmp	.+4      	; 0x108a <__floatsisf+0x60>
    1086:	8b 01       	movw	r16, r22
    1088:	9c 01       	movw	r18, r24
    108a:	c9 01       	movw	r24, r18
    108c:	b8 01       	movw	r22, r16
    108e:	0e 94 90 0a 	call	0x1520	; 0x1520 <__clzsi2>
    1092:	01 97       	sbiw	r24, 0x01	; 1
    1094:	18 16       	cp	r1, r24
    1096:	19 06       	cpc	r1, r25
    1098:	2c f0       	brlt	.+10     	; 0x10a4 <__floatsisf+0x7a>
    109a:	0d 83       	std	Y+5, r16	; 0x05
    109c:	1e 83       	std	Y+6, r17	; 0x06
    109e:	2f 83       	std	Y+7, r18	; 0x07
    10a0:	38 87       	std	Y+8, r19	; 0x08
    10a2:	12 c0       	rjmp	.+36     	; 0x10c8 <__floatsisf+0x9e>
    10a4:	08 2e       	mov	r0, r24
    10a6:	04 c0       	rjmp	.+8      	; 0x10b0 <__floatsisf+0x86>
    10a8:	00 0f       	add	r16, r16
    10aa:	11 1f       	adc	r17, r17
    10ac:	22 1f       	adc	r18, r18
    10ae:	33 1f       	adc	r19, r19
    10b0:	0a 94       	dec	r0
    10b2:	d2 f7       	brpl	.-12     	; 0x10a8 <__floatsisf+0x7e>
    10b4:	0d 83       	std	Y+5, r16	; 0x05
    10b6:	1e 83       	std	Y+6, r17	; 0x06
    10b8:	2f 83       	std	Y+7, r18	; 0x07
    10ba:	38 87       	std	Y+8, r19	; 0x08
    10bc:	2e e1       	ldi	r18, 0x1E	; 30
    10be:	30 e0       	ldi	r19, 0x00	; 0
    10c0:	28 1b       	sub	r18, r24
    10c2:	39 0b       	sbc	r19, r25
    10c4:	3c 83       	std	Y+4, r19	; 0x04
    10c6:	2b 83       	std	Y+3, r18	; 0x03
    10c8:	ce 01       	movw	r24, r28
    10ca:	01 96       	adiw	r24, 0x01	; 1
    10cc:	0e 94 c0 08 	call	0x1180	; 0x1180 <__pack_f>
    10d0:	04 c0       	rjmp	.+8      	; 0x10da <__floatsisf+0xb0>
    10d2:	60 e0       	ldi	r22, 0x00	; 0
    10d4:	70 e0       	ldi	r23, 0x00	; 0
    10d6:	80 e0       	ldi	r24, 0x00	; 0
    10d8:	9f ec       	ldi	r25, 0xCF	; 207
    10da:	28 96       	adiw	r28, 0x08	; 8
    10dc:	e4 e0       	ldi	r30, 0x04	; 4
    10de:	0c 94 d5 0a 	jmp	0x15aa	; 0x15aa <__epilogue_restores__+0x1c>

000010e2 <__fixsfsi>:
    10e2:	ac e0       	ldi	r26, 0x0C	; 12
    10e4:	b0 e0       	ldi	r27, 0x00	; 0
    10e6:	e7 e7       	ldi	r30, 0x77	; 119
    10e8:	f8 e0       	ldi	r31, 0x08	; 8
    10ea:	0c 94 b9 0a 	jmp	0x1572	; 0x1572 <__prologue_saves__+0x1c>
    10ee:	69 87       	std	Y+9, r22	; 0x09
    10f0:	7a 87       	std	Y+10, r23	; 0x0a
    10f2:	8b 87       	std	Y+11, r24	; 0x0b
    10f4:	9c 87       	std	Y+12, r25	; 0x0c
    10f6:	be 01       	movw	r22, r28
    10f8:	6f 5f       	subi	r22, 0xFF	; 255
    10fa:	7f 4f       	sbci	r23, 0xFF	; 255
    10fc:	ce 01       	movw	r24, r28
    10fe:	09 96       	adiw	r24, 0x09	; 9
    1100:	0e 94 8a 09 	call	0x1314	; 0x1314 <__unpack_f>
    1104:	89 81       	ldd	r24, Y+1	; 0x01
    1106:	82 30       	cpi	r24, 0x02	; 2
    1108:	91 f1       	breq	.+100    	; 0x116e <__fixsfsi+0x8c>
    110a:	82 30       	cpi	r24, 0x02	; 2
    110c:	80 f1       	brcs	.+96     	; 0x116e <__fixsfsi+0x8c>
    110e:	84 30       	cpi	r24, 0x04	; 4
    1110:	41 f4       	brne	.+16     	; 0x1122 <__fixsfsi+0x40>
    1112:	8a 81       	ldd	r24, Y+2	; 0x02
    1114:	88 23       	and	r24, r24
    1116:	31 f1       	breq	.+76     	; 0x1164 <__fixsfsi+0x82>
    1118:	00 e0       	ldi	r16, 0x00	; 0
    111a:	10 e0       	ldi	r17, 0x00	; 0
    111c:	20 e0       	ldi	r18, 0x00	; 0
    111e:	30 e8       	ldi	r19, 0x80	; 128
    1120:	29 c0       	rjmp	.+82     	; 0x1174 <__fixsfsi+0x92>
    1122:	2b 81       	ldd	r18, Y+3	; 0x03
    1124:	3c 81       	ldd	r19, Y+4	; 0x04
    1126:	37 fd       	sbrc	r19, 7
    1128:	22 c0       	rjmp	.+68     	; 0x116e <__fixsfsi+0x8c>
    112a:	2f 31       	cpi	r18, 0x1F	; 31
    112c:	31 05       	cpc	r19, r1
    112e:	8c f7       	brge	.-30     	; 0x1112 <__fixsfsi+0x30>
    1130:	8e e1       	ldi	r24, 0x1E	; 30
    1132:	90 e0       	ldi	r25, 0x00	; 0
    1134:	82 1b       	sub	r24, r18
    1136:	93 0b       	sbc	r25, r19
    1138:	0d 81       	ldd	r16, Y+5	; 0x05
    113a:	1e 81       	ldd	r17, Y+6	; 0x06
    113c:	2f 81       	ldd	r18, Y+7	; 0x07
    113e:	38 85       	ldd	r19, Y+8	; 0x08
    1140:	04 c0       	rjmp	.+8      	; 0x114a <__fixsfsi+0x68>
    1142:	36 95       	lsr	r19
    1144:	27 95       	ror	r18
    1146:	17 95       	ror	r17
    1148:	07 95       	ror	r16
    114a:	8a 95       	dec	r24
    114c:	d2 f7       	brpl	.-12     	; 0x1142 <__fixsfsi+0x60>
    114e:	8a 81       	ldd	r24, Y+2	; 0x02
    1150:	88 23       	and	r24, r24
    1152:	81 f0       	breq	.+32     	; 0x1174 <__fixsfsi+0x92>
    1154:	30 95       	com	r19
    1156:	20 95       	com	r18
    1158:	10 95       	com	r17
    115a:	01 95       	neg	r16
    115c:	1f 4f       	sbci	r17, 0xFF	; 255
    115e:	2f 4f       	sbci	r18, 0xFF	; 255
    1160:	3f 4f       	sbci	r19, 0xFF	; 255
    1162:	08 c0       	rjmp	.+16     	; 0x1174 <__fixsfsi+0x92>
    1164:	0f ef       	ldi	r16, 0xFF	; 255
    1166:	1f ef       	ldi	r17, 0xFF	; 255
    1168:	2f ef       	ldi	r18, 0xFF	; 255
    116a:	3f e7       	ldi	r19, 0x7F	; 127
    116c:	03 c0       	rjmp	.+6      	; 0x1174 <__fixsfsi+0x92>
    116e:	00 e0       	ldi	r16, 0x00	; 0
    1170:	10 e0       	ldi	r17, 0x00	; 0
    1172:	98 01       	movw	r18, r16
    1174:	b8 01       	movw	r22, r16
    1176:	c9 01       	movw	r24, r18
    1178:	2c 96       	adiw	r28, 0x0c	; 12
    117a:	e4 e0       	ldi	r30, 0x04	; 4
    117c:	0c 94 d5 0a 	jmp	0x15aa	; 0x15aa <__epilogue_restores__+0x1c>

00001180 <__pack_f>:
    1180:	0f 93       	push	r16
    1182:	1f 93       	push	r17
    1184:	cf 93       	push	r28
    1186:	df 93       	push	r29
    1188:	dc 01       	movw	r26, r24
    118a:	14 96       	adiw	r26, 0x04	; 4
    118c:	4d 91       	ld	r20, X+
    118e:	5d 91       	ld	r21, X+
    1190:	6d 91       	ld	r22, X+
    1192:	7c 91       	ld	r23, X
    1194:	17 97       	sbiw	r26, 0x07	; 7
    1196:	11 96       	adiw	r26, 0x01	; 1
    1198:	ec 91       	ld	r30, X
    119a:	11 97       	sbiw	r26, 0x01	; 1
    119c:	8c 91       	ld	r24, X
    119e:	82 30       	cpi	r24, 0x02	; 2
    11a0:	20 f4       	brcc	.+8      	; 0x11aa <__pack_f+0x2a>
    11a2:	60 61       	ori	r22, 0x10	; 16
    11a4:	8f ef       	ldi	r24, 0xFF	; 255
    11a6:	90 e0       	ldi	r25, 0x00	; 0
    11a8:	a6 c0       	rjmp	.+332    	; 0x12f6 <__pack_f+0x176>
    11aa:	84 30       	cpi	r24, 0x04	; 4
    11ac:	09 f4       	brne	.+2      	; 0x11b0 <__pack_f+0x30>
    11ae:	9e c0       	rjmp	.+316    	; 0x12ec <__pack_f+0x16c>
    11b0:	82 30       	cpi	r24, 0x02	; 2
    11b2:	09 f4       	brne	.+2      	; 0x11b6 <__pack_f+0x36>
    11b4:	95 c0       	rjmp	.+298    	; 0x12e0 <__pack_f+0x160>
    11b6:	41 15       	cp	r20, r1
    11b8:	51 05       	cpc	r21, r1
    11ba:	61 05       	cpc	r22, r1
    11bc:	71 05       	cpc	r23, r1
    11be:	09 f4       	brne	.+2      	; 0x11c2 <__pack_f+0x42>
    11c0:	92 c0       	rjmp	.+292    	; 0x12e6 <__pack_f+0x166>
    11c2:	12 96       	adiw	r26, 0x02	; 2
    11c4:	2d 91       	ld	r18, X+
    11c6:	3c 91       	ld	r19, X
    11c8:	13 97       	sbiw	r26, 0x03	; 3
    11ca:	22 38       	cpi	r18, 0x82	; 130
    11cc:	8f ef       	ldi	r24, 0xFF	; 255
    11ce:	38 07       	cpc	r19, r24
    11d0:	0c f0       	brlt	.+2      	; 0x11d4 <__pack_f+0x54>
    11d2:	58 c0       	rjmp	.+176    	; 0x1284 <__pack_f+0x104>
    11d4:	c2 e8       	ldi	r28, 0x82	; 130
    11d6:	df ef       	ldi	r29, 0xFF	; 255
    11d8:	c2 1b       	sub	r28, r18
    11da:	d3 0b       	sbc	r29, r19
    11dc:	ca 31       	cpi	r28, 0x1A	; 26
    11de:	d1 05       	cpc	r29, r1
    11e0:	6c f5       	brge	.+90     	; 0x123c <__pack_f+0xbc>
    11e2:	8a 01       	movw	r16, r20
    11e4:	9b 01       	movw	r18, r22
    11e6:	0c 2e       	mov	r0, r28
    11e8:	04 c0       	rjmp	.+8      	; 0x11f2 <__pack_f+0x72>
    11ea:	36 95       	lsr	r19
    11ec:	27 95       	ror	r18
    11ee:	17 95       	ror	r17
    11f0:	07 95       	ror	r16
    11f2:	0a 94       	dec	r0
    11f4:	d2 f7       	brpl	.-12     	; 0x11ea <__pack_f+0x6a>
    11f6:	81 e0       	ldi	r24, 0x01	; 1
    11f8:	90 e0       	ldi	r25, 0x00	; 0
    11fa:	a0 e0       	ldi	r26, 0x00	; 0
    11fc:	b0 e0       	ldi	r27, 0x00	; 0
    11fe:	0c 2e       	mov	r0, r28
    1200:	04 c0       	rjmp	.+8      	; 0x120a <__pack_f+0x8a>
    1202:	88 0f       	add	r24, r24
    1204:	99 1f       	adc	r25, r25
    1206:	aa 1f       	adc	r26, r26
    1208:	bb 1f       	adc	r27, r27
    120a:	0a 94       	dec	r0
    120c:	d2 f7       	brpl	.-12     	; 0x1202 <__pack_f+0x82>
    120e:	01 97       	sbiw	r24, 0x01	; 1
    1210:	a1 09       	sbc	r26, r1
    1212:	b1 09       	sbc	r27, r1
    1214:	84 23       	and	r24, r20
    1216:	95 23       	and	r25, r21
    1218:	a6 23       	and	r26, r22
    121a:	b7 23       	and	r27, r23
    121c:	41 e0       	ldi	r20, 0x01	; 1
    121e:	50 e0       	ldi	r21, 0x00	; 0
    1220:	60 e0       	ldi	r22, 0x00	; 0
    1222:	70 e0       	ldi	r23, 0x00	; 0
    1224:	89 2b       	or	r24, r25
    1226:	8a 2b       	or	r24, r26
    1228:	8b 2b       	or	r24, r27
    122a:	19 f4       	brne	.+6      	; 0x1232 <__pack_f+0xb2>
    122c:	40 e0       	ldi	r20, 0x00	; 0
    122e:	50 e0       	ldi	r21, 0x00	; 0
    1230:	ba 01       	movw	r22, r20
    1232:	40 2b       	or	r20, r16
    1234:	51 2b       	or	r21, r17
    1236:	62 2b       	or	r22, r18
    1238:	73 2b       	or	r23, r19
    123a:	03 c0       	rjmp	.+6      	; 0x1242 <__pack_f+0xc2>
    123c:	40 e0       	ldi	r20, 0x00	; 0
    123e:	50 e0       	ldi	r21, 0x00	; 0
    1240:	ba 01       	movw	r22, r20
    1242:	db 01       	movw	r26, r22
    1244:	ca 01       	movw	r24, r20
    1246:	8f 77       	andi	r24, 0x7F	; 127
    1248:	99 27       	eor	r25, r25
    124a:	aa 27       	eor	r26, r26
    124c:	bb 27       	eor	r27, r27
    124e:	80 34       	cpi	r24, 0x40	; 64
    1250:	91 05       	cpc	r25, r1
    1252:	a1 05       	cpc	r26, r1
    1254:	b1 05       	cpc	r27, r1
    1256:	39 f4       	brne	.+14     	; 0x1266 <__pack_f+0xe6>
    1258:	47 ff       	sbrs	r20, 7
    125a:	09 c0       	rjmp	.+18     	; 0x126e <__pack_f+0xee>
    125c:	40 5c       	subi	r20, 0xC0	; 192
    125e:	5f 4f       	sbci	r21, 0xFF	; 255
    1260:	6f 4f       	sbci	r22, 0xFF	; 255
    1262:	7f 4f       	sbci	r23, 0xFF	; 255
    1264:	04 c0       	rjmp	.+8      	; 0x126e <__pack_f+0xee>
    1266:	41 5c       	subi	r20, 0xC1	; 193
    1268:	5f 4f       	sbci	r21, 0xFF	; 255
    126a:	6f 4f       	sbci	r22, 0xFF	; 255
    126c:	7f 4f       	sbci	r23, 0xFF	; 255
    126e:	81 e0       	ldi	r24, 0x01	; 1
    1270:	90 e0       	ldi	r25, 0x00	; 0
    1272:	41 15       	cp	r20, r1
    1274:	51 05       	cpc	r21, r1
    1276:	61 05       	cpc	r22, r1
    1278:	20 e4       	ldi	r18, 0x40	; 64
    127a:	72 07       	cpc	r23, r18
    127c:	48 f5       	brcc	.+82     	; 0x12d0 <__pack_f+0x150>
    127e:	80 e0       	ldi	r24, 0x00	; 0
    1280:	90 e0       	ldi	r25, 0x00	; 0
    1282:	26 c0       	rjmp	.+76     	; 0x12d0 <__pack_f+0x150>
    1284:	20 38       	cpi	r18, 0x80	; 128
    1286:	31 05       	cpc	r19, r1
    1288:	8c f5       	brge	.+98     	; 0x12ec <__pack_f+0x16c>
    128a:	db 01       	movw	r26, r22
    128c:	ca 01       	movw	r24, r20
    128e:	8f 77       	andi	r24, 0x7F	; 127
    1290:	99 27       	eor	r25, r25
    1292:	aa 27       	eor	r26, r26
    1294:	bb 27       	eor	r27, r27
    1296:	80 34       	cpi	r24, 0x40	; 64
    1298:	91 05       	cpc	r25, r1
    129a:	a1 05       	cpc	r26, r1
    129c:	b1 05       	cpc	r27, r1
    129e:	39 f4       	brne	.+14     	; 0x12ae <__pack_f+0x12e>
    12a0:	47 ff       	sbrs	r20, 7
    12a2:	09 c0       	rjmp	.+18     	; 0x12b6 <__pack_f+0x136>
    12a4:	40 5c       	subi	r20, 0xC0	; 192
    12a6:	5f 4f       	sbci	r21, 0xFF	; 255
    12a8:	6f 4f       	sbci	r22, 0xFF	; 255
    12aa:	7f 4f       	sbci	r23, 0xFF	; 255
    12ac:	04 c0       	rjmp	.+8      	; 0x12b6 <__pack_f+0x136>
    12ae:	41 5c       	subi	r20, 0xC1	; 193
    12b0:	5f 4f       	sbci	r21, 0xFF	; 255
    12b2:	6f 4f       	sbci	r22, 0xFF	; 255
    12b4:	7f 4f       	sbci	r23, 0xFF	; 255
    12b6:	77 fd       	sbrc	r23, 7
    12b8:	04 c0       	rjmp	.+8      	; 0x12c2 <__pack_f+0x142>
    12ba:	c9 01       	movw	r24, r18
    12bc:	81 58       	subi	r24, 0x81	; 129
    12be:	9f 4f       	sbci	r25, 0xFF	; 255
    12c0:	07 c0       	rjmp	.+14     	; 0x12d0 <__pack_f+0x150>
    12c2:	76 95       	lsr	r23
    12c4:	67 95       	ror	r22
    12c6:	57 95       	ror	r21
    12c8:	47 95       	ror	r20
    12ca:	c9 01       	movw	r24, r18
    12cc:	80 58       	subi	r24, 0x80	; 128
    12ce:	9f 4f       	sbci	r25, 0xFF	; 255
    12d0:	97 e0       	ldi	r25, 0x07	; 7
    12d2:	76 95       	lsr	r23
    12d4:	67 95       	ror	r22
    12d6:	57 95       	ror	r21
    12d8:	47 95       	ror	r20
    12da:	9a 95       	dec	r25
    12dc:	d1 f7       	brne	.-12     	; 0x12d2 <__pack_f+0x152>
    12de:	0b c0       	rjmp	.+22     	; 0x12f6 <__pack_f+0x176>
    12e0:	80 e0       	ldi	r24, 0x00	; 0
    12e2:	90 e0       	ldi	r25, 0x00	; 0
    12e4:	05 c0       	rjmp	.+10     	; 0x12f0 <__pack_f+0x170>
    12e6:	80 e0       	ldi	r24, 0x00	; 0
    12e8:	90 e0       	ldi	r25, 0x00	; 0
    12ea:	05 c0       	rjmp	.+10     	; 0x12f6 <__pack_f+0x176>
    12ec:	8f ef       	ldi	r24, 0xFF	; 255
    12ee:	90 e0       	ldi	r25, 0x00	; 0
    12f0:	40 e0       	ldi	r20, 0x00	; 0
    12f2:	50 e0       	ldi	r21, 0x00	; 0
    12f4:	ba 01       	movw	r22, r20
    12f6:	98 2f       	mov	r25, r24
    12f8:	96 95       	lsr	r25
    12fa:	e0 fb       	bst	r30, 0
    12fc:	97 f9       	bld	r25, 7
    12fe:	36 2f       	mov	r19, r22
    1300:	80 fb       	bst	r24, 0
    1302:	37 f9       	bld	r19, 7
    1304:	64 2f       	mov	r22, r20
    1306:	75 2f       	mov	r23, r21
    1308:	83 2f       	mov	r24, r19
    130a:	df 91       	pop	r29
    130c:	cf 91       	pop	r28
    130e:	1f 91       	pop	r17
    1310:	0f 91       	pop	r16
    1312:	08 95       	ret

00001314 <__unpack_f>:
    1314:	cf 92       	push	r12
    1316:	df 92       	push	r13
    1318:	ef 92       	push	r14
    131a:	dc 01       	movw	r26, r24
    131c:	fb 01       	movw	r30, r22
    131e:	cc 90       	ld	r12, X
    1320:	11 96       	adiw	r26, 0x01	; 1
    1322:	dc 90       	ld	r13, X
    1324:	11 97       	sbiw	r26, 0x01	; 1
    1326:	12 96       	adiw	r26, 0x02	; 2
    1328:	8c 91       	ld	r24, X
    132a:	12 97       	sbiw	r26, 0x02	; 2
    132c:	3f e7       	ldi	r19, 0x7F	; 127
    132e:	e3 2e       	mov	r14, r19
    1330:	e8 22       	and	r14, r24
    1332:	6e 2d       	mov	r22, r14
    1334:	a6 01       	movw	r20, r12
    1336:	70 e0       	ldi	r23, 0x00	; 0
    1338:	98 2f       	mov	r25, r24
    133a:	99 1f       	adc	r25, r25
    133c:	99 27       	eor	r25, r25
    133e:	99 1f       	adc	r25, r25
    1340:	13 96       	adiw	r26, 0x03	; 3
    1342:	2c 91       	ld	r18, X
    1344:	82 2f       	mov	r24, r18
    1346:	88 0f       	add	r24, r24
    1348:	89 2b       	or	r24, r25
    134a:	90 e0       	ldi	r25, 0x00	; 0
    134c:	27 fb       	bst	r18, 7
    134e:	22 27       	eor	r18, r18
    1350:	20 f9       	bld	r18, 0
    1352:	21 83       	std	Z+1, r18	; 0x01
    1354:	00 97       	sbiw	r24, 0x00	; 0
    1356:	29 f5       	brne	.+74     	; 0x13a2 <__unpack_f+0x8e>
    1358:	41 15       	cp	r20, r1
    135a:	51 05       	cpc	r21, r1
    135c:	61 05       	cpc	r22, r1
    135e:	71 05       	cpc	r23, r1
    1360:	11 f4       	brne	.+4      	; 0x1366 <__unpack_f+0x52>
    1362:	82 e0       	ldi	r24, 0x02	; 2
    1364:	27 c0       	rjmp	.+78     	; 0x13b4 <__unpack_f+0xa0>
    1366:	82 e8       	ldi	r24, 0x82	; 130
    1368:	9f ef       	ldi	r25, 0xFF	; 255
    136a:	93 83       	std	Z+3, r25	; 0x03
    136c:	82 83       	std	Z+2, r24	; 0x02
    136e:	27 e0       	ldi	r18, 0x07	; 7
    1370:	44 0f       	add	r20, r20
    1372:	55 1f       	adc	r21, r21
    1374:	66 1f       	adc	r22, r22
    1376:	77 1f       	adc	r23, r23
    1378:	2a 95       	dec	r18
    137a:	d1 f7       	brne	.-12     	; 0x1370 <__unpack_f+0x5c>
    137c:	83 e0       	ldi	r24, 0x03	; 3
    137e:	80 83       	st	Z, r24
    1380:	09 c0       	rjmp	.+18     	; 0x1394 <__unpack_f+0x80>
    1382:	44 0f       	add	r20, r20
    1384:	55 1f       	adc	r21, r21
    1386:	66 1f       	adc	r22, r22
    1388:	77 1f       	adc	r23, r23
    138a:	82 81       	ldd	r24, Z+2	; 0x02
    138c:	93 81       	ldd	r25, Z+3	; 0x03
    138e:	01 97       	sbiw	r24, 0x01	; 1
    1390:	93 83       	std	Z+3, r25	; 0x03
    1392:	82 83       	std	Z+2, r24	; 0x02
    1394:	41 15       	cp	r20, r1
    1396:	51 05       	cpc	r21, r1
    1398:	61 05       	cpc	r22, r1
    139a:	80 e4       	ldi	r24, 0x40	; 64
    139c:	78 07       	cpc	r23, r24
    139e:	88 f3       	brcs	.-30     	; 0x1382 <__unpack_f+0x6e>
    13a0:	20 c0       	rjmp	.+64     	; 0x13e2 <__unpack_f+0xce>
    13a2:	8f 3f       	cpi	r24, 0xFF	; 255
    13a4:	91 05       	cpc	r25, r1
    13a6:	79 f4       	brne	.+30     	; 0x13c6 <__unpack_f+0xb2>
    13a8:	41 15       	cp	r20, r1
    13aa:	51 05       	cpc	r21, r1
    13ac:	61 05       	cpc	r22, r1
    13ae:	71 05       	cpc	r23, r1
    13b0:	19 f4       	brne	.+6      	; 0x13b8 <__unpack_f+0xa4>
    13b2:	84 e0       	ldi	r24, 0x04	; 4
    13b4:	80 83       	st	Z, r24
    13b6:	19 c0       	rjmp	.+50     	; 0x13ea <__unpack_f+0xd6>
    13b8:	e4 fe       	sbrs	r14, 4
    13ba:	03 c0       	rjmp	.+6      	; 0x13c2 <__unpack_f+0xae>
    13bc:	81 e0       	ldi	r24, 0x01	; 1
    13be:	80 83       	st	Z, r24
    13c0:	10 c0       	rjmp	.+32     	; 0x13e2 <__unpack_f+0xce>
    13c2:	10 82       	st	Z, r1
    13c4:	0e c0       	rjmp	.+28     	; 0x13e2 <__unpack_f+0xce>
    13c6:	8f 57       	subi	r24, 0x7F	; 127
    13c8:	91 09       	sbc	r25, r1
    13ca:	93 83       	std	Z+3, r25	; 0x03
    13cc:	82 83       	std	Z+2, r24	; 0x02
    13ce:	83 e0       	ldi	r24, 0x03	; 3
    13d0:	80 83       	st	Z, r24
    13d2:	87 e0       	ldi	r24, 0x07	; 7
    13d4:	44 0f       	add	r20, r20
    13d6:	55 1f       	adc	r21, r21
    13d8:	66 1f       	adc	r22, r22
    13da:	77 1f       	adc	r23, r23
    13dc:	8a 95       	dec	r24
    13de:	d1 f7       	brne	.-12     	; 0x13d4 <__unpack_f+0xc0>
    13e0:	70 64       	ori	r23, 0x40	; 64
    13e2:	44 83       	std	Z+4, r20	; 0x04
    13e4:	55 83       	std	Z+5, r21	; 0x05
    13e6:	66 83       	std	Z+6, r22	; 0x06
    13e8:	77 83       	std	Z+7, r23	; 0x07
    13ea:	ef 90       	pop	r14
    13ec:	df 90       	pop	r13
    13ee:	cf 90       	pop	r12
    13f0:	08 95       	ret

000013f2 <__fpcmp_parts_f>:
    13f2:	cf 93       	push	r28
    13f4:	fc 01       	movw	r30, r24
    13f6:	db 01       	movw	r26, r22
    13f8:	90 81       	ld	r25, Z
    13fa:	92 30       	cpi	r25, 0x02	; 2
    13fc:	08 f4       	brcc	.+2      	; 0x1400 <__fpcmp_parts_f+0xe>
    13fe:	52 c0       	rjmp	.+164    	; 0x14a4 <__fpcmp_parts_f+0xb2>
    1400:	8c 91       	ld	r24, X
    1402:	82 30       	cpi	r24, 0x02	; 2
    1404:	08 f4       	brcc	.+2      	; 0x1408 <__fpcmp_parts_f+0x16>
    1406:	4e c0       	rjmp	.+156    	; 0x14a4 <__fpcmp_parts_f+0xb2>
    1408:	94 30       	cpi	r25, 0x04	; 4
    140a:	71 f4       	brne	.+28     	; 0x1428 <__fpcmp_parts_f+0x36>
    140c:	84 30       	cpi	r24, 0x04	; 4
    140e:	39 f4       	brne	.+14     	; 0x141e <__fpcmp_parts_f+0x2c>
    1410:	11 96       	adiw	r26, 0x01	; 1
    1412:	2c 91       	ld	r18, X
    1414:	30 e0       	ldi	r19, 0x00	; 0
    1416:	81 81       	ldd	r24, Z+1	; 0x01
    1418:	28 1b       	sub	r18, r24
    141a:	31 09       	sbc	r19, r1
    141c:	48 c0       	rjmp	.+144    	; 0x14ae <__fpcmp_parts_f+0xbc>
    141e:	81 81       	ldd	r24, Z+1	; 0x01
    1420:	88 23       	and	r24, r24
    1422:	09 f4       	brne	.+2      	; 0x1426 <__fpcmp_parts_f+0x34>
    1424:	3f c0       	rjmp	.+126    	; 0x14a4 <__fpcmp_parts_f+0xb2>
    1426:	3b c0       	rjmp	.+118    	; 0x149e <__fpcmp_parts_f+0xac>
    1428:	84 30       	cpi	r24, 0x04	; 4
    142a:	29 f4       	brne	.+10     	; 0x1436 <__fpcmp_parts_f+0x44>
    142c:	11 96       	adiw	r26, 0x01	; 1
    142e:	8c 91       	ld	r24, X
    1430:	81 11       	cpse	r24, r1
    1432:	38 c0       	rjmp	.+112    	; 0x14a4 <__fpcmp_parts_f+0xb2>
    1434:	34 c0       	rjmp	.+104    	; 0x149e <__fpcmp_parts_f+0xac>
    1436:	92 30       	cpi	r25, 0x02	; 2
    1438:	19 f4       	brne	.+6      	; 0x1440 <__fpcmp_parts_f+0x4e>
    143a:	82 30       	cpi	r24, 0x02	; 2
    143c:	b9 f7       	brne	.-18     	; 0x142c <__fpcmp_parts_f+0x3a>
    143e:	35 c0       	rjmp	.+106    	; 0x14aa <__fpcmp_parts_f+0xb8>
    1440:	82 30       	cpi	r24, 0x02	; 2
    1442:	69 f3       	breq	.-38     	; 0x141e <__fpcmp_parts_f+0x2c>
    1444:	c1 81       	ldd	r28, Z+1	; 0x01
    1446:	11 96       	adiw	r26, 0x01	; 1
    1448:	8c 91       	ld	r24, X
    144a:	11 97       	sbiw	r26, 0x01	; 1
    144c:	c8 13       	cpse	r28, r24
    144e:	1d c0       	rjmp	.+58     	; 0x148a <__fpcmp_parts_f+0x98>
    1450:	22 81       	ldd	r18, Z+2	; 0x02
    1452:	33 81       	ldd	r19, Z+3	; 0x03
    1454:	12 96       	adiw	r26, 0x02	; 2
    1456:	8d 91       	ld	r24, X+
    1458:	9c 91       	ld	r25, X
    145a:	13 97       	sbiw	r26, 0x03	; 3
    145c:	82 17       	cp	r24, r18
    145e:	93 07       	cpc	r25, r19
    1460:	0c f4       	brge	.+2      	; 0x1464 <__fpcmp_parts_f+0x72>
    1462:	13 c0       	rjmp	.+38     	; 0x148a <__fpcmp_parts_f+0x98>
    1464:	28 17       	cp	r18, r24
    1466:	39 07       	cpc	r19, r25
    1468:	0c f4       	brge	.+2      	; 0x146c <__fpcmp_parts_f+0x7a>
    146a:	17 c0       	rjmp	.+46     	; 0x149a <__fpcmp_parts_f+0xa8>
    146c:	44 81       	ldd	r20, Z+4	; 0x04
    146e:	55 81       	ldd	r21, Z+5	; 0x05
    1470:	66 81       	ldd	r22, Z+6	; 0x06
    1472:	77 81       	ldd	r23, Z+7	; 0x07
    1474:	14 96       	adiw	r26, 0x04	; 4
    1476:	8d 91       	ld	r24, X+
    1478:	9d 91       	ld	r25, X+
    147a:	0d 90       	ld	r0, X+
    147c:	bc 91       	ld	r27, X
    147e:	a0 2d       	mov	r26, r0
    1480:	84 17       	cp	r24, r20
    1482:	95 07       	cpc	r25, r21
    1484:	a6 07       	cpc	r26, r22
    1486:	b7 07       	cpc	r27, r23
    1488:	18 f4       	brcc	.+6      	; 0x1490 <__fpcmp_parts_f+0x9e>
    148a:	c1 11       	cpse	r28, r1
    148c:	08 c0       	rjmp	.+16     	; 0x149e <__fpcmp_parts_f+0xac>
    148e:	0a c0       	rjmp	.+20     	; 0x14a4 <__fpcmp_parts_f+0xb2>
    1490:	48 17       	cp	r20, r24
    1492:	59 07       	cpc	r21, r25
    1494:	6a 07       	cpc	r22, r26
    1496:	7b 07       	cpc	r23, r27
    1498:	40 f4       	brcc	.+16     	; 0x14aa <__fpcmp_parts_f+0xb8>
    149a:	c1 11       	cpse	r28, r1
    149c:	03 c0       	rjmp	.+6      	; 0x14a4 <__fpcmp_parts_f+0xb2>
    149e:	2f ef       	ldi	r18, 0xFF	; 255
    14a0:	3f ef       	ldi	r19, 0xFF	; 255
    14a2:	05 c0       	rjmp	.+10     	; 0x14ae <__fpcmp_parts_f+0xbc>
    14a4:	21 e0       	ldi	r18, 0x01	; 1
    14a6:	30 e0       	ldi	r19, 0x00	; 0
    14a8:	02 c0       	rjmp	.+4      	; 0x14ae <__fpcmp_parts_f+0xbc>
    14aa:	20 e0       	ldi	r18, 0x00	; 0
    14ac:	30 e0       	ldi	r19, 0x00	; 0
    14ae:	c9 01       	movw	r24, r18
    14b0:	cf 91       	pop	r28
    14b2:	08 95       	ret

000014b4 <main>:
}

int main(void) {
  // Init port B to show keyboard result
  DDRB = 0xff;
    14b4:	8f ef       	ldi	r24, 0xFF	; 255
    14b6:	84 b9       	out	0x04, r24	; 4
  // and turn out the LEDs
  PORTB = 0xff;   
    14b8:	85 b9       	out	0x05, r24	; 5
  
  // init the UART
  uart_init();
    14ba:	0e 94 43 02 	call	0x486	; 0x486 <uart_init>
  stdout = stdin = stderr = &uart_str;
    14be:	80 e0       	ldi	r24, 0x00	; 0
    14c0:	91 e0       	ldi	r25, 0x01	; 1
    14c2:	90 93 61 04 	sts	0x0461, r25
    14c6:	80 93 60 04 	sts	0x0460, r24
    14ca:	90 93 5d 04 	sts	0x045D, r25
    14ce:	80 93 5c 04 	sts	0x045C, r24
    14d2:	90 93 5f 04 	sts	0x045F, r25
    14d6:	80 93 5e 04 	sts	0x045E, r24
  fprintf(stdout, "Starting...\n\r");
    14da:	bc 01       	movw	r22, r24
    14dc:	86 ea       	ldi	r24, 0xA6	; 166
    14de:	91 e0       	ldi	r25, 0x01	; 1
    14e0:	0e 94 f2 0a 	call	0x15e4	; 0x15e4 <fputs>
  initialize();
    14e4:	0e 94 29 02 	call	0x452	; 0x452 <initialize>
	
  //endless loop to read keyboard
  while(1) {
	// Used for keeping track of time.
	if( count <= 0){
		count = COUNTMS;
    14e8:	ce e3       	ldi	r28, 0x3E	; 62
  //play(1336, 852);
	
  //endless loop to read keyboard
  while(1) {
	// Used for keeping track of time.
	if( count <= 0){
    14ea:	80 91 31 02 	lds	r24, 0x0231
    14ee:	81 11       	cpse	r24, r1
    14f0:	0b c0       	rjmp	.+22     	; 0x1508 <main+0x54>
		count = COUNTMS;
    14f2:	c0 93 31 02 	sts	0x0231, r28
		time1++;
    14f6:	80 91 2a 02 	lds	r24, 0x022A
    14fa:	90 91 2b 02 	lds	r25, 0x022B
    14fe:	01 96       	adiw	r24, 0x01	; 1
    1500:	90 93 2b 02 	sts	0x022B, r25
    1504:	80 93 2a 02 	sts	0x022A, r24
	}
	update_status_variables();
    1508:	0e 94 f8 04 	call	0x9f0	; 0x9f0 <update_status_variables>
	//Used for debouncing
    if (time1>=t1) {
    150c:	80 91 2a 02 	lds	r24, 0x022A
    1510:	90 91 2b 02 	lds	r25, 0x022B
    1514:	88 37       	cpi	r24, 0x78	; 120
    1516:	91 05       	cpc	r25, r1
    1518:	40 f3       	brcs	.-48     	; 0x14ea <main+0x36>
		task1();
    151a:	0e 94 76 00 	call	0xec	; 0xec <task1>
    151e:	e5 cf       	rjmp	.-54     	; 0x14ea <main+0x36>

00001520 <__clzsi2>:
    1520:	0e 94 99 0a 	call	0x1532	; 0x1532 <__clzhi2>
    1524:	84 ff       	sbrs	r24, 4
    1526:	08 95       	ret
    1528:	cb 01       	movw	r24, r22
    152a:	0e 94 99 0a 	call	0x1532	; 0x1532 <__clzhi2>
    152e:	80 5f       	subi	r24, 0xF0	; 240
    1530:	08 95       	ret

00001532 <__clzhi2>:
    1532:	aa 27       	eor	r26, r26
    1534:	99 23       	and	r25, r25
    1536:	29 f4       	brne	.+10     	; 0x1542 <__clzhi2+0x10>
    1538:	a8 5f       	subi	r26, 0xF8	; 248
    153a:	98 2b       	or	r25, r24
    153c:	11 f4       	brne	.+4      	; 0x1542 <__clzhi2+0x10>
    153e:	80 e1       	ldi	r24, 0x10	; 16
    1540:	08 95       	ret
    1542:	90 31       	cpi	r25, 0x10	; 16
    1544:	18 f4       	brcc	.+6      	; 0x154c <__clzhi2+0x1a>
    1546:	ad 5f       	subi	r26, 0xFD	; 253
    1548:	92 95       	swap	r25
    154a:	a3 95       	inc	r26
    154c:	99 0f       	add	r25, r25
    154e:	e8 f7       	brcc	.-6      	; 0x154a <__clzhi2+0x18>
    1550:	8a 2f       	mov	r24, r26
    1552:	99 27       	eor	r25, r25
    1554:	08 95       	ret

00001556 <__prologue_saves__>:
    1556:	2f 92       	push	r2
    1558:	3f 92       	push	r3
    155a:	4f 92       	push	r4
    155c:	5f 92       	push	r5
    155e:	6f 92       	push	r6
    1560:	7f 92       	push	r7
    1562:	8f 92       	push	r8
    1564:	9f 92       	push	r9
    1566:	af 92       	push	r10
    1568:	bf 92       	push	r11
    156a:	cf 92       	push	r12
    156c:	df 92       	push	r13
    156e:	ef 92       	push	r14
    1570:	ff 92       	push	r15
    1572:	0f 93       	push	r16
    1574:	1f 93       	push	r17
    1576:	cf 93       	push	r28
    1578:	df 93       	push	r29
    157a:	cd b7       	in	r28, 0x3d	; 61
    157c:	de b7       	in	r29, 0x3e	; 62
    157e:	ca 1b       	sub	r28, r26
    1580:	db 0b       	sbc	r29, r27
    1582:	0f b6       	in	r0, 0x3f	; 63
    1584:	f8 94       	cli
    1586:	de bf       	out	0x3e, r29	; 62
    1588:	0f be       	out	0x3f, r0	; 63
    158a:	cd bf       	out	0x3d, r28	; 61
    158c:	09 94       	ijmp

0000158e <__epilogue_restores__>:
    158e:	2a 88       	ldd	r2, Y+18	; 0x12
    1590:	39 88       	ldd	r3, Y+17	; 0x11
    1592:	48 88       	ldd	r4, Y+16	; 0x10
    1594:	5f 84       	ldd	r5, Y+15	; 0x0f
    1596:	6e 84       	ldd	r6, Y+14	; 0x0e
    1598:	7d 84       	ldd	r7, Y+13	; 0x0d
    159a:	8c 84       	ldd	r8, Y+12	; 0x0c
    159c:	9b 84       	ldd	r9, Y+11	; 0x0b
    159e:	aa 84       	ldd	r10, Y+10	; 0x0a
    15a0:	b9 84       	ldd	r11, Y+9	; 0x09
    15a2:	c8 84       	ldd	r12, Y+8	; 0x08
    15a4:	df 80       	ldd	r13, Y+7	; 0x07
    15a6:	ee 80       	ldd	r14, Y+6	; 0x06
    15a8:	fd 80       	ldd	r15, Y+5	; 0x05
    15aa:	0c 81       	ldd	r16, Y+4	; 0x04
    15ac:	1b 81       	ldd	r17, Y+3	; 0x03
    15ae:	aa 81       	ldd	r26, Y+2	; 0x02
    15b0:	b9 81       	ldd	r27, Y+1	; 0x01
    15b2:	ce 0f       	add	r28, r30
    15b4:	d1 1d       	adc	r29, r1
    15b6:	0f b6       	in	r0, 0x3f	; 63
    15b8:	f8 94       	cli
    15ba:	de bf       	out	0x3e, r29	; 62
    15bc:	0f be       	out	0x3f, r0	; 63
    15be:	cd bf       	out	0x3d, r28	; 61
    15c0:	ed 01       	movw	r28, r26
    15c2:	08 95       	ret

000015c4 <fprintf>:
    15c4:	cf 93       	push	r28
    15c6:	df 93       	push	r29
    15c8:	cd b7       	in	r28, 0x3d	; 61
    15ca:	de b7       	in	r29, 0x3e	; 62
    15cc:	ce 01       	movw	r24, r28
    15ce:	09 96       	adiw	r24, 0x09	; 9
    15d0:	ac 01       	movw	r20, r24
    15d2:	6f 81       	ldd	r22, Y+7	; 0x07
    15d4:	78 85       	ldd	r23, Y+8	; 0x08
    15d6:	8d 81       	ldd	r24, Y+5	; 0x05
    15d8:	9e 81       	ldd	r25, Y+6	; 0x06
    15da:	0e 94 23 0b 	call	0x1646	; 0x1646 <vfprintf>
    15de:	df 91       	pop	r29
    15e0:	cf 91       	pop	r28
    15e2:	08 95       	ret

000015e4 <fputs>:
    15e4:	ef 92       	push	r14
    15e6:	ff 92       	push	r15
    15e8:	0f 93       	push	r16
    15ea:	1f 93       	push	r17
    15ec:	cf 93       	push	r28
    15ee:	df 93       	push	r29
    15f0:	7c 01       	movw	r14, r24
    15f2:	8b 01       	movw	r16, r22
    15f4:	db 01       	movw	r26, r22
    15f6:	13 96       	adiw	r26, 0x03	; 3
    15f8:	8c 91       	ld	r24, X
    15fa:	81 ff       	sbrs	r24, 1
    15fc:	14 c0       	rjmp	.+40     	; 0x1626 <fputs+0x42>
    15fe:	c0 e0       	ldi	r28, 0x00	; 0
    1600:	d0 e0       	ldi	r29, 0x00	; 0
    1602:	0b c0       	rjmp	.+22     	; 0x161a <fputs+0x36>
    1604:	d8 01       	movw	r26, r16
    1606:	18 96       	adiw	r26, 0x08	; 8
    1608:	ed 91       	ld	r30, X+
    160a:	fc 91       	ld	r31, X
    160c:	19 97       	sbiw	r26, 0x09	; 9
    160e:	b8 01       	movw	r22, r16
    1610:	09 95       	icall
    1612:	89 2b       	or	r24, r25
    1614:	11 f0       	breq	.+4      	; 0x161a <fputs+0x36>
    1616:	cf ef       	ldi	r28, 0xFF	; 255
    1618:	df ef       	ldi	r29, 0xFF	; 255
    161a:	f7 01       	movw	r30, r14
    161c:	81 91       	ld	r24, Z+
    161e:	7f 01       	movw	r14, r30
    1620:	81 11       	cpse	r24, r1
    1622:	f0 cf       	rjmp	.-32     	; 0x1604 <fputs+0x20>
    1624:	02 c0       	rjmp	.+4      	; 0x162a <fputs+0x46>
    1626:	cf ef       	ldi	r28, 0xFF	; 255
    1628:	df ef       	ldi	r29, 0xFF	; 255
    162a:	ce 01       	movw	r24, r28
    162c:	df 91       	pop	r29
    162e:	cf 91       	pop	r28
    1630:	1f 91       	pop	r17
    1632:	0f 91       	pop	r16
    1634:	ff 90       	pop	r15
    1636:	ef 90       	pop	r14
    1638:	08 95       	ret

0000163a <sin>:
    163a:	9f 93       	push	r25
    163c:	aa d2       	rcall	.+1364   	; 0x1b92 <__fp_rempio2>
    163e:	0f 90       	pop	r0
    1640:	07 fc       	sbrc	r0, 7
    1642:	ee 5f       	subi	r30, 0xFE	; 254
    1644:	cd c2       	rjmp	.+1434   	; 0x1be0 <__fp_sinus>

00001646 <vfprintf>:
    1646:	2f 92       	push	r2
    1648:	3f 92       	push	r3
    164a:	4f 92       	push	r4
    164c:	5f 92       	push	r5
    164e:	6f 92       	push	r6
    1650:	7f 92       	push	r7
    1652:	8f 92       	push	r8
    1654:	9f 92       	push	r9
    1656:	af 92       	push	r10
    1658:	bf 92       	push	r11
    165a:	cf 92       	push	r12
    165c:	df 92       	push	r13
    165e:	ef 92       	push	r14
    1660:	ff 92       	push	r15
    1662:	0f 93       	push	r16
    1664:	1f 93       	push	r17
    1666:	cf 93       	push	r28
    1668:	df 93       	push	r29
    166a:	cd b7       	in	r28, 0x3d	; 61
    166c:	de b7       	in	r29, 0x3e	; 62
    166e:	2c 97       	sbiw	r28, 0x0c	; 12
    1670:	0f b6       	in	r0, 0x3f	; 63
    1672:	f8 94       	cli
    1674:	de bf       	out	0x3e, r29	; 62
    1676:	0f be       	out	0x3f, r0	; 63
    1678:	cd bf       	out	0x3d, r28	; 61
    167a:	7c 01       	movw	r14, r24
    167c:	6b 01       	movw	r12, r22
    167e:	8a 01       	movw	r16, r20
    1680:	fc 01       	movw	r30, r24
    1682:	17 82       	std	Z+7, r1	; 0x07
    1684:	16 82       	std	Z+6, r1	; 0x06
    1686:	83 81       	ldd	r24, Z+3	; 0x03
    1688:	81 ff       	sbrs	r24, 1
    168a:	c6 c1       	rjmp	.+908    	; 0x1a18 <vfprintf+0x3d2>
    168c:	88 24       	eor	r8, r8
    168e:	83 94       	inc	r8
    1690:	91 2c       	mov	r9, r1
    1692:	8c 0e       	add	r8, r28
    1694:	9d 1e       	adc	r9, r29
    1696:	f7 01       	movw	r30, r14
    1698:	93 81       	ldd	r25, Z+3	; 0x03
    169a:	f6 01       	movw	r30, r12
    169c:	93 fd       	sbrc	r25, 3
    169e:	85 91       	lpm	r24, Z+
    16a0:	93 ff       	sbrs	r25, 3
    16a2:	81 91       	ld	r24, Z+
    16a4:	6f 01       	movw	r12, r30
    16a6:	88 23       	and	r24, r24
    16a8:	09 f4       	brne	.+2      	; 0x16ac <vfprintf+0x66>
    16aa:	b2 c1       	rjmp	.+868    	; 0x1a10 <vfprintf+0x3ca>
    16ac:	85 32       	cpi	r24, 0x25	; 37
    16ae:	39 f4       	brne	.+14     	; 0x16be <vfprintf+0x78>
    16b0:	93 fd       	sbrc	r25, 3
    16b2:	85 91       	lpm	r24, Z+
    16b4:	93 ff       	sbrs	r25, 3
    16b6:	81 91       	ld	r24, Z+
    16b8:	6f 01       	movw	r12, r30
    16ba:	85 32       	cpi	r24, 0x25	; 37
    16bc:	29 f4       	brne	.+10     	; 0x16c8 <vfprintf+0x82>
    16be:	b7 01       	movw	r22, r14
    16c0:	90 e0       	ldi	r25, 0x00	; 0
    16c2:	0e 94 3e 0d 	call	0x1a7c	; 0x1a7c <fputc>
    16c6:	e7 cf       	rjmp	.-50     	; 0x1696 <vfprintf+0x50>
    16c8:	51 2c       	mov	r5, r1
    16ca:	31 2c       	mov	r3, r1
    16cc:	20 e0       	ldi	r18, 0x00	; 0
    16ce:	20 32       	cpi	r18, 0x20	; 32
    16d0:	a8 f4       	brcc	.+42     	; 0x16fc <vfprintf+0xb6>
    16d2:	8b 32       	cpi	r24, 0x2B	; 43
    16d4:	61 f0       	breq	.+24     	; 0x16ee <vfprintf+0xa8>
    16d6:	28 f4       	brcc	.+10     	; 0x16e2 <vfprintf+0x9c>
    16d8:	80 32       	cpi	r24, 0x20	; 32
    16da:	51 f0       	breq	.+20     	; 0x16f0 <vfprintf+0xaa>
    16dc:	83 32       	cpi	r24, 0x23	; 35
    16de:	71 f4       	brne	.+28     	; 0x16fc <vfprintf+0xb6>
    16e0:	0b c0       	rjmp	.+22     	; 0x16f8 <vfprintf+0xb2>
    16e2:	8d 32       	cpi	r24, 0x2D	; 45
    16e4:	39 f0       	breq	.+14     	; 0x16f4 <vfprintf+0xae>
    16e6:	80 33       	cpi	r24, 0x30	; 48
    16e8:	49 f4       	brne	.+18     	; 0x16fc <vfprintf+0xb6>
    16ea:	21 60       	ori	r18, 0x01	; 1
    16ec:	28 c0       	rjmp	.+80     	; 0x173e <vfprintf+0xf8>
    16ee:	22 60       	ori	r18, 0x02	; 2
    16f0:	24 60       	ori	r18, 0x04	; 4
    16f2:	25 c0       	rjmp	.+74     	; 0x173e <vfprintf+0xf8>
    16f4:	28 60       	ori	r18, 0x08	; 8
    16f6:	23 c0       	rjmp	.+70     	; 0x173e <vfprintf+0xf8>
    16f8:	20 61       	ori	r18, 0x10	; 16
    16fa:	21 c0       	rjmp	.+66     	; 0x173e <vfprintf+0xf8>
    16fc:	27 fd       	sbrc	r18, 7
    16fe:	27 c0       	rjmp	.+78     	; 0x174e <vfprintf+0x108>
    1700:	38 2f       	mov	r19, r24
    1702:	30 53       	subi	r19, 0x30	; 48
    1704:	3a 30       	cpi	r19, 0x0A	; 10
    1706:	78 f4       	brcc	.+30     	; 0x1726 <vfprintf+0xe0>
    1708:	26 ff       	sbrs	r18, 6
    170a:	06 c0       	rjmp	.+12     	; 0x1718 <vfprintf+0xd2>
    170c:	fa e0       	ldi	r31, 0x0A	; 10
    170e:	5f 9e       	mul	r5, r31
    1710:	30 0d       	add	r19, r0
    1712:	11 24       	eor	r1, r1
    1714:	53 2e       	mov	r5, r19
    1716:	13 c0       	rjmp	.+38     	; 0x173e <vfprintf+0xf8>
    1718:	8a e0       	ldi	r24, 0x0A	; 10
    171a:	38 9e       	mul	r3, r24
    171c:	30 0d       	add	r19, r0
    171e:	11 24       	eor	r1, r1
    1720:	33 2e       	mov	r3, r19
    1722:	20 62       	ori	r18, 0x20	; 32
    1724:	0c c0       	rjmp	.+24     	; 0x173e <vfprintf+0xf8>
    1726:	8e 32       	cpi	r24, 0x2E	; 46
    1728:	21 f4       	brne	.+8      	; 0x1732 <vfprintf+0xec>
    172a:	26 fd       	sbrc	r18, 6
    172c:	71 c1       	rjmp	.+738    	; 0x1a10 <vfprintf+0x3ca>
    172e:	20 64       	ori	r18, 0x40	; 64
    1730:	06 c0       	rjmp	.+12     	; 0x173e <vfprintf+0xf8>
    1732:	8c 36       	cpi	r24, 0x6C	; 108
    1734:	11 f4       	brne	.+4      	; 0x173a <vfprintf+0xf4>
    1736:	20 68       	ori	r18, 0x80	; 128
    1738:	02 c0       	rjmp	.+4      	; 0x173e <vfprintf+0xf8>
    173a:	88 36       	cpi	r24, 0x68	; 104
    173c:	41 f4       	brne	.+16     	; 0x174e <vfprintf+0x108>
    173e:	f6 01       	movw	r30, r12
    1740:	93 fd       	sbrc	r25, 3
    1742:	85 91       	lpm	r24, Z+
    1744:	93 ff       	sbrs	r25, 3
    1746:	81 91       	ld	r24, Z+
    1748:	6f 01       	movw	r12, r30
    174a:	81 11       	cpse	r24, r1
    174c:	c0 cf       	rjmp	.-128    	; 0x16ce <vfprintf+0x88>
    174e:	98 2f       	mov	r25, r24
    1750:	95 54       	subi	r25, 0x45	; 69
    1752:	93 30       	cpi	r25, 0x03	; 3
    1754:	18 f0       	brcs	.+6      	; 0x175c <vfprintf+0x116>
    1756:	90 52       	subi	r25, 0x20	; 32
    1758:	93 30       	cpi	r25, 0x03	; 3
    175a:	28 f4       	brcc	.+10     	; 0x1766 <vfprintf+0x120>
    175c:	0c 5f       	subi	r16, 0xFC	; 252
    175e:	1f 4f       	sbci	r17, 0xFF	; 255
    1760:	ff e3       	ldi	r31, 0x3F	; 63
    1762:	f9 83       	std	Y+1, r31	; 0x01
    1764:	0d c0       	rjmp	.+26     	; 0x1780 <vfprintf+0x13a>
    1766:	83 36       	cpi	r24, 0x63	; 99
    1768:	31 f0       	breq	.+12     	; 0x1776 <vfprintf+0x130>
    176a:	83 37       	cpi	r24, 0x73	; 115
    176c:	71 f0       	breq	.+28     	; 0x178a <vfprintf+0x144>
    176e:	83 35       	cpi	r24, 0x53	; 83
    1770:	09 f0       	breq	.+2      	; 0x1774 <vfprintf+0x12e>
    1772:	5e c0       	rjmp	.+188    	; 0x1830 <vfprintf+0x1ea>
    1774:	23 c0       	rjmp	.+70     	; 0x17bc <vfprintf+0x176>
    1776:	f8 01       	movw	r30, r16
    1778:	80 81       	ld	r24, Z
    177a:	89 83       	std	Y+1, r24	; 0x01
    177c:	0e 5f       	subi	r16, 0xFE	; 254
    177e:	1f 4f       	sbci	r17, 0xFF	; 255
    1780:	44 24       	eor	r4, r4
    1782:	43 94       	inc	r4
    1784:	51 2c       	mov	r5, r1
    1786:	54 01       	movw	r10, r8
    1788:	15 c0       	rjmp	.+42     	; 0x17b4 <vfprintf+0x16e>
    178a:	38 01       	movw	r6, r16
    178c:	f2 e0       	ldi	r31, 0x02	; 2
    178e:	6f 0e       	add	r6, r31
    1790:	71 1c       	adc	r7, r1
    1792:	f8 01       	movw	r30, r16
    1794:	a0 80       	ld	r10, Z
    1796:	b1 80       	ldd	r11, Z+1	; 0x01
    1798:	26 ff       	sbrs	r18, 6
    179a:	03 c0       	rjmp	.+6      	; 0x17a2 <vfprintf+0x15c>
    179c:	65 2d       	mov	r22, r5
    179e:	70 e0       	ldi	r23, 0x00	; 0
    17a0:	02 c0       	rjmp	.+4      	; 0x17a6 <vfprintf+0x160>
    17a2:	6f ef       	ldi	r22, 0xFF	; 255
    17a4:	7f ef       	ldi	r23, 0xFF	; 255
    17a6:	c5 01       	movw	r24, r10
    17a8:	2c 87       	std	Y+12, r18	; 0x0c
    17aa:	0e 94 33 0d 	call	0x1a66	; 0x1a66 <strnlen>
    17ae:	2c 01       	movw	r4, r24
    17b0:	83 01       	movw	r16, r6
    17b2:	2c 85       	ldd	r18, Y+12	; 0x0c
    17b4:	6f e7       	ldi	r22, 0x7F	; 127
    17b6:	26 2e       	mov	r2, r22
    17b8:	22 22       	and	r2, r18
    17ba:	18 c0       	rjmp	.+48     	; 0x17ec <vfprintf+0x1a6>
    17bc:	38 01       	movw	r6, r16
    17be:	f2 e0       	ldi	r31, 0x02	; 2
    17c0:	6f 0e       	add	r6, r31
    17c2:	71 1c       	adc	r7, r1
    17c4:	f8 01       	movw	r30, r16
    17c6:	a0 80       	ld	r10, Z
    17c8:	b1 80       	ldd	r11, Z+1	; 0x01
    17ca:	26 ff       	sbrs	r18, 6
    17cc:	03 c0       	rjmp	.+6      	; 0x17d4 <vfprintf+0x18e>
    17ce:	65 2d       	mov	r22, r5
    17d0:	70 e0       	ldi	r23, 0x00	; 0
    17d2:	02 c0       	rjmp	.+4      	; 0x17d8 <vfprintf+0x192>
    17d4:	6f ef       	ldi	r22, 0xFF	; 255
    17d6:	7f ef       	ldi	r23, 0xFF	; 255
    17d8:	c5 01       	movw	r24, r10
    17da:	2c 87       	std	Y+12, r18	; 0x0c
    17dc:	0e 94 28 0d 	call	0x1a50	; 0x1a50 <strnlen_P>
    17e0:	2c 01       	movw	r4, r24
    17e2:	2c 85       	ldd	r18, Y+12	; 0x0c
    17e4:	50 e8       	ldi	r21, 0x80	; 128
    17e6:	25 2e       	mov	r2, r21
    17e8:	22 2a       	or	r2, r18
    17ea:	83 01       	movw	r16, r6
    17ec:	23 fc       	sbrc	r2, 3
    17ee:	1c c0       	rjmp	.+56     	; 0x1828 <vfprintf+0x1e2>
    17f0:	06 c0       	rjmp	.+12     	; 0x17fe <vfprintf+0x1b8>
    17f2:	b7 01       	movw	r22, r14
    17f4:	80 e2       	ldi	r24, 0x20	; 32
    17f6:	90 e0       	ldi	r25, 0x00	; 0
    17f8:	0e 94 3e 0d 	call	0x1a7c	; 0x1a7c <fputc>
    17fc:	3a 94       	dec	r3
    17fe:	83 2d       	mov	r24, r3
    1800:	90 e0       	ldi	r25, 0x00	; 0
    1802:	48 16       	cp	r4, r24
    1804:	59 06       	cpc	r5, r25
    1806:	a8 f3       	brcs	.-22     	; 0x17f2 <vfprintf+0x1ac>
    1808:	0f c0       	rjmp	.+30     	; 0x1828 <vfprintf+0x1e2>
    180a:	f5 01       	movw	r30, r10
    180c:	27 fc       	sbrc	r2, 7
    180e:	85 91       	lpm	r24, Z+
    1810:	27 fe       	sbrs	r2, 7
    1812:	81 91       	ld	r24, Z+
    1814:	5f 01       	movw	r10, r30
    1816:	b7 01       	movw	r22, r14
    1818:	90 e0       	ldi	r25, 0x00	; 0
    181a:	0e 94 3e 0d 	call	0x1a7c	; 0x1a7c <fputc>
    181e:	31 10       	cpse	r3, r1
    1820:	3a 94       	dec	r3
    1822:	f1 e0       	ldi	r31, 0x01	; 1
    1824:	4f 1a       	sub	r4, r31
    1826:	51 08       	sbc	r5, r1
    1828:	41 14       	cp	r4, r1
    182a:	51 04       	cpc	r5, r1
    182c:	71 f7       	brne	.-36     	; 0x180a <vfprintf+0x1c4>
    182e:	ed c0       	rjmp	.+474    	; 0x1a0a <vfprintf+0x3c4>
    1830:	84 36       	cpi	r24, 0x64	; 100
    1832:	11 f0       	breq	.+4      	; 0x1838 <vfprintf+0x1f2>
    1834:	89 36       	cpi	r24, 0x69	; 105
    1836:	41 f5       	brne	.+80     	; 0x1888 <vfprintf+0x242>
    1838:	f8 01       	movw	r30, r16
    183a:	27 ff       	sbrs	r18, 7
    183c:	07 c0       	rjmp	.+14     	; 0x184c <vfprintf+0x206>
    183e:	60 81       	ld	r22, Z
    1840:	71 81       	ldd	r23, Z+1	; 0x01
    1842:	82 81       	ldd	r24, Z+2	; 0x02
    1844:	93 81       	ldd	r25, Z+3	; 0x03
    1846:	0c 5f       	subi	r16, 0xFC	; 252
    1848:	1f 4f       	sbci	r17, 0xFF	; 255
    184a:	08 c0       	rjmp	.+16     	; 0x185c <vfprintf+0x216>
    184c:	60 81       	ld	r22, Z
    184e:	71 81       	ldd	r23, Z+1	; 0x01
    1850:	88 27       	eor	r24, r24
    1852:	77 fd       	sbrc	r23, 7
    1854:	80 95       	com	r24
    1856:	98 2f       	mov	r25, r24
    1858:	0e 5f       	subi	r16, 0xFE	; 254
    185a:	1f 4f       	sbci	r17, 0xFF	; 255
    185c:	4f e6       	ldi	r20, 0x6F	; 111
    185e:	b4 2e       	mov	r11, r20
    1860:	b2 22       	and	r11, r18
    1862:	97 ff       	sbrs	r25, 7
    1864:	09 c0       	rjmp	.+18     	; 0x1878 <vfprintf+0x232>
    1866:	90 95       	com	r25
    1868:	80 95       	com	r24
    186a:	70 95       	com	r23
    186c:	61 95       	neg	r22
    186e:	7f 4f       	sbci	r23, 0xFF	; 255
    1870:	8f 4f       	sbci	r24, 0xFF	; 255
    1872:	9f 4f       	sbci	r25, 0xFF	; 255
    1874:	f0 e8       	ldi	r31, 0x80	; 128
    1876:	bf 2a       	or	r11, r31
    1878:	2a e0       	ldi	r18, 0x0A	; 10
    187a:	30 e0       	ldi	r19, 0x00	; 0
    187c:	a4 01       	movw	r20, r8
    187e:	0e 94 6a 0d 	call	0x1ad4	; 0x1ad4 <__ultoa_invert>
    1882:	a8 2e       	mov	r10, r24
    1884:	a8 18       	sub	r10, r8
    1886:	43 c0       	rjmp	.+134    	; 0x190e <vfprintf+0x2c8>
    1888:	85 37       	cpi	r24, 0x75	; 117
    188a:	31 f4       	brne	.+12     	; 0x1898 <vfprintf+0x252>
    188c:	3f ee       	ldi	r19, 0xEF	; 239
    188e:	b3 2e       	mov	r11, r19
    1890:	b2 22       	and	r11, r18
    1892:	2a e0       	ldi	r18, 0x0A	; 10
    1894:	30 e0       	ldi	r19, 0x00	; 0
    1896:	24 c0       	rjmp	.+72     	; 0x18e0 <vfprintf+0x29a>
    1898:	99 ef       	ldi	r25, 0xF9	; 249
    189a:	b9 2e       	mov	r11, r25
    189c:	b2 22       	and	r11, r18
    189e:	8f 36       	cpi	r24, 0x6F	; 111
    18a0:	b9 f0       	breq	.+46     	; 0x18d0 <vfprintf+0x28a>
    18a2:	20 f4       	brcc	.+8      	; 0x18ac <vfprintf+0x266>
    18a4:	88 35       	cpi	r24, 0x58	; 88
    18a6:	09 f0       	breq	.+2      	; 0x18aa <vfprintf+0x264>
    18a8:	b3 c0       	rjmp	.+358    	; 0x1a10 <vfprintf+0x3ca>
    18aa:	0d c0       	rjmp	.+26     	; 0x18c6 <vfprintf+0x280>
    18ac:	80 37       	cpi	r24, 0x70	; 112
    18ae:	21 f0       	breq	.+8      	; 0x18b8 <vfprintf+0x272>
    18b0:	88 37       	cpi	r24, 0x78	; 120
    18b2:	09 f0       	breq	.+2      	; 0x18b6 <vfprintf+0x270>
    18b4:	ad c0       	rjmp	.+346    	; 0x1a10 <vfprintf+0x3ca>
    18b6:	02 c0       	rjmp	.+4      	; 0x18bc <vfprintf+0x276>
    18b8:	20 e1       	ldi	r18, 0x10	; 16
    18ba:	b2 2a       	or	r11, r18
    18bc:	b4 fe       	sbrs	r11, 4
    18be:	0b c0       	rjmp	.+22     	; 0x18d6 <vfprintf+0x290>
    18c0:	84 e0       	ldi	r24, 0x04	; 4
    18c2:	b8 2a       	or	r11, r24
    18c4:	08 c0       	rjmp	.+16     	; 0x18d6 <vfprintf+0x290>
    18c6:	24 ff       	sbrs	r18, 4
    18c8:	09 c0       	rjmp	.+18     	; 0x18dc <vfprintf+0x296>
    18ca:	e6 e0       	ldi	r30, 0x06	; 6
    18cc:	be 2a       	or	r11, r30
    18ce:	06 c0       	rjmp	.+12     	; 0x18dc <vfprintf+0x296>
    18d0:	28 e0       	ldi	r18, 0x08	; 8
    18d2:	30 e0       	ldi	r19, 0x00	; 0
    18d4:	05 c0       	rjmp	.+10     	; 0x18e0 <vfprintf+0x29a>
    18d6:	20 e1       	ldi	r18, 0x10	; 16
    18d8:	30 e0       	ldi	r19, 0x00	; 0
    18da:	02 c0       	rjmp	.+4      	; 0x18e0 <vfprintf+0x29a>
    18dc:	20 e1       	ldi	r18, 0x10	; 16
    18de:	32 e0       	ldi	r19, 0x02	; 2
    18e0:	f8 01       	movw	r30, r16
    18e2:	b7 fe       	sbrs	r11, 7
    18e4:	07 c0       	rjmp	.+14     	; 0x18f4 <vfprintf+0x2ae>
    18e6:	60 81       	ld	r22, Z
    18e8:	71 81       	ldd	r23, Z+1	; 0x01
    18ea:	82 81       	ldd	r24, Z+2	; 0x02
    18ec:	93 81       	ldd	r25, Z+3	; 0x03
    18ee:	0c 5f       	subi	r16, 0xFC	; 252
    18f0:	1f 4f       	sbci	r17, 0xFF	; 255
    18f2:	06 c0       	rjmp	.+12     	; 0x1900 <vfprintf+0x2ba>
    18f4:	60 81       	ld	r22, Z
    18f6:	71 81       	ldd	r23, Z+1	; 0x01
    18f8:	80 e0       	ldi	r24, 0x00	; 0
    18fa:	90 e0       	ldi	r25, 0x00	; 0
    18fc:	0e 5f       	subi	r16, 0xFE	; 254
    18fe:	1f 4f       	sbci	r17, 0xFF	; 255
    1900:	a4 01       	movw	r20, r8
    1902:	0e 94 6a 0d 	call	0x1ad4	; 0x1ad4 <__ultoa_invert>
    1906:	a8 2e       	mov	r10, r24
    1908:	a8 18       	sub	r10, r8
    190a:	ff e7       	ldi	r31, 0x7F	; 127
    190c:	bf 22       	and	r11, r31
    190e:	b6 fe       	sbrs	r11, 6
    1910:	0b c0       	rjmp	.+22     	; 0x1928 <vfprintf+0x2e2>
    1912:	2b 2d       	mov	r18, r11
    1914:	2e 7f       	andi	r18, 0xFE	; 254
    1916:	a5 14       	cp	r10, r5
    1918:	50 f4       	brcc	.+20     	; 0x192e <vfprintf+0x2e8>
    191a:	b4 fe       	sbrs	r11, 4
    191c:	0a c0       	rjmp	.+20     	; 0x1932 <vfprintf+0x2ec>
    191e:	b2 fc       	sbrc	r11, 2
    1920:	08 c0       	rjmp	.+16     	; 0x1932 <vfprintf+0x2ec>
    1922:	2b 2d       	mov	r18, r11
    1924:	2e 7e       	andi	r18, 0xEE	; 238
    1926:	05 c0       	rjmp	.+10     	; 0x1932 <vfprintf+0x2ec>
    1928:	7a 2c       	mov	r7, r10
    192a:	2b 2d       	mov	r18, r11
    192c:	03 c0       	rjmp	.+6      	; 0x1934 <vfprintf+0x2ee>
    192e:	7a 2c       	mov	r7, r10
    1930:	01 c0       	rjmp	.+2      	; 0x1934 <vfprintf+0x2ee>
    1932:	75 2c       	mov	r7, r5
    1934:	24 ff       	sbrs	r18, 4
    1936:	0d c0       	rjmp	.+26     	; 0x1952 <vfprintf+0x30c>
    1938:	fe 01       	movw	r30, r28
    193a:	ea 0d       	add	r30, r10
    193c:	f1 1d       	adc	r31, r1
    193e:	80 81       	ld	r24, Z
    1940:	80 33       	cpi	r24, 0x30	; 48
    1942:	11 f4       	brne	.+4      	; 0x1948 <vfprintf+0x302>
    1944:	29 7e       	andi	r18, 0xE9	; 233
    1946:	09 c0       	rjmp	.+18     	; 0x195a <vfprintf+0x314>
    1948:	22 ff       	sbrs	r18, 2
    194a:	06 c0       	rjmp	.+12     	; 0x1958 <vfprintf+0x312>
    194c:	73 94       	inc	r7
    194e:	73 94       	inc	r7
    1950:	04 c0       	rjmp	.+8      	; 0x195a <vfprintf+0x314>
    1952:	82 2f       	mov	r24, r18
    1954:	86 78       	andi	r24, 0x86	; 134
    1956:	09 f0       	breq	.+2      	; 0x195a <vfprintf+0x314>
    1958:	73 94       	inc	r7
    195a:	23 fd       	sbrc	r18, 3
    195c:	14 c0       	rjmp	.+40     	; 0x1986 <vfprintf+0x340>
    195e:	20 ff       	sbrs	r18, 0
    1960:	0f c0       	rjmp	.+30     	; 0x1980 <vfprintf+0x33a>
    1962:	5a 2c       	mov	r5, r10
    1964:	73 14       	cp	r7, r3
    1966:	60 f4       	brcc	.+24     	; 0x1980 <vfprintf+0x33a>
    1968:	53 0c       	add	r5, r3
    196a:	57 18       	sub	r5, r7
    196c:	73 2c       	mov	r7, r3
    196e:	08 c0       	rjmp	.+16     	; 0x1980 <vfprintf+0x33a>
    1970:	b7 01       	movw	r22, r14
    1972:	80 e2       	ldi	r24, 0x20	; 32
    1974:	90 e0       	ldi	r25, 0x00	; 0
    1976:	2c 87       	std	Y+12, r18	; 0x0c
    1978:	0e 94 3e 0d 	call	0x1a7c	; 0x1a7c <fputc>
    197c:	73 94       	inc	r7
    197e:	2c 85       	ldd	r18, Y+12	; 0x0c
    1980:	73 14       	cp	r7, r3
    1982:	b0 f3       	brcs	.-20     	; 0x1970 <vfprintf+0x32a>
    1984:	04 c0       	rjmp	.+8      	; 0x198e <vfprintf+0x348>
    1986:	73 14       	cp	r7, r3
    1988:	10 f4       	brcc	.+4      	; 0x198e <vfprintf+0x348>
    198a:	37 18       	sub	r3, r7
    198c:	01 c0       	rjmp	.+2      	; 0x1990 <vfprintf+0x34a>
    198e:	31 2c       	mov	r3, r1
    1990:	24 ff       	sbrs	r18, 4
    1992:	12 c0       	rjmp	.+36     	; 0x19b8 <vfprintf+0x372>
    1994:	b7 01       	movw	r22, r14
    1996:	80 e3       	ldi	r24, 0x30	; 48
    1998:	90 e0       	ldi	r25, 0x00	; 0
    199a:	2c 87       	std	Y+12, r18	; 0x0c
    199c:	0e 94 3e 0d 	call	0x1a7c	; 0x1a7c <fputc>
    19a0:	2c 85       	ldd	r18, Y+12	; 0x0c
    19a2:	22 ff       	sbrs	r18, 2
    19a4:	1e c0       	rjmp	.+60     	; 0x19e2 <vfprintf+0x39c>
    19a6:	21 ff       	sbrs	r18, 1
    19a8:	03 c0       	rjmp	.+6      	; 0x19b0 <vfprintf+0x36a>
    19aa:	88 e5       	ldi	r24, 0x58	; 88
    19ac:	90 e0       	ldi	r25, 0x00	; 0
    19ae:	02 c0       	rjmp	.+4      	; 0x19b4 <vfprintf+0x36e>
    19b0:	88 e7       	ldi	r24, 0x78	; 120
    19b2:	90 e0       	ldi	r25, 0x00	; 0
    19b4:	b7 01       	movw	r22, r14
    19b6:	0c c0       	rjmp	.+24     	; 0x19d0 <vfprintf+0x38a>
    19b8:	82 2f       	mov	r24, r18
    19ba:	86 78       	andi	r24, 0x86	; 134
    19bc:	91 f0       	breq	.+36     	; 0x19e2 <vfprintf+0x39c>
    19be:	21 fd       	sbrc	r18, 1
    19c0:	02 c0       	rjmp	.+4      	; 0x19c6 <vfprintf+0x380>
    19c2:	80 e2       	ldi	r24, 0x20	; 32
    19c4:	01 c0       	rjmp	.+2      	; 0x19c8 <vfprintf+0x382>
    19c6:	8b e2       	ldi	r24, 0x2B	; 43
    19c8:	27 fd       	sbrc	r18, 7
    19ca:	8d e2       	ldi	r24, 0x2D	; 45
    19cc:	b7 01       	movw	r22, r14
    19ce:	90 e0       	ldi	r25, 0x00	; 0
    19d0:	0e 94 3e 0d 	call	0x1a7c	; 0x1a7c <fputc>
    19d4:	06 c0       	rjmp	.+12     	; 0x19e2 <vfprintf+0x39c>
    19d6:	b7 01       	movw	r22, r14
    19d8:	80 e3       	ldi	r24, 0x30	; 48
    19da:	90 e0       	ldi	r25, 0x00	; 0
    19dc:	0e 94 3e 0d 	call	0x1a7c	; 0x1a7c <fputc>
    19e0:	5a 94       	dec	r5
    19e2:	a5 14       	cp	r10, r5
    19e4:	c0 f3       	brcs	.-16     	; 0x19d6 <vfprintf+0x390>
    19e6:	aa 94       	dec	r10
    19e8:	f4 01       	movw	r30, r8
    19ea:	ea 0d       	add	r30, r10
    19ec:	f1 1d       	adc	r31, r1
    19ee:	b7 01       	movw	r22, r14
    19f0:	80 81       	ld	r24, Z
    19f2:	90 e0       	ldi	r25, 0x00	; 0
    19f4:	0e 94 3e 0d 	call	0x1a7c	; 0x1a7c <fputc>
    19f8:	a1 10       	cpse	r10, r1
    19fa:	f5 cf       	rjmp	.-22     	; 0x19e6 <vfprintf+0x3a0>
    19fc:	06 c0       	rjmp	.+12     	; 0x1a0a <vfprintf+0x3c4>
    19fe:	b7 01       	movw	r22, r14
    1a00:	80 e2       	ldi	r24, 0x20	; 32
    1a02:	90 e0       	ldi	r25, 0x00	; 0
    1a04:	0e 94 3e 0d 	call	0x1a7c	; 0x1a7c <fputc>
    1a08:	3a 94       	dec	r3
    1a0a:	31 10       	cpse	r3, r1
    1a0c:	f8 cf       	rjmp	.-16     	; 0x19fe <vfprintf+0x3b8>
    1a0e:	43 ce       	rjmp	.-890    	; 0x1696 <vfprintf+0x50>
    1a10:	f7 01       	movw	r30, r14
    1a12:	26 81       	ldd	r18, Z+6	; 0x06
    1a14:	37 81       	ldd	r19, Z+7	; 0x07
    1a16:	02 c0       	rjmp	.+4      	; 0x1a1c <vfprintf+0x3d6>
    1a18:	2f ef       	ldi	r18, 0xFF	; 255
    1a1a:	3f ef       	ldi	r19, 0xFF	; 255
    1a1c:	c9 01       	movw	r24, r18
    1a1e:	2c 96       	adiw	r28, 0x0c	; 12
    1a20:	0f b6       	in	r0, 0x3f	; 63
    1a22:	f8 94       	cli
    1a24:	de bf       	out	0x3e, r29	; 62
    1a26:	0f be       	out	0x3f, r0	; 63
    1a28:	cd bf       	out	0x3d, r28	; 61
    1a2a:	df 91       	pop	r29
    1a2c:	cf 91       	pop	r28
    1a2e:	1f 91       	pop	r17
    1a30:	0f 91       	pop	r16
    1a32:	ff 90       	pop	r15
    1a34:	ef 90       	pop	r14
    1a36:	df 90       	pop	r13
    1a38:	cf 90       	pop	r12
    1a3a:	bf 90       	pop	r11
    1a3c:	af 90       	pop	r10
    1a3e:	9f 90       	pop	r9
    1a40:	8f 90       	pop	r8
    1a42:	7f 90       	pop	r7
    1a44:	6f 90       	pop	r6
    1a46:	5f 90       	pop	r5
    1a48:	4f 90       	pop	r4
    1a4a:	3f 90       	pop	r3
    1a4c:	2f 90       	pop	r2
    1a4e:	08 95       	ret

00001a50 <strnlen_P>:
    1a50:	fc 01       	movw	r30, r24
    1a52:	05 90       	lpm	r0, Z+
    1a54:	61 50       	subi	r22, 0x01	; 1
    1a56:	70 40       	sbci	r23, 0x00	; 0
    1a58:	01 10       	cpse	r0, r1
    1a5a:	d8 f7       	brcc	.-10     	; 0x1a52 <strnlen_P+0x2>
    1a5c:	80 95       	com	r24
    1a5e:	90 95       	com	r25
    1a60:	8e 0f       	add	r24, r30
    1a62:	9f 1f       	adc	r25, r31
    1a64:	08 95       	ret

00001a66 <strnlen>:
    1a66:	fc 01       	movw	r30, r24
    1a68:	61 50       	subi	r22, 0x01	; 1
    1a6a:	70 40       	sbci	r23, 0x00	; 0
    1a6c:	01 90       	ld	r0, Z+
    1a6e:	01 10       	cpse	r0, r1
    1a70:	d8 f7       	brcc	.-10     	; 0x1a68 <strnlen+0x2>
    1a72:	80 95       	com	r24
    1a74:	90 95       	com	r25
    1a76:	8e 0f       	add	r24, r30
    1a78:	9f 1f       	adc	r25, r31
    1a7a:	08 95       	ret

00001a7c <fputc>:
    1a7c:	0f 93       	push	r16
    1a7e:	1f 93       	push	r17
    1a80:	cf 93       	push	r28
    1a82:	df 93       	push	r29
    1a84:	8c 01       	movw	r16, r24
    1a86:	eb 01       	movw	r28, r22
    1a88:	8b 81       	ldd	r24, Y+3	; 0x03
    1a8a:	81 fd       	sbrc	r24, 1
    1a8c:	03 c0       	rjmp	.+6      	; 0x1a94 <fputc+0x18>
    1a8e:	0f ef       	ldi	r16, 0xFF	; 255
    1a90:	1f ef       	ldi	r17, 0xFF	; 255
    1a92:	1a c0       	rjmp	.+52     	; 0x1ac8 <fputc+0x4c>
    1a94:	82 ff       	sbrs	r24, 2
    1a96:	0d c0       	rjmp	.+26     	; 0x1ab2 <fputc+0x36>
    1a98:	2e 81       	ldd	r18, Y+6	; 0x06
    1a9a:	3f 81       	ldd	r19, Y+7	; 0x07
    1a9c:	8c 81       	ldd	r24, Y+4	; 0x04
    1a9e:	9d 81       	ldd	r25, Y+5	; 0x05
    1aa0:	28 17       	cp	r18, r24
    1aa2:	39 07       	cpc	r19, r25
    1aa4:	64 f4       	brge	.+24     	; 0x1abe <fputc+0x42>
    1aa6:	e8 81       	ld	r30, Y
    1aa8:	f9 81       	ldd	r31, Y+1	; 0x01
    1aaa:	01 93       	st	Z+, r16
    1aac:	f9 83       	std	Y+1, r31	; 0x01
    1aae:	e8 83       	st	Y, r30
    1ab0:	06 c0       	rjmp	.+12     	; 0x1abe <fputc+0x42>
    1ab2:	e8 85       	ldd	r30, Y+8	; 0x08
    1ab4:	f9 85       	ldd	r31, Y+9	; 0x09
    1ab6:	80 2f       	mov	r24, r16
    1ab8:	09 95       	icall
    1aba:	89 2b       	or	r24, r25
    1abc:	41 f7       	brne	.-48     	; 0x1a8e <fputc+0x12>
    1abe:	8e 81       	ldd	r24, Y+6	; 0x06
    1ac0:	9f 81       	ldd	r25, Y+7	; 0x07
    1ac2:	01 96       	adiw	r24, 0x01	; 1
    1ac4:	9f 83       	std	Y+7, r25	; 0x07
    1ac6:	8e 83       	std	Y+6, r24	; 0x06
    1ac8:	c8 01       	movw	r24, r16
    1aca:	df 91       	pop	r29
    1acc:	cf 91       	pop	r28
    1ace:	1f 91       	pop	r17
    1ad0:	0f 91       	pop	r16
    1ad2:	08 95       	ret

00001ad4 <__ultoa_invert>:
    1ad4:	fa 01       	movw	r30, r20
    1ad6:	aa 27       	eor	r26, r26
    1ad8:	28 30       	cpi	r18, 0x08	; 8
    1ada:	51 f1       	breq	.+84     	; 0x1b30 <__ultoa_invert+0x5c>
    1adc:	20 31       	cpi	r18, 0x10	; 16
    1ade:	81 f1       	breq	.+96     	; 0x1b40 <__ultoa_invert+0x6c>
    1ae0:	e8 94       	clt
    1ae2:	6f 93       	push	r22
    1ae4:	6e 7f       	andi	r22, 0xFE	; 254
    1ae6:	6e 5f       	subi	r22, 0xFE	; 254
    1ae8:	7f 4f       	sbci	r23, 0xFF	; 255
    1aea:	8f 4f       	sbci	r24, 0xFF	; 255
    1aec:	9f 4f       	sbci	r25, 0xFF	; 255
    1aee:	af 4f       	sbci	r26, 0xFF	; 255
    1af0:	b1 e0       	ldi	r27, 0x01	; 1
    1af2:	3e d0       	rcall	.+124    	; 0x1b70 <__ultoa_invert+0x9c>
    1af4:	b4 e0       	ldi	r27, 0x04	; 4
    1af6:	3c d0       	rcall	.+120    	; 0x1b70 <__ultoa_invert+0x9c>
    1af8:	67 0f       	add	r22, r23
    1afa:	78 1f       	adc	r23, r24
    1afc:	89 1f       	adc	r24, r25
    1afe:	9a 1f       	adc	r25, r26
    1b00:	a1 1d       	adc	r26, r1
    1b02:	68 0f       	add	r22, r24
    1b04:	79 1f       	adc	r23, r25
    1b06:	8a 1f       	adc	r24, r26
    1b08:	91 1d       	adc	r25, r1
    1b0a:	a1 1d       	adc	r26, r1
    1b0c:	6a 0f       	add	r22, r26
    1b0e:	71 1d       	adc	r23, r1
    1b10:	81 1d       	adc	r24, r1
    1b12:	91 1d       	adc	r25, r1
    1b14:	a1 1d       	adc	r26, r1
    1b16:	20 d0       	rcall	.+64     	; 0x1b58 <__ultoa_invert+0x84>
    1b18:	09 f4       	brne	.+2      	; 0x1b1c <__ultoa_invert+0x48>
    1b1a:	68 94       	set
    1b1c:	3f 91       	pop	r19
    1b1e:	2a e0       	ldi	r18, 0x0A	; 10
    1b20:	26 9f       	mul	r18, r22
    1b22:	11 24       	eor	r1, r1
    1b24:	30 19       	sub	r19, r0
    1b26:	30 5d       	subi	r19, 0xD0	; 208
    1b28:	31 93       	st	Z+, r19
    1b2a:	de f6       	brtc	.-74     	; 0x1ae2 <__ultoa_invert+0xe>
    1b2c:	cf 01       	movw	r24, r30
    1b2e:	08 95       	ret
    1b30:	46 2f       	mov	r20, r22
    1b32:	47 70       	andi	r20, 0x07	; 7
    1b34:	40 5d       	subi	r20, 0xD0	; 208
    1b36:	41 93       	st	Z+, r20
    1b38:	b3 e0       	ldi	r27, 0x03	; 3
    1b3a:	0f d0       	rcall	.+30     	; 0x1b5a <__ultoa_invert+0x86>
    1b3c:	c9 f7       	brne	.-14     	; 0x1b30 <__ultoa_invert+0x5c>
    1b3e:	f6 cf       	rjmp	.-20     	; 0x1b2c <__ultoa_invert+0x58>
    1b40:	46 2f       	mov	r20, r22
    1b42:	4f 70       	andi	r20, 0x0F	; 15
    1b44:	40 5d       	subi	r20, 0xD0	; 208
    1b46:	4a 33       	cpi	r20, 0x3A	; 58
    1b48:	18 f0       	brcs	.+6      	; 0x1b50 <__ultoa_invert+0x7c>
    1b4a:	49 5d       	subi	r20, 0xD9	; 217
    1b4c:	31 fd       	sbrc	r19, 1
    1b4e:	40 52       	subi	r20, 0x20	; 32
    1b50:	41 93       	st	Z+, r20
    1b52:	02 d0       	rcall	.+4      	; 0x1b58 <__ultoa_invert+0x84>
    1b54:	a9 f7       	brne	.-22     	; 0x1b40 <__ultoa_invert+0x6c>
    1b56:	ea cf       	rjmp	.-44     	; 0x1b2c <__ultoa_invert+0x58>
    1b58:	b4 e0       	ldi	r27, 0x04	; 4
    1b5a:	a6 95       	lsr	r26
    1b5c:	97 95       	ror	r25
    1b5e:	87 95       	ror	r24
    1b60:	77 95       	ror	r23
    1b62:	67 95       	ror	r22
    1b64:	ba 95       	dec	r27
    1b66:	c9 f7       	brne	.-14     	; 0x1b5a <__ultoa_invert+0x86>
    1b68:	00 97       	sbiw	r24, 0x00	; 0
    1b6a:	61 05       	cpc	r22, r1
    1b6c:	71 05       	cpc	r23, r1
    1b6e:	08 95       	ret
    1b70:	9b 01       	movw	r18, r22
    1b72:	ac 01       	movw	r20, r24
    1b74:	0a 2e       	mov	r0, r26
    1b76:	06 94       	lsr	r0
    1b78:	57 95       	ror	r21
    1b7a:	47 95       	ror	r20
    1b7c:	37 95       	ror	r19
    1b7e:	27 95       	ror	r18
    1b80:	ba 95       	dec	r27
    1b82:	c9 f7       	brne	.-14     	; 0x1b76 <__ultoa_invert+0xa2>
    1b84:	62 0f       	add	r22, r18
    1b86:	73 1f       	adc	r23, r19
    1b88:	84 1f       	adc	r24, r20
    1b8a:	95 1f       	adc	r25, r21
    1b8c:	a0 1d       	adc	r26, r0
    1b8e:	08 95       	ret
    1b90:	ce c0       	rjmp	.+412    	; 0x1d2e <__fp_nan>

00001b92 <__fp_rempio2>:
    1b92:	3f d0       	rcall	.+126    	; 0x1c12 <__fp_splitA>
    1b94:	e8 f3       	brcs	.-6      	; 0x1b90 <__ultoa_invert+0xbc>
    1b96:	e8 94       	clt
    1b98:	e0 e0       	ldi	r30, 0x00	; 0
    1b9a:	bb 27       	eor	r27, r27
    1b9c:	9f 57       	subi	r25, 0x7F	; 127
    1b9e:	f0 f0       	brcs	.+60     	; 0x1bdc <__fp_rempio2+0x4a>
    1ba0:	2a ed       	ldi	r18, 0xDA	; 218
    1ba2:	3f e0       	ldi	r19, 0x0F	; 15
    1ba4:	49 ec       	ldi	r20, 0xC9	; 201
    1ba6:	06 c0       	rjmp	.+12     	; 0x1bb4 <__fp_rempio2+0x22>
    1ba8:	ee 0f       	add	r30, r30
    1baa:	bb 0f       	add	r27, r27
    1bac:	66 1f       	adc	r22, r22
    1bae:	77 1f       	adc	r23, r23
    1bb0:	88 1f       	adc	r24, r24
    1bb2:	28 f0       	brcs	.+10     	; 0x1bbe <__fp_rempio2+0x2c>
    1bb4:	b2 3a       	cpi	r27, 0xA2	; 162
    1bb6:	62 07       	cpc	r22, r18
    1bb8:	73 07       	cpc	r23, r19
    1bba:	84 07       	cpc	r24, r20
    1bbc:	28 f0       	brcs	.+10     	; 0x1bc8 <__fp_rempio2+0x36>
    1bbe:	b2 5a       	subi	r27, 0xA2	; 162
    1bc0:	62 0b       	sbc	r22, r18
    1bc2:	73 0b       	sbc	r23, r19
    1bc4:	84 0b       	sbc	r24, r20
    1bc6:	e3 95       	inc	r30
    1bc8:	9a 95       	dec	r25
    1bca:	72 f7       	brpl	.-36     	; 0x1ba8 <__fp_rempio2+0x16>
    1bcc:	80 38       	cpi	r24, 0x80	; 128
    1bce:	30 f4       	brcc	.+12     	; 0x1bdc <__fp_rempio2+0x4a>
    1bd0:	9a 95       	dec	r25
    1bd2:	bb 0f       	add	r27, r27
    1bd4:	66 1f       	adc	r22, r22
    1bd6:	77 1f       	adc	r23, r23
    1bd8:	88 1f       	adc	r24, r24
    1bda:	d2 f7       	brpl	.-12     	; 0x1bd0 <__fp_rempio2+0x3e>
    1bdc:	90 48       	sbci	r25, 0x80	; 128
    1bde:	9b c0       	rjmp	.+310    	; 0x1d16 <__fp_mpack_finite>

00001be0 <__fp_sinus>:
    1be0:	ef 93       	push	r30
    1be2:	e0 ff       	sbrs	r30, 0
    1be4:	06 c0       	rjmp	.+12     	; 0x1bf2 <__fp_sinus+0x12>
    1be6:	a2 ea       	ldi	r26, 0xA2	; 162
    1be8:	2a ed       	ldi	r18, 0xDA	; 218
    1bea:	3f e0       	ldi	r19, 0x0F	; 15
    1bec:	49 ec       	ldi	r20, 0xC9	; 201
    1bee:	5f eb       	ldi	r21, 0xBF	; 191
    1bf0:	37 d0       	rcall	.+110    	; 0x1c60 <__addsf3x>
    1bf2:	bf d0       	rcall	.+382    	; 0x1d72 <__fp_round>
    1bf4:	0f 90       	pop	r0
    1bf6:	03 94       	inc	r0
    1bf8:	01 fc       	sbrc	r0, 1
    1bfa:	90 58       	subi	r25, 0x80	; 128
    1bfc:	ec e8       	ldi	r30, 0x8C	; 140
    1bfe:	f0 e0       	ldi	r31, 0x00	; 0
    1c00:	99 c0       	rjmp	.+306    	; 0x1d34 <__fp_powsodd>

00001c02 <__fp_split3>:
    1c02:	57 fd       	sbrc	r21, 7
    1c04:	90 58       	subi	r25, 0x80	; 128
    1c06:	44 0f       	add	r20, r20
    1c08:	55 1f       	adc	r21, r21
    1c0a:	59 f0       	breq	.+22     	; 0x1c22 <__fp_splitA+0x10>
    1c0c:	5f 3f       	cpi	r21, 0xFF	; 255
    1c0e:	71 f0       	breq	.+28     	; 0x1c2c <__fp_splitA+0x1a>
    1c10:	47 95       	ror	r20

00001c12 <__fp_splitA>:
    1c12:	88 0f       	add	r24, r24
    1c14:	97 fb       	bst	r25, 7
    1c16:	99 1f       	adc	r25, r25
    1c18:	61 f0       	breq	.+24     	; 0x1c32 <__fp_splitA+0x20>
    1c1a:	9f 3f       	cpi	r25, 0xFF	; 255
    1c1c:	79 f0       	breq	.+30     	; 0x1c3c <__fp_splitA+0x2a>
    1c1e:	87 95       	ror	r24
    1c20:	08 95       	ret
    1c22:	12 16       	cp	r1, r18
    1c24:	13 06       	cpc	r1, r19
    1c26:	14 06       	cpc	r1, r20
    1c28:	55 1f       	adc	r21, r21
    1c2a:	f2 cf       	rjmp	.-28     	; 0x1c10 <__fp_split3+0xe>
    1c2c:	46 95       	lsr	r20
    1c2e:	f1 df       	rcall	.-30     	; 0x1c12 <__fp_splitA>
    1c30:	08 c0       	rjmp	.+16     	; 0x1c42 <__fp_splitA+0x30>
    1c32:	16 16       	cp	r1, r22
    1c34:	17 06       	cpc	r1, r23
    1c36:	18 06       	cpc	r1, r24
    1c38:	99 1f       	adc	r25, r25
    1c3a:	f1 cf       	rjmp	.-30     	; 0x1c1e <__fp_splitA+0xc>
    1c3c:	86 95       	lsr	r24
    1c3e:	71 05       	cpc	r23, r1
    1c40:	61 05       	cpc	r22, r1
    1c42:	08 94       	sec
    1c44:	08 95       	ret
    1c46:	87 d0       	rcall	.+270    	; 0x1d56 <__fp_pscA>
    1c48:	30 f0       	brcs	.+12     	; 0x1c56 <__fp_splitA+0x44>
    1c4a:	8c d0       	rcall	.+280    	; 0x1d64 <__fp_pscB>
    1c4c:	20 f0       	brcs	.+8      	; 0x1c56 <__fp_splitA+0x44>
    1c4e:	31 f4       	brne	.+12     	; 0x1c5c <__fp_splitA+0x4a>
    1c50:	9f 3f       	cpi	r25, 0xFF	; 255
    1c52:	11 f4       	brne	.+4      	; 0x1c58 <__fp_splitA+0x46>
    1c54:	1e f4       	brtc	.+6      	; 0x1c5c <__fp_splitA+0x4a>
    1c56:	6b c0       	rjmp	.+214    	; 0x1d2e <__fp_nan>
    1c58:	0e f4       	brtc	.+2      	; 0x1c5c <__fp_splitA+0x4a>
    1c5a:	e0 95       	com	r30
    1c5c:	e7 fb       	bst	r30, 7
    1c5e:	53 c0       	rjmp	.+166    	; 0x1d06 <__fp_inf>

00001c60 <__addsf3x>:
    1c60:	e9 2f       	mov	r30, r25
    1c62:	cf df       	rcall	.-98     	; 0x1c02 <__fp_split3>
    1c64:	80 f3       	brcs	.-32     	; 0x1c46 <__fp_splitA+0x34>
    1c66:	ba 17       	cp	r27, r26
    1c68:	62 07       	cpc	r22, r18
    1c6a:	73 07       	cpc	r23, r19
    1c6c:	84 07       	cpc	r24, r20
    1c6e:	95 07       	cpc	r25, r21
    1c70:	18 f0       	brcs	.+6      	; 0x1c78 <__addsf3x+0x18>
    1c72:	71 f4       	brne	.+28     	; 0x1c90 <__addsf3x+0x30>
    1c74:	9e f5       	brtc	.+102    	; 0x1cdc <__addsf3x+0x7c>
    1c76:	8e c0       	rjmp	.+284    	; 0x1d94 <__fp_zero>
    1c78:	0e f4       	brtc	.+2      	; 0x1c7c <__addsf3x+0x1c>
    1c7a:	e0 95       	com	r30
    1c7c:	0b 2e       	mov	r0, r27
    1c7e:	ba 2f       	mov	r27, r26
    1c80:	a0 2d       	mov	r26, r0
    1c82:	0b 01       	movw	r0, r22
    1c84:	b9 01       	movw	r22, r18
    1c86:	90 01       	movw	r18, r0
    1c88:	0c 01       	movw	r0, r24
    1c8a:	ca 01       	movw	r24, r20
    1c8c:	a0 01       	movw	r20, r0
    1c8e:	11 24       	eor	r1, r1
    1c90:	ff 27       	eor	r31, r31
    1c92:	59 1b       	sub	r21, r25
    1c94:	99 f0       	breq	.+38     	; 0x1cbc <__addsf3x+0x5c>
    1c96:	59 3f       	cpi	r21, 0xF9	; 249
    1c98:	50 f4       	brcc	.+20     	; 0x1cae <__addsf3x+0x4e>
    1c9a:	50 3e       	cpi	r21, 0xE0	; 224
    1c9c:	68 f1       	brcs	.+90     	; 0x1cf8 <__addsf3x+0x98>
    1c9e:	1a 16       	cp	r1, r26
    1ca0:	f0 40       	sbci	r31, 0x00	; 0
    1ca2:	a2 2f       	mov	r26, r18
    1ca4:	23 2f       	mov	r18, r19
    1ca6:	34 2f       	mov	r19, r20
    1ca8:	44 27       	eor	r20, r20
    1caa:	58 5f       	subi	r21, 0xF8	; 248
    1cac:	f3 cf       	rjmp	.-26     	; 0x1c94 <__addsf3x+0x34>
    1cae:	46 95       	lsr	r20
    1cb0:	37 95       	ror	r19
    1cb2:	27 95       	ror	r18
    1cb4:	a7 95       	ror	r26
    1cb6:	f0 40       	sbci	r31, 0x00	; 0
    1cb8:	53 95       	inc	r21
    1cba:	c9 f7       	brne	.-14     	; 0x1cae <__addsf3x+0x4e>
    1cbc:	7e f4       	brtc	.+30     	; 0x1cdc <__addsf3x+0x7c>
    1cbe:	1f 16       	cp	r1, r31
    1cc0:	ba 0b       	sbc	r27, r26
    1cc2:	62 0b       	sbc	r22, r18
    1cc4:	73 0b       	sbc	r23, r19
    1cc6:	84 0b       	sbc	r24, r20
    1cc8:	ba f0       	brmi	.+46     	; 0x1cf8 <__addsf3x+0x98>
    1cca:	91 50       	subi	r25, 0x01	; 1
    1ccc:	a1 f0       	breq	.+40     	; 0x1cf6 <__addsf3x+0x96>
    1cce:	ff 0f       	add	r31, r31
    1cd0:	bb 1f       	adc	r27, r27
    1cd2:	66 1f       	adc	r22, r22
    1cd4:	77 1f       	adc	r23, r23
    1cd6:	88 1f       	adc	r24, r24
    1cd8:	c2 f7       	brpl	.-16     	; 0x1cca <__addsf3x+0x6a>
    1cda:	0e c0       	rjmp	.+28     	; 0x1cf8 <__addsf3x+0x98>
    1cdc:	ba 0f       	add	r27, r26
    1cde:	62 1f       	adc	r22, r18
    1ce0:	73 1f       	adc	r23, r19
    1ce2:	84 1f       	adc	r24, r20
    1ce4:	48 f4       	brcc	.+18     	; 0x1cf8 <__addsf3x+0x98>
    1ce6:	87 95       	ror	r24
    1ce8:	77 95       	ror	r23
    1cea:	67 95       	ror	r22
    1cec:	b7 95       	ror	r27
    1cee:	f7 95       	ror	r31
    1cf0:	9e 3f       	cpi	r25, 0xFE	; 254
    1cf2:	08 f0       	brcs	.+2      	; 0x1cf6 <__addsf3x+0x96>
    1cf4:	b3 cf       	rjmp	.-154    	; 0x1c5c <__fp_splitA+0x4a>
    1cf6:	93 95       	inc	r25
    1cf8:	88 0f       	add	r24, r24
    1cfa:	08 f0       	brcs	.+2      	; 0x1cfe <__addsf3x+0x9e>
    1cfc:	99 27       	eor	r25, r25
    1cfe:	ee 0f       	add	r30, r30
    1d00:	97 95       	ror	r25
    1d02:	87 95       	ror	r24
    1d04:	08 95       	ret

00001d06 <__fp_inf>:
    1d06:	97 f9       	bld	r25, 7
    1d08:	9f 67       	ori	r25, 0x7F	; 127
    1d0a:	80 e8       	ldi	r24, 0x80	; 128
    1d0c:	70 e0       	ldi	r23, 0x00	; 0
    1d0e:	60 e0       	ldi	r22, 0x00	; 0
    1d10:	08 95       	ret

00001d12 <__fp_mpack>:
    1d12:	9f 3f       	cpi	r25, 0xFF	; 255
    1d14:	31 f0       	breq	.+12     	; 0x1d22 <__fp_mpack_finite+0xc>

00001d16 <__fp_mpack_finite>:
    1d16:	91 50       	subi	r25, 0x01	; 1
    1d18:	20 f4       	brcc	.+8      	; 0x1d22 <__fp_mpack_finite+0xc>
    1d1a:	87 95       	ror	r24
    1d1c:	77 95       	ror	r23
    1d1e:	67 95       	ror	r22
    1d20:	b7 95       	ror	r27
    1d22:	88 0f       	add	r24, r24
    1d24:	91 1d       	adc	r25, r1
    1d26:	96 95       	lsr	r25
    1d28:	87 95       	ror	r24
    1d2a:	97 f9       	bld	r25, 7
    1d2c:	08 95       	ret

00001d2e <__fp_nan>:
    1d2e:	9f ef       	ldi	r25, 0xFF	; 255
    1d30:	80 ec       	ldi	r24, 0xC0	; 192
    1d32:	08 95       	ret

00001d34 <__fp_powsodd>:
    1d34:	9f 93       	push	r25
    1d36:	8f 93       	push	r24
    1d38:	7f 93       	push	r23
    1d3a:	6f 93       	push	r22
    1d3c:	ff 93       	push	r31
    1d3e:	ef 93       	push	r30
    1d40:	9b 01       	movw	r18, r22
    1d42:	ac 01       	movw	r20, r24
    1d44:	5e d8       	rcall	.-3908   	; 0xe02 <__mulsf3>
    1d46:	ef 91       	pop	r30
    1d48:	ff 91       	pop	r31
    1d4a:	2b d0       	rcall	.+86     	; 0x1da2 <__fp_powser>
    1d4c:	2f 91       	pop	r18
    1d4e:	3f 91       	pop	r19
    1d50:	4f 91       	pop	r20
    1d52:	5f 91       	pop	r21
    1d54:	56 c8       	rjmp	.-3924   	; 0xe02 <__mulsf3>

00001d56 <__fp_pscA>:
    1d56:	00 24       	eor	r0, r0
    1d58:	0a 94       	dec	r0
    1d5a:	16 16       	cp	r1, r22
    1d5c:	17 06       	cpc	r1, r23
    1d5e:	18 06       	cpc	r1, r24
    1d60:	09 06       	cpc	r0, r25
    1d62:	08 95       	ret

00001d64 <__fp_pscB>:
    1d64:	00 24       	eor	r0, r0
    1d66:	0a 94       	dec	r0
    1d68:	12 16       	cp	r1, r18
    1d6a:	13 06       	cpc	r1, r19
    1d6c:	14 06       	cpc	r1, r20
    1d6e:	05 06       	cpc	r0, r21
    1d70:	08 95       	ret

00001d72 <__fp_round>:
    1d72:	09 2e       	mov	r0, r25
    1d74:	03 94       	inc	r0
    1d76:	00 0c       	add	r0, r0
    1d78:	11 f4       	brne	.+4      	; 0x1d7e <__fp_round+0xc>
    1d7a:	88 23       	and	r24, r24
    1d7c:	52 f0       	brmi	.+20     	; 0x1d92 <__fp_round+0x20>
    1d7e:	bb 0f       	add	r27, r27
    1d80:	40 f4       	brcc	.+16     	; 0x1d92 <__fp_round+0x20>
    1d82:	bf 2b       	or	r27, r31
    1d84:	11 f4       	brne	.+4      	; 0x1d8a <__fp_round+0x18>
    1d86:	60 ff       	sbrs	r22, 0
    1d88:	04 c0       	rjmp	.+8      	; 0x1d92 <__fp_round+0x20>
    1d8a:	6f 5f       	subi	r22, 0xFF	; 255
    1d8c:	7f 4f       	sbci	r23, 0xFF	; 255
    1d8e:	8f 4f       	sbci	r24, 0xFF	; 255
    1d90:	9f 4f       	sbci	r25, 0xFF	; 255
    1d92:	08 95       	ret

00001d94 <__fp_zero>:
    1d94:	e8 94       	clt

00001d96 <__fp_szero>:
    1d96:	bb 27       	eor	r27, r27
    1d98:	66 27       	eor	r22, r22
    1d9a:	77 27       	eor	r23, r23
    1d9c:	cb 01       	movw	r24, r22
    1d9e:	97 f9       	bld	r25, 7
    1da0:	08 95       	ret

00001da2 <__fp_powser>:
    1da2:	df 93       	push	r29
    1da4:	cf 93       	push	r28
    1da6:	1f 93       	push	r17
    1da8:	0f 93       	push	r16
    1daa:	ff 92       	push	r15
    1dac:	ef 92       	push	r14
    1dae:	df 92       	push	r13
    1db0:	7b 01       	movw	r14, r22
    1db2:	8c 01       	movw	r16, r24
    1db4:	68 94       	set
    1db6:	05 c0       	rjmp	.+10     	; 0x1dc2 <__fp_powser+0x20>
    1db8:	da 2e       	mov	r13, r26
    1dba:	ef 01       	movw	r28, r30
    1dbc:	21 d0       	rcall	.+66     	; 0x1e00 <__mulsf3x>
    1dbe:	fe 01       	movw	r30, r28
    1dc0:	e8 94       	clt
    1dc2:	a5 91       	lpm	r26, Z+
    1dc4:	25 91       	lpm	r18, Z+
    1dc6:	35 91       	lpm	r19, Z+
    1dc8:	45 91       	lpm	r20, Z+
    1dca:	55 91       	lpm	r21, Z+
    1dcc:	ae f3       	brts	.-22     	; 0x1db8 <__fp_powser+0x16>
    1dce:	ef 01       	movw	r28, r30
    1dd0:	47 df       	rcall	.-370    	; 0x1c60 <__addsf3x>
    1dd2:	fe 01       	movw	r30, r28
    1dd4:	97 01       	movw	r18, r14
    1dd6:	a8 01       	movw	r20, r16
    1dd8:	da 94       	dec	r13
    1dda:	79 f7       	brne	.-34     	; 0x1dba <__fp_powser+0x18>
    1ddc:	df 90       	pop	r13
    1dde:	ef 90       	pop	r14
    1de0:	ff 90       	pop	r15
    1de2:	0f 91       	pop	r16
    1de4:	1f 91       	pop	r17
    1de6:	cf 91       	pop	r28
    1de8:	df 91       	pop	r29
    1dea:	08 95       	ret
    1dec:	b4 df       	rcall	.-152    	; 0x1d56 <__fp_pscA>
    1dee:	28 f0       	brcs	.+10     	; 0x1dfa <__fp_powser+0x58>
    1df0:	b9 df       	rcall	.-142    	; 0x1d64 <__fp_pscB>
    1df2:	18 f0       	brcs	.+6      	; 0x1dfa <__fp_powser+0x58>
    1df4:	95 23       	and	r25, r21
    1df6:	09 f0       	breq	.+2      	; 0x1dfa <__fp_powser+0x58>
    1df8:	86 cf       	rjmp	.-244    	; 0x1d06 <__fp_inf>
    1dfa:	99 cf       	rjmp	.-206    	; 0x1d2e <__fp_nan>
    1dfc:	11 24       	eor	r1, r1
    1dfe:	cb cf       	rjmp	.-106    	; 0x1d96 <__fp_szero>

00001e00 <__mulsf3x>:
    1e00:	00 df       	rcall	.-512    	; 0x1c02 <__fp_split3>
    1e02:	a0 f3       	brcs	.-24     	; 0x1dec <__fp_powser+0x4a>

00001e04 <__mulsf3_pse>:
    1e04:	95 9f       	mul	r25, r21
    1e06:	d1 f3       	breq	.-12     	; 0x1dfc <__fp_powser+0x5a>
    1e08:	95 0f       	add	r25, r21
    1e0a:	50 e0       	ldi	r21, 0x00	; 0
    1e0c:	55 1f       	adc	r21, r21
    1e0e:	62 9f       	mul	r22, r18
    1e10:	f0 01       	movw	r30, r0
    1e12:	72 9f       	mul	r23, r18
    1e14:	bb 27       	eor	r27, r27
    1e16:	f0 0d       	add	r31, r0
    1e18:	b1 1d       	adc	r27, r1
    1e1a:	63 9f       	mul	r22, r19
    1e1c:	aa 27       	eor	r26, r26
    1e1e:	f0 0d       	add	r31, r0
    1e20:	b1 1d       	adc	r27, r1
    1e22:	aa 1f       	adc	r26, r26
    1e24:	64 9f       	mul	r22, r20
    1e26:	66 27       	eor	r22, r22
    1e28:	b0 0d       	add	r27, r0
    1e2a:	a1 1d       	adc	r26, r1
    1e2c:	66 1f       	adc	r22, r22
    1e2e:	82 9f       	mul	r24, r18
    1e30:	22 27       	eor	r18, r18
    1e32:	b0 0d       	add	r27, r0
    1e34:	a1 1d       	adc	r26, r1
    1e36:	62 1f       	adc	r22, r18
    1e38:	73 9f       	mul	r23, r19
    1e3a:	b0 0d       	add	r27, r0
    1e3c:	a1 1d       	adc	r26, r1
    1e3e:	62 1f       	adc	r22, r18
    1e40:	83 9f       	mul	r24, r19
    1e42:	a0 0d       	add	r26, r0
    1e44:	61 1d       	adc	r22, r1
    1e46:	22 1f       	adc	r18, r18
    1e48:	74 9f       	mul	r23, r20
    1e4a:	33 27       	eor	r19, r19
    1e4c:	a0 0d       	add	r26, r0
    1e4e:	61 1d       	adc	r22, r1
    1e50:	23 1f       	adc	r18, r19
    1e52:	84 9f       	mul	r24, r20
    1e54:	60 0d       	add	r22, r0
    1e56:	21 1d       	adc	r18, r1
    1e58:	82 2f       	mov	r24, r18
    1e5a:	76 2f       	mov	r23, r22
    1e5c:	6a 2f       	mov	r22, r26
    1e5e:	11 24       	eor	r1, r1
    1e60:	9f 57       	subi	r25, 0x7F	; 127
    1e62:	50 40       	sbci	r21, 0x00	; 0
    1e64:	8a f0       	brmi	.+34     	; 0x1e88 <__mulsf3_pse+0x84>
    1e66:	e1 f0       	breq	.+56     	; 0x1ea0 <__mulsf3_pse+0x9c>
    1e68:	88 23       	and	r24, r24
    1e6a:	4a f0       	brmi	.+18     	; 0x1e7e <__mulsf3_pse+0x7a>
    1e6c:	ee 0f       	add	r30, r30
    1e6e:	ff 1f       	adc	r31, r31
    1e70:	bb 1f       	adc	r27, r27
    1e72:	66 1f       	adc	r22, r22
    1e74:	77 1f       	adc	r23, r23
    1e76:	88 1f       	adc	r24, r24
    1e78:	91 50       	subi	r25, 0x01	; 1
    1e7a:	50 40       	sbci	r21, 0x00	; 0
    1e7c:	a9 f7       	brne	.-22     	; 0x1e68 <__mulsf3_pse+0x64>
    1e7e:	9e 3f       	cpi	r25, 0xFE	; 254
    1e80:	51 05       	cpc	r21, r1
    1e82:	70 f0       	brcs	.+28     	; 0x1ea0 <__mulsf3_pse+0x9c>
    1e84:	40 cf       	rjmp	.-384    	; 0x1d06 <__fp_inf>
    1e86:	87 cf       	rjmp	.-242    	; 0x1d96 <__fp_szero>
    1e88:	5f 3f       	cpi	r21, 0xFF	; 255
    1e8a:	ec f3       	brlt	.-6      	; 0x1e86 <__mulsf3_pse+0x82>
    1e8c:	98 3e       	cpi	r25, 0xE8	; 232
    1e8e:	dc f3       	brlt	.-10     	; 0x1e86 <__mulsf3_pse+0x82>
    1e90:	86 95       	lsr	r24
    1e92:	77 95       	ror	r23
    1e94:	67 95       	ror	r22
    1e96:	b7 95       	ror	r27
    1e98:	f7 95       	ror	r31
    1e9a:	e7 95       	ror	r30
    1e9c:	9f 5f       	subi	r25, 0xFF	; 255
    1e9e:	c1 f7       	brne	.-16     	; 0x1e90 <__mulsf3_pse+0x8c>
    1ea0:	fe 2b       	or	r31, r30
    1ea2:	88 0f       	add	r24, r24
    1ea4:	91 1d       	adc	r25, r1
    1ea6:	96 95       	lsr	r25
    1ea8:	87 95       	ror	r24
    1eaa:	97 f9       	bld	r25, 7
    1eac:	08 95       	ret

00001eae <_exit>:
    1eae:	f8 94       	cli

00001eb0 <__stop_program>:
    1eb0:	ff cf       	rjmp	.-2      	; 0x1eb0 <__stop_program>
