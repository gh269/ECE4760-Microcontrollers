
Lab2_DTMF.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000bc  00800100  00001ed2  00001f66  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001ed2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000002a7  008001bc  008001bc  00002022  2**0
                  ALLOC
  3 .stab         000022a4  00000000  00000000  00002024  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000008d1  00000000  00000000  000042c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000002f  00000000  00000000  00004b99  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 00000238  00000000  00000000  00004bc8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00003559  00000000  00000000  00004e00  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000019d0  00000000  00000000  00008359  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000140e  00000000  00000000  00009d29  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000564  00000000  00000000  0000b138  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000894  00000000  00000000  0000b69c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00001b53  00000000  00000000  0000bf30  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 000000a0  00000000  00000000  0000da83  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 55 00 	jmp	0xaa	; 0xaa <__ctors_end>
       4:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
       8:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
       c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      10:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      14:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      18:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      1c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      20:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      24:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      28:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      2c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      30:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      34:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      38:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      3c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      40:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      44:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      48:	0c 94 46 03 	jmp	0x68c	; 0x68c <__vector_18>
      4c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      50:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      54:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      58:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      5c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      60:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      64:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      68:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      6c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      70:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      74:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      78:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      7c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      80:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      84:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      88:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      8c:	05 a8       	ldd	r0, Z+53	; 0x35
      8e:	4c cd       	rjmp	.-1384   	; 0xfffffb28 <__eeprom_end+0xff7efb28>
      90:	b2 d4       	rcall	.+2404   	; 0x9f6 <stop_playing+0x1a>
      92:	4e b9       	out	0x0e, r20	; 14
      94:	38 36       	cpi	r19, 0x68	; 104
      96:	a9 02       	muls	r26, r25
      98:	0c 50       	subi	r16, 0x0C	; 12
      9a:	b9 91       	ld	r27, Y+
      9c:	86 88       	ldd	r8, Z+22	; 0x16
      9e:	08 3c       	cpi	r16, 0xC8	; 200
      a0:	a6 aa       	std	Z+54, r10	; 0x36
      a2:	aa 2a       	or	r10, r26
      a4:	be 00       	.word	0x00be	; ????
      a6:	00 00       	nop
      a8:	80 3f       	cpi	r24, 0xF0	; 240

000000aa <__ctors_end>:
      aa:	11 24       	eor	r1, r1
      ac:	1f be       	out	0x3f, r1	; 63
      ae:	cf ef       	ldi	r28, 0xFF	; 255
      b0:	d0 e4       	ldi	r29, 0x40	; 64
      b2:	de bf       	out	0x3e, r29	; 62
      b4:	cd bf       	out	0x3d, r28	; 61

000000b6 <__do_copy_data>:
      b6:	11 e0       	ldi	r17, 0x01	; 1
      b8:	a0 e0       	ldi	r26, 0x00	; 0
      ba:	b1 e0       	ldi	r27, 0x01	; 1
      bc:	e2 ed       	ldi	r30, 0xD2	; 210
      be:	fe e1       	ldi	r31, 0x1E	; 30
      c0:	00 e0       	ldi	r16, 0x00	; 0
      c2:	0b bf       	out	0x3b, r16	; 59
      c4:	02 c0       	rjmp	.+4      	; 0xca <__do_copy_data+0x14>
      c6:	07 90       	elpm	r0, Z+
      c8:	0d 92       	st	X+, r0
      ca:	ac 3b       	cpi	r26, 0xBC	; 188
      cc:	b1 07       	cpc	r27, r17
      ce:	d9 f7       	brne	.-10     	; 0xc6 <__do_copy_data+0x10>

000000d0 <__do_clear_bss>:
      d0:	24 e0       	ldi	r18, 0x04	; 4
      d2:	ac eb       	ldi	r26, 0xBC	; 188
      d4:	b1 e0       	ldi	r27, 0x01	; 1
      d6:	01 c0       	rjmp	.+2      	; 0xda <.do_clear_bss_start>

000000d8 <.do_clear_bss_loop>:
      d8:	1d 92       	st	X+, r1

000000da <.do_clear_bss_start>:
      da:	a3 36       	cpi	r26, 0x63	; 99
      dc:	b2 07       	cpc	r27, r18
      de:	e1 f7       	brne	.-8      	; 0xd8 <.do_clear_bss_loop>
      e0:	0e 94 7b 0a 	call	0x14f6	; 0x14f6 <main>
      e4:	0c 94 67 0f 	jmp	0x1ece	; 0x1ece <_exit>

000000e8 <__bad_interrupt>:
      e8:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ec <task1>:
// putchar and getchar are in uart.c
FILE uart_str = FDEV_SETUP_STREAM(uart_putchar, uart_getchar, _FDEV_SETUP_RW);

//******************************* 
//Task 1  
void task1(void) {
      ec:	ef 92       	push	r14
      ee:	ff 92       	push	r15
      f0:	0f 93       	push	r16
      f2:	1f 93       	push	r17
      f4:	cf 93       	push	r28
      f6:	df 93       	push	r29
	time1=0;  //reset the task timer
      f8:	10 92 2c 02 	sts	0x022C, r1
      fc:	10 92 2b 02 	sts	0x022B, r1

	//get lower nibble
	PORTDIR = 0x0f;
     100:	8f e0       	ldi	r24, 0x0F	; 15
     102:	81 b9       	out	0x01, r24	; 1
	PORTDATA = 0xf0; 
     104:	90 ef       	ldi	r25, 0xF0	; 240
     106:	92 b9       	out	0x02, r25	; 2
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     108:	2a e1       	ldi	r18, 0x1A	; 26
     10a:	2a 95       	dec	r18
     10c:	f1 f7       	brne	.-4      	; 0x10a <task1+0x1e>
     10e:	00 c0       	rjmp	.+0      	; 0x110 <task1+0x24>
	_delay_us(5);
	key = PORTIN;
     110:	20 b1       	in	r18, 0x00	; 0
     112:	20 93 2f 02 	sts	0x022F, r18
  
	//get upper nibble
	PORTDIR = 0xf0;
     116:	91 b9       	out	0x01, r25	; 1
	PORTDATA = 0x0f; 
     118:	82 b9       	out	0x02, r24	; 2
     11a:	8a e1       	ldi	r24, 0x1A	; 26
     11c:	8a 95       	dec	r24
     11e:	f1 f7       	brne	.-4      	; 0x11c <task1+0x30>
     120:	00 c0       	rjmp	.+0      	; 0x122 <task1+0x36>
	_delay_us(5);
	key = key | PORTIN;
     122:	90 b1       	in	r25, 0x00	; 0
     124:	80 91 2f 02 	lds	r24, 0x022F
     128:	98 2b       	or	r25, r24
     12a:	90 93 2f 02 	sts	0x022F, r25
  
	//find matching keycode in keytbl
	if (key != 0xff) {
     12e:	9f 3f       	cpi	r25, 0xFF	; 255
     130:	a9 f0       	breq	.+42     	; 0x15c <task1+0x70>
	  for (butnum=0; butnum<maxkeys; butnum++) {   
     132:	80 e0       	ldi	r24, 0x00	; 0
     134:	0a c0       	rjmp	.+20     	; 0x14a <task1+0x5e>
     136:	28 2f       	mov	r18, r24
     138:	2f 5f       	subi	r18, 0xFF	; 255
	  	if (keytbl[butnum]==key)  break;   
     13a:	e8 2f       	mov	r30, r24
     13c:	f0 e0       	ldi	r31, 0x00	; 0
     13e:	e2 5c       	subi	r30, 0xC2	; 194
     140:	fe 4f       	sbci	r31, 0xFE	; 254
     142:	30 81       	ld	r19, Z
     144:	39 17       	cp	r19, r25
     146:	31 f0       	breq	.+12     	; 0x154 <task1+0x68>
     148:	82 2f       	mov	r24, r18
	_delay_us(5);
	key = key | PORTIN;
  
	//find matching keycode in keytbl
	if (key != 0xff) {
	  for (butnum=0; butnum<maxkeys; butnum++) {   
     14a:	8c 30       	cpi	r24, 0x0C	; 12
     14c:	a0 f3       	brcs	.-24     	; 0x136 <task1+0x4a>
	  	if (keytbl[butnum]==key)  break;   
	  }

	  if (butnum==maxkeys) butnum=0;
     14e:	8c 30       	cpi	r24, 0x0C	; 12
     150:	09 f4       	brne	.+2      	; 0x154 <task1+0x68>
     152:	04 c0       	rjmp	.+8      	; 0x15c <task1+0x70>
	  else butnum++;	   //adjust by one to make range 1-16
     154:	8f 5f       	subi	r24, 0xFF	; 255
     156:	80 93 27 02 	sts	0x0227, r24
     15a:	02 c0       	rjmp	.+4      	; 0x160 <task1+0x74>
	}
	else butnum=0;
     15c:	10 92 27 02 	sts	0x0227, r1
	
	// Switching in the finite state machine.
	switch (PushState) {
     160:	80 91 33 02 	lds	r24, 0x0233
     164:	82 30       	cpi	r24, 0x02	; 2
     166:	91 f0       	breq	.+36     	; 0x18c <task1+0xa0>
     168:	20 f4       	brcc	.+8      	; 0x172 <task1+0x86>
     16a:	81 30       	cpi	r24, 0x01	; 1
     16c:	09 f0       	breq	.+2      	; 0x170 <task1+0x84>
     16e:	60 c0       	rjmp	.+192    	; 0x230 <task1+0x144>
     170:	06 c0       	rjmp	.+12     	; 0x17e <task1+0x92>
     172:	83 30       	cpi	r24, 0x03	; 3
     174:	d1 f0       	breq	.+52     	; 0x1aa <task1+0xbe>
     176:	84 30       	cpi	r24, 0x04	; 4
     178:	09 f0       	breq	.+2      	; 0x17c <task1+0x90>
     17a:	5a c0       	rjmp	.+180    	; 0x230 <task1+0x144>
     17c:	4c c0       	rjmp	.+152    	; 0x216 <task1+0x12a>
     case NoPush: 
        if (butnum != 0) {
     17e:	80 91 27 02 	lds	r24, 0x0227
     182:	88 23       	and	r24, r24
     184:	09 f4       	brne	.+2      	; 0x188 <task1+0x9c>
     186:	54 c0       	rjmp	.+168    	; 0x230 <task1+0x144>
			PushState=MaybePush;
     188:	82 e0       	ldi	r24, 0x02	; 2
     18a:	4a c0       	rjmp	.+148    	; 0x220 <task1+0x134>
		}
        else PushState=NoPush;
        break;
     case MaybePush:
        if (butnum != 0) {
     18c:	80 91 27 02 	lds	r24, 0x0227
     190:	88 23       	and	r24, r24
     192:	49 f0       	breq	.+18     	; 0x1a6 <task1+0xba>
           	PushState=Pushed; 
     194:	83 e0       	ldi	r24, 0x03	; 3
     196:	80 93 33 02 	sts	0x0233, r24
			PushFlag=1;
     19a:	81 e0       	ldi	r24, 0x01	; 1
     19c:	80 93 28 02 	sts	0x0228, r24
			//Test mode override
			if (~PINB & 0x01) {
     1a0:	18 99       	sbic	0x03, 0	; 3
     1a2:	46 c0       	rjmp	.+140    	; 0x230 <task1+0x144>
     1a4:	43 c0       	rjmp	.+134    	; 0x22c <task1+0x140>
				//fprintf(stdout, "PINB is pressed.\n\r");
		 		PushFlag=0;			
		   	}  
        }
        else PushState=NoPush;
     1a6:	81 e0       	ldi	r24, 0x01	; 1
     1a8:	3b c0       	rjmp	.+118    	; 0x220 <task1+0x134>
        break;
     case Pushed:  
        if (butnum != 0) {
     1aa:	80 91 27 02 	lds	r24, 0x0227
     1ae:	88 23       	and	r24, r24
     1b0:	81 f1       	breq	.+96     	; 0x212 <task1+0x126>
			PushState=Pushed;
			//Test mode override
			if (~PINB & 0x01) {
     1b2:	18 99       	sbic	0x03, 0	; 3
     1b4:	3d c0       	rjmp	.+122    	; 0x230 <task1+0x144>
		 		switch (butnum) {
     1b6:	84 30       	cpi	r24, 0x04	; 4
     1b8:	c1 f0       	breq	.+48     	; 0x1ea <task1+0xfe>
     1ba:	30 f4       	brcc	.+12     	; 0x1c8 <task1+0xdc>
     1bc:	82 30       	cpi	r24, 0x02	; 2
     1be:	69 f0       	breq	.+26     	; 0x1da <task1+0xee>
     1c0:	88 f4       	brcc	.+34     	; 0x1e4 <task1+0xf8>
     1c2:	81 30       	cpi	r24, 0x01	; 1
     1c4:	a9 f5       	brne	.+106    	; 0x230 <task1+0x144>
     1c6:	06 c0       	rjmp	.+12     	; 0x1d4 <task1+0xe8>
     1c8:	86 30       	cpi	r24, 0x06	; 6
     1ca:	b9 f0       	breq	.+46     	; 0x1fa <task1+0x10e>
     1cc:	88 f0       	brcs	.+34     	; 0x1f0 <task1+0x104>
     1ce:	87 30       	cpi	r24, 0x07	; 7
     1d0:	79 f5       	brne	.+94     	; 0x230 <task1+0x144>
     1d2:	18 c0       	rjmp	.+48     	; 0x204 <task1+0x118>
					case 1: 
						play(0, 697);
     1d4:	69 eb       	ldi	r22, 0xB9	; 185
     1d6:	72 e0       	ldi	r23, 0x02	; 2
     1d8:	02 c0       	rjmp	.+4      	; 0x1de <task1+0xf2>
						break;
					case 2: 
						play(0, 770);
     1da:	62 e0       	ldi	r22, 0x02	; 2
     1dc:	73 e0       	ldi	r23, 0x03	; 3
     1de:	80 e0       	ldi	r24, 0x00	; 0
     1e0:	90 e0       	ldi	r25, 0x00	; 0
     1e2:	14 c0       	rjmp	.+40     	; 0x20c <task1+0x120>
						break;
					case 3: 
						play(0, 852);
     1e4:	64 e5       	ldi	r22, 0x54	; 84
     1e6:	73 e0       	ldi	r23, 0x03	; 3
     1e8:	fa cf       	rjmp	.-12     	; 0x1de <task1+0xf2>
						break;
					case 4: 
						play(0, 941);
     1ea:	6d ea       	ldi	r22, 0xAD	; 173
     1ec:	73 e0       	ldi	r23, 0x03	; 3
     1ee:	f7 cf       	rjmp	.-18     	; 0x1de <task1+0xf2>
						break;
					case 5:
						play(1209, 0);
     1f0:	60 e0       	ldi	r22, 0x00	; 0
     1f2:	70 e0       	ldi	r23, 0x00	; 0
     1f4:	89 eb       	ldi	r24, 0xB9	; 185
     1f6:	94 e0       	ldi	r25, 0x04	; 4
     1f8:	09 c0       	rjmp	.+18     	; 0x20c <task1+0x120>
						break;
					case 6:
						play(1336, 0);
     1fa:	60 e0       	ldi	r22, 0x00	; 0
     1fc:	70 e0       	ldi	r23, 0x00	; 0
     1fe:	88 e3       	ldi	r24, 0x38	; 56
     200:	95 e0       	ldi	r25, 0x05	; 5
     202:	04 c0       	rjmp	.+8      	; 0x20c <task1+0x120>
						break;
					case 7: 
						play(1477, 0);
     204:	60 e0       	ldi	r22, 0x00	; 0
     206:	70 e0       	ldi	r23, 0x00	; 0
     208:	85 ec       	ldi	r24, 0xC5	; 197
     20a:	95 e0       	ldi	r25, 0x05	; 5
     20c:	0e 94 5f 04 	call	0x8be	; 0x8be <play>
						break;
     210:	0f c0       	rjmp	.+30     	; 0x230 <task1+0x144>
					default:
						break;
				}	
		   	}  
		}
        else PushState=MaybeNoPush;    
     212:	84 e0       	ldi	r24, 0x04	; 4
     214:	05 c0       	rjmp	.+10     	; 0x220 <task1+0x134>
        break;
     case MaybeNoPush:
        if (butnum != 0) PushState=Pushed; 
     216:	80 91 27 02 	lds	r24, 0x0227
     21a:	88 23       	and	r24, r24
     21c:	21 f0       	breq	.+8      	; 0x226 <task1+0x13a>
     21e:	83 e0       	ldi	r24, 0x03	; 3
     220:	80 93 33 02 	sts	0x0233, r24
     224:	05 c0       	rjmp	.+10     	; 0x230 <task1+0x144>
        else {
           PushState=NoPush;
     226:	81 e0       	ldi	r24, 0x01	; 1
     228:	80 93 33 02 	sts	0x0233, r24
           PushFlag=0;
     22c:	10 92 28 02 	sts	0x0228, r1
        }    
        break;
  	}

	if (PushState == NoPush) {
     230:	80 91 33 02 	lds	r24, 0x0233
     234:	81 30       	cpi	r24, 0x01	; 1
     236:	11 f4       	brne	.+4      	; 0x23c <task1+0x150>
		//fprintf(stdout, "Depressed...\n\r");
		stop_playing();
     238:	0e 94 ee 04 	call	0x9dc	; 0x9dc <stop_playing>
	}	

	if (PushFlag) {
     23c:	80 91 28 02 	lds	r24, 0x0228
     240:	88 23       	and	r24, r24
     242:	09 f4       	brne	.+2      	; 0x246 <task1+0x15a>
     244:	0e c1       	rjmp	.+540    	; 0x462 <task1+0x376>
		PushFlag = 0;
     246:	10 92 28 02 	sts	0x0228, r1
		// The * button was pressed. Clear all memory.
		if (butnum == 10) {
     24a:	80 91 27 02 	lds	r24, 0x0227
     24e:	8a 30       	cpi	r24, 0x0A	; 10
     250:	09 f5       	brne	.+66     	; 0x294 <task1+0x1a8>
			fprintf(stdout, "%u\n\r", butnum);
     252:	1f 92       	push	r1
     254:	8f 93       	push	r24
     256:	8b e5       	ldi	r24, 0x5B	; 91
     258:	91 e0       	ldi	r25, 0x01	; 1
     25a:	9f 93       	push	r25
     25c:	8f 93       	push	r24
     25e:	80 91 60 04 	lds	r24, 0x0460
     262:	8f 93       	push	r24
     264:	80 91 5f 04 	lds	r24, 0x045F
     268:	8f 93       	push	r24
     26a:	0e 94 f2 0a 	call	0x15e4	; 0x15e4 <fprintf>
     26e:	ec eb       	ldi	r30, 0xBC	; 188
     270:	f1 e0       	ldi	r31, 0x01	; 1
// putchar and getchar are in uart.c
FILE uart_str = FDEV_SETUP_STREAM(uart_putchar, uart_getchar, _FDEV_SETUP_RW);

//******************************* 
//Task 1  
void task1(void) {
     272:	0f 90       	pop	r0
     274:	0f 90       	pop	r0
     276:	0f 90       	pop	r0
     278:	0f 90       	pop	r0
     27a:	0f 90       	pop	r0
     27c:	0f 90       	pop	r0
		PushFlag = 0;
		// The * button was pressed. Clear all memory.
		if (butnum == 10) {
			fprintf(stdout, "%u\n\r", butnum);
			for (int i = 0; i < 12; i++) {
				mem[i] = 0;
     27e:	11 92       	st	Z+, r1
     280:	11 92       	st	Z+, r1
	if (PushFlag) {
		PushFlag = 0;
		// The * button was pressed. Clear all memory.
		if (butnum == 10) {
			fprintf(stdout, "%u\n\r", butnum);
			for (int i = 0; i < 12; i++) {
     282:	21 e0       	ldi	r18, 0x01	; 1
     284:	e4 3d       	cpi	r30, 0xD4	; 212
     286:	f2 07       	cpc	r31, r18
     288:	d1 f7       	brne	.-12     	; 0x27e <task1+0x192>
				mem[i] = 0;
			}
			mem_index = 0;
     28a:	10 92 31 02 	sts	0x0231, r1
     28e:	10 92 30 02 	sts	0x0230, r1
     292:	e7 c0       	rjmp	.+462    	; 0x462 <task1+0x376>
		}
		// The # button was pressed. Play all sounds in memory.
		else if (butnum == 12) {
     294:	8c 30       	cpi	r24, 0x0C	; 12
     296:	09 f0       	breq	.+2      	; 0x29a <task1+0x1ae>
     298:	a2 c0       	rjmp	.+324    	; 0x3de <task1+0x2f2>
			fprintf(stdout, "%u\n\r", butnum);
     29a:	1f 92       	push	r1
     29c:	8f 93       	push	r24
     29e:	8b e5       	ldi	r24, 0x5B	; 91
     2a0:	91 e0       	ldi	r25, 0x01	; 1
     2a2:	9f 93       	push	r25
     2a4:	8f 93       	push	r24
     2a6:	80 91 60 04 	lds	r24, 0x0460
     2aa:	8f 93       	push	r24
     2ac:	80 91 5f 04 	lds	r24, 0x045F
     2b0:	8f 93       	push	r24
     2b2:	0e 94 f2 0a 	call	0x15e4	; 0x15e4 <fprintf>
			int i = 0;
			is_playing = FALSE;
     2b6:	10 92 34 02 	sts	0x0234, r1
     2ba:	0f 90       	pop	r0
     2bc:	0f 90       	pop	r0
     2be:	0f 90       	pop	r0
     2c0:	0f 90       	pop	r0
     2c2:	0f 90       	pop	r0
     2c4:	0f 90       	pop	r0
			char silence;
			silence = FALSE;
     2c6:	e1 2c       	mov	r14, r1
			mem_index = 0;
		}
		// The # button was pressed. Play all sounds in memory.
		else if (butnum == 12) {
			fprintf(stdout, "%u\n\r", butnum);
			int i = 0;
     2c8:	c0 e0       	ldi	r28, 0x00	; 0
     2ca:	d0 e0       	ldi	r29, 0x00	; 0
			char silence;
			silence = FALSE;

			
			while( i < 12 ){
				fprintf(stdout, "Int: %u\n\r", i);
     2cc:	06 e5       	ldi	r16, 0x56	; 86
     2ce:	11 e0       	ldi	r17, 0x01	; 1
					is_timed_playing = TRUE;
					fprintf(stdout, "Playing sound\n\r");
				}
				if(silence == TRUE && !is_playing) {
					timed_play(0, 0, 30);
					is_timed_playing = TRUE;
     2d0:	ff 24       	eor	r15, r15
     2d2:	f3 94       	inc	r15
			char silence;
			silence = FALSE;

			
			while( i < 12 ){
				fprintf(stdout, "Int: %u\n\r", i);
     2d4:	df 93       	push	r29
     2d6:	cf 93       	push	r28
     2d8:	1f 93       	push	r17
     2da:	0f 93       	push	r16
     2dc:	80 91 60 04 	lds	r24, 0x0460
     2e0:	8f 93       	push	r24
     2e2:	80 91 5f 04 	lds	r24, 0x045F
     2e6:	8f 93       	push	r24
     2e8:	0e 94 f2 0a 	call	0x15e4	; 0x15e4 <fprintf>
				if(silence == FALSE && !is_playing){
     2ec:	0f 90       	pop	r0
     2ee:	0f 90       	pop	r0
     2f0:	0f 90       	pop	r0
     2f2:	0f 90       	pop	r0
     2f4:	0f 90       	pop	r0
     2f6:	0f 90       	pop	r0
     2f8:	80 91 34 02 	lds	r24, 0x0234
     2fc:	e1 10       	cpse	r14, r1
     2fe:	ae c0       	rjmp	.+348    	; 0x45c <task1+0x370>
     300:	81 11       	cpse	r24, r1
     302:	32 c0       	rjmp	.+100    	; 0x368 <task1+0x27c>
					timed_play(high_freq[mem[i]], low_freq[mem[i]], 1000);
     304:	fe 01       	movw	r30, r28
     306:	ee 0f       	add	r30, r30
     308:	ff 1f       	adc	r31, r31
     30a:	e4 54       	subi	r30, 0x44	; 68
     30c:	fe 4f       	sbci	r31, 0xFE	; 254
     30e:	80 81       	ld	r24, Z
     310:	91 81       	ldd	r25, Z+1	; 0x01
     312:	88 0f       	add	r24, r24
     314:	99 1f       	adc	r25, r25
     316:	fc 01       	movw	r30, r24
     318:	e2 5f       	subi	r30, 0xF2	; 242
     31a:	fe 4f       	sbci	r31, 0xFE	; 254
     31c:	60 81       	ld	r22, Z
     31e:	71 81       	ldd	r23, Z+1	; 0x01
     320:	fc 01       	movw	r30, r24
     322:	ea 5d       	subi	r30, 0xDA	; 218
     324:	fe 4f       	sbci	r31, 0xFE	; 254
     326:	48 ee       	ldi	r20, 0xE8	; 232
     328:	53 e0       	ldi	r21, 0x03	; 3
     32a:	80 81       	ld	r24, Z
     32c:	91 81       	ldd	r25, Z+1	; 0x01
     32e:	0e 94 e4 04 	call	0x9c8	; 0x9c8 <timed_play>
					is_timed_playing = TRUE;
     332:	f0 92 26 02 	sts	0x0226, r15
					fprintf(stdout, "Playing sound\n\r");
     336:	60 91 5f 04 	lds	r22, 0x045F
     33a:	70 91 60 04 	lds	r23, 0x0460
     33e:	80 e6       	ldi	r24, 0x60	; 96
     340:	91 e0       	ldi	r25, 0x01	; 1
     342:	10 c0       	rjmp	.+32     	; 0x364 <task1+0x278>
				}
				if(silence == TRUE && !is_playing) {
					timed_play(0, 0, 30);
     344:	4e e1       	ldi	r20, 0x1E	; 30
     346:	50 e0       	ldi	r21, 0x00	; 0
     348:	60 e0       	ldi	r22, 0x00	; 0
     34a:	70 e0       	ldi	r23, 0x00	; 0
     34c:	80 e0       	ldi	r24, 0x00	; 0
     34e:	90 e0       	ldi	r25, 0x00	; 0
     350:	0e 94 e4 04 	call	0x9c8	; 0x9c8 <timed_play>
					is_timed_playing = TRUE;
     354:	f0 92 26 02 	sts	0x0226, r15
					fprintf(stdout, "Playing silence\n\r");
     358:	60 91 5f 04 	lds	r22, 0x045F
     35c:	70 91 60 04 	lds	r23, 0x0460
     360:	80 e7       	ldi	r24, 0x70	; 112
     362:	91 e0       	ldi	r25, 0x01	; 1
     364:	0e 94 02 0b 	call	0x1604	; 0x1604 <fputs>
				}
				if(is_playing && dds_duration <= 0 && !silence){
     368:	80 91 34 02 	lds	r24, 0x0234
     36c:	88 23       	and	r24, r24
     36e:	b9 f0       	breq	.+46     	; 0x39e <task1+0x2b2>
     370:	80 91 29 02 	lds	r24, 0x0229
     374:	90 91 2a 02 	lds	r25, 0x022A
     378:	18 16       	cp	r1, r24
     37a:	19 06       	cpc	r1, r25
     37c:	84 f0       	brlt	.+32     	; 0x39e <task1+0x2b2>
     37e:	e1 10       	cpse	r14, r1
     380:	0c c0       	rjmp	.+24     	; 0x39a <task1+0x2ae>
					fprintf(stdout, "Playing timeout\n\r");
     382:	60 91 5f 04 	lds	r22, 0x045F
     386:	70 91 60 04 	lds	r23, 0x0460
     38a:	82 e8       	ldi	r24, 0x82	; 130
     38c:	91 e0       	ldi	r25, 0x01	; 1
     38e:	0e 94 02 0b 	call	0x1604	; 0x1604 <fputs>
					is_timed_playing = FALSE;
     392:	10 92 26 02 	sts	0x0226, r1
					silence = TRUE;
					is_playing = FALSE;
     396:	10 92 34 02 	sts	0x0234, r1
				if(silence == TRUE && !is_playing) {
					timed_play(0, 0, 30);
					is_timed_playing = TRUE;
					fprintf(stdout, "Playing silence\n\r");
				}
				if(is_playing && dds_duration <= 0 && !silence){
     39a:	ee 24       	eor	r14, r14
     39c:	e3 94       	inc	r14
					fprintf(stdout, "Playing timeout\n\r");
					is_timed_playing = FALSE;
					silence = TRUE;
					is_playing = FALSE;
				}
				if(is_playing && dds_duration <= 0 && silence){
     39e:	80 91 34 02 	lds	r24, 0x0234
     3a2:	88 23       	and	r24, r24
     3a4:	b9 f0       	breq	.+46     	; 0x3d4 <task1+0x2e8>
     3a6:	80 91 29 02 	lds	r24, 0x0229
     3aa:	90 91 2a 02 	lds	r25, 0x022A
     3ae:	18 16       	cp	r1, r24
     3b0:	19 06       	cpc	r1, r25
     3b2:	84 f0       	brlt	.+32     	; 0x3d4 <task1+0x2e8>
     3b4:	ee 20       	and	r14, r14
     3b6:	71 f0       	breq	.+28     	; 0x3d4 <task1+0x2e8>
					fprintf(stdout, "Silence timeout\n\r");
     3b8:	60 91 5f 04 	lds	r22, 0x045F
     3bc:	70 91 60 04 	lds	r23, 0x0460
     3c0:	84 e9       	ldi	r24, 0x94	; 148
     3c2:	91 e0       	ldi	r25, 0x01	; 1
     3c4:	0e 94 02 0b 	call	0x1604	; 0x1604 <fputs>
					is_timed_playing = FALSE;
     3c8:	10 92 26 02 	sts	0x0226, r1
					i++;
     3cc:	21 96       	adiw	r28, 0x01	; 1
					silence = FALSE;
					is_playing = FALSE;
     3ce:	10 92 34 02 	sts	0x0234, r1
				}
				if(is_playing && dds_duration <= 0 && silence){
					fprintf(stdout, "Silence timeout\n\r");
					is_timed_playing = FALSE;
					i++;
					silence = FALSE;
     3d2:	e1 2c       	mov	r14, r1
			is_playing = FALSE;
			char silence;
			silence = FALSE;

			
			while( i < 12 ){
     3d4:	cc 30       	cpi	r28, 0x0C	; 12
     3d6:	d1 05       	cpc	r29, r1
     3d8:	0c f4       	brge	.+2      	; 0x3dc <task1+0x2f0>
     3da:	7c cf       	rjmp	.-264    	; 0x2d4 <task1+0x1e8>
     3dc:	42 c0       	rjmp	.+132    	; 0x462 <task1+0x376>
			// 	}
			// }
		}
		// A normal button press. 
		else {
			fprintf(stdout, "%u\n\r", butnum);
     3de:	1f 92       	push	r1
     3e0:	8f 93       	push	r24
     3e2:	8b e5       	ldi	r24, 0x5B	; 91
     3e4:	91 e0       	ldi	r25, 0x01	; 1
     3e6:	9f 93       	push	r25
     3e8:	8f 93       	push	r24
     3ea:	80 91 60 04 	lds	r24, 0x0460
     3ee:	8f 93       	push	r24
     3f0:	80 91 5f 04 	lds	r24, 0x045F
     3f4:	8f 93       	push	r24
     3f6:	0e 94 f2 0a 	call	0x15e4	; 0x15e4 <fprintf>
			if (mem_index < 12) {
     3fa:	20 91 30 02 	lds	r18, 0x0230
     3fe:	30 91 31 02 	lds	r19, 0x0231
     402:	0f 90       	pop	r0
     404:	0f 90       	pop	r0
     406:	0f 90       	pop	r0
     408:	0f 90       	pop	r0
     40a:	0f 90       	pop	r0
     40c:	0f 90       	pop	r0
     40e:	2c 30       	cpi	r18, 0x0C	; 12
     410:	31 05       	cpc	r19, r1
     412:	38 f5       	brcc	.+78     	; 0x462 <task1+0x376>
				mem[mem_index] = butnum;
     414:	80 91 27 02 	lds	r24, 0x0227
     418:	f9 01       	movw	r30, r18
     41a:	ee 0f       	add	r30, r30
     41c:	ff 1f       	adc	r31, r31
     41e:	e4 54       	subi	r30, 0x44	; 68
     420:	fe 4f       	sbci	r31, 0xFE	; 254
     422:	80 83       	st	Z, r24
     424:	11 82       	std	Z+1, r1	; 0x01
				mem_index++;
     426:	2f 5f       	subi	r18, 0xFF	; 255
     428:	3f 4f       	sbci	r19, 0xFF	; 255
     42a:	30 93 31 02 	sts	0x0231, r19
     42e:	20 93 30 02 	sts	0x0230, r18
				play(high_freq[butnum], low_freq[butnum]);
     432:	90 e0       	ldi	r25, 0x00	; 0
     434:	88 0f       	add	r24, r24
     436:	99 1f       	adc	r25, r25
     438:	fc 01       	movw	r30, r24
     43a:	e2 5f       	subi	r30, 0xF2	; 242
     43c:	fe 4f       	sbci	r31, 0xFE	; 254
     43e:	60 81       	ld	r22, Z
     440:	71 81       	ldd	r23, Z+1	; 0x01
     442:	fc 01       	movw	r30, r24
     444:	ea 5d       	subi	r30, 0xDA	; 218
     446:	fe 4f       	sbci	r31, 0xFE	; 254
     448:	80 81       	ld	r24, Z
     44a:	91 81       	ldd	r25, Z+1	; 0x01
			}		
		}
	}
} 
     44c:	df 91       	pop	r29
     44e:	cf 91       	pop	r28
     450:	1f 91       	pop	r17
     452:	0f 91       	pop	r16
     454:	ff 90       	pop	r15
     456:	ef 90       	pop	r14
		else {
			fprintf(stdout, "%u\n\r", butnum);
			if (mem_index < 12) {
				mem[mem_index] = butnum;
				mem_index++;
				play(high_freq[butnum], low_freq[butnum]);
     458:	0c 94 5f 04 	jmp	0x8be	; 0x8be <play>
				if(silence == FALSE && !is_playing){
					timed_play(high_freq[mem[i]], low_freq[mem[i]], 1000);
					is_timed_playing = TRUE;
					fprintf(stdout, "Playing sound\n\r");
				}
				if(silence == TRUE && !is_playing) {
     45c:	81 11       	cpse	r24, r1
     45e:	84 cf       	rjmp	.-248    	; 0x368 <task1+0x27c>
     460:	71 cf       	rjmp	.-286    	; 0x344 <task1+0x258>
				mem_index++;
				play(high_freq[butnum], low_freq[butnum]);
			}		
		}
	}
} 
     462:	df 91       	pop	r29
     464:	cf 91       	pop	r28
     466:	1f 91       	pop	r17
     468:	0f 91       	pop	r16
     46a:	ff 90       	pop	r15
     46c:	ef 90       	pop	r14
     46e:	08 95       	ret

00000470 <initialize>:
 
//Initialization used for the timer interrupts for debouncing
void initialize(void) {
	//set up timer 0 for 1 mSec timebase 
	OCR0A = 249;  		//set the compare re to 250 time ticks
     470:	89 ef       	ldi	r24, 0xF9	; 249
     472:	87 bd       	out	0x27, r24	; 39
	TIMSK0= (1<<OCIE0A);	//turn on timer 0 cmp match ISR 
     474:	82 e0       	ldi	r24, 0x02	; 2
     476:	80 93 6e 00 	sts	0x006E, r24
	//set prescalar to divide by 64 
	TCCR0B= 3; //0b00000011;	
     47a:	93 e0       	ldi	r25, 0x03	; 3
     47c:	95 bd       	out	0x25, r25	; 37
	// turn on clear-on-match
	TCCR0A= (1<<WGM01) ;
     47e:	84 bd       	out	0x24, r24	; 36

	//init the task timers
	time1=0;  
     480:	10 92 2c 02 	sts	0x022C, r1
     484:	10 92 2b 02 	sts	0x022B, r1
	// PORT B is an input
	DDRB = 0x00;
     488:	14 b8       	out	0x04, r1	; 4
	//for no button push
	PushFlag = 0;
     48a:	10 92 28 02 	sts	0x0228, r1
	//init the state machine
	PushState = NoPush;
     48e:	81 e0       	ldi	r24, 0x01	; 1
     490:	80 93 33 02 	sts	0x0233, r24
	//init the playing state machine
	is_timed_playing = FALSE;
     494:	10 92 26 02 	sts	0x0226, r1

	mem_index = 0;
     498:	10 92 31 02 	sts	0x0231, r1
     49c:	10 92 30 02 	sts	0x0230, r1

	init_dtmf();
     4a0:	0e 94 0a 04 	call	0x814	; 0x814 <init_dtmf>
	//crank up the ISRs
	sei() ;
     4a4:	78 94       	sei
     4a6:	08 95       	ret

000004a8 <uart_init>:
{
#if F_CPU < 2000000UL && defined(U2X)
  UCSR0A = _BV(U2X);             /* improve baud rate error by using 2x clk */
  UBRR0L = (F_CPU / (8UL * UART_BAUD)) - 1;
#else
  UBRR0L = (F_CPU / (16UL * UART_BAUD)) - 1;
     4a8:	87 e6       	ldi	r24, 0x67	; 103
     4aa:	80 93 c4 00 	sts	0x00C4, r24
#endif
  UCSR0B = _BV(TXEN0) | _BV(RXEN0); /* tx/rx enable */
     4ae:	88 e1       	ldi	r24, 0x18	; 24
     4b0:	80 93 c1 00 	sts	0x00C1, r24
     4b4:	08 95       	ret

000004b6 <uart_putchar>:
 * Send character c down the UART Tx, wait until tx holding register
 * is empty.
 */
int
uart_putchar(char c, FILE *stream)
{
     4b6:	cf 93       	push	r28
     4b8:	c8 2f       	mov	r28, r24

  if (c == '\a')
     4ba:	87 30       	cpi	r24, 0x07	; 7
     4bc:	49 f4       	brne	.+18     	; 0x4d0 <uart_putchar+0x1a>
    {
      fputs("*ring*\n", stderr);
     4be:	60 91 61 04 	lds	r22, 0x0461
     4c2:	70 91 62 04 	lds	r23, 0x0462
     4c6:	84 eb       	ldi	r24, 0xB4	; 180
     4c8:	91 e0       	ldi	r25, 0x01	; 1
     4ca:	0e 94 02 0b 	call	0x1604	; 0x1604 <fputs>
     4ce:	0b c0       	rjmp	.+22     	; 0x4e6 <uart_putchar+0x30>
      return 0;
    }

  if (c == '\n')
     4d0:	8a 30       	cpi	r24, 0x0A	; 10
     4d2:	19 f4       	brne	.+6      	; 0x4da <uart_putchar+0x24>
    uart_putchar('\r', stream);
     4d4:	8d e0       	ldi	r24, 0x0D	; 13
     4d6:	0e 94 5b 02 	call	0x4b6	; 0x4b6 <uart_putchar>
  loop_until_bit_is_set(UCSR0A, UDRE0);
     4da:	80 91 c0 00 	lds	r24, 0x00C0
     4de:	85 ff       	sbrs	r24, 5
     4e0:	fc cf       	rjmp	.-8      	; 0x4da <uart_putchar+0x24>
  UDR0 = c;
     4e2:	c0 93 c6 00 	sts	0x00C6, r28

  return 0;
}
     4e6:	80 e0       	ldi	r24, 0x00	; 0
     4e8:	90 e0       	ldi	r25, 0x00	; 0
     4ea:	cf 91       	pop	r28
     4ec:	08 95       	ret

000004ee <uart_getchar>:
 * Successive calls to uart_getchar() will be satisfied from the
 * internal buffer until that buffer is emptied again.
 */
int
uart_getchar(FILE *stream)
{
     4ee:	ef 92       	push	r14
     4f0:	ff 92       	push	r15
     4f2:	0f 93       	push	r16
     4f4:	1f 93       	push	r17
     4f6:	cf 93       	push	r28
     4f8:	df 93       	push	r29
     4fa:	8c 01       	movw	r16, r24
  uint8_t c;
  char *cp, *cp2;
  static char b[RX_BUFSIZE];
  static char *rxp;

  if (rxp == 0)
     4fc:	80 91 d4 01 	lds	r24, 0x01D4
     500:	90 91 d5 01 	lds	r25, 0x01D5
     504:	89 2b       	or	r24, r25
     506:	09 f0       	breq	.+2      	; 0x50a <uart_getchar+0x1c>
     508:	a1 c0       	rjmp	.+322    	; 0x64c <uart_getchar+0x15e>
     50a:	c6 ed       	ldi	r28, 0xD6	; 214
     50c:	d1 e0       	ldi	r29, 0x01	; 1
    for (cp = b;;)
      {
	loop_until_bit_is_set(UCSR0A, RXC0);
     50e:	80 91 c0 00 	lds	r24, 0x00C0
     512:	87 ff       	sbrs	r24, 7
     514:	fc cf       	rjmp	.-8      	; 0x50e <uart_getchar+0x20>
	if (UCSR0A & _BV(FE0))
     516:	80 91 c0 00 	lds	r24, 0x00C0
     51a:	84 fd       	sbrc	r24, 4
     51c:	aa c0       	rjmp	.+340    	; 0x672 <uart_getchar+0x184>
	  return _FDEV_EOF;
	if (UCSR0A & _BV(DOR0))
     51e:	80 91 c0 00 	lds	r24, 0x00C0
     522:	83 fd       	sbrc	r24, 3
     524:	a9 c0       	rjmp	.+338    	; 0x678 <uart_getchar+0x18a>
	  return _FDEV_ERR;
	c = UDR0;
     526:	80 91 c6 00 	lds	r24, 0x00C6
	/* behaviour similar to Unix stty ICRNL */
	if (c == '\r')
     52a:	8d 30       	cpi	r24, 0x0D	; 13
     52c:	61 f4       	brne	.+24     	; 0x546 <uart_getchar+0x58>
	  c = '\n';
	if (c == '\n')
	  {
	    *cp = c;
     52e:	8a e0       	ldi	r24, 0x0A	; 10
     530:	88 83       	st	Y, r24
	    uart_putchar(c, stream);
     532:	b8 01       	movw	r22, r16
     534:	0e 94 5b 02 	call	0x4b6	; 0x4b6 <uart_putchar>
	    rxp = b;
     538:	86 ed       	ldi	r24, 0xD6	; 214
     53a:	91 e0       	ldi	r25, 0x01	; 1
     53c:	90 93 d5 01 	sts	0x01D5, r25
     540:	80 93 d4 01 	sts	0x01D4, r24
	    break;
     544:	83 c0       	rjmp	.+262    	; 0x64c <uart_getchar+0x15e>
	  return _FDEV_ERR;
	c = UDR0;
	/* behaviour similar to Unix stty ICRNL */
	if (c == '\r')
	  c = '\n';
	if (c == '\n')
     546:	8a 30       	cpi	r24, 0x0A	; 10
     548:	91 f3       	breq	.-28     	; 0x52e <uart_getchar+0x40>
	    *cp = c;
	    uart_putchar(c, stream);
	    rxp = b;
	    break;
	  }
	else if (c == '\t')
     54a:	89 30       	cpi	r24, 0x09	; 9
     54c:	09 f4       	brne	.+2      	; 0x550 <uart_getchar+0x62>
	  c = ' ';
     54e:	80 e2       	ldi	r24, 0x20	; 32

	if ((c >= (uint8_t)' ' && c <= (uint8_t)'\x7e') ||
     550:	98 2f       	mov	r25, r24
     552:	90 52       	subi	r25, 0x20	; 32
     554:	9f 35       	cpi	r25, 0x5F	; 95
     556:	10 f0       	brcs	.+4      	; 0x55c <uart_getchar+0x6e>
     558:	80 3a       	cpi	r24, 0xA0	; 160
     55a:	90 f0       	brcs	.+36     	; 0x580 <uart_getchar+0x92>
	    c >= (uint8_t)'\xa0')
	  {
	    if (cp == b + RX_BUFSIZE - 1)
     55c:	92 e0       	ldi	r25, 0x02	; 2
     55e:	c5 32       	cpi	r28, 0x25	; 37
     560:	d9 07       	cpc	r29, r25
     562:	49 f4       	brne	.+18     	; 0x576 <uart_getchar+0x88>
uart_putchar(char c, FILE *stream)
{

  if (c == '\a')
    {
      fputs("*ring*\n", stderr);
     564:	60 91 61 04 	lds	r22, 0x0461
     568:	70 91 62 04 	lds	r23, 0x0462
     56c:	84 eb       	ldi	r24, 0xB4	; 180
     56e:	91 e0       	ldi	r25, 0x01	; 1
     570:	0e 94 02 0b 	call	0x1604	; 0x1604 <fputs>
     574:	cc cf       	rjmp	.-104    	; 0x50e <uart_getchar+0x20>
	  {
	    if (cp == b + RX_BUFSIZE - 1)
	      uart_putchar('\a', stream);
	    else
	      {
		*cp++ = c;
     576:	89 93       	st	Y+, r24
		uart_putchar(c, stream);
     578:	b8 01       	movw	r22, r16
     57a:	0e 94 5b 02 	call	0x4b6	; 0x4b6 <uart_putchar>
     57e:	c7 cf       	rjmp	.-114    	; 0x50e <uart_getchar+0x20>
	      }
	    continue;
	  }

	switch (c)
     580:	82 31       	cpi	r24, 0x12	; 18
     582:	29 f1       	breq	.+74     	; 0x5ce <uart_getchar+0xe0>
     584:	38 f4       	brcc	.+14     	; 0x594 <uart_getchar+0xa6>
     586:	83 30       	cpi	r24, 0x03	; 3
     588:	09 f4       	brne	.+2      	; 0x58c <uart_getchar+0x9e>
     58a:	76 c0       	rjmp	.+236    	; 0x678 <uart_getchar+0x18a>
     58c:	88 30       	cpi	r24, 0x08	; 8
     58e:	09 f0       	breq	.+2      	; 0x592 <uart_getchar+0xa4>
     590:	be cf       	rjmp	.-132    	; 0x50e <uart_getchar+0x20>
     592:	09 c0       	rjmp	.+18     	; 0x5a6 <uart_getchar+0xb8>
     594:	87 31       	cpi	r24, 0x17	; 23
     596:	09 f4       	brne	.+2      	; 0x59a <uart_getchar+0xac>
     598:	4d c0       	rjmp	.+154    	; 0x634 <uart_getchar+0x146>
     59a:	8f 37       	cpi	r24, 0x7F	; 127
     59c:	21 f0       	breq	.+8      	; 0x5a6 <uart_getchar+0xb8>
     59e:	85 31       	cpi	r24, 0x15	; 21
     5a0:	09 f0       	breq	.+2      	; 0x5a4 <uart_getchar+0xb6>
     5a2:	b5 cf       	rjmp	.-150    	; 0x50e <uart_getchar+0x20>
     5a4:	34 c0       	rjmp	.+104    	; 0x60e <uart_getchar+0x120>
	  case 'c' & 0x1f:
	    return -1;

	  case '\b':
	  case '\x7f':
	    if (cp > b)
     5a6:	e1 e0       	ldi	r30, 0x01	; 1
     5a8:	c6 3d       	cpi	r28, 0xD6	; 214
     5aa:	de 07       	cpc	r29, r30
     5ac:	09 f0       	breq	.+2      	; 0x5b0 <uart_getchar+0xc2>
     5ae:	08 f4       	brcc	.+2      	; 0x5b2 <uart_getchar+0xc4>
     5b0:	ae cf       	rjmp	.-164    	; 0x50e <uart_getchar+0x20>
	      {
		uart_putchar('\b', stream);
     5b2:	b8 01       	movw	r22, r16
     5b4:	88 e0       	ldi	r24, 0x08	; 8
     5b6:	0e 94 5b 02 	call	0x4b6	; 0x4b6 <uart_putchar>
		uart_putchar(' ', stream);
     5ba:	b8 01       	movw	r22, r16
     5bc:	80 e2       	ldi	r24, 0x20	; 32
     5be:	0e 94 5b 02 	call	0x4b6	; 0x4b6 <uart_putchar>
		uart_putchar('\b', stream);
     5c2:	b8 01       	movw	r22, r16
     5c4:	88 e0       	ldi	r24, 0x08	; 8
     5c6:	0e 94 5b 02 	call	0x4b6	; 0x4b6 <uart_putchar>
		cp--;
     5ca:	21 97       	sbiw	r28, 0x01	; 1
     5cc:	a0 cf       	rjmp	.-192    	; 0x50e <uart_getchar+0x20>
	      }
	    break;

	  case 'r' & 0x1f:
	    uart_putchar('\r', stream);
     5ce:	b8 01       	movw	r22, r16
     5d0:	8d e0       	ldi	r24, 0x0D	; 13
     5d2:	0e 94 5b 02 	call	0x4b6	; 0x4b6 <uart_putchar>
	    for (cp2 = b; cp2 < cp; cp2++)
     5d6:	86 ed       	ldi	r24, 0xD6	; 214
     5d8:	e8 2e       	mov	r14, r24
     5da:	81 e0       	ldi	r24, 0x01	; 1
     5dc:	f8 2e       	mov	r15, r24
     5de:	06 c0       	rjmp	.+12     	; 0x5ec <uart_getchar+0xfe>
	      uart_putchar(*cp2, stream);
     5e0:	b8 01       	movw	r22, r16
     5e2:	f7 01       	movw	r30, r14
     5e4:	81 91       	ld	r24, Z+
     5e6:	7f 01       	movw	r14, r30
     5e8:	0e 94 5b 02 	call	0x4b6	; 0x4b6 <uart_putchar>
	      }
	    break;

	  case 'r' & 0x1f:
	    uart_putchar('\r', stream);
	    for (cp2 = b; cp2 < cp; cp2++)
     5ec:	ec 16       	cp	r14, r28
     5ee:	fd 06       	cpc	r15, r29
     5f0:	b8 f3       	brcs	.-18     	; 0x5e0 <uart_getchar+0xf2>
     5f2:	8d cf       	rjmp	.-230    	; 0x50e <uart_getchar+0x20>
	    break;

	  case 'u' & 0x1f:
	    while (cp > b)
	      {
		uart_putchar('\b', stream);
     5f4:	b8 01       	movw	r22, r16
     5f6:	88 e0       	ldi	r24, 0x08	; 8
     5f8:	0e 94 5b 02 	call	0x4b6	; 0x4b6 <uart_putchar>
		uart_putchar(' ', stream);
     5fc:	b8 01       	movw	r22, r16
     5fe:	80 e2       	ldi	r24, 0x20	; 32
     600:	0e 94 5b 02 	call	0x4b6	; 0x4b6 <uart_putchar>
		uart_putchar('\b', stream);
     604:	b8 01       	movw	r22, r16
     606:	88 e0       	ldi	r24, 0x08	; 8
     608:	0e 94 5b 02 	call	0x4b6	; 0x4b6 <uart_putchar>
		cp--;
     60c:	21 97       	sbiw	r28, 0x01	; 1
	    for (cp2 = b; cp2 < cp; cp2++)
	      uart_putchar(*cp2, stream);
	    break;

	  case 'u' & 0x1f:
	    while (cp > b)
     60e:	f1 e0       	ldi	r31, 0x01	; 1
     610:	c6 3d       	cpi	r28, 0xD6	; 214
     612:	df 07       	cpc	r29, r31
     614:	09 f0       	breq	.+2      	; 0x618 <uart_getchar+0x12a>
     616:	70 f7       	brcc	.-36     	; 0x5f4 <uart_getchar+0x106>
     618:	7a cf       	rjmp	.-268    	; 0x50e <uart_getchar+0x20>
	    break;

	  case 'w' & 0x1f:
	    while (cp > b && cp[-1] != ' ')
	      {
		uart_putchar('\b', stream);
     61a:	b8 01       	movw	r22, r16
     61c:	88 e0       	ldi	r24, 0x08	; 8
     61e:	0e 94 5b 02 	call	0x4b6	; 0x4b6 <uart_putchar>
		uart_putchar(' ', stream);
     622:	b8 01       	movw	r22, r16
     624:	80 e2       	ldi	r24, 0x20	; 32
     626:	0e 94 5b 02 	call	0x4b6	; 0x4b6 <uart_putchar>
		uart_putchar('\b', stream);
     62a:	b8 01       	movw	r22, r16
     62c:	88 e0       	ldi	r24, 0x08	; 8
     62e:	0e 94 5b 02 	call	0x4b6	; 0x4b6 <uart_putchar>
		cp--;
     632:	e7 01       	movw	r28, r14
		cp--;
	      }
	    break;

	  case 'w' & 0x1f:
	    while (cp > b && cp[-1] != ' ')
     634:	81 e0       	ldi	r24, 0x01	; 1
     636:	c6 3d       	cpi	r28, 0xD6	; 214
     638:	d8 07       	cpc	r29, r24
     63a:	09 f0       	breq	.+2      	; 0x63e <uart_getchar+0x150>
     63c:	08 f4       	brcc	.+2      	; 0x640 <uart_getchar+0x152>
     63e:	67 cf       	rjmp	.-306    	; 0x50e <uart_getchar+0x20>
     640:	fe 01       	movw	r30, r28
     642:	82 91       	ld	r24, -Z
     644:	7f 01       	movw	r14, r30
     646:	80 32       	cpi	r24, 0x20	; 32
     648:	41 f7       	brne	.-48     	; 0x61a <uart_getchar+0x12c>
     64a:	61 cf       	rjmp	.-318    	; 0x50e <uart_getchar+0x20>
	      }
	    break;
	  }
      }

  c = *rxp++;
     64c:	e0 91 d4 01 	lds	r30, 0x01D4
     650:	f0 91 d5 01 	lds	r31, 0x01D5
     654:	20 81       	ld	r18, Z
  if (c == '\n')
     656:	2a 30       	cpi	r18, 0x0A	; 10
     658:	31 f0       	breq	.+12     	; 0x666 <uart_getchar+0x178>
	      }
	    break;
	  }
      }

  c = *rxp++;
     65a:	31 96       	adiw	r30, 0x01	; 1
     65c:	f0 93 d5 01 	sts	0x01D5, r31
     660:	e0 93 d4 01 	sts	0x01D4, r30
     664:	04 c0       	rjmp	.+8      	; 0x66e <uart_getchar+0x180>
  if (c == '\n')
    rxp = 0;
     666:	10 92 d5 01 	sts	0x01D5, r1
     66a:	10 92 d4 01 	sts	0x01D4, r1

  return c;
     66e:	30 e0       	ldi	r19, 0x00	; 0
     670:	05 c0       	rjmp	.+10     	; 0x67c <uart_getchar+0x18e>
  if (rxp == 0)
    for (cp = b;;)
      {
	loop_until_bit_is_set(UCSR0A, RXC0);
	if (UCSR0A & _BV(FE0))
	  return _FDEV_EOF;
     672:	2e ef       	ldi	r18, 0xFE	; 254
     674:	3f ef       	ldi	r19, 0xFF	; 255
     676:	02 c0       	rjmp	.+4      	; 0x67c <uart_getchar+0x18e>
	  }

	switch (c)
	  {
	  case 'c' & 0x1f:
	    return -1;
     678:	2f ef       	ldi	r18, 0xFF	; 255
     67a:	3f ef       	ldi	r19, 0xFF	; 255
  c = *rxp++;
  if (c == '\n')
    rxp = 0;

  return c;
}
     67c:	c9 01       	movw	r24, r18
     67e:	df 91       	pop	r29
     680:	cf 91       	pop	r28
     682:	1f 91       	pop	r17
     684:	0f 91       	pop	r16
     686:	ff 90       	pop	r15
     688:	ef 90       	pop	r14
     68a:	08 95       	ret

0000068c <__vector_18>:
volatile unsigned long accumulator ;
volatile unsigned char changed;


volatile unsigned long increment;
ISR( TIMER0_OVF_vect){
     68c:	1f 92       	push	r1
     68e:	0f 92       	push	r0
     690:	0f b6       	in	r0, 0x3f	; 63
     692:	0f 92       	push	r0
     694:	11 24       	eor	r1, r1
     696:	0b b6       	in	r0, 0x3b	; 59
     698:	0f 92       	push	r0
     69a:	2f 93       	push	r18
     69c:	3f 93       	push	r19
     69e:	4f 93       	push	r20
     6a0:	5f 93       	push	r21
     6a2:	6f 93       	push	r22
     6a4:	7f 93       	push	r23
     6a6:	8f 93       	push	r24
     6a8:	9f 93       	push	r25
     6aa:	af 93       	push	r26
     6ac:	bf 93       	push	r27
     6ae:	cf 93       	push	r28
     6b0:	df 93       	push	r29
     6b2:	ef 93       	push	r30
     6b4:	ff 93       	push	r31
	//accumulator = accumulator + increment ;
	//highbyte = (char)(accumulator >> 24) ;
	
	// output the wavefrom sample
	//OCR0A = 128 + ((sineTable[highbyte] * rampTable[rampCount])>>7) ;
	changed = TRUE;
     6b6:	81 e0       	ldi	r24, 0x01	; 1
     6b8:	80 93 4a 04 	sts	0x044A, r24


	OCR0A = 128 + 
	   ( (
	   	   (sineTable[(accumulator_a >> 24)] + sineTable[(accumulator_b >> 24)]) * rampTable[rampCount]
     6bc:	40 91 42 04 	lds	r20, 0x0442
     6c0:	50 91 43 04 	lds	r21, 0x0443
     6c4:	60 91 44 04 	lds	r22, 0x0444
     6c8:	70 91 45 04 	lds	r23, 0x0445
     6cc:	80 91 4d 04 	lds	r24, 0x044D
     6d0:	90 91 4e 04 	lds	r25, 0x044E
     6d4:	a0 91 4f 04 	lds	r26, 0x044F
     6d8:	b0 91 50 04 	lds	r27, 0x0450
     6dc:	e0 91 4b 04 	lds	r30, 0x044B
     6e0:	f0 91 4c 04 	lds	r31, 0x044C
     6e4:	47 2f       	mov	r20, r23
     6e6:	55 27       	eor	r21, r21
     6e8:	66 27       	eor	r22, r22
     6ea:	77 27       	eor	r23, r23
     6ec:	ea 01       	movw	r28, r20
     6ee:	ce 5b       	subi	r28, 0xBE	; 190
     6f0:	dc 4f       	sbci	r29, 0xFC	; 252
     6f2:	28 81       	ld	r18, Y
     6f4:	8b 2f       	mov	r24, r27
     6f6:	99 27       	eor	r25, r25
     6f8:	aa 27       	eor	r26, r26
     6fa:	bb 27       	eor	r27, r27
     6fc:	dc 01       	movw	r26, r24
     6fe:	ae 5b       	subi	r26, 0xBE	; 190
     700:	bc 4f       	sbci	r27, 0xFC	; 252
     702:	8c 91       	ld	r24, X
     704:	99 27       	eor	r25, r25
     706:	87 fd       	sbrc	r24, 7
     708:	90 95       	com	r25
     70a:	82 0f       	add	r24, r18
     70c:	91 1d       	adc	r25, r1
     70e:	27 fd       	sbrc	r18, 7
     710:	9a 95       	dec	r25
     712:	e7 5c       	subi	r30, 0xC7	; 199
     714:	fd 4f       	sbci	r31, 0xFD	; 253
     716:	40 81       	ld	r20, Z
     718:	48 9f       	mul	r20, r24
     71a:	90 01       	movw	r18, r0
     71c:	49 9f       	mul	r20, r25
     71e:	30 0d       	add	r19, r0
     720:	11 24       	eor	r1, r1
	// output the wavefrom sample
	//OCR0A = 128 + ((sineTable[highbyte] * rampTable[rampCount])>>7) ;
	changed = TRUE;


	OCR0A = 128 + 
     722:	83 2f       	mov	r24, r19
     724:	80 58       	subi	r24, 0x80	; 128
     726:	87 bd       	out	0x27, r24	; 39
	   ( (
	   	   (sineTable[(accumulator_a >> 24)] + sineTable[(accumulator_b >> 24)]) * rampTable[rampCount]
	   	 ) >> 8
	   );
	accumulator_a += increment_a;
     728:	80 91 42 04 	lds	r24, 0x0442
     72c:	90 91 43 04 	lds	r25, 0x0443
     730:	a0 91 44 04 	lds	r26, 0x0444
     734:	b0 91 45 04 	lds	r27, 0x0445
     738:	40 91 35 02 	lds	r20, 0x0235
     73c:	50 91 36 02 	lds	r21, 0x0236
     740:	60 91 37 02 	lds	r22, 0x0237
     744:	70 91 38 02 	lds	r23, 0x0238
     748:	84 0f       	add	r24, r20
     74a:	95 1f       	adc	r25, r21
     74c:	a6 1f       	adc	r26, r22
     74e:	b7 1f       	adc	r27, r23
     750:	80 93 42 04 	sts	0x0442, r24
     754:	90 93 43 04 	sts	0x0443, r25
     758:	a0 93 44 04 	sts	0x0444, r26
     75c:	b0 93 45 04 	sts	0x0445, r27
	accumulator_b += increment_b;
     760:	80 91 4d 04 	lds	r24, 0x044D
     764:	90 91 4e 04 	lds	r25, 0x044E
     768:	a0 91 4f 04 	lds	r26, 0x044F
     76c:	b0 91 50 04 	lds	r27, 0x0450
     770:	40 91 56 04 	lds	r20, 0x0456
     774:	50 91 57 04 	lds	r21, 0x0457
     778:	60 91 58 04 	lds	r22, 0x0458
     77c:	70 91 59 04 	lds	r23, 0x0459
     780:	84 0f       	add	r24, r20
     782:	95 1f       	adc	r25, r21
     784:	a6 1f       	adc	r26, r22
     786:	b7 1f       	adc	r27, r23
     788:	80 93 4d 04 	sts	0x044D, r24
     78c:	90 93 4e 04 	sts	0x044E, r25
     790:	a0 93 4f 04 	sts	0x044F, r26
     794:	b0 93 50 04 	sts	0x0450, r27
	//generates a 1 ms timebase
	// Used for keeping track of time.
	if( count <= 0){
     798:	80 91 32 02 	lds	r24, 0x0232
     79c:	81 11       	cpse	r24, r1
     79e:	0c c0       	rjmp	.+24     	; 0x7b8 <__vector_18+0x12c>
		count = COUNTMS;
     7a0:	8e e3       	ldi	r24, 0x3E	; 62
     7a2:	80 93 32 02 	sts	0x0232, r24
		time1++;
     7a6:	80 91 2b 02 	lds	r24, 0x022B
     7aa:	90 91 2c 02 	lds	r25, 0x022C
     7ae:	01 96       	adiw	r24, 0x01	; 1
     7b0:	90 93 2c 02 	sts	0x022C, r25
     7b4:	80 93 2b 02 	sts	0x022B, r24
	}
	count--;	
     7b8:	80 91 32 02 	lds	r24, 0x0232
     7bc:	81 50       	subi	r24, 0x01	; 1
     7be:	80 93 32 02 	sts	0x0232, r24
	if( is_timed_playing && dds_duration > 0){
     7c2:	80 91 26 02 	lds	r24, 0x0226
     7c6:	88 23       	and	r24, r24
     7c8:	81 f0       	breq	.+32     	; 0x7ea <__vector_18+0x15e>
     7ca:	80 91 29 02 	lds	r24, 0x0229
     7ce:	90 91 2a 02 	lds	r25, 0x022A
     7d2:	18 16       	cp	r1, r24
     7d4:	19 06       	cpc	r1, r25
     7d6:	4c f4       	brge	.+18     	; 0x7ea <__vector_18+0x15e>
		dds_duration--;
     7d8:	80 91 29 02 	lds	r24, 0x0229
     7dc:	90 91 2a 02 	lds	r25, 0x022A
     7e0:	01 97       	sbiw	r24, 0x01	; 1
     7e2:	90 93 2a 02 	sts	0x022A, r25
     7e6:	80 93 29 02 	sts	0x0229, r24
	}
}
     7ea:	ff 91       	pop	r31
     7ec:	ef 91       	pop	r30
     7ee:	df 91       	pop	r29
     7f0:	cf 91       	pop	r28
     7f2:	bf 91       	pop	r27
     7f4:	af 91       	pop	r26
     7f6:	9f 91       	pop	r25
     7f8:	8f 91       	pop	r24
     7fa:	7f 91       	pop	r23
     7fc:	6f 91       	pop	r22
     7fe:	5f 91       	pop	r21
     800:	4f 91       	pop	r20
     802:	3f 91       	pop	r19
     804:	2f 91       	pop	r18
     806:	0f 90       	pop	r0
     808:	0b be       	out	0x3b, r0	; 59
     80a:	0f 90       	pop	r0
     80c:	0f be       	out	0x3f, r0	; 63
     80e:	0f 90       	pop	r0
     810:	1f 90       	pop	r1
     812:	18 95       	reti

00000814 <init_dtmf>:


void init_dtmf(){
     814:	ef 92       	push	r14
     816:	ff 92       	push	r15
     818:	0f 93       	push	r16
     81a:	1f 93       	push	r17
     81c:	cf 93       	push	r28
     81e:	df 93       	push	r29
	DDRB = 0;
     820:	14 b8       	out	0x04, r1	; 4
	DDRB |= OUTPUT_PIN;
     822:	23 9a       	sbi	0x04, 3	; 4
     824:	52 e4       	ldi	r21, 0x42	; 66
     826:	e5 2e       	mov	r14, r21
     828:	53 e0       	ldi	r21, 0x03	; 3
     82a:	f5 2e       	mov	r15, r21
     82c:	09 e3       	ldi	r16, 0x39	; 57
     82e:	12 e0       	ldi	r17, 0x02	; 2
	int i;
	for (i=0; i<256; i++){
     830:	c0 e0       	ldi	r28, 0x00	; 0
     832:	d0 e0       	ldi	r29, 0x00	; 0
		sineTable[i] = (char)(127.0 * sin(6.283*((float)i)/256.0)) ;
     834:	be 01       	movw	r22, r28
     836:	88 27       	eor	r24, r24
     838:	77 fd       	sbrc	r23, 7
     83a:	80 95       	com	r24
     83c:	98 2f       	mov	r25, r24
     83e:	0e 94 36 08 	call	0x106c	; 0x106c <__floatsisf>
     842:	26 e5       	ldi	r18, 0x56	; 86
     844:	3e e0       	ldi	r19, 0x0E	; 14
     846:	49 ec       	ldi	r20, 0xC9	; 201
     848:	50 e4       	ldi	r21, 0x40	; 64
     84a:	0e 94 22 07 	call	0xe44	; 0xe44 <__mulsf3>
     84e:	20 e0       	ldi	r18, 0x00	; 0
     850:	30 e0       	ldi	r19, 0x00	; 0
     852:	40 e8       	ldi	r20, 0x80	; 128
     854:	5b e3       	ldi	r21, 0x3B	; 59
     856:	0e 94 22 07 	call	0xe44	; 0xe44 <__mulsf3>
     85a:	0e 94 2d 0b 	call	0x165a	; 0x165a <sin>
     85e:	20 e0       	ldi	r18, 0x00	; 0
     860:	30 e0       	ldi	r19, 0x00	; 0
     862:	4e ef       	ldi	r20, 0xFE	; 254
     864:	52 e4       	ldi	r21, 0x42	; 66
     866:	0e 94 22 07 	call	0xe44	; 0xe44 <__mulsf3>
     86a:	0e 94 3d 05 	call	0xa7a	; 0xa7a <__fixunssfsi>
     86e:	f7 01       	movw	r30, r14
     870:	61 93       	st	Z+, r22
     872:	7f 01       	movw	r14, r30
		// the following table needs 
		// rampTable[0]=0 and rampTable[255]=127
		rampTable[i] = i>>1 ;
     874:	ce 01       	movw	r24, r28
     876:	95 95       	asr	r25
     878:	87 95       	ror	r24
     87a:	f8 01       	movw	r30, r16
     87c:	81 93       	st	Z+, r24
     87e:	8f 01       	movw	r16, r30

void init_dtmf(){
	DDRB = 0;
	DDRB |= OUTPUT_PIN;
	int i;
	for (i=0; i<256; i++){
     880:	21 96       	adiw	r28, 0x01	; 1
     882:	c1 15       	cp	r28, r1
     884:	f1 e0       	ldi	r31, 0x01	; 1
     886:	df 07       	cpc	r29, r31
     888:	a9 f6       	brne	.-86     	; 0x834 <init_dtmf+0x20>
		sineTable[i] = (char)(127.0 * sin(6.283*((float)i)/256.0)) ;
		// the following table needs 
		// rampTable[0]=0 and rampTable[255]=127
		rampTable[i] = i>>1 ;
	}
	time = 0;
     88a:	10 92 2e 02 	sts	0x022E, r1
     88e:	10 92 2d 02 	sts	0x022D, r1

	// TCCR0B = 0;
	// //set divider to 1, run T0 at 16 MHz 
	// TCCR0B |= T0_CS00;
	TCCR0B = 1;
     892:	81 e0       	ldi	r24, 0x01	; 1
     894:	85 bd       	out	0x25, r24	; 37
	TIMSK0 = 0;
     896:	10 92 6e 00 	sts	0x006E, r1
	TIMSK0 |= TIMER0_OVERFLOW_INTERRUPT_ENABLE;
     89a:	80 91 6e 00 	lds	r24, 0x006E
     89e:	81 60       	ori	r24, 0x01	; 1
     8a0:	80 93 6e 00 	sts	0x006E, r24
	//turn on fast PWM and OC0A - output 
	TCCR0A = 0;
     8a4:	14 bc       	out	0x24, r1	; 36
	TCCR0A = (1<<COM0A0) | (1<<COM0A1) | (1<<WGM00) | (1<<WGM01) ; 
     8a6:	83 ec       	ldi	r24, 0xC3	; 195
     8a8:	84 bd       	out	0x24, r24	; 36

	//TCCR0A |= WAVE_GEN_M00 + WAVE_GEN_M01 + COMPARE_MATCH_OUTPUT_A0 + COMPARE_MATCH_OUTPUT_A1; 
	OCR0A = 128;
     8aa:	80 e8       	ldi	r24, 0x80	; 128
     8ac:	87 bd       	out	0x27, r24	; 39
	//increment = INCREMENT_941;
	//increment_a = INCREMENT_941;
	//increment_b = INCREMENT_941;
	sei();
     8ae:	78 94       	sei
}
     8b0:	df 91       	pop	r29
     8b2:	cf 91       	pop	r28
     8b4:	1f 91       	pop	r17
     8b6:	0f 91       	pop	r16
     8b8:	ff 90       	pop	r15
     8ba:	ef 90       	pop	r14
     8bc:	08 95       	ret

000008be <play>:

//plays fA and fB for a duration of duration ms
void play(int fA, int fB){
	//if( !is_playing ){
		//is_playing = TRUE;
		switch( fA){
     8be:	89 3b       	cpi	r24, 0xB9	; 185
     8c0:	24 e0       	ldi	r18, 0x04	; 4
     8c2:	92 07       	cpc	r25, r18
     8c4:	89 f0       	breq	.+34     	; 0x8e8 <play+0x2a>
     8c6:	44 f4       	brge	.+16     	; 0x8d8 <play+0x1a>
     8c8:	89 3b       	cpi	r24, 0xB9	; 185
     8ca:	22 e0       	ldi	r18, 0x02	; 2
     8cc:	92 07       	cpc	r25, r18
     8ce:	19 f1       	breq	.+70     	; 0x916 <play+0x58>
     8d0:	8d 3a       	cpi	r24, 0xAD	; 173
     8d2:	93 40       	sbci	r25, 0x03	; 3
     8d4:	51 f5       	brne	.+84     	; 0x92a <play+0x6c>
     8d6:	24 c0       	rjmp	.+72     	; 0x920 <play+0x62>
     8d8:	88 33       	cpi	r24, 0x38	; 56
     8da:	25 e0       	ldi	r18, 0x05	; 5
     8dc:	92 07       	cpc	r25, r18
     8de:	49 f0       	breq	.+18     	; 0x8f2 <play+0x34>
     8e0:	85 3c       	cpi	r24, 0xC5	; 197
     8e2:	95 40       	sbci	r25, 0x05	; 5
     8e4:	11 f5       	brne	.+68     	; 0x92a <play+0x6c>
     8e6:	12 c0       	rjmp	.+36     	; 0x90c <play+0x4e>
			case 1209: increment_a = INCREMENT_1209; break;
     8e8:	87 e3       	ldi	r24, 0x37	; 55
     8ea:	98 eb       	ldi	r25, 0xB8	; 184
     8ec:	a3 ef       	ldi	r26, 0xF3	; 243
     8ee:	b4 e0       	ldi	r27, 0x04	; 4
     8f0:	04 c0       	rjmp	.+8      	; 0x8fa <play+0x3c>
			case 1336: increment_a = INCREMENT_1336; break;
     8f2:	88 e4       	ldi	r24, 0x48	; 72
     8f4:	93 ee       	ldi	r25, 0xE3	; 227
     8f6:	a8 e7       	ldi	r26, 0x78	; 120
     8f8:	b5 e0       	ldi	r27, 0x05	; 5
     8fa:	80 93 35 02 	sts	0x0235, r24
     8fe:	90 93 36 02 	sts	0x0236, r25
     902:	a0 93 37 02 	sts	0x0237, r26
     906:	b0 93 38 02 	sts	0x0238, r27
     90a:	17 c0       	rjmp	.+46     	; 0x93a <play+0x7c>
			case 1477: increment_a = INCREMENT_1477; break;
     90c:	8b e6       	ldi	r24, 0x6B	; 107
     90e:	9c eb       	ldi	r25, 0xBC	; 188
     910:	ac e0       	ldi	r26, 0x0C	; 12
     912:	b6 e0       	ldi	r27, 0x06	; 6
     914:	f2 cf       	rjmp	.-28     	; 0x8fa <play+0x3c>
			case 697:  increment_a = INCREMENT_697; break;
     916:	87 e3       	ldi	r24, 0x37	; 55
     918:	9a ed       	ldi	r25, 0xDA	; 218
     91a:	aa ed       	ldi	r26, 0xDA	; 218
     91c:	b2 e0       	ldi	r27, 0x02	; 2
     91e:	ed cf       	rjmp	.-38     	; 0x8fa <play+0x3c>
			case 941: increment_a = INCREMENT_941; break;
     920:	83 e0       	ldi	r24, 0x03	; 3
     922:	94 eb       	ldi	r25, 0xB4	; 180
     924:	aa ed       	ldi	r26, 0xDA	; 218
     926:	b3 e0       	ldi	r27, 0x03	; 3
     928:	e8 cf       	rjmp	.-48     	; 0x8fa <play+0x3c>
			default: increment_a = 0; break;
     92a:	10 92 35 02 	sts	0x0235, r1
     92e:	10 92 36 02 	sts	0x0236, r1
     932:	10 92 37 02 	sts	0x0237, r1
     936:	10 92 38 02 	sts	0x0238, r1
		}

		switch ( fB) {
     93a:	64 35       	cpi	r22, 0x54	; 84
     93c:	83 e0       	ldi	r24, 0x03	; 3
     93e:	78 07       	cpc	r23, r24
     940:	d9 f0       	breq	.+54     	; 0x978 <play+0xba>
     942:	44 f4       	brge	.+16     	; 0x954 <play+0x96>
     944:	69 3b       	cpi	r22, 0xB9	; 185
     946:	82 e0       	ldi	r24, 0x02	; 2
     948:	78 07       	cpc	r23, r24
     94a:	61 f0       	breq	.+24     	; 0x964 <play+0xa6>
     94c:	62 30       	cpi	r22, 0x02	; 2
     94e:	73 40       	sbci	r23, 0x03	; 3
     950:	91 f5       	brne	.+100    	; 0x9b6 <play+0xf8>
     952:	0d c0       	rjmp	.+26     	; 0x96e <play+0xb0>
     954:	6d 3a       	cpi	r22, 0xAD	; 173
     956:	83 e0       	ldi	r24, 0x03	; 3
     958:	78 07       	cpc	r23, r24
     95a:	99 f0       	breq	.+38     	; 0x982 <play+0xc4>
     95c:	69 3b       	cpi	r22, 0xB9	; 185
     95e:	74 40       	sbci	r23, 0x04	; 4
     960:	51 f5       	brne	.+84     	; 0x9b6 <play+0xf8>
     962:	1c c0       	rjmp	.+56     	; 0x99c <play+0xde>
			case 697: increment_b = INCREMENT_697; break;
     964:	87 e3       	ldi	r24, 0x37	; 55
     966:	9a ed       	ldi	r25, 0xDA	; 218
     968:	aa ed       	ldi	r26, 0xDA	; 218
     96a:	b2 e0       	ldi	r27, 0x02	; 2
     96c:	0e c0       	rjmp	.+28     	; 0x98a <play+0xcc>
			case 770: increment_b = INCREMENT_770; break;
     96e:	8e ed       	ldi	r24, 0xDE	; 222
     970:	95 e6       	ldi	r25, 0x65	; 101
     972:	a7 e2       	ldi	r26, 0x27	; 39
     974:	b3 e0       	ldi	r27, 0x03	; 3
     976:	09 c0       	rjmp	.+18     	; 0x98a <play+0xcc>
			case 852: increment_b = INCREMENT_852; break;
     978:	8c e6       	ldi	r24, 0x6C	; 108
     97a:	91 e6       	ldi	r25, 0x61	; 97
     97c:	ad e7       	ldi	r26, 0x7D	; 125
     97e:	b3 e0       	ldi	r27, 0x03	; 3
     980:	04 c0       	rjmp	.+8      	; 0x98a <play+0xcc>
			case 941: increment_b = INCREMENT_941; break;
     982:	83 e0       	ldi	r24, 0x03	; 3
     984:	94 eb       	ldi	r25, 0xB4	; 180
     986:	aa ed       	ldi	r26, 0xDA	; 218
     988:	b3 e0       	ldi	r27, 0x03	; 3
     98a:	80 93 56 04 	sts	0x0456, r24
     98e:	90 93 57 04 	sts	0x0457, r25
     992:	a0 93 58 04 	sts	0x0458, r26
     996:	b0 93 59 04 	sts	0x0459, r27
     99a:	08 95       	ret
			case 1209: increment_a = INCREMENT_1209; break;
     99c:	87 e3       	ldi	r24, 0x37	; 55
     99e:	98 eb       	ldi	r25, 0xB8	; 184
     9a0:	a3 ef       	ldi	r26, 0xF3	; 243
     9a2:	b4 e0       	ldi	r27, 0x04	; 4
     9a4:	80 93 35 02 	sts	0x0235, r24
     9a8:	90 93 36 02 	sts	0x0236, r25
     9ac:	a0 93 37 02 	sts	0x0237, r26
     9b0:	b0 93 38 02 	sts	0x0238, r27
     9b4:	08 95       	ret
			default: increment_b = 0; break;
     9b6:	10 92 56 04 	sts	0x0456, r1
     9ba:	10 92 57 04 	sts	0x0457, r1
     9be:	10 92 58 04 	sts	0x0458, r1
     9c2:	10 92 59 04 	sts	0x0459, r1
     9c6:	08 95       	ret

000009c8 <timed_play>:
		//OCR0A = 128;	
	//}
}

void timed_play(int fA, int fB, int duration){
	dds_duration = duration;
     9c8:	50 93 2a 02 	sts	0x022A, r21
     9cc:	40 93 29 02 	sts	0x0229, r20
	play(fA, fB);
     9d0:	0e 94 5f 04 	call	0x8be	; 0x8be <play>
	is_playing=TRUE;
     9d4:	81 e0       	ldi	r24, 0x01	; 1
     9d6:	80 93 34 02 	sts	0x0234, r24
     9da:	08 95       	ret

000009dc <stop_playing>:
}

void stop_playing(){
	is_playing = FALSE;
     9dc:	10 92 34 02 	sts	0x0234, r1
	sample = 0;
     9e0:	10 92 5c 04 	sts	0x045C, r1
     9e4:	10 92 5b 04 	sts	0x045B, r1
	rampCount = 0;
     9e8:	10 92 4c 04 	sts	0x044C, r1
     9ec:	10 92 4b 04 	sts	0x044B, r1
	increment_a = increment_b = 0;
     9f0:	10 92 56 04 	sts	0x0456, r1
     9f4:	10 92 57 04 	sts	0x0457, r1
     9f8:	10 92 58 04 	sts	0x0458, r1
     9fc:	10 92 59 04 	sts	0x0459, r1
     a00:	10 92 35 02 	sts	0x0235, r1
     a04:	10 92 36 02 	sts	0x0236, r1
     a08:	10 92 37 02 	sts	0x0237, r1
     a0c:	10 92 38 02 	sts	0x0238, r1
	accumulator_a = accumulator_b = 0;
     a10:	10 92 4d 04 	sts	0x044D, r1
     a14:	10 92 4e 04 	sts	0x044E, r1
     a18:	10 92 4f 04 	sts	0x044F, r1
     a1c:	10 92 50 04 	sts	0x0450, r1
     a20:	10 92 42 04 	sts	0x0442, r1
     a24:	10 92 43 04 	sts	0x0443, r1
     a28:	10 92 44 04 	sts	0x0444, r1
     a2c:	10 92 45 04 	sts	0x0445, r1
     a30:	08 95       	ret

00000a32 <update_status_variables>:
}


void update_status_variables(){
	if(changed == TRUE){
     a32:	80 91 4a 04 	lds	r24, 0x044A
     a36:	81 30       	cpi	r24, 0x01	; 1
     a38:	f9 f4       	brne	.+62     	; 0xa78 <update_status_variables+0x46>
		changed = FALSE;
     a3a:	10 92 4a 04 	sts	0x044A, r1

		if (PushState == Pushed && rampCount < 255) {
     a3e:	80 91 33 02 	lds	r24, 0x0233
     a42:	83 30       	cpi	r24, 0x03	; 3
     a44:	41 f4       	brne	.+16     	; 0xa56 <update_status_variables+0x24>
     a46:	80 91 4b 04 	lds	r24, 0x044B
     a4a:	90 91 4c 04 	lds	r25, 0x044C
     a4e:	8f 3f       	cpi	r24, 0xFF	; 255
     a50:	91 05       	cpc	r25, r1
     a52:	90 f4       	brcc	.+36     	; 0xa78 <update_status_variables+0x46>
     a54:	08 c0       	rjmp	.+16     	; 0xa66 <update_status_variables+0x34>
			rampCount++;
		}
		if (PushState == NoPush && rampCount > 0 ) {
     a56:	81 30       	cpi	r24, 0x01	; 1
     a58:	79 f4       	brne	.+30     	; 0xa78 <update_status_variables+0x46>
     a5a:	80 91 4b 04 	lds	r24, 0x044B
     a5e:	90 91 4c 04 	lds	r25, 0x044C
     a62:	89 2b       	or	r24, r25
     a64:	49 f0       	breq	.+18     	; 0xa78 <update_status_variables+0x46>
			rampCount++;
     a66:	80 91 4b 04 	lds	r24, 0x044B
     a6a:	90 91 4c 04 	lds	r25, 0x044C
     a6e:	01 96       	adiw	r24, 0x01	; 1
     a70:	90 93 4c 04 	sts	0x044C, r25
     a74:	80 93 4b 04 	sts	0x044B, r24
     a78:	08 95       	ret

00000a7a <__fixunssfsi>:
     a7a:	cf 92       	push	r12
     a7c:	df 92       	push	r13
     a7e:	ef 92       	push	r14
     a80:	ff 92       	push	r15
     a82:	0f 93       	push	r16
     a84:	1f 93       	push	r17
     a86:	6b 01       	movw	r12, r22
     a88:	7c 01       	movw	r14, r24
     a8a:	20 e0       	ldi	r18, 0x00	; 0
     a8c:	30 e0       	ldi	r19, 0x00	; 0
     a8e:	40 e0       	ldi	r20, 0x00	; 0
     a90:	5f e4       	ldi	r21, 0x4F	; 79
     a92:	0e 94 07 08 	call	0x100e	; 0x100e <__gesf2>
     a96:	87 fd       	sbrc	r24, 7
     a98:	0e c0       	rjmp	.+28     	; 0xab6 <__fixunssfsi+0x3c>
     a9a:	20 e0       	ldi	r18, 0x00	; 0
     a9c:	30 e0       	ldi	r19, 0x00	; 0
     a9e:	40 e0       	ldi	r20, 0x00	; 0
     aa0:	5f e4       	ldi	r21, 0x4F	; 79
     aa2:	c7 01       	movw	r24, r14
     aa4:	b6 01       	movw	r22, r12
     aa6:	0e 94 f2 06 	call	0xde4	; 0xde4 <__subsf3>
     aaa:	0e 94 92 08 	call	0x1124	; 0x1124 <__fixsfsi>
     aae:	8b 01       	movw	r16, r22
     ab0:	9c 01       	movw	r18, r24
     ab2:	30 58       	subi	r19, 0x80	; 128
     ab4:	06 c0       	rjmp	.+12     	; 0xac2 <__fixunssfsi+0x48>
     ab6:	c7 01       	movw	r24, r14
     ab8:	b6 01       	movw	r22, r12
     aba:	0e 94 92 08 	call	0x1124	; 0x1124 <__fixsfsi>
     abe:	8b 01       	movw	r16, r22
     ac0:	9c 01       	movw	r18, r24
     ac2:	b8 01       	movw	r22, r16
     ac4:	c9 01       	movw	r24, r18
     ac6:	1f 91       	pop	r17
     ac8:	0f 91       	pop	r16
     aca:	ff 90       	pop	r15
     acc:	ef 90       	pop	r14
     ace:	df 90       	pop	r13
     ad0:	cf 90       	pop	r12
     ad2:	08 95       	ret

00000ad4 <_fpadd_parts>:
     ad4:	a4 e0       	ldi	r26, 0x04	; 4
     ad6:	b0 e0       	ldi	r27, 0x00	; 0
     ad8:	e0 e7       	ldi	r30, 0x70	; 112
     ada:	f5 e0       	ldi	r31, 0x05	; 5
     adc:	0c 94 bd 0a 	jmp	0x157a	; 0x157a <__prologue_saves__+0x4>
     ae0:	7c 01       	movw	r14, r24
     ae2:	6a 01       	movw	r12, r20
     ae4:	fc 01       	movw	r30, r24
     ae6:	80 81       	ld	r24, Z
     ae8:	82 30       	cpi	r24, 0x02	; 2
     aea:	08 f4       	brcc	.+2      	; 0xaee <_fpadd_parts+0x1a>
     aec:	4a c1       	rjmp	.+660    	; 0xd82 <_fpadd_parts+0x2ae>
     aee:	fb 01       	movw	r30, r22
     af0:	90 81       	ld	r25, Z
     af2:	92 30       	cpi	r25, 0x02	; 2
     af4:	08 f4       	brcc	.+2      	; 0xaf8 <_fpadd_parts+0x24>
     af6:	42 c1       	rjmp	.+644    	; 0xd7c <_fpadd_parts+0x2a8>
     af8:	84 30       	cpi	r24, 0x04	; 4
     afa:	79 f4       	brne	.+30     	; 0xb1a <_fpadd_parts+0x46>
     afc:	94 30       	cpi	r25, 0x04	; 4
     afe:	09 f0       	breq	.+2      	; 0xb02 <_fpadd_parts+0x2e>
     b00:	40 c1       	rjmp	.+640    	; 0xd82 <_fpadd_parts+0x2ae>
     b02:	f7 01       	movw	r30, r14
     b04:	91 81       	ldd	r25, Z+1	; 0x01
     b06:	fb 01       	movw	r30, r22
     b08:	81 81       	ldd	r24, Z+1	; 0x01
     b0a:	98 17       	cp	r25, r24
     b0c:	09 f4       	brne	.+2      	; 0xb10 <_fpadd_parts+0x3c>
     b0e:	39 c1       	rjmp	.+626    	; 0xd82 <_fpadd_parts+0x2ae>
     b10:	ae e4       	ldi	r26, 0x4E	; 78
     b12:	ea 2e       	mov	r14, r26
     b14:	a1 e0       	ldi	r26, 0x01	; 1
     b16:	fa 2e       	mov	r15, r26
     b18:	34 c1       	rjmp	.+616    	; 0xd82 <_fpadd_parts+0x2ae>
     b1a:	94 30       	cpi	r25, 0x04	; 4
     b1c:	09 f4       	brne	.+2      	; 0xb20 <_fpadd_parts+0x4c>
     b1e:	2e c1       	rjmp	.+604    	; 0xd7c <_fpadd_parts+0x2a8>
     b20:	92 30       	cpi	r25, 0x02	; 2
     b22:	91 f4       	brne	.+36     	; 0xb48 <_fpadd_parts+0x74>
     b24:	82 30       	cpi	r24, 0x02	; 2
     b26:	09 f0       	breq	.+2      	; 0xb2a <_fpadd_parts+0x56>
     b28:	2c c1       	rjmp	.+600    	; 0xd82 <_fpadd_parts+0x2ae>
     b2a:	88 e0       	ldi	r24, 0x08	; 8
     b2c:	f7 01       	movw	r30, r14
     b2e:	da 01       	movw	r26, r20
     b30:	01 90       	ld	r0, Z+
     b32:	0d 92       	st	X+, r0
     b34:	8a 95       	dec	r24
     b36:	e1 f7       	brne	.-8      	; 0xb30 <_fpadd_parts+0x5c>
     b38:	fb 01       	movw	r30, r22
     b3a:	81 81       	ldd	r24, Z+1	; 0x01
     b3c:	f7 01       	movw	r30, r14
     b3e:	91 81       	ldd	r25, Z+1	; 0x01
     b40:	89 23       	and	r24, r25
     b42:	fa 01       	movw	r30, r20
     b44:	81 83       	std	Z+1, r24	; 0x01
     b46:	1c c1       	rjmp	.+568    	; 0xd80 <_fpadd_parts+0x2ac>
     b48:	82 30       	cpi	r24, 0x02	; 2
     b4a:	09 f4       	brne	.+2      	; 0xb4e <_fpadd_parts+0x7a>
     b4c:	17 c1       	rjmp	.+558    	; 0xd7c <_fpadd_parts+0x2a8>
     b4e:	f7 01       	movw	r30, r14
     b50:	82 81       	ldd	r24, Z+2	; 0x02
     b52:	93 81       	ldd	r25, Z+3	; 0x03
     b54:	fb 01       	movw	r30, r22
     b56:	a2 81       	ldd	r26, Z+2	; 0x02
     b58:	b3 81       	ldd	r27, Z+3	; 0x03
     b5a:	f7 01       	movw	r30, r14
     b5c:	04 81       	ldd	r16, Z+4	; 0x04
     b5e:	15 81       	ldd	r17, Z+5	; 0x05
     b60:	26 81       	ldd	r18, Z+6	; 0x06
     b62:	37 81       	ldd	r19, Z+7	; 0x07
     b64:	fb 01       	movw	r30, r22
     b66:	84 80       	ldd	r8, Z+4	; 0x04
     b68:	95 80       	ldd	r9, Z+5	; 0x05
     b6a:	a6 80       	ldd	r10, Z+6	; 0x06
     b6c:	b7 80       	ldd	r11, Z+7	; 0x07
     b6e:	fc 01       	movw	r30, r24
     b70:	ea 1b       	sub	r30, r26
     b72:	fb 0b       	sbc	r31, r27
     b74:	af 01       	movw	r20, r30
     b76:	f7 ff       	sbrs	r31, 7
     b78:	04 c0       	rjmp	.+8      	; 0xb82 <_fpadd_parts+0xae>
     b7a:	44 27       	eor	r20, r20
     b7c:	55 27       	eor	r21, r21
     b7e:	4e 1b       	sub	r20, r30
     b80:	5f 0b       	sbc	r21, r31
     b82:	40 32       	cpi	r20, 0x20	; 32
     b84:	51 05       	cpc	r21, r1
     b86:	0c f0       	brlt	.+2      	; 0xb8a <_fpadd_parts+0xb6>
     b88:	74 c0       	rjmp	.+232    	; 0xc72 <_fpadd_parts+0x19e>
     b8a:	1e 16       	cp	r1, r30
     b8c:	1f 06       	cpc	r1, r31
     b8e:	b4 f5       	brge	.+108    	; 0xbfc <_fpadd_parts+0x128>
     b90:	24 01       	movw	r4, r8
     b92:	35 01       	movw	r6, r10
     b94:	04 2e       	mov	r0, r20
     b96:	04 c0       	rjmp	.+8      	; 0xba0 <_fpadd_parts+0xcc>
     b98:	76 94       	lsr	r7
     b9a:	67 94       	ror	r6
     b9c:	57 94       	ror	r5
     b9e:	47 94       	ror	r4
     ba0:	0a 94       	dec	r0
     ba2:	d2 f7       	brpl	.-12     	; 0xb98 <_fpadd_parts+0xc4>
     ba4:	49 82       	std	Y+1, r4	; 0x01
     ba6:	5a 82       	std	Y+2, r5	; 0x02
     ba8:	6b 82       	std	Y+3, r6	; 0x03
     baa:	7c 82       	std	Y+4, r7	; 0x04
     bac:	41 2c       	mov	r4, r1
     bae:	51 2c       	mov	r5, r1
     bb0:	32 01       	movw	r6, r4
     bb2:	43 94       	inc	r4
     bb4:	04 c0       	rjmp	.+8      	; 0xbbe <_fpadd_parts+0xea>
     bb6:	44 0c       	add	r4, r4
     bb8:	55 1c       	adc	r5, r5
     bba:	66 1c       	adc	r6, r6
     bbc:	77 1c       	adc	r7, r7
     bbe:	4a 95       	dec	r20
     bc0:	d2 f7       	brpl	.-12     	; 0xbb6 <_fpadd_parts+0xe2>
     bc2:	41 e0       	ldi	r20, 0x01	; 1
     bc4:	44 1a       	sub	r4, r20
     bc6:	51 08       	sbc	r5, r1
     bc8:	61 08       	sbc	r6, r1
     bca:	71 08       	sbc	r7, r1
     bcc:	48 20       	and	r4, r8
     bce:	59 20       	and	r5, r9
     bd0:	6a 20       	and	r6, r10
     bd2:	7b 20       	and	r7, r11
     bd4:	81 2c       	mov	r8, r1
     bd6:	91 2c       	mov	r9, r1
     bd8:	54 01       	movw	r10, r8
     bda:	83 94       	inc	r8
     bdc:	45 28       	or	r4, r5
     bde:	46 28       	or	r4, r6
     be0:	47 28       	or	r4, r7
     be2:	19 f4       	brne	.+6      	; 0xbea <_fpadd_parts+0x116>
     be4:	81 2c       	mov	r8, r1
     be6:	91 2c       	mov	r9, r1
     be8:	54 01       	movw	r10, r8
     bea:	49 80       	ldd	r4, Y+1	; 0x01
     bec:	5a 80       	ldd	r5, Y+2	; 0x02
     bee:	6b 80       	ldd	r6, Y+3	; 0x03
     bf0:	7c 80       	ldd	r7, Y+4	; 0x04
     bf2:	84 28       	or	r8, r4
     bf4:	95 28       	or	r9, r5
     bf6:	a6 28       	or	r10, r6
     bf8:	b7 28       	or	r11, r7
     bfa:	46 c0       	rjmp	.+140    	; 0xc88 <_fpadd_parts+0x1b4>
     bfc:	ef 2b       	or	r30, r31
     bfe:	09 f4       	brne	.+2      	; 0xc02 <_fpadd_parts+0x12e>
     c00:	43 c0       	rjmp	.+134    	; 0xc88 <_fpadd_parts+0x1b4>
     c02:	84 0f       	add	r24, r20
     c04:	95 1f       	adc	r25, r21
     c06:	28 01       	movw	r4, r16
     c08:	39 01       	movw	r6, r18
     c0a:	04 2e       	mov	r0, r20
     c0c:	04 c0       	rjmp	.+8      	; 0xc16 <_fpadd_parts+0x142>
     c0e:	76 94       	lsr	r7
     c10:	67 94       	ror	r6
     c12:	57 94       	ror	r5
     c14:	47 94       	ror	r4
     c16:	0a 94       	dec	r0
     c18:	d2 f7       	brpl	.-12     	; 0xc0e <_fpadd_parts+0x13a>
     c1a:	49 82       	std	Y+1, r4	; 0x01
     c1c:	5a 82       	std	Y+2, r5	; 0x02
     c1e:	6b 82       	std	Y+3, r6	; 0x03
     c20:	7c 82       	std	Y+4, r7	; 0x04
     c22:	41 2c       	mov	r4, r1
     c24:	51 2c       	mov	r5, r1
     c26:	32 01       	movw	r6, r4
     c28:	43 94       	inc	r4
     c2a:	04 c0       	rjmp	.+8      	; 0xc34 <_fpadd_parts+0x160>
     c2c:	44 0c       	add	r4, r4
     c2e:	55 1c       	adc	r5, r5
     c30:	66 1c       	adc	r6, r6
     c32:	77 1c       	adc	r7, r7
     c34:	4a 95       	dec	r20
     c36:	d2 f7       	brpl	.-12     	; 0xc2c <_fpadd_parts+0x158>
     c38:	41 e0       	ldi	r20, 0x01	; 1
     c3a:	44 1a       	sub	r4, r20
     c3c:	51 08       	sbc	r5, r1
     c3e:	61 08       	sbc	r6, r1
     c40:	71 08       	sbc	r7, r1
     c42:	40 22       	and	r4, r16
     c44:	51 22       	and	r5, r17
     c46:	62 22       	and	r6, r18
     c48:	73 22       	and	r7, r19
     c4a:	01 e0       	ldi	r16, 0x01	; 1
     c4c:	10 e0       	ldi	r17, 0x00	; 0
     c4e:	20 e0       	ldi	r18, 0x00	; 0
     c50:	30 e0       	ldi	r19, 0x00	; 0
     c52:	45 28       	or	r4, r5
     c54:	46 28       	or	r4, r6
     c56:	47 28       	or	r4, r7
     c58:	19 f4       	brne	.+6      	; 0xc60 <_fpadd_parts+0x18c>
     c5a:	00 e0       	ldi	r16, 0x00	; 0
     c5c:	10 e0       	ldi	r17, 0x00	; 0
     c5e:	98 01       	movw	r18, r16
     c60:	49 80       	ldd	r4, Y+1	; 0x01
     c62:	5a 80       	ldd	r5, Y+2	; 0x02
     c64:	6b 80       	ldd	r6, Y+3	; 0x03
     c66:	7c 80       	ldd	r7, Y+4	; 0x04
     c68:	04 29       	or	r16, r4
     c6a:	15 29       	or	r17, r5
     c6c:	26 29       	or	r18, r6
     c6e:	37 29       	or	r19, r7
     c70:	0b c0       	rjmp	.+22     	; 0xc88 <_fpadd_parts+0x1b4>
     c72:	a8 17       	cp	r26, r24
     c74:	b9 07       	cpc	r27, r25
     c76:	24 f4       	brge	.+8      	; 0xc80 <_fpadd_parts+0x1ac>
     c78:	81 2c       	mov	r8, r1
     c7a:	91 2c       	mov	r9, r1
     c7c:	54 01       	movw	r10, r8
     c7e:	04 c0       	rjmp	.+8      	; 0xc88 <_fpadd_parts+0x1b4>
     c80:	cd 01       	movw	r24, r26
     c82:	00 e0       	ldi	r16, 0x00	; 0
     c84:	10 e0       	ldi	r17, 0x00	; 0
     c86:	98 01       	movw	r18, r16
     c88:	f7 01       	movw	r30, r14
     c8a:	41 81       	ldd	r20, Z+1	; 0x01
     c8c:	fb 01       	movw	r30, r22
     c8e:	51 81       	ldd	r21, Z+1	; 0x01
     c90:	45 17       	cp	r20, r21
     c92:	09 f4       	brne	.+2      	; 0xc96 <_fpadd_parts+0x1c2>
     c94:	46 c0       	rjmp	.+140    	; 0xd22 <_fpadd_parts+0x24e>
     c96:	44 23       	and	r20, r20
     c98:	49 f0       	breq	.+18     	; 0xcac <_fpadd_parts+0x1d8>
     c9a:	24 01       	movw	r4, r8
     c9c:	35 01       	movw	r6, r10
     c9e:	40 1a       	sub	r4, r16
     ca0:	51 0a       	sbc	r5, r17
     ca2:	62 0a       	sbc	r6, r18
     ca4:	73 0a       	sbc	r7, r19
     ca6:	93 01       	movw	r18, r6
     ca8:	82 01       	movw	r16, r4
     caa:	04 c0       	rjmp	.+8      	; 0xcb4 <_fpadd_parts+0x1e0>
     cac:	08 19       	sub	r16, r8
     cae:	19 09       	sbc	r17, r9
     cb0:	2a 09       	sbc	r18, r10
     cb2:	3b 09       	sbc	r19, r11
     cb4:	37 fd       	sbrc	r19, 7
     cb6:	05 c0       	rjmp	.+10     	; 0xcc2 <_fpadd_parts+0x1ee>
     cb8:	f6 01       	movw	r30, r12
     cba:	11 82       	std	Z+1, r1	; 0x01
     cbc:	93 83       	std	Z+3, r25	; 0x03
     cbe:	82 83       	std	Z+2, r24	; 0x02
     cc0:	0c c0       	rjmp	.+24     	; 0xcda <_fpadd_parts+0x206>
     cc2:	41 e0       	ldi	r20, 0x01	; 1
     cc4:	f6 01       	movw	r30, r12
     cc6:	41 83       	std	Z+1, r20	; 0x01
     cc8:	93 83       	std	Z+3, r25	; 0x03
     cca:	82 83       	std	Z+2, r24	; 0x02
     ccc:	30 95       	com	r19
     cce:	20 95       	com	r18
     cd0:	10 95       	com	r17
     cd2:	01 95       	neg	r16
     cd4:	1f 4f       	sbci	r17, 0xFF	; 255
     cd6:	2f 4f       	sbci	r18, 0xFF	; 255
     cd8:	3f 4f       	sbci	r19, 0xFF	; 255
     cda:	04 83       	std	Z+4, r16	; 0x04
     cdc:	15 83       	std	Z+5, r17	; 0x05
     cde:	26 83       	std	Z+6, r18	; 0x06
     ce0:	37 83       	std	Z+7, r19	; 0x07
     ce2:	0e c0       	rjmp	.+28     	; 0xd00 <_fpadd_parts+0x22c>
     ce4:	88 0f       	add	r24, r24
     ce6:	99 1f       	adc	r25, r25
     ce8:	aa 1f       	adc	r26, r26
     cea:	bb 1f       	adc	r27, r27
     cec:	f6 01       	movw	r30, r12
     cee:	84 83       	std	Z+4, r24	; 0x04
     cf0:	95 83       	std	Z+5, r25	; 0x05
     cf2:	a6 83       	std	Z+6, r26	; 0x06
     cf4:	b7 83       	std	Z+7, r27	; 0x07
     cf6:	82 81       	ldd	r24, Z+2	; 0x02
     cf8:	93 81       	ldd	r25, Z+3	; 0x03
     cfa:	01 97       	sbiw	r24, 0x01	; 1
     cfc:	93 83       	std	Z+3, r25	; 0x03
     cfe:	82 83       	std	Z+2, r24	; 0x02
     d00:	f6 01       	movw	r30, r12
     d02:	84 81       	ldd	r24, Z+4	; 0x04
     d04:	95 81       	ldd	r25, Z+5	; 0x05
     d06:	a6 81       	ldd	r26, Z+6	; 0x06
     d08:	b7 81       	ldd	r27, Z+7	; 0x07
     d0a:	ac 01       	movw	r20, r24
     d0c:	bd 01       	movw	r22, r26
     d0e:	41 50       	subi	r20, 0x01	; 1
     d10:	51 09       	sbc	r21, r1
     d12:	61 09       	sbc	r22, r1
     d14:	71 09       	sbc	r23, r1
     d16:	4f 3f       	cpi	r20, 0xFF	; 255
     d18:	5f 4f       	sbci	r21, 0xFF	; 255
     d1a:	6f 4f       	sbci	r22, 0xFF	; 255
     d1c:	7f 43       	sbci	r23, 0x3F	; 63
     d1e:	10 f3       	brcs	.-60     	; 0xce4 <_fpadd_parts+0x210>
     d20:	0c c0       	rjmp	.+24     	; 0xd3a <_fpadd_parts+0x266>
     d22:	f6 01       	movw	r30, r12
     d24:	41 83       	std	Z+1, r20	; 0x01
     d26:	93 83       	std	Z+3, r25	; 0x03
     d28:	82 83       	std	Z+2, r24	; 0x02
     d2a:	08 0d       	add	r16, r8
     d2c:	19 1d       	adc	r17, r9
     d2e:	2a 1d       	adc	r18, r10
     d30:	3b 1d       	adc	r19, r11
     d32:	04 83       	std	Z+4, r16	; 0x04
     d34:	15 83       	std	Z+5, r17	; 0x05
     d36:	26 83       	std	Z+6, r18	; 0x06
     d38:	37 83       	std	Z+7, r19	; 0x07
     d3a:	83 e0       	ldi	r24, 0x03	; 3
     d3c:	f6 01       	movw	r30, r12
     d3e:	80 83       	st	Z, r24
     d40:	44 81       	ldd	r20, Z+4	; 0x04
     d42:	55 81       	ldd	r21, Z+5	; 0x05
     d44:	66 81       	ldd	r22, Z+6	; 0x06
     d46:	77 81       	ldd	r23, Z+7	; 0x07
     d48:	77 ff       	sbrs	r23, 7
     d4a:	1a c0       	rjmp	.+52     	; 0xd80 <_fpadd_parts+0x2ac>
     d4c:	db 01       	movw	r26, r22
     d4e:	ca 01       	movw	r24, r20
     d50:	81 70       	andi	r24, 0x01	; 1
     d52:	99 27       	eor	r25, r25
     d54:	aa 27       	eor	r26, r26
     d56:	bb 27       	eor	r27, r27
     d58:	76 95       	lsr	r23
     d5a:	67 95       	ror	r22
     d5c:	57 95       	ror	r21
     d5e:	47 95       	ror	r20
     d60:	84 2b       	or	r24, r20
     d62:	95 2b       	or	r25, r21
     d64:	a6 2b       	or	r26, r22
     d66:	b7 2b       	or	r27, r23
     d68:	84 83       	std	Z+4, r24	; 0x04
     d6a:	95 83       	std	Z+5, r25	; 0x05
     d6c:	a6 83       	std	Z+6, r26	; 0x06
     d6e:	b7 83       	std	Z+7, r27	; 0x07
     d70:	82 81       	ldd	r24, Z+2	; 0x02
     d72:	93 81       	ldd	r25, Z+3	; 0x03
     d74:	01 96       	adiw	r24, 0x01	; 1
     d76:	93 83       	std	Z+3, r25	; 0x03
     d78:	82 83       	std	Z+2, r24	; 0x02
     d7a:	02 c0       	rjmp	.+4      	; 0xd80 <_fpadd_parts+0x2ac>
     d7c:	7b 01       	movw	r14, r22
     d7e:	01 c0       	rjmp	.+2      	; 0xd82 <_fpadd_parts+0x2ae>
     d80:	76 01       	movw	r14, r12
     d82:	c7 01       	movw	r24, r14
     d84:	24 96       	adiw	r28, 0x04	; 4
     d86:	e0 e1       	ldi	r30, 0x10	; 16
     d88:	0c 94 d9 0a 	jmp	0x15b2	; 0x15b2 <__epilogue_restores__+0x4>

00000d8c <__addsf3>:
     d8c:	a0 e2       	ldi	r26, 0x20	; 32
     d8e:	b0 e0       	ldi	r27, 0x00	; 0
     d90:	ec ec       	ldi	r30, 0xCC	; 204
     d92:	f6 e0       	ldi	r31, 0x06	; 6
     d94:	0c 94 cb 0a 	jmp	0x1596	; 0x1596 <__prologue_saves__+0x20>
     d98:	6d 8f       	std	Y+29, r22	; 0x1d
     d9a:	7e 8f       	std	Y+30, r23	; 0x1e
     d9c:	8f 8f       	std	Y+31, r24	; 0x1f
     d9e:	98 a3       	std	Y+32, r25	; 0x20
     da0:	29 8f       	std	Y+25, r18	; 0x19
     da2:	3a 8f       	std	Y+26, r19	; 0x1a
     da4:	4b 8f       	std	Y+27, r20	; 0x1b
     da6:	5c 8f       	std	Y+28, r21	; 0x1c
     da8:	be 01       	movw	r22, r28
     daa:	6f 5e       	subi	r22, 0xEF	; 239
     dac:	7f 4f       	sbci	r23, 0xFF	; 255
     dae:	ce 01       	movw	r24, r28
     db0:	4d 96       	adiw	r24, 0x1d	; 29
     db2:	0e 94 ab 09 	call	0x1356	; 0x1356 <__unpack_f>
     db6:	be 01       	movw	r22, r28
     db8:	67 5f       	subi	r22, 0xF7	; 247
     dba:	7f 4f       	sbci	r23, 0xFF	; 255
     dbc:	ce 01       	movw	r24, r28
     dbe:	49 96       	adiw	r24, 0x19	; 25
     dc0:	0e 94 ab 09 	call	0x1356	; 0x1356 <__unpack_f>
     dc4:	ae 01       	movw	r20, r28
     dc6:	4f 5f       	subi	r20, 0xFF	; 255
     dc8:	5f 4f       	sbci	r21, 0xFF	; 255
     dca:	be 01       	movw	r22, r28
     dcc:	67 5f       	subi	r22, 0xF7	; 247
     dce:	7f 4f       	sbci	r23, 0xFF	; 255
     dd0:	ce 01       	movw	r24, r28
     dd2:	41 96       	adiw	r24, 0x11	; 17
     dd4:	0e 94 6a 05 	call	0xad4	; 0xad4 <_fpadd_parts>
     dd8:	0e 94 e1 08 	call	0x11c2	; 0x11c2 <__pack_f>
     ddc:	a0 96       	adiw	r28, 0x20	; 32
     dde:	e2 e0       	ldi	r30, 0x02	; 2
     de0:	0c 94 e7 0a 	jmp	0x15ce	; 0x15ce <__epilogue_restores__+0x20>

00000de4 <__subsf3>:
     de4:	a0 e2       	ldi	r26, 0x20	; 32
     de6:	b0 e0       	ldi	r27, 0x00	; 0
     de8:	e8 ef       	ldi	r30, 0xF8	; 248
     dea:	f6 e0       	ldi	r31, 0x06	; 6
     dec:	0c 94 cb 0a 	jmp	0x1596	; 0x1596 <__prologue_saves__+0x20>
     df0:	6d 8f       	std	Y+29, r22	; 0x1d
     df2:	7e 8f       	std	Y+30, r23	; 0x1e
     df4:	8f 8f       	std	Y+31, r24	; 0x1f
     df6:	98 a3       	std	Y+32, r25	; 0x20
     df8:	29 8f       	std	Y+25, r18	; 0x19
     dfa:	3a 8f       	std	Y+26, r19	; 0x1a
     dfc:	4b 8f       	std	Y+27, r20	; 0x1b
     dfe:	5c 8f       	std	Y+28, r21	; 0x1c
     e00:	be 01       	movw	r22, r28
     e02:	6f 5e       	subi	r22, 0xEF	; 239
     e04:	7f 4f       	sbci	r23, 0xFF	; 255
     e06:	ce 01       	movw	r24, r28
     e08:	4d 96       	adiw	r24, 0x1d	; 29
     e0a:	0e 94 ab 09 	call	0x1356	; 0x1356 <__unpack_f>
     e0e:	be 01       	movw	r22, r28
     e10:	67 5f       	subi	r22, 0xF7	; 247
     e12:	7f 4f       	sbci	r23, 0xFF	; 255
     e14:	ce 01       	movw	r24, r28
     e16:	49 96       	adiw	r24, 0x19	; 25
     e18:	0e 94 ab 09 	call	0x1356	; 0x1356 <__unpack_f>
     e1c:	8a 85       	ldd	r24, Y+10	; 0x0a
     e1e:	91 e0       	ldi	r25, 0x01	; 1
     e20:	89 27       	eor	r24, r25
     e22:	8a 87       	std	Y+10, r24	; 0x0a
     e24:	ae 01       	movw	r20, r28
     e26:	4f 5f       	subi	r20, 0xFF	; 255
     e28:	5f 4f       	sbci	r21, 0xFF	; 255
     e2a:	be 01       	movw	r22, r28
     e2c:	67 5f       	subi	r22, 0xF7	; 247
     e2e:	7f 4f       	sbci	r23, 0xFF	; 255
     e30:	ce 01       	movw	r24, r28
     e32:	41 96       	adiw	r24, 0x11	; 17
     e34:	0e 94 6a 05 	call	0xad4	; 0xad4 <_fpadd_parts>
     e38:	0e 94 e1 08 	call	0x11c2	; 0x11c2 <__pack_f>
     e3c:	a0 96       	adiw	r28, 0x20	; 32
     e3e:	e2 e0       	ldi	r30, 0x02	; 2
     e40:	0c 94 e7 0a 	jmp	0x15ce	; 0x15ce <__epilogue_restores__+0x20>

00000e44 <__mulsf3>:
     e44:	a0 e2       	ldi	r26, 0x20	; 32
     e46:	b0 e0       	ldi	r27, 0x00	; 0
     e48:	e8 e2       	ldi	r30, 0x28	; 40
     e4a:	f7 e0       	ldi	r31, 0x07	; 7
     e4c:	0c 94 bd 0a 	jmp	0x157a	; 0x157a <__prologue_saves__+0x4>
     e50:	6d 8f       	std	Y+29, r22	; 0x1d
     e52:	7e 8f       	std	Y+30, r23	; 0x1e
     e54:	8f 8f       	std	Y+31, r24	; 0x1f
     e56:	98 a3       	std	Y+32, r25	; 0x20
     e58:	29 8f       	std	Y+25, r18	; 0x19
     e5a:	3a 8f       	std	Y+26, r19	; 0x1a
     e5c:	4b 8f       	std	Y+27, r20	; 0x1b
     e5e:	5c 8f       	std	Y+28, r21	; 0x1c
     e60:	be 01       	movw	r22, r28
     e62:	6f 5e       	subi	r22, 0xEF	; 239
     e64:	7f 4f       	sbci	r23, 0xFF	; 255
     e66:	ce 01       	movw	r24, r28
     e68:	4d 96       	adiw	r24, 0x1d	; 29
     e6a:	0e 94 ab 09 	call	0x1356	; 0x1356 <__unpack_f>
     e6e:	be 01       	movw	r22, r28
     e70:	67 5f       	subi	r22, 0xF7	; 247
     e72:	7f 4f       	sbci	r23, 0xFF	; 255
     e74:	ce 01       	movw	r24, r28
     e76:	49 96       	adiw	r24, 0x19	; 25
     e78:	0e 94 ab 09 	call	0x1356	; 0x1356 <__unpack_f>
     e7c:	99 89       	ldd	r25, Y+17	; 0x11
     e7e:	92 30       	cpi	r25, 0x02	; 2
     e80:	08 f4       	brcc	.+2      	; 0xe84 <__mulsf3+0x40>
     e82:	12 c0       	rjmp	.+36     	; 0xea8 <__mulsf3+0x64>
     e84:	89 85       	ldd	r24, Y+9	; 0x09
     e86:	82 30       	cpi	r24, 0x02	; 2
     e88:	08 f4       	brcc	.+2      	; 0xe8c <__mulsf3+0x48>
     e8a:	1a c0       	rjmp	.+52     	; 0xec0 <__mulsf3+0x7c>
     e8c:	94 30       	cpi	r25, 0x04	; 4
     e8e:	21 f4       	brne	.+8      	; 0xe98 <__mulsf3+0x54>
     e90:	82 30       	cpi	r24, 0x02	; 2
     e92:	09 f4       	brne	.+2      	; 0xe96 <__mulsf3+0x52>
     e94:	b4 c0       	rjmp	.+360    	; 0xffe <__mulsf3+0x1ba>
     e96:	08 c0       	rjmp	.+16     	; 0xea8 <__mulsf3+0x64>
     e98:	84 30       	cpi	r24, 0x04	; 4
     e9a:	21 f4       	brne	.+8      	; 0xea4 <__mulsf3+0x60>
     e9c:	92 30       	cpi	r25, 0x02	; 2
     e9e:	09 f4       	brne	.+2      	; 0xea2 <__mulsf3+0x5e>
     ea0:	ae c0       	rjmp	.+348    	; 0xffe <__mulsf3+0x1ba>
     ea2:	0e c0       	rjmp	.+28     	; 0xec0 <__mulsf3+0x7c>
     ea4:	92 30       	cpi	r25, 0x02	; 2
     ea6:	51 f4       	brne	.+20     	; 0xebc <__mulsf3+0x78>
     ea8:	81 e0       	ldi	r24, 0x01	; 1
     eaa:	2a 89       	ldd	r18, Y+18	; 0x12
     eac:	9a 85       	ldd	r25, Y+10	; 0x0a
     eae:	29 13       	cpse	r18, r25
     eb0:	01 c0       	rjmp	.+2      	; 0xeb4 <__mulsf3+0x70>
     eb2:	80 e0       	ldi	r24, 0x00	; 0
     eb4:	8a 8b       	std	Y+18, r24	; 0x12
     eb6:	ce 01       	movw	r24, r28
     eb8:	41 96       	adiw	r24, 0x11	; 17
     eba:	a3 c0       	rjmp	.+326    	; 0x1002 <__mulsf3+0x1be>
     ebc:	82 30       	cpi	r24, 0x02	; 2
     ebe:	51 f4       	brne	.+20     	; 0xed4 <__mulsf3+0x90>
     ec0:	81 e0       	ldi	r24, 0x01	; 1
     ec2:	2a 89       	ldd	r18, Y+18	; 0x12
     ec4:	9a 85       	ldd	r25, Y+10	; 0x0a
     ec6:	29 13       	cpse	r18, r25
     ec8:	01 c0       	rjmp	.+2      	; 0xecc <__mulsf3+0x88>
     eca:	80 e0       	ldi	r24, 0x00	; 0
     ecc:	8a 87       	std	Y+10, r24	; 0x0a
     ece:	ce 01       	movw	r24, r28
     ed0:	09 96       	adiw	r24, 0x09	; 9
     ed2:	97 c0       	rjmp	.+302    	; 0x1002 <__mulsf3+0x1be>
     ed4:	8d 88       	ldd	r8, Y+21	; 0x15
     ed6:	9e 88       	ldd	r9, Y+22	; 0x16
     ed8:	af 88       	ldd	r10, Y+23	; 0x17
     eda:	b8 8c       	ldd	r11, Y+24	; 0x18
     edc:	0d 85       	ldd	r16, Y+13	; 0x0d
     ede:	1e 85       	ldd	r17, Y+14	; 0x0e
     ee0:	2f 85       	ldd	r18, Y+15	; 0x0f
     ee2:	38 89       	ldd	r19, Y+16	; 0x10
     ee4:	e0 e2       	ldi	r30, 0x20	; 32
     ee6:	f0 e0       	ldi	r31, 0x00	; 0
     ee8:	80 e0       	ldi	r24, 0x00	; 0
     eea:	90 e0       	ldi	r25, 0x00	; 0
     eec:	dc 01       	movw	r26, r24
     eee:	c1 2c       	mov	r12, r1
     ef0:	d1 2c       	mov	r13, r1
     ef2:	76 01       	movw	r14, r12
     ef4:	40 e0       	ldi	r20, 0x00	; 0
     ef6:	50 e0       	ldi	r21, 0x00	; 0
     ef8:	ba 01       	movw	r22, r20
     efa:	80 fe       	sbrs	r8, 0
     efc:	18 c0       	rjmp	.+48     	; 0xf2e <__mulsf3+0xea>
     efe:	40 0f       	add	r20, r16
     f00:	51 1f       	adc	r21, r17
     f02:	62 1f       	adc	r22, r18
     f04:	73 1f       	adc	r23, r19
     f06:	8c 0d       	add	r24, r12
     f08:	9d 1d       	adc	r25, r13
     f0a:	ae 1d       	adc	r26, r14
     f0c:	bf 1d       	adc	r27, r15
     f0e:	41 2c       	mov	r4, r1
     f10:	51 2c       	mov	r5, r1
     f12:	32 01       	movw	r6, r4
     f14:	43 94       	inc	r4
     f16:	40 17       	cp	r20, r16
     f18:	51 07       	cpc	r21, r17
     f1a:	62 07       	cpc	r22, r18
     f1c:	73 07       	cpc	r23, r19
     f1e:	18 f0       	brcs	.+6      	; 0xf26 <__mulsf3+0xe2>
     f20:	41 2c       	mov	r4, r1
     f22:	51 2c       	mov	r5, r1
     f24:	32 01       	movw	r6, r4
     f26:	84 0d       	add	r24, r4
     f28:	95 1d       	adc	r25, r5
     f2a:	a6 1d       	adc	r26, r6
     f2c:	b7 1d       	adc	r27, r7
     f2e:	cc 0c       	add	r12, r12
     f30:	dd 1c       	adc	r13, r13
     f32:	ee 1c       	adc	r14, r14
     f34:	ff 1c       	adc	r15, r15
     f36:	37 ff       	sbrs	r19, 7
     f38:	02 c0       	rjmp	.+4      	; 0xf3e <__mulsf3+0xfa>
     f3a:	68 94       	set
     f3c:	c0 f8       	bld	r12, 0
     f3e:	00 0f       	add	r16, r16
     f40:	11 1f       	adc	r17, r17
     f42:	22 1f       	adc	r18, r18
     f44:	33 1f       	adc	r19, r19
     f46:	b6 94       	lsr	r11
     f48:	a7 94       	ror	r10
     f4a:	97 94       	ror	r9
     f4c:	87 94       	ror	r8
     f4e:	31 97       	sbiw	r30, 0x01	; 1
     f50:	a1 f6       	brne	.-88     	; 0xefa <__mulsf3+0xb6>
     f52:	2b 89       	ldd	r18, Y+19	; 0x13
     f54:	3c 89       	ldd	r19, Y+20	; 0x14
     f56:	eb 85       	ldd	r30, Y+11	; 0x0b
     f58:	fc 85       	ldd	r31, Y+12	; 0x0c
     f5a:	2e 0f       	add	r18, r30
     f5c:	3f 1f       	adc	r19, r31
     f5e:	2e 5f       	subi	r18, 0xFE	; 254
     f60:	3f 4f       	sbci	r19, 0xFF	; 255
     f62:	3c 83       	std	Y+4, r19	; 0x04
     f64:	2b 83       	std	Y+3, r18	; 0x03
     f66:	21 e0       	ldi	r18, 0x01	; 1
     f68:	ea 89       	ldd	r30, Y+18	; 0x12
     f6a:	3a 85       	ldd	r19, Y+10	; 0x0a
     f6c:	e3 13       	cpse	r30, r19
     f6e:	01 c0       	rjmp	.+2      	; 0xf72 <__mulsf3+0x12e>
     f70:	20 e0       	ldi	r18, 0x00	; 0
     f72:	2a 83       	std	Y+2, r18	; 0x02
     f74:	eb 81       	ldd	r30, Y+3	; 0x03
     f76:	fc 81       	ldd	r31, Y+4	; 0x04
     f78:	0c c0       	rjmp	.+24     	; 0xf92 <__mulsf3+0x14e>
     f7a:	80 ff       	sbrs	r24, 0
     f7c:	05 c0       	rjmp	.+10     	; 0xf88 <__mulsf3+0x144>
     f7e:	76 95       	lsr	r23
     f80:	67 95       	ror	r22
     f82:	57 95       	ror	r21
     f84:	47 95       	ror	r20
     f86:	70 68       	ori	r23, 0x80	; 128
     f88:	b6 95       	lsr	r27
     f8a:	a7 95       	ror	r26
     f8c:	97 95       	ror	r25
     f8e:	87 95       	ror	r24
     f90:	31 96       	adiw	r30, 0x01	; 1
     f92:	b7 fd       	sbrc	r27, 7
     f94:	f2 cf       	rjmp	.-28     	; 0xf7a <__mulsf3+0x136>
     f96:	9f 01       	movw	r18, r30
     f98:	0c c0       	rjmp	.+24     	; 0xfb2 <__mulsf3+0x16e>
     f9a:	88 0f       	add	r24, r24
     f9c:	99 1f       	adc	r25, r25
     f9e:	aa 1f       	adc	r26, r26
     fa0:	bb 1f       	adc	r27, r27
     fa2:	77 fd       	sbrc	r23, 7
     fa4:	81 60       	ori	r24, 0x01	; 1
     fa6:	44 0f       	add	r20, r20
     fa8:	55 1f       	adc	r21, r21
     faa:	66 1f       	adc	r22, r22
     fac:	77 1f       	adc	r23, r23
     fae:	21 50       	subi	r18, 0x01	; 1
     fb0:	31 09       	sbc	r19, r1
     fb2:	00 97       	sbiw	r24, 0x00	; 0
     fb4:	a1 05       	cpc	r26, r1
     fb6:	e0 e4       	ldi	r30, 0x40	; 64
     fb8:	be 07       	cpc	r27, r30
     fba:	78 f3       	brcs	.-34     	; 0xf9a <__mulsf3+0x156>
     fbc:	2b 83       	std	Y+3, r18	; 0x03
     fbe:	3c 83       	std	Y+4, r19	; 0x04
     fc0:	8c 01       	movw	r16, r24
     fc2:	9d 01       	movw	r18, r26
     fc4:	0f 77       	andi	r16, 0x7F	; 127
     fc6:	11 27       	eor	r17, r17
     fc8:	22 27       	eor	r18, r18
     fca:	33 27       	eor	r19, r19
     fcc:	00 34       	cpi	r16, 0x40	; 64
     fce:	11 05       	cpc	r17, r1
     fd0:	21 05       	cpc	r18, r1
     fd2:	31 05       	cpc	r19, r1
     fd4:	59 f4       	brne	.+22     	; 0xfec <__mulsf3+0x1a8>
     fd6:	87 fd       	sbrc	r24, 7
     fd8:	09 c0       	rjmp	.+18     	; 0xfec <__mulsf3+0x1a8>
     fda:	45 2b       	or	r20, r21
     fdc:	46 2b       	or	r20, r22
     fde:	47 2b       	or	r20, r23
     fe0:	29 f0       	breq	.+10     	; 0xfec <__mulsf3+0x1a8>
     fe2:	80 5c       	subi	r24, 0xC0	; 192
     fe4:	9f 4f       	sbci	r25, 0xFF	; 255
     fe6:	af 4f       	sbci	r26, 0xFF	; 255
     fe8:	bf 4f       	sbci	r27, 0xFF	; 255
     fea:	80 78       	andi	r24, 0x80	; 128
     fec:	8d 83       	std	Y+5, r24	; 0x05
     fee:	9e 83       	std	Y+6, r25	; 0x06
     ff0:	af 83       	std	Y+7, r26	; 0x07
     ff2:	b8 87       	std	Y+8, r27	; 0x08
     ff4:	83 e0       	ldi	r24, 0x03	; 3
     ff6:	89 83       	std	Y+1, r24	; 0x01
     ff8:	ce 01       	movw	r24, r28
     ffa:	01 96       	adiw	r24, 0x01	; 1
     ffc:	02 c0       	rjmp	.+4      	; 0x1002 <__mulsf3+0x1be>
     ffe:	8e e4       	ldi	r24, 0x4E	; 78
    1000:	91 e0       	ldi	r25, 0x01	; 1
    1002:	0e 94 e1 08 	call	0x11c2	; 0x11c2 <__pack_f>
    1006:	a0 96       	adiw	r28, 0x20	; 32
    1008:	e0 e1       	ldi	r30, 0x10	; 16
    100a:	0c 94 d9 0a 	jmp	0x15b2	; 0x15b2 <__epilogue_restores__+0x4>

0000100e <__gesf2>:
    100e:	a8 e1       	ldi	r26, 0x18	; 24
    1010:	b0 e0       	ldi	r27, 0x00	; 0
    1012:	ed e0       	ldi	r30, 0x0D	; 13
    1014:	f8 e0       	ldi	r31, 0x08	; 8
    1016:	0c 94 cb 0a 	jmp	0x1596	; 0x1596 <__prologue_saves__+0x20>
    101a:	6d 8b       	std	Y+21, r22	; 0x15
    101c:	7e 8b       	std	Y+22, r23	; 0x16
    101e:	8f 8b       	std	Y+23, r24	; 0x17
    1020:	98 8f       	std	Y+24, r25	; 0x18
    1022:	29 8b       	std	Y+17, r18	; 0x11
    1024:	3a 8b       	std	Y+18, r19	; 0x12
    1026:	4b 8b       	std	Y+19, r20	; 0x13
    1028:	5c 8b       	std	Y+20, r21	; 0x14
    102a:	be 01       	movw	r22, r28
    102c:	67 5f       	subi	r22, 0xF7	; 247
    102e:	7f 4f       	sbci	r23, 0xFF	; 255
    1030:	ce 01       	movw	r24, r28
    1032:	45 96       	adiw	r24, 0x15	; 21
    1034:	0e 94 ab 09 	call	0x1356	; 0x1356 <__unpack_f>
    1038:	be 01       	movw	r22, r28
    103a:	6f 5f       	subi	r22, 0xFF	; 255
    103c:	7f 4f       	sbci	r23, 0xFF	; 255
    103e:	ce 01       	movw	r24, r28
    1040:	41 96       	adiw	r24, 0x11	; 17
    1042:	0e 94 ab 09 	call	0x1356	; 0x1356 <__unpack_f>
    1046:	89 85       	ldd	r24, Y+9	; 0x09
    1048:	82 30       	cpi	r24, 0x02	; 2
    104a:	58 f0       	brcs	.+22     	; 0x1062 <__gesf2+0x54>
    104c:	89 81       	ldd	r24, Y+1	; 0x01
    104e:	82 30       	cpi	r24, 0x02	; 2
    1050:	40 f0       	brcs	.+16     	; 0x1062 <__gesf2+0x54>
    1052:	be 01       	movw	r22, r28
    1054:	6f 5f       	subi	r22, 0xFF	; 255
    1056:	7f 4f       	sbci	r23, 0xFF	; 255
    1058:	ce 01       	movw	r24, r28
    105a:	09 96       	adiw	r24, 0x09	; 9
    105c:	0e 94 1a 0a 	call	0x1434	; 0x1434 <__fpcmp_parts_f>
    1060:	01 c0       	rjmp	.+2      	; 0x1064 <__gesf2+0x56>
    1062:	8f ef       	ldi	r24, 0xFF	; 255
    1064:	68 96       	adiw	r28, 0x18	; 24
    1066:	e2 e0       	ldi	r30, 0x02	; 2
    1068:	0c 94 e7 0a 	jmp	0x15ce	; 0x15ce <__epilogue_restores__+0x20>

0000106c <__floatsisf>:
    106c:	a8 e0       	ldi	r26, 0x08	; 8
    106e:	b0 e0       	ldi	r27, 0x00	; 0
    1070:	ec e3       	ldi	r30, 0x3C	; 60
    1072:	f8 e0       	ldi	r31, 0x08	; 8
    1074:	0c 94 c9 0a 	jmp	0x1592	; 0x1592 <__prologue_saves__+0x1c>
    1078:	23 e0       	ldi	r18, 0x03	; 3
    107a:	29 83       	std	Y+1, r18	; 0x01
    107c:	8b 01       	movw	r16, r22
    107e:	9c 01       	movw	r18, r24
    1080:	00 27       	eor	r16, r16
    1082:	37 fd       	sbrc	r19, 7
    1084:	03 95       	inc	r16
    1086:	11 27       	eor	r17, r17
    1088:	22 27       	eor	r18, r18
    108a:	33 27       	eor	r19, r19
    108c:	40 2f       	mov	r20, r16
    108e:	0a 83       	std	Y+2, r16	; 0x02
    1090:	61 15       	cp	r22, r1
    1092:	71 05       	cpc	r23, r1
    1094:	81 05       	cpc	r24, r1
    1096:	91 05       	cpc	r25, r1
    1098:	19 f4       	brne	.+6      	; 0x10a0 <__floatsisf+0x34>
    109a:	82 e0       	ldi	r24, 0x02	; 2
    109c:	89 83       	std	Y+1, r24	; 0x01
    109e:	35 c0       	rjmp	.+106    	; 0x110a <__floatsisf+0x9e>
    10a0:	2e e1       	ldi	r18, 0x1E	; 30
    10a2:	30 e0       	ldi	r19, 0x00	; 0
    10a4:	3c 83       	std	Y+4, r19	; 0x04
    10a6:	2b 83       	std	Y+3, r18	; 0x03
    10a8:	44 23       	and	r20, r20
    10aa:	71 f0       	breq	.+28     	; 0x10c8 <__floatsisf+0x5c>
    10ac:	61 15       	cp	r22, r1
    10ae:	71 05       	cpc	r23, r1
    10b0:	81 05       	cpc	r24, r1
    10b2:	20 e8       	ldi	r18, 0x80	; 128
    10b4:	92 07       	cpc	r25, r18
    10b6:	71 f1       	breq	.+92     	; 0x1114 <__floatsisf+0xa8>
    10b8:	00 27       	eor	r16, r16
    10ba:	11 27       	eor	r17, r17
    10bc:	98 01       	movw	r18, r16
    10be:	06 1b       	sub	r16, r22
    10c0:	17 0b       	sbc	r17, r23
    10c2:	28 0b       	sbc	r18, r24
    10c4:	39 0b       	sbc	r19, r25
    10c6:	02 c0       	rjmp	.+4      	; 0x10cc <__floatsisf+0x60>
    10c8:	8b 01       	movw	r16, r22
    10ca:	9c 01       	movw	r18, r24
    10cc:	c9 01       	movw	r24, r18
    10ce:	b8 01       	movw	r22, r16
    10d0:	0e 94 a0 0a 	call	0x1540	; 0x1540 <__clzsi2>
    10d4:	01 97       	sbiw	r24, 0x01	; 1
    10d6:	18 16       	cp	r1, r24
    10d8:	19 06       	cpc	r1, r25
    10da:	2c f0       	brlt	.+10     	; 0x10e6 <__floatsisf+0x7a>
    10dc:	0d 83       	std	Y+5, r16	; 0x05
    10de:	1e 83       	std	Y+6, r17	; 0x06
    10e0:	2f 83       	std	Y+7, r18	; 0x07
    10e2:	38 87       	std	Y+8, r19	; 0x08
    10e4:	12 c0       	rjmp	.+36     	; 0x110a <__floatsisf+0x9e>
    10e6:	08 2e       	mov	r0, r24
    10e8:	04 c0       	rjmp	.+8      	; 0x10f2 <__floatsisf+0x86>
    10ea:	00 0f       	add	r16, r16
    10ec:	11 1f       	adc	r17, r17
    10ee:	22 1f       	adc	r18, r18
    10f0:	33 1f       	adc	r19, r19
    10f2:	0a 94       	dec	r0
    10f4:	d2 f7       	brpl	.-12     	; 0x10ea <__floatsisf+0x7e>
    10f6:	0d 83       	std	Y+5, r16	; 0x05
    10f8:	1e 83       	std	Y+6, r17	; 0x06
    10fa:	2f 83       	std	Y+7, r18	; 0x07
    10fc:	38 87       	std	Y+8, r19	; 0x08
    10fe:	2e e1       	ldi	r18, 0x1E	; 30
    1100:	30 e0       	ldi	r19, 0x00	; 0
    1102:	28 1b       	sub	r18, r24
    1104:	39 0b       	sbc	r19, r25
    1106:	3c 83       	std	Y+4, r19	; 0x04
    1108:	2b 83       	std	Y+3, r18	; 0x03
    110a:	ce 01       	movw	r24, r28
    110c:	01 96       	adiw	r24, 0x01	; 1
    110e:	0e 94 e1 08 	call	0x11c2	; 0x11c2 <__pack_f>
    1112:	04 c0       	rjmp	.+8      	; 0x111c <__floatsisf+0xb0>
    1114:	60 e0       	ldi	r22, 0x00	; 0
    1116:	70 e0       	ldi	r23, 0x00	; 0
    1118:	80 e0       	ldi	r24, 0x00	; 0
    111a:	9f ec       	ldi	r25, 0xCF	; 207
    111c:	28 96       	adiw	r28, 0x08	; 8
    111e:	e4 e0       	ldi	r30, 0x04	; 4
    1120:	0c 94 e5 0a 	jmp	0x15ca	; 0x15ca <__epilogue_restores__+0x1c>

00001124 <__fixsfsi>:
    1124:	ac e0       	ldi	r26, 0x0C	; 12
    1126:	b0 e0       	ldi	r27, 0x00	; 0
    1128:	e8 e9       	ldi	r30, 0x98	; 152
    112a:	f8 e0       	ldi	r31, 0x08	; 8
    112c:	0c 94 c9 0a 	jmp	0x1592	; 0x1592 <__prologue_saves__+0x1c>
    1130:	69 87       	std	Y+9, r22	; 0x09
    1132:	7a 87       	std	Y+10, r23	; 0x0a
    1134:	8b 87       	std	Y+11, r24	; 0x0b
    1136:	9c 87       	std	Y+12, r25	; 0x0c
    1138:	be 01       	movw	r22, r28
    113a:	6f 5f       	subi	r22, 0xFF	; 255
    113c:	7f 4f       	sbci	r23, 0xFF	; 255
    113e:	ce 01       	movw	r24, r28
    1140:	09 96       	adiw	r24, 0x09	; 9
    1142:	0e 94 ab 09 	call	0x1356	; 0x1356 <__unpack_f>
    1146:	89 81       	ldd	r24, Y+1	; 0x01
    1148:	82 30       	cpi	r24, 0x02	; 2
    114a:	91 f1       	breq	.+100    	; 0x11b0 <__fixsfsi+0x8c>
    114c:	82 30       	cpi	r24, 0x02	; 2
    114e:	80 f1       	brcs	.+96     	; 0x11b0 <__fixsfsi+0x8c>
    1150:	84 30       	cpi	r24, 0x04	; 4
    1152:	41 f4       	brne	.+16     	; 0x1164 <__fixsfsi+0x40>
    1154:	8a 81       	ldd	r24, Y+2	; 0x02
    1156:	88 23       	and	r24, r24
    1158:	31 f1       	breq	.+76     	; 0x11a6 <__fixsfsi+0x82>
    115a:	00 e0       	ldi	r16, 0x00	; 0
    115c:	10 e0       	ldi	r17, 0x00	; 0
    115e:	20 e0       	ldi	r18, 0x00	; 0
    1160:	30 e8       	ldi	r19, 0x80	; 128
    1162:	29 c0       	rjmp	.+82     	; 0x11b6 <__fixsfsi+0x92>
    1164:	2b 81       	ldd	r18, Y+3	; 0x03
    1166:	3c 81       	ldd	r19, Y+4	; 0x04
    1168:	37 fd       	sbrc	r19, 7
    116a:	22 c0       	rjmp	.+68     	; 0x11b0 <__fixsfsi+0x8c>
    116c:	2f 31       	cpi	r18, 0x1F	; 31
    116e:	31 05       	cpc	r19, r1
    1170:	8c f7       	brge	.-30     	; 0x1154 <__fixsfsi+0x30>
    1172:	8e e1       	ldi	r24, 0x1E	; 30
    1174:	90 e0       	ldi	r25, 0x00	; 0
    1176:	82 1b       	sub	r24, r18
    1178:	93 0b       	sbc	r25, r19
    117a:	0d 81       	ldd	r16, Y+5	; 0x05
    117c:	1e 81       	ldd	r17, Y+6	; 0x06
    117e:	2f 81       	ldd	r18, Y+7	; 0x07
    1180:	38 85       	ldd	r19, Y+8	; 0x08
    1182:	04 c0       	rjmp	.+8      	; 0x118c <__fixsfsi+0x68>
    1184:	36 95       	lsr	r19
    1186:	27 95       	ror	r18
    1188:	17 95       	ror	r17
    118a:	07 95       	ror	r16
    118c:	8a 95       	dec	r24
    118e:	d2 f7       	brpl	.-12     	; 0x1184 <__fixsfsi+0x60>
    1190:	8a 81       	ldd	r24, Y+2	; 0x02
    1192:	88 23       	and	r24, r24
    1194:	81 f0       	breq	.+32     	; 0x11b6 <__fixsfsi+0x92>
    1196:	30 95       	com	r19
    1198:	20 95       	com	r18
    119a:	10 95       	com	r17
    119c:	01 95       	neg	r16
    119e:	1f 4f       	sbci	r17, 0xFF	; 255
    11a0:	2f 4f       	sbci	r18, 0xFF	; 255
    11a2:	3f 4f       	sbci	r19, 0xFF	; 255
    11a4:	08 c0       	rjmp	.+16     	; 0x11b6 <__fixsfsi+0x92>
    11a6:	0f ef       	ldi	r16, 0xFF	; 255
    11a8:	1f ef       	ldi	r17, 0xFF	; 255
    11aa:	2f ef       	ldi	r18, 0xFF	; 255
    11ac:	3f e7       	ldi	r19, 0x7F	; 127
    11ae:	03 c0       	rjmp	.+6      	; 0x11b6 <__fixsfsi+0x92>
    11b0:	00 e0       	ldi	r16, 0x00	; 0
    11b2:	10 e0       	ldi	r17, 0x00	; 0
    11b4:	98 01       	movw	r18, r16
    11b6:	b8 01       	movw	r22, r16
    11b8:	c9 01       	movw	r24, r18
    11ba:	2c 96       	adiw	r28, 0x0c	; 12
    11bc:	e4 e0       	ldi	r30, 0x04	; 4
    11be:	0c 94 e5 0a 	jmp	0x15ca	; 0x15ca <__epilogue_restores__+0x1c>

000011c2 <__pack_f>:
    11c2:	0f 93       	push	r16
    11c4:	1f 93       	push	r17
    11c6:	cf 93       	push	r28
    11c8:	df 93       	push	r29
    11ca:	dc 01       	movw	r26, r24
    11cc:	14 96       	adiw	r26, 0x04	; 4
    11ce:	4d 91       	ld	r20, X+
    11d0:	5d 91       	ld	r21, X+
    11d2:	6d 91       	ld	r22, X+
    11d4:	7c 91       	ld	r23, X
    11d6:	17 97       	sbiw	r26, 0x07	; 7
    11d8:	11 96       	adiw	r26, 0x01	; 1
    11da:	ec 91       	ld	r30, X
    11dc:	11 97       	sbiw	r26, 0x01	; 1
    11de:	8c 91       	ld	r24, X
    11e0:	82 30       	cpi	r24, 0x02	; 2
    11e2:	20 f4       	brcc	.+8      	; 0x11ec <__pack_f+0x2a>
    11e4:	60 61       	ori	r22, 0x10	; 16
    11e6:	8f ef       	ldi	r24, 0xFF	; 255
    11e8:	90 e0       	ldi	r25, 0x00	; 0
    11ea:	a6 c0       	rjmp	.+332    	; 0x1338 <__pack_f+0x176>
    11ec:	84 30       	cpi	r24, 0x04	; 4
    11ee:	09 f4       	brne	.+2      	; 0x11f2 <__pack_f+0x30>
    11f0:	9e c0       	rjmp	.+316    	; 0x132e <__pack_f+0x16c>
    11f2:	82 30       	cpi	r24, 0x02	; 2
    11f4:	09 f4       	brne	.+2      	; 0x11f8 <__pack_f+0x36>
    11f6:	95 c0       	rjmp	.+298    	; 0x1322 <__pack_f+0x160>
    11f8:	41 15       	cp	r20, r1
    11fa:	51 05       	cpc	r21, r1
    11fc:	61 05       	cpc	r22, r1
    11fe:	71 05       	cpc	r23, r1
    1200:	09 f4       	brne	.+2      	; 0x1204 <__pack_f+0x42>
    1202:	92 c0       	rjmp	.+292    	; 0x1328 <__pack_f+0x166>
    1204:	12 96       	adiw	r26, 0x02	; 2
    1206:	2d 91       	ld	r18, X+
    1208:	3c 91       	ld	r19, X
    120a:	13 97       	sbiw	r26, 0x03	; 3
    120c:	22 38       	cpi	r18, 0x82	; 130
    120e:	8f ef       	ldi	r24, 0xFF	; 255
    1210:	38 07       	cpc	r19, r24
    1212:	0c f0       	brlt	.+2      	; 0x1216 <__pack_f+0x54>
    1214:	58 c0       	rjmp	.+176    	; 0x12c6 <__pack_f+0x104>
    1216:	c2 e8       	ldi	r28, 0x82	; 130
    1218:	df ef       	ldi	r29, 0xFF	; 255
    121a:	c2 1b       	sub	r28, r18
    121c:	d3 0b       	sbc	r29, r19
    121e:	ca 31       	cpi	r28, 0x1A	; 26
    1220:	d1 05       	cpc	r29, r1
    1222:	6c f5       	brge	.+90     	; 0x127e <__pack_f+0xbc>
    1224:	8a 01       	movw	r16, r20
    1226:	9b 01       	movw	r18, r22
    1228:	0c 2e       	mov	r0, r28
    122a:	04 c0       	rjmp	.+8      	; 0x1234 <__pack_f+0x72>
    122c:	36 95       	lsr	r19
    122e:	27 95       	ror	r18
    1230:	17 95       	ror	r17
    1232:	07 95       	ror	r16
    1234:	0a 94       	dec	r0
    1236:	d2 f7       	brpl	.-12     	; 0x122c <__pack_f+0x6a>
    1238:	81 e0       	ldi	r24, 0x01	; 1
    123a:	90 e0       	ldi	r25, 0x00	; 0
    123c:	a0 e0       	ldi	r26, 0x00	; 0
    123e:	b0 e0       	ldi	r27, 0x00	; 0
    1240:	0c 2e       	mov	r0, r28
    1242:	04 c0       	rjmp	.+8      	; 0x124c <__pack_f+0x8a>
    1244:	88 0f       	add	r24, r24
    1246:	99 1f       	adc	r25, r25
    1248:	aa 1f       	adc	r26, r26
    124a:	bb 1f       	adc	r27, r27
    124c:	0a 94       	dec	r0
    124e:	d2 f7       	brpl	.-12     	; 0x1244 <__pack_f+0x82>
    1250:	01 97       	sbiw	r24, 0x01	; 1
    1252:	a1 09       	sbc	r26, r1
    1254:	b1 09       	sbc	r27, r1
    1256:	84 23       	and	r24, r20
    1258:	95 23       	and	r25, r21
    125a:	a6 23       	and	r26, r22
    125c:	b7 23       	and	r27, r23
    125e:	41 e0       	ldi	r20, 0x01	; 1
    1260:	50 e0       	ldi	r21, 0x00	; 0
    1262:	60 e0       	ldi	r22, 0x00	; 0
    1264:	70 e0       	ldi	r23, 0x00	; 0
    1266:	89 2b       	or	r24, r25
    1268:	8a 2b       	or	r24, r26
    126a:	8b 2b       	or	r24, r27
    126c:	19 f4       	brne	.+6      	; 0x1274 <__pack_f+0xb2>
    126e:	40 e0       	ldi	r20, 0x00	; 0
    1270:	50 e0       	ldi	r21, 0x00	; 0
    1272:	ba 01       	movw	r22, r20
    1274:	40 2b       	or	r20, r16
    1276:	51 2b       	or	r21, r17
    1278:	62 2b       	or	r22, r18
    127a:	73 2b       	or	r23, r19
    127c:	03 c0       	rjmp	.+6      	; 0x1284 <__pack_f+0xc2>
    127e:	40 e0       	ldi	r20, 0x00	; 0
    1280:	50 e0       	ldi	r21, 0x00	; 0
    1282:	ba 01       	movw	r22, r20
    1284:	db 01       	movw	r26, r22
    1286:	ca 01       	movw	r24, r20
    1288:	8f 77       	andi	r24, 0x7F	; 127
    128a:	99 27       	eor	r25, r25
    128c:	aa 27       	eor	r26, r26
    128e:	bb 27       	eor	r27, r27
    1290:	80 34       	cpi	r24, 0x40	; 64
    1292:	91 05       	cpc	r25, r1
    1294:	a1 05       	cpc	r26, r1
    1296:	b1 05       	cpc	r27, r1
    1298:	39 f4       	brne	.+14     	; 0x12a8 <__pack_f+0xe6>
    129a:	47 ff       	sbrs	r20, 7
    129c:	09 c0       	rjmp	.+18     	; 0x12b0 <__pack_f+0xee>
    129e:	40 5c       	subi	r20, 0xC0	; 192
    12a0:	5f 4f       	sbci	r21, 0xFF	; 255
    12a2:	6f 4f       	sbci	r22, 0xFF	; 255
    12a4:	7f 4f       	sbci	r23, 0xFF	; 255
    12a6:	04 c0       	rjmp	.+8      	; 0x12b0 <__pack_f+0xee>
    12a8:	41 5c       	subi	r20, 0xC1	; 193
    12aa:	5f 4f       	sbci	r21, 0xFF	; 255
    12ac:	6f 4f       	sbci	r22, 0xFF	; 255
    12ae:	7f 4f       	sbci	r23, 0xFF	; 255
    12b0:	81 e0       	ldi	r24, 0x01	; 1
    12b2:	90 e0       	ldi	r25, 0x00	; 0
    12b4:	41 15       	cp	r20, r1
    12b6:	51 05       	cpc	r21, r1
    12b8:	61 05       	cpc	r22, r1
    12ba:	20 e4       	ldi	r18, 0x40	; 64
    12bc:	72 07       	cpc	r23, r18
    12be:	48 f5       	brcc	.+82     	; 0x1312 <__pack_f+0x150>
    12c0:	80 e0       	ldi	r24, 0x00	; 0
    12c2:	90 e0       	ldi	r25, 0x00	; 0
    12c4:	26 c0       	rjmp	.+76     	; 0x1312 <__pack_f+0x150>
    12c6:	20 38       	cpi	r18, 0x80	; 128
    12c8:	31 05       	cpc	r19, r1
    12ca:	8c f5       	brge	.+98     	; 0x132e <__pack_f+0x16c>
    12cc:	db 01       	movw	r26, r22
    12ce:	ca 01       	movw	r24, r20
    12d0:	8f 77       	andi	r24, 0x7F	; 127
    12d2:	99 27       	eor	r25, r25
    12d4:	aa 27       	eor	r26, r26
    12d6:	bb 27       	eor	r27, r27
    12d8:	80 34       	cpi	r24, 0x40	; 64
    12da:	91 05       	cpc	r25, r1
    12dc:	a1 05       	cpc	r26, r1
    12de:	b1 05       	cpc	r27, r1
    12e0:	39 f4       	brne	.+14     	; 0x12f0 <__pack_f+0x12e>
    12e2:	47 ff       	sbrs	r20, 7
    12e4:	09 c0       	rjmp	.+18     	; 0x12f8 <__pack_f+0x136>
    12e6:	40 5c       	subi	r20, 0xC0	; 192
    12e8:	5f 4f       	sbci	r21, 0xFF	; 255
    12ea:	6f 4f       	sbci	r22, 0xFF	; 255
    12ec:	7f 4f       	sbci	r23, 0xFF	; 255
    12ee:	04 c0       	rjmp	.+8      	; 0x12f8 <__pack_f+0x136>
    12f0:	41 5c       	subi	r20, 0xC1	; 193
    12f2:	5f 4f       	sbci	r21, 0xFF	; 255
    12f4:	6f 4f       	sbci	r22, 0xFF	; 255
    12f6:	7f 4f       	sbci	r23, 0xFF	; 255
    12f8:	77 fd       	sbrc	r23, 7
    12fa:	04 c0       	rjmp	.+8      	; 0x1304 <__pack_f+0x142>
    12fc:	c9 01       	movw	r24, r18
    12fe:	81 58       	subi	r24, 0x81	; 129
    1300:	9f 4f       	sbci	r25, 0xFF	; 255
    1302:	07 c0       	rjmp	.+14     	; 0x1312 <__pack_f+0x150>
    1304:	76 95       	lsr	r23
    1306:	67 95       	ror	r22
    1308:	57 95       	ror	r21
    130a:	47 95       	ror	r20
    130c:	c9 01       	movw	r24, r18
    130e:	80 58       	subi	r24, 0x80	; 128
    1310:	9f 4f       	sbci	r25, 0xFF	; 255
    1312:	97 e0       	ldi	r25, 0x07	; 7
    1314:	76 95       	lsr	r23
    1316:	67 95       	ror	r22
    1318:	57 95       	ror	r21
    131a:	47 95       	ror	r20
    131c:	9a 95       	dec	r25
    131e:	d1 f7       	brne	.-12     	; 0x1314 <__pack_f+0x152>
    1320:	0b c0       	rjmp	.+22     	; 0x1338 <__pack_f+0x176>
    1322:	80 e0       	ldi	r24, 0x00	; 0
    1324:	90 e0       	ldi	r25, 0x00	; 0
    1326:	05 c0       	rjmp	.+10     	; 0x1332 <__pack_f+0x170>
    1328:	80 e0       	ldi	r24, 0x00	; 0
    132a:	90 e0       	ldi	r25, 0x00	; 0
    132c:	05 c0       	rjmp	.+10     	; 0x1338 <__pack_f+0x176>
    132e:	8f ef       	ldi	r24, 0xFF	; 255
    1330:	90 e0       	ldi	r25, 0x00	; 0
    1332:	40 e0       	ldi	r20, 0x00	; 0
    1334:	50 e0       	ldi	r21, 0x00	; 0
    1336:	ba 01       	movw	r22, r20
    1338:	98 2f       	mov	r25, r24
    133a:	96 95       	lsr	r25
    133c:	e0 fb       	bst	r30, 0
    133e:	97 f9       	bld	r25, 7
    1340:	36 2f       	mov	r19, r22
    1342:	80 fb       	bst	r24, 0
    1344:	37 f9       	bld	r19, 7
    1346:	64 2f       	mov	r22, r20
    1348:	75 2f       	mov	r23, r21
    134a:	83 2f       	mov	r24, r19
    134c:	df 91       	pop	r29
    134e:	cf 91       	pop	r28
    1350:	1f 91       	pop	r17
    1352:	0f 91       	pop	r16
    1354:	08 95       	ret

00001356 <__unpack_f>:
    1356:	cf 92       	push	r12
    1358:	df 92       	push	r13
    135a:	ef 92       	push	r14
    135c:	dc 01       	movw	r26, r24
    135e:	fb 01       	movw	r30, r22
    1360:	cc 90       	ld	r12, X
    1362:	11 96       	adiw	r26, 0x01	; 1
    1364:	dc 90       	ld	r13, X
    1366:	11 97       	sbiw	r26, 0x01	; 1
    1368:	12 96       	adiw	r26, 0x02	; 2
    136a:	8c 91       	ld	r24, X
    136c:	12 97       	sbiw	r26, 0x02	; 2
    136e:	3f e7       	ldi	r19, 0x7F	; 127
    1370:	e3 2e       	mov	r14, r19
    1372:	e8 22       	and	r14, r24
    1374:	6e 2d       	mov	r22, r14
    1376:	a6 01       	movw	r20, r12
    1378:	70 e0       	ldi	r23, 0x00	; 0
    137a:	98 2f       	mov	r25, r24
    137c:	99 1f       	adc	r25, r25
    137e:	99 27       	eor	r25, r25
    1380:	99 1f       	adc	r25, r25
    1382:	13 96       	adiw	r26, 0x03	; 3
    1384:	2c 91       	ld	r18, X
    1386:	82 2f       	mov	r24, r18
    1388:	88 0f       	add	r24, r24
    138a:	89 2b       	or	r24, r25
    138c:	90 e0       	ldi	r25, 0x00	; 0
    138e:	27 fb       	bst	r18, 7
    1390:	22 27       	eor	r18, r18
    1392:	20 f9       	bld	r18, 0
    1394:	21 83       	std	Z+1, r18	; 0x01
    1396:	00 97       	sbiw	r24, 0x00	; 0
    1398:	29 f5       	brne	.+74     	; 0x13e4 <__unpack_f+0x8e>
    139a:	41 15       	cp	r20, r1
    139c:	51 05       	cpc	r21, r1
    139e:	61 05       	cpc	r22, r1
    13a0:	71 05       	cpc	r23, r1
    13a2:	11 f4       	brne	.+4      	; 0x13a8 <__unpack_f+0x52>
    13a4:	82 e0       	ldi	r24, 0x02	; 2
    13a6:	27 c0       	rjmp	.+78     	; 0x13f6 <__unpack_f+0xa0>
    13a8:	82 e8       	ldi	r24, 0x82	; 130
    13aa:	9f ef       	ldi	r25, 0xFF	; 255
    13ac:	93 83       	std	Z+3, r25	; 0x03
    13ae:	82 83       	std	Z+2, r24	; 0x02
    13b0:	27 e0       	ldi	r18, 0x07	; 7
    13b2:	44 0f       	add	r20, r20
    13b4:	55 1f       	adc	r21, r21
    13b6:	66 1f       	adc	r22, r22
    13b8:	77 1f       	adc	r23, r23
    13ba:	2a 95       	dec	r18
    13bc:	d1 f7       	brne	.-12     	; 0x13b2 <__unpack_f+0x5c>
    13be:	83 e0       	ldi	r24, 0x03	; 3
    13c0:	80 83       	st	Z, r24
    13c2:	09 c0       	rjmp	.+18     	; 0x13d6 <__unpack_f+0x80>
    13c4:	44 0f       	add	r20, r20
    13c6:	55 1f       	adc	r21, r21
    13c8:	66 1f       	adc	r22, r22
    13ca:	77 1f       	adc	r23, r23
    13cc:	82 81       	ldd	r24, Z+2	; 0x02
    13ce:	93 81       	ldd	r25, Z+3	; 0x03
    13d0:	01 97       	sbiw	r24, 0x01	; 1
    13d2:	93 83       	std	Z+3, r25	; 0x03
    13d4:	82 83       	std	Z+2, r24	; 0x02
    13d6:	41 15       	cp	r20, r1
    13d8:	51 05       	cpc	r21, r1
    13da:	61 05       	cpc	r22, r1
    13dc:	80 e4       	ldi	r24, 0x40	; 64
    13de:	78 07       	cpc	r23, r24
    13e0:	88 f3       	brcs	.-30     	; 0x13c4 <__unpack_f+0x6e>
    13e2:	20 c0       	rjmp	.+64     	; 0x1424 <__unpack_f+0xce>
    13e4:	8f 3f       	cpi	r24, 0xFF	; 255
    13e6:	91 05       	cpc	r25, r1
    13e8:	79 f4       	brne	.+30     	; 0x1408 <__unpack_f+0xb2>
    13ea:	41 15       	cp	r20, r1
    13ec:	51 05       	cpc	r21, r1
    13ee:	61 05       	cpc	r22, r1
    13f0:	71 05       	cpc	r23, r1
    13f2:	19 f4       	brne	.+6      	; 0x13fa <__unpack_f+0xa4>
    13f4:	84 e0       	ldi	r24, 0x04	; 4
    13f6:	80 83       	st	Z, r24
    13f8:	19 c0       	rjmp	.+50     	; 0x142c <__unpack_f+0xd6>
    13fa:	e4 fe       	sbrs	r14, 4
    13fc:	03 c0       	rjmp	.+6      	; 0x1404 <__unpack_f+0xae>
    13fe:	81 e0       	ldi	r24, 0x01	; 1
    1400:	80 83       	st	Z, r24
    1402:	10 c0       	rjmp	.+32     	; 0x1424 <__unpack_f+0xce>
    1404:	10 82       	st	Z, r1
    1406:	0e c0       	rjmp	.+28     	; 0x1424 <__unpack_f+0xce>
    1408:	8f 57       	subi	r24, 0x7F	; 127
    140a:	91 09       	sbc	r25, r1
    140c:	93 83       	std	Z+3, r25	; 0x03
    140e:	82 83       	std	Z+2, r24	; 0x02
    1410:	83 e0       	ldi	r24, 0x03	; 3
    1412:	80 83       	st	Z, r24
    1414:	87 e0       	ldi	r24, 0x07	; 7
    1416:	44 0f       	add	r20, r20
    1418:	55 1f       	adc	r21, r21
    141a:	66 1f       	adc	r22, r22
    141c:	77 1f       	adc	r23, r23
    141e:	8a 95       	dec	r24
    1420:	d1 f7       	brne	.-12     	; 0x1416 <__unpack_f+0xc0>
    1422:	70 64       	ori	r23, 0x40	; 64
    1424:	44 83       	std	Z+4, r20	; 0x04
    1426:	55 83       	std	Z+5, r21	; 0x05
    1428:	66 83       	std	Z+6, r22	; 0x06
    142a:	77 83       	std	Z+7, r23	; 0x07
    142c:	ef 90       	pop	r14
    142e:	df 90       	pop	r13
    1430:	cf 90       	pop	r12
    1432:	08 95       	ret

00001434 <__fpcmp_parts_f>:
    1434:	cf 93       	push	r28
    1436:	fc 01       	movw	r30, r24
    1438:	db 01       	movw	r26, r22
    143a:	90 81       	ld	r25, Z
    143c:	92 30       	cpi	r25, 0x02	; 2
    143e:	08 f4       	brcc	.+2      	; 0x1442 <__fpcmp_parts_f+0xe>
    1440:	52 c0       	rjmp	.+164    	; 0x14e6 <__fpcmp_parts_f+0xb2>
    1442:	8c 91       	ld	r24, X
    1444:	82 30       	cpi	r24, 0x02	; 2
    1446:	08 f4       	brcc	.+2      	; 0x144a <__fpcmp_parts_f+0x16>
    1448:	4e c0       	rjmp	.+156    	; 0x14e6 <__fpcmp_parts_f+0xb2>
    144a:	94 30       	cpi	r25, 0x04	; 4
    144c:	71 f4       	brne	.+28     	; 0x146a <__fpcmp_parts_f+0x36>
    144e:	84 30       	cpi	r24, 0x04	; 4
    1450:	39 f4       	brne	.+14     	; 0x1460 <__fpcmp_parts_f+0x2c>
    1452:	11 96       	adiw	r26, 0x01	; 1
    1454:	2c 91       	ld	r18, X
    1456:	30 e0       	ldi	r19, 0x00	; 0
    1458:	81 81       	ldd	r24, Z+1	; 0x01
    145a:	28 1b       	sub	r18, r24
    145c:	31 09       	sbc	r19, r1
    145e:	48 c0       	rjmp	.+144    	; 0x14f0 <__fpcmp_parts_f+0xbc>
    1460:	81 81       	ldd	r24, Z+1	; 0x01
    1462:	88 23       	and	r24, r24
    1464:	09 f4       	brne	.+2      	; 0x1468 <__fpcmp_parts_f+0x34>
    1466:	3f c0       	rjmp	.+126    	; 0x14e6 <__fpcmp_parts_f+0xb2>
    1468:	3b c0       	rjmp	.+118    	; 0x14e0 <__fpcmp_parts_f+0xac>
    146a:	84 30       	cpi	r24, 0x04	; 4
    146c:	29 f4       	brne	.+10     	; 0x1478 <__fpcmp_parts_f+0x44>
    146e:	11 96       	adiw	r26, 0x01	; 1
    1470:	8c 91       	ld	r24, X
    1472:	81 11       	cpse	r24, r1
    1474:	38 c0       	rjmp	.+112    	; 0x14e6 <__fpcmp_parts_f+0xb2>
    1476:	34 c0       	rjmp	.+104    	; 0x14e0 <__fpcmp_parts_f+0xac>
    1478:	92 30       	cpi	r25, 0x02	; 2
    147a:	19 f4       	brne	.+6      	; 0x1482 <__fpcmp_parts_f+0x4e>
    147c:	82 30       	cpi	r24, 0x02	; 2
    147e:	b9 f7       	brne	.-18     	; 0x146e <__fpcmp_parts_f+0x3a>
    1480:	35 c0       	rjmp	.+106    	; 0x14ec <__fpcmp_parts_f+0xb8>
    1482:	82 30       	cpi	r24, 0x02	; 2
    1484:	69 f3       	breq	.-38     	; 0x1460 <__fpcmp_parts_f+0x2c>
    1486:	c1 81       	ldd	r28, Z+1	; 0x01
    1488:	11 96       	adiw	r26, 0x01	; 1
    148a:	8c 91       	ld	r24, X
    148c:	11 97       	sbiw	r26, 0x01	; 1
    148e:	c8 13       	cpse	r28, r24
    1490:	1d c0       	rjmp	.+58     	; 0x14cc <__fpcmp_parts_f+0x98>
    1492:	22 81       	ldd	r18, Z+2	; 0x02
    1494:	33 81       	ldd	r19, Z+3	; 0x03
    1496:	12 96       	adiw	r26, 0x02	; 2
    1498:	8d 91       	ld	r24, X+
    149a:	9c 91       	ld	r25, X
    149c:	13 97       	sbiw	r26, 0x03	; 3
    149e:	82 17       	cp	r24, r18
    14a0:	93 07       	cpc	r25, r19
    14a2:	0c f4       	brge	.+2      	; 0x14a6 <__fpcmp_parts_f+0x72>
    14a4:	13 c0       	rjmp	.+38     	; 0x14cc <__fpcmp_parts_f+0x98>
    14a6:	28 17       	cp	r18, r24
    14a8:	39 07       	cpc	r19, r25
    14aa:	0c f4       	brge	.+2      	; 0x14ae <__fpcmp_parts_f+0x7a>
    14ac:	17 c0       	rjmp	.+46     	; 0x14dc <__fpcmp_parts_f+0xa8>
    14ae:	44 81       	ldd	r20, Z+4	; 0x04
    14b0:	55 81       	ldd	r21, Z+5	; 0x05
    14b2:	66 81       	ldd	r22, Z+6	; 0x06
    14b4:	77 81       	ldd	r23, Z+7	; 0x07
    14b6:	14 96       	adiw	r26, 0x04	; 4
    14b8:	8d 91       	ld	r24, X+
    14ba:	9d 91       	ld	r25, X+
    14bc:	0d 90       	ld	r0, X+
    14be:	bc 91       	ld	r27, X
    14c0:	a0 2d       	mov	r26, r0
    14c2:	84 17       	cp	r24, r20
    14c4:	95 07       	cpc	r25, r21
    14c6:	a6 07       	cpc	r26, r22
    14c8:	b7 07       	cpc	r27, r23
    14ca:	18 f4       	brcc	.+6      	; 0x14d2 <__fpcmp_parts_f+0x9e>
    14cc:	c1 11       	cpse	r28, r1
    14ce:	08 c0       	rjmp	.+16     	; 0x14e0 <__fpcmp_parts_f+0xac>
    14d0:	0a c0       	rjmp	.+20     	; 0x14e6 <__fpcmp_parts_f+0xb2>
    14d2:	48 17       	cp	r20, r24
    14d4:	59 07       	cpc	r21, r25
    14d6:	6a 07       	cpc	r22, r26
    14d8:	7b 07       	cpc	r23, r27
    14da:	40 f4       	brcc	.+16     	; 0x14ec <__fpcmp_parts_f+0xb8>
    14dc:	c1 11       	cpse	r28, r1
    14de:	03 c0       	rjmp	.+6      	; 0x14e6 <__fpcmp_parts_f+0xb2>
    14e0:	2f ef       	ldi	r18, 0xFF	; 255
    14e2:	3f ef       	ldi	r19, 0xFF	; 255
    14e4:	05 c0       	rjmp	.+10     	; 0x14f0 <__fpcmp_parts_f+0xbc>
    14e6:	21 e0       	ldi	r18, 0x01	; 1
    14e8:	30 e0       	ldi	r19, 0x00	; 0
    14ea:	02 c0       	rjmp	.+4      	; 0x14f0 <__fpcmp_parts_f+0xbc>
    14ec:	20 e0       	ldi	r18, 0x00	; 0
    14ee:	30 e0       	ldi	r19, 0x00	; 0
    14f0:	c9 01       	movw	r24, r18
    14f2:	cf 91       	pop	r28
    14f4:	08 95       	ret

000014f6 <main>:
}

int main(void) {
  // Init port B to show keyboard result
  DDRB = 0xff;
    14f6:	8f ef       	ldi	r24, 0xFF	; 255
    14f8:	84 b9       	out	0x04, r24	; 4
  // and turn out the LEDs
  PORTB = 0xff;   
    14fa:	85 b9       	out	0x05, r24	; 5
  
  // init the UART
  uart_init();
    14fc:	0e 94 54 02 	call	0x4a8	; 0x4a8 <uart_init>
  stdout = stdin = stderr = &uart_str;
    1500:	80 e0       	ldi	r24, 0x00	; 0
    1502:	91 e0       	ldi	r25, 0x01	; 1
    1504:	90 93 62 04 	sts	0x0462, r25
    1508:	80 93 61 04 	sts	0x0461, r24
    150c:	90 93 5e 04 	sts	0x045E, r25
    1510:	80 93 5d 04 	sts	0x045D, r24
    1514:	90 93 60 04 	sts	0x0460, r25
    1518:	80 93 5f 04 	sts	0x045F, r24
  fprintf(stdout, "Starting...\n\r");
    151c:	bc 01       	movw	r22, r24
    151e:	86 ea       	ldi	r24, 0xA6	; 166
    1520:	91 e0       	ldi	r25, 0x01	; 1
    1522:	0e 94 02 0b 	call	0x1604	; 0x1604 <fputs>
  initialize();
    1526:	0e 94 38 02 	call	0x470	; 0x470 <initialize>

  //play(1336, 852);
	
  //endless loop to read keyboard
  while(1) {
	update_status_variables();
    152a:	0e 94 19 05 	call	0xa32	; 0xa32 <update_status_variables>
	//Used for debouncing
    if (time1>=t1) {
    152e:	80 91 2b 02 	lds	r24, 0x022B
    1532:	90 91 2c 02 	lds	r25, 0x022C
    1536:	44 97       	sbiw	r24, 0x14	; 20
    1538:	c0 f3       	brcs	.-16     	; 0x152a <main+0x34>
		task1();
    153a:	0e 94 76 00 	call	0xec	; 0xec <task1>
    153e:	f5 cf       	rjmp	.-22     	; 0x152a <main+0x34>

00001540 <__clzsi2>:
    1540:	0e 94 a9 0a 	call	0x1552	; 0x1552 <__clzhi2>
    1544:	84 ff       	sbrs	r24, 4
    1546:	08 95       	ret
    1548:	cb 01       	movw	r24, r22
    154a:	0e 94 a9 0a 	call	0x1552	; 0x1552 <__clzhi2>
    154e:	80 5f       	subi	r24, 0xF0	; 240
    1550:	08 95       	ret

00001552 <__clzhi2>:
    1552:	aa 27       	eor	r26, r26
    1554:	99 23       	and	r25, r25
    1556:	29 f4       	brne	.+10     	; 0x1562 <__clzhi2+0x10>
    1558:	a8 5f       	subi	r26, 0xF8	; 248
    155a:	98 2b       	or	r25, r24
    155c:	11 f4       	brne	.+4      	; 0x1562 <__clzhi2+0x10>
    155e:	80 e1       	ldi	r24, 0x10	; 16
    1560:	08 95       	ret
    1562:	90 31       	cpi	r25, 0x10	; 16
    1564:	18 f4       	brcc	.+6      	; 0x156c <__clzhi2+0x1a>
    1566:	ad 5f       	subi	r26, 0xFD	; 253
    1568:	92 95       	swap	r25
    156a:	a3 95       	inc	r26
    156c:	99 0f       	add	r25, r25
    156e:	e8 f7       	brcc	.-6      	; 0x156a <__clzhi2+0x18>
    1570:	8a 2f       	mov	r24, r26
    1572:	99 27       	eor	r25, r25
    1574:	08 95       	ret

00001576 <__prologue_saves__>:
    1576:	2f 92       	push	r2
    1578:	3f 92       	push	r3
    157a:	4f 92       	push	r4
    157c:	5f 92       	push	r5
    157e:	6f 92       	push	r6
    1580:	7f 92       	push	r7
    1582:	8f 92       	push	r8
    1584:	9f 92       	push	r9
    1586:	af 92       	push	r10
    1588:	bf 92       	push	r11
    158a:	cf 92       	push	r12
    158c:	df 92       	push	r13
    158e:	ef 92       	push	r14
    1590:	ff 92       	push	r15
    1592:	0f 93       	push	r16
    1594:	1f 93       	push	r17
    1596:	cf 93       	push	r28
    1598:	df 93       	push	r29
    159a:	cd b7       	in	r28, 0x3d	; 61
    159c:	de b7       	in	r29, 0x3e	; 62
    159e:	ca 1b       	sub	r28, r26
    15a0:	db 0b       	sbc	r29, r27
    15a2:	0f b6       	in	r0, 0x3f	; 63
    15a4:	f8 94       	cli
    15a6:	de bf       	out	0x3e, r29	; 62
    15a8:	0f be       	out	0x3f, r0	; 63
    15aa:	cd bf       	out	0x3d, r28	; 61
    15ac:	09 94       	ijmp

000015ae <__epilogue_restores__>:
    15ae:	2a 88       	ldd	r2, Y+18	; 0x12
    15b0:	39 88       	ldd	r3, Y+17	; 0x11
    15b2:	48 88       	ldd	r4, Y+16	; 0x10
    15b4:	5f 84       	ldd	r5, Y+15	; 0x0f
    15b6:	6e 84       	ldd	r6, Y+14	; 0x0e
    15b8:	7d 84       	ldd	r7, Y+13	; 0x0d
    15ba:	8c 84       	ldd	r8, Y+12	; 0x0c
    15bc:	9b 84       	ldd	r9, Y+11	; 0x0b
    15be:	aa 84       	ldd	r10, Y+10	; 0x0a
    15c0:	b9 84       	ldd	r11, Y+9	; 0x09
    15c2:	c8 84       	ldd	r12, Y+8	; 0x08
    15c4:	df 80       	ldd	r13, Y+7	; 0x07
    15c6:	ee 80       	ldd	r14, Y+6	; 0x06
    15c8:	fd 80       	ldd	r15, Y+5	; 0x05
    15ca:	0c 81       	ldd	r16, Y+4	; 0x04
    15cc:	1b 81       	ldd	r17, Y+3	; 0x03
    15ce:	aa 81       	ldd	r26, Y+2	; 0x02
    15d0:	b9 81       	ldd	r27, Y+1	; 0x01
    15d2:	ce 0f       	add	r28, r30
    15d4:	d1 1d       	adc	r29, r1
    15d6:	0f b6       	in	r0, 0x3f	; 63
    15d8:	f8 94       	cli
    15da:	de bf       	out	0x3e, r29	; 62
    15dc:	0f be       	out	0x3f, r0	; 63
    15de:	cd bf       	out	0x3d, r28	; 61
    15e0:	ed 01       	movw	r28, r26
    15e2:	08 95       	ret

000015e4 <fprintf>:
    15e4:	cf 93       	push	r28
    15e6:	df 93       	push	r29
    15e8:	cd b7       	in	r28, 0x3d	; 61
    15ea:	de b7       	in	r29, 0x3e	; 62
    15ec:	ce 01       	movw	r24, r28
    15ee:	09 96       	adiw	r24, 0x09	; 9
    15f0:	ac 01       	movw	r20, r24
    15f2:	6f 81       	ldd	r22, Y+7	; 0x07
    15f4:	78 85       	ldd	r23, Y+8	; 0x08
    15f6:	8d 81       	ldd	r24, Y+5	; 0x05
    15f8:	9e 81       	ldd	r25, Y+6	; 0x06
    15fa:	0e 94 33 0b 	call	0x1666	; 0x1666 <vfprintf>
    15fe:	df 91       	pop	r29
    1600:	cf 91       	pop	r28
    1602:	08 95       	ret

00001604 <fputs>:
    1604:	ef 92       	push	r14
    1606:	ff 92       	push	r15
    1608:	0f 93       	push	r16
    160a:	1f 93       	push	r17
    160c:	cf 93       	push	r28
    160e:	df 93       	push	r29
    1610:	7c 01       	movw	r14, r24
    1612:	8b 01       	movw	r16, r22
    1614:	db 01       	movw	r26, r22
    1616:	13 96       	adiw	r26, 0x03	; 3
    1618:	8c 91       	ld	r24, X
    161a:	81 ff       	sbrs	r24, 1
    161c:	14 c0       	rjmp	.+40     	; 0x1646 <fputs+0x42>
    161e:	c0 e0       	ldi	r28, 0x00	; 0
    1620:	d0 e0       	ldi	r29, 0x00	; 0
    1622:	0b c0       	rjmp	.+22     	; 0x163a <fputs+0x36>
    1624:	d8 01       	movw	r26, r16
    1626:	18 96       	adiw	r26, 0x08	; 8
    1628:	ed 91       	ld	r30, X+
    162a:	fc 91       	ld	r31, X
    162c:	19 97       	sbiw	r26, 0x09	; 9
    162e:	b8 01       	movw	r22, r16
    1630:	09 95       	icall
    1632:	89 2b       	or	r24, r25
    1634:	11 f0       	breq	.+4      	; 0x163a <fputs+0x36>
    1636:	cf ef       	ldi	r28, 0xFF	; 255
    1638:	df ef       	ldi	r29, 0xFF	; 255
    163a:	f7 01       	movw	r30, r14
    163c:	81 91       	ld	r24, Z+
    163e:	7f 01       	movw	r14, r30
    1640:	81 11       	cpse	r24, r1
    1642:	f0 cf       	rjmp	.-32     	; 0x1624 <fputs+0x20>
    1644:	02 c0       	rjmp	.+4      	; 0x164a <fputs+0x46>
    1646:	cf ef       	ldi	r28, 0xFF	; 255
    1648:	df ef       	ldi	r29, 0xFF	; 255
    164a:	ce 01       	movw	r24, r28
    164c:	df 91       	pop	r29
    164e:	cf 91       	pop	r28
    1650:	1f 91       	pop	r17
    1652:	0f 91       	pop	r16
    1654:	ff 90       	pop	r15
    1656:	ef 90       	pop	r14
    1658:	08 95       	ret

0000165a <sin>:
    165a:	9f 93       	push	r25
    165c:	aa d2       	rcall	.+1364   	; 0x1bb2 <__fp_rempio2>
    165e:	0f 90       	pop	r0
    1660:	07 fc       	sbrc	r0, 7
    1662:	ee 5f       	subi	r30, 0xFE	; 254
    1664:	cd c2       	rjmp	.+1434   	; 0x1c00 <__fp_sinus>

00001666 <vfprintf>:
    1666:	2f 92       	push	r2
    1668:	3f 92       	push	r3
    166a:	4f 92       	push	r4
    166c:	5f 92       	push	r5
    166e:	6f 92       	push	r6
    1670:	7f 92       	push	r7
    1672:	8f 92       	push	r8
    1674:	9f 92       	push	r9
    1676:	af 92       	push	r10
    1678:	bf 92       	push	r11
    167a:	cf 92       	push	r12
    167c:	df 92       	push	r13
    167e:	ef 92       	push	r14
    1680:	ff 92       	push	r15
    1682:	0f 93       	push	r16
    1684:	1f 93       	push	r17
    1686:	cf 93       	push	r28
    1688:	df 93       	push	r29
    168a:	cd b7       	in	r28, 0x3d	; 61
    168c:	de b7       	in	r29, 0x3e	; 62
    168e:	2c 97       	sbiw	r28, 0x0c	; 12
    1690:	0f b6       	in	r0, 0x3f	; 63
    1692:	f8 94       	cli
    1694:	de bf       	out	0x3e, r29	; 62
    1696:	0f be       	out	0x3f, r0	; 63
    1698:	cd bf       	out	0x3d, r28	; 61
    169a:	7c 01       	movw	r14, r24
    169c:	6b 01       	movw	r12, r22
    169e:	8a 01       	movw	r16, r20
    16a0:	fc 01       	movw	r30, r24
    16a2:	17 82       	std	Z+7, r1	; 0x07
    16a4:	16 82       	std	Z+6, r1	; 0x06
    16a6:	83 81       	ldd	r24, Z+3	; 0x03
    16a8:	81 ff       	sbrs	r24, 1
    16aa:	c6 c1       	rjmp	.+908    	; 0x1a38 <vfprintf+0x3d2>
    16ac:	88 24       	eor	r8, r8
    16ae:	83 94       	inc	r8
    16b0:	91 2c       	mov	r9, r1
    16b2:	8c 0e       	add	r8, r28
    16b4:	9d 1e       	adc	r9, r29
    16b6:	f7 01       	movw	r30, r14
    16b8:	93 81       	ldd	r25, Z+3	; 0x03
    16ba:	f6 01       	movw	r30, r12
    16bc:	93 fd       	sbrc	r25, 3
    16be:	85 91       	lpm	r24, Z+
    16c0:	93 ff       	sbrs	r25, 3
    16c2:	81 91       	ld	r24, Z+
    16c4:	6f 01       	movw	r12, r30
    16c6:	88 23       	and	r24, r24
    16c8:	09 f4       	brne	.+2      	; 0x16cc <vfprintf+0x66>
    16ca:	b2 c1       	rjmp	.+868    	; 0x1a30 <vfprintf+0x3ca>
    16cc:	85 32       	cpi	r24, 0x25	; 37
    16ce:	39 f4       	brne	.+14     	; 0x16de <vfprintf+0x78>
    16d0:	93 fd       	sbrc	r25, 3
    16d2:	85 91       	lpm	r24, Z+
    16d4:	93 ff       	sbrs	r25, 3
    16d6:	81 91       	ld	r24, Z+
    16d8:	6f 01       	movw	r12, r30
    16da:	85 32       	cpi	r24, 0x25	; 37
    16dc:	29 f4       	brne	.+10     	; 0x16e8 <vfprintf+0x82>
    16de:	b7 01       	movw	r22, r14
    16e0:	90 e0       	ldi	r25, 0x00	; 0
    16e2:	0e 94 4e 0d 	call	0x1a9c	; 0x1a9c <fputc>
    16e6:	e7 cf       	rjmp	.-50     	; 0x16b6 <vfprintf+0x50>
    16e8:	51 2c       	mov	r5, r1
    16ea:	31 2c       	mov	r3, r1
    16ec:	20 e0       	ldi	r18, 0x00	; 0
    16ee:	20 32       	cpi	r18, 0x20	; 32
    16f0:	a8 f4       	brcc	.+42     	; 0x171c <vfprintf+0xb6>
    16f2:	8b 32       	cpi	r24, 0x2B	; 43
    16f4:	61 f0       	breq	.+24     	; 0x170e <vfprintf+0xa8>
    16f6:	28 f4       	brcc	.+10     	; 0x1702 <vfprintf+0x9c>
    16f8:	80 32       	cpi	r24, 0x20	; 32
    16fa:	51 f0       	breq	.+20     	; 0x1710 <vfprintf+0xaa>
    16fc:	83 32       	cpi	r24, 0x23	; 35
    16fe:	71 f4       	brne	.+28     	; 0x171c <vfprintf+0xb6>
    1700:	0b c0       	rjmp	.+22     	; 0x1718 <vfprintf+0xb2>
    1702:	8d 32       	cpi	r24, 0x2D	; 45
    1704:	39 f0       	breq	.+14     	; 0x1714 <vfprintf+0xae>
    1706:	80 33       	cpi	r24, 0x30	; 48
    1708:	49 f4       	brne	.+18     	; 0x171c <vfprintf+0xb6>
    170a:	21 60       	ori	r18, 0x01	; 1
    170c:	28 c0       	rjmp	.+80     	; 0x175e <vfprintf+0xf8>
    170e:	22 60       	ori	r18, 0x02	; 2
    1710:	24 60       	ori	r18, 0x04	; 4
    1712:	25 c0       	rjmp	.+74     	; 0x175e <vfprintf+0xf8>
    1714:	28 60       	ori	r18, 0x08	; 8
    1716:	23 c0       	rjmp	.+70     	; 0x175e <vfprintf+0xf8>
    1718:	20 61       	ori	r18, 0x10	; 16
    171a:	21 c0       	rjmp	.+66     	; 0x175e <vfprintf+0xf8>
    171c:	27 fd       	sbrc	r18, 7
    171e:	27 c0       	rjmp	.+78     	; 0x176e <vfprintf+0x108>
    1720:	38 2f       	mov	r19, r24
    1722:	30 53       	subi	r19, 0x30	; 48
    1724:	3a 30       	cpi	r19, 0x0A	; 10
    1726:	78 f4       	brcc	.+30     	; 0x1746 <vfprintf+0xe0>
    1728:	26 ff       	sbrs	r18, 6
    172a:	06 c0       	rjmp	.+12     	; 0x1738 <vfprintf+0xd2>
    172c:	fa e0       	ldi	r31, 0x0A	; 10
    172e:	5f 9e       	mul	r5, r31
    1730:	30 0d       	add	r19, r0
    1732:	11 24       	eor	r1, r1
    1734:	53 2e       	mov	r5, r19
    1736:	13 c0       	rjmp	.+38     	; 0x175e <vfprintf+0xf8>
    1738:	8a e0       	ldi	r24, 0x0A	; 10
    173a:	38 9e       	mul	r3, r24
    173c:	30 0d       	add	r19, r0
    173e:	11 24       	eor	r1, r1
    1740:	33 2e       	mov	r3, r19
    1742:	20 62       	ori	r18, 0x20	; 32
    1744:	0c c0       	rjmp	.+24     	; 0x175e <vfprintf+0xf8>
    1746:	8e 32       	cpi	r24, 0x2E	; 46
    1748:	21 f4       	brne	.+8      	; 0x1752 <vfprintf+0xec>
    174a:	26 fd       	sbrc	r18, 6
    174c:	71 c1       	rjmp	.+738    	; 0x1a30 <vfprintf+0x3ca>
    174e:	20 64       	ori	r18, 0x40	; 64
    1750:	06 c0       	rjmp	.+12     	; 0x175e <vfprintf+0xf8>
    1752:	8c 36       	cpi	r24, 0x6C	; 108
    1754:	11 f4       	brne	.+4      	; 0x175a <vfprintf+0xf4>
    1756:	20 68       	ori	r18, 0x80	; 128
    1758:	02 c0       	rjmp	.+4      	; 0x175e <vfprintf+0xf8>
    175a:	88 36       	cpi	r24, 0x68	; 104
    175c:	41 f4       	brne	.+16     	; 0x176e <vfprintf+0x108>
    175e:	f6 01       	movw	r30, r12
    1760:	93 fd       	sbrc	r25, 3
    1762:	85 91       	lpm	r24, Z+
    1764:	93 ff       	sbrs	r25, 3
    1766:	81 91       	ld	r24, Z+
    1768:	6f 01       	movw	r12, r30
    176a:	81 11       	cpse	r24, r1
    176c:	c0 cf       	rjmp	.-128    	; 0x16ee <vfprintf+0x88>
    176e:	98 2f       	mov	r25, r24
    1770:	95 54       	subi	r25, 0x45	; 69
    1772:	93 30       	cpi	r25, 0x03	; 3
    1774:	18 f0       	brcs	.+6      	; 0x177c <vfprintf+0x116>
    1776:	90 52       	subi	r25, 0x20	; 32
    1778:	93 30       	cpi	r25, 0x03	; 3
    177a:	28 f4       	brcc	.+10     	; 0x1786 <vfprintf+0x120>
    177c:	0c 5f       	subi	r16, 0xFC	; 252
    177e:	1f 4f       	sbci	r17, 0xFF	; 255
    1780:	ff e3       	ldi	r31, 0x3F	; 63
    1782:	f9 83       	std	Y+1, r31	; 0x01
    1784:	0d c0       	rjmp	.+26     	; 0x17a0 <vfprintf+0x13a>
    1786:	83 36       	cpi	r24, 0x63	; 99
    1788:	31 f0       	breq	.+12     	; 0x1796 <vfprintf+0x130>
    178a:	83 37       	cpi	r24, 0x73	; 115
    178c:	71 f0       	breq	.+28     	; 0x17aa <vfprintf+0x144>
    178e:	83 35       	cpi	r24, 0x53	; 83
    1790:	09 f0       	breq	.+2      	; 0x1794 <vfprintf+0x12e>
    1792:	5e c0       	rjmp	.+188    	; 0x1850 <vfprintf+0x1ea>
    1794:	23 c0       	rjmp	.+70     	; 0x17dc <vfprintf+0x176>
    1796:	f8 01       	movw	r30, r16
    1798:	80 81       	ld	r24, Z
    179a:	89 83       	std	Y+1, r24	; 0x01
    179c:	0e 5f       	subi	r16, 0xFE	; 254
    179e:	1f 4f       	sbci	r17, 0xFF	; 255
    17a0:	44 24       	eor	r4, r4
    17a2:	43 94       	inc	r4
    17a4:	51 2c       	mov	r5, r1
    17a6:	54 01       	movw	r10, r8
    17a8:	15 c0       	rjmp	.+42     	; 0x17d4 <vfprintf+0x16e>
    17aa:	38 01       	movw	r6, r16
    17ac:	f2 e0       	ldi	r31, 0x02	; 2
    17ae:	6f 0e       	add	r6, r31
    17b0:	71 1c       	adc	r7, r1
    17b2:	f8 01       	movw	r30, r16
    17b4:	a0 80       	ld	r10, Z
    17b6:	b1 80       	ldd	r11, Z+1	; 0x01
    17b8:	26 ff       	sbrs	r18, 6
    17ba:	03 c0       	rjmp	.+6      	; 0x17c2 <vfprintf+0x15c>
    17bc:	65 2d       	mov	r22, r5
    17be:	70 e0       	ldi	r23, 0x00	; 0
    17c0:	02 c0       	rjmp	.+4      	; 0x17c6 <vfprintf+0x160>
    17c2:	6f ef       	ldi	r22, 0xFF	; 255
    17c4:	7f ef       	ldi	r23, 0xFF	; 255
    17c6:	c5 01       	movw	r24, r10
    17c8:	2c 87       	std	Y+12, r18	; 0x0c
    17ca:	0e 94 43 0d 	call	0x1a86	; 0x1a86 <strnlen>
    17ce:	2c 01       	movw	r4, r24
    17d0:	83 01       	movw	r16, r6
    17d2:	2c 85       	ldd	r18, Y+12	; 0x0c
    17d4:	6f e7       	ldi	r22, 0x7F	; 127
    17d6:	26 2e       	mov	r2, r22
    17d8:	22 22       	and	r2, r18
    17da:	18 c0       	rjmp	.+48     	; 0x180c <vfprintf+0x1a6>
    17dc:	38 01       	movw	r6, r16
    17de:	f2 e0       	ldi	r31, 0x02	; 2
    17e0:	6f 0e       	add	r6, r31
    17e2:	71 1c       	adc	r7, r1
    17e4:	f8 01       	movw	r30, r16
    17e6:	a0 80       	ld	r10, Z
    17e8:	b1 80       	ldd	r11, Z+1	; 0x01
    17ea:	26 ff       	sbrs	r18, 6
    17ec:	03 c0       	rjmp	.+6      	; 0x17f4 <vfprintf+0x18e>
    17ee:	65 2d       	mov	r22, r5
    17f0:	70 e0       	ldi	r23, 0x00	; 0
    17f2:	02 c0       	rjmp	.+4      	; 0x17f8 <vfprintf+0x192>
    17f4:	6f ef       	ldi	r22, 0xFF	; 255
    17f6:	7f ef       	ldi	r23, 0xFF	; 255
    17f8:	c5 01       	movw	r24, r10
    17fa:	2c 87       	std	Y+12, r18	; 0x0c
    17fc:	0e 94 38 0d 	call	0x1a70	; 0x1a70 <strnlen_P>
    1800:	2c 01       	movw	r4, r24
    1802:	2c 85       	ldd	r18, Y+12	; 0x0c
    1804:	50 e8       	ldi	r21, 0x80	; 128
    1806:	25 2e       	mov	r2, r21
    1808:	22 2a       	or	r2, r18
    180a:	83 01       	movw	r16, r6
    180c:	23 fc       	sbrc	r2, 3
    180e:	1c c0       	rjmp	.+56     	; 0x1848 <vfprintf+0x1e2>
    1810:	06 c0       	rjmp	.+12     	; 0x181e <vfprintf+0x1b8>
    1812:	b7 01       	movw	r22, r14
    1814:	80 e2       	ldi	r24, 0x20	; 32
    1816:	90 e0       	ldi	r25, 0x00	; 0
    1818:	0e 94 4e 0d 	call	0x1a9c	; 0x1a9c <fputc>
    181c:	3a 94       	dec	r3
    181e:	83 2d       	mov	r24, r3
    1820:	90 e0       	ldi	r25, 0x00	; 0
    1822:	48 16       	cp	r4, r24
    1824:	59 06       	cpc	r5, r25
    1826:	a8 f3       	brcs	.-22     	; 0x1812 <vfprintf+0x1ac>
    1828:	0f c0       	rjmp	.+30     	; 0x1848 <vfprintf+0x1e2>
    182a:	f5 01       	movw	r30, r10
    182c:	27 fc       	sbrc	r2, 7
    182e:	85 91       	lpm	r24, Z+
    1830:	27 fe       	sbrs	r2, 7
    1832:	81 91       	ld	r24, Z+
    1834:	5f 01       	movw	r10, r30
    1836:	b7 01       	movw	r22, r14
    1838:	90 e0       	ldi	r25, 0x00	; 0
    183a:	0e 94 4e 0d 	call	0x1a9c	; 0x1a9c <fputc>
    183e:	31 10       	cpse	r3, r1
    1840:	3a 94       	dec	r3
    1842:	f1 e0       	ldi	r31, 0x01	; 1
    1844:	4f 1a       	sub	r4, r31
    1846:	51 08       	sbc	r5, r1
    1848:	41 14       	cp	r4, r1
    184a:	51 04       	cpc	r5, r1
    184c:	71 f7       	brne	.-36     	; 0x182a <vfprintf+0x1c4>
    184e:	ed c0       	rjmp	.+474    	; 0x1a2a <vfprintf+0x3c4>
    1850:	84 36       	cpi	r24, 0x64	; 100
    1852:	11 f0       	breq	.+4      	; 0x1858 <vfprintf+0x1f2>
    1854:	89 36       	cpi	r24, 0x69	; 105
    1856:	41 f5       	brne	.+80     	; 0x18a8 <vfprintf+0x242>
    1858:	f8 01       	movw	r30, r16
    185a:	27 ff       	sbrs	r18, 7
    185c:	07 c0       	rjmp	.+14     	; 0x186c <vfprintf+0x206>
    185e:	60 81       	ld	r22, Z
    1860:	71 81       	ldd	r23, Z+1	; 0x01
    1862:	82 81       	ldd	r24, Z+2	; 0x02
    1864:	93 81       	ldd	r25, Z+3	; 0x03
    1866:	0c 5f       	subi	r16, 0xFC	; 252
    1868:	1f 4f       	sbci	r17, 0xFF	; 255
    186a:	08 c0       	rjmp	.+16     	; 0x187c <vfprintf+0x216>
    186c:	60 81       	ld	r22, Z
    186e:	71 81       	ldd	r23, Z+1	; 0x01
    1870:	88 27       	eor	r24, r24
    1872:	77 fd       	sbrc	r23, 7
    1874:	80 95       	com	r24
    1876:	98 2f       	mov	r25, r24
    1878:	0e 5f       	subi	r16, 0xFE	; 254
    187a:	1f 4f       	sbci	r17, 0xFF	; 255
    187c:	4f e6       	ldi	r20, 0x6F	; 111
    187e:	b4 2e       	mov	r11, r20
    1880:	b2 22       	and	r11, r18
    1882:	97 ff       	sbrs	r25, 7
    1884:	09 c0       	rjmp	.+18     	; 0x1898 <vfprintf+0x232>
    1886:	90 95       	com	r25
    1888:	80 95       	com	r24
    188a:	70 95       	com	r23
    188c:	61 95       	neg	r22
    188e:	7f 4f       	sbci	r23, 0xFF	; 255
    1890:	8f 4f       	sbci	r24, 0xFF	; 255
    1892:	9f 4f       	sbci	r25, 0xFF	; 255
    1894:	f0 e8       	ldi	r31, 0x80	; 128
    1896:	bf 2a       	or	r11, r31
    1898:	2a e0       	ldi	r18, 0x0A	; 10
    189a:	30 e0       	ldi	r19, 0x00	; 0
    189c:	a4 01       	movw	r20, r8
    189e:	0e 94 7a 0d 	call	0x1af4	; 0x1af4 <__ultoa_invert>
    18a2:	a8 2e       	mov	r10, r24
    18a4:	a8 18       	sub	r10, r8
    18a6:	43 c0       	rjmp	.+134    	; 0x192e <vfprintf+0x2c8>
    18a8:	85 37       	cpi	r24, 0x75	; 117
    18aa:	31 f4       	brne	.+12     	; 0x18b8 <vfprintf+0x252>
    18ac:	3f ee       	ldi	r19, 0xEF	; 239
    18ae:	b3 2e       	mov	r11, r19
    18b0:	b2 22       	and	r11, r18
    18b2:	2a e0       	ldi	r18, 0x0A	; 10
    18b4:	30 e0       	ldi	r19, 0x00	; 0
    18b6:	24 c0       	rjmp	.+72     	; 0x1900 <vfprintf+0x29a>
    18b8:	99 ef       	ldi	r25, 0xF9	; 249
    18ba:	b9 2e       	mov	r11, r25
    18bc:	b2 22       	and	r11, r18
    18be:	8f 36       	cpi	r24, 0x6F	; 111
    18c0:	b9 f0       	breq	.+46     	; 0x18f0 <vfprintf+0x28a>
    18c2:	20 f4       	brcc	.+8      	; 0x18cc <vfprintf+0x266>
    18c4:	88 35       	cpi	r24, 0x58	; 88
    18c6:	09 f0       	breq	.+2      	; 0x18ca <vfprintf+0x264>
    18c8:	b3 c0       	rjmp	.+358    	; 0x1a30 <vfprintf+0x3ca>
    18ca:	0d c0       	rjmp	.+26     	; 0x18e6 <vfprintf+0x280>
    18cc:	80 37       	cpi	r24, 0x70	; 112
    18ce:	21 f0       	breq	.+8      	; 0x18d8 <vfprintf+0x272>
    18d0:	88 37       	cpi	r24, 0x78	; 120
    18d2:	09 f0       	breq	.+2      	; 0x18d6 <vfprintf+0x270>
    18d4:	ad c0       	rjmp	.+346    	; 0x1a30 <vfprintf+0x3ca>
    18d6:	02 c0       	rjmp	.+4      	; 0x18dc <vfprintf+0x276>
    18d8:	20 e1       	ldi	r18, 0x10	; 16
    18da:	b2 2a       	or	r11, r18
    18dc:	b4 fe       	sbrs	r11, 4
    18de:	0b c0       	rjmp	.+22     	; 0x18f6 <vfprintf+0x290>
    18e0:	84 e0       	ldi	r24, 0x04	; 4
    18e2:	b8 2a       	or	r11, r24
    18e4:	08 c0       	rjmp	.+16     	; 0x18f6 <vfprintf+0x290>
    18e6:	24 ff       	sbrs	r18, 4
    18e8:	09 c0       	rjmp	.+18     	; 0x18fc <vfprintf+0x296>
    18ea:	e6 e0       	ldi	r30, 0x06	; 6
    18ec:	be 2a       	or	r11, r30
    18ee:	06 c0       	rjmp	.+12     	; 0x18fc <vfprintf+0x296>
    18f0:	28 e0       	ldi	r18, 0x08	; 8
    18f2:	30 e0       	ldi	r19, 0x00	; 0
    18f4:	05 c0       	rjmp	.+10     	; 0x1900 <vfprintf+0x29a>
    18f6:	20 e1       	ldi	r18, 0x10	; 16
    18f8:	30 e0       	ldi	r19, 0x00	; 0
    18fa:	02 c0       	rjmp	.+4      	; 0x1900 <vfprintf+0x29a>
    18fc:	20 e1       	ldi	r18, 0x10	; 16
    18fe:	32 e0       	ldi	r19, 0x02	; 2
    1900:	f8 01       	movw	r30, r16
    1902:	b7 fe       	sbrs	r11, 7
    1904:	07 c0       	rjmp	.+14     	; 0x1914 <vfprintf+0x2ae>
    1906:	60 81       	ld	r22, Z
    1908:	71 81       	ldd	r23, Z+1	; 0x01
    190a:	82 81       	ldd	r24, Z+2	; 0x02
    190c:	93 81       	ldd	r25, Z+3	; 0x03
    190e:	0c 5f       	subi	r16, 0xFC	; 252
    1910:	1f 4f       	sbci	r17, 0xFF	; 255
    1912:	06 c0       	rjmp	.+12     	; 0x1920 <vfprintf+0x2ba>
    1914:	60 81       	ld	r22, Z
    1916:	71 81       	ldd	r23, Z+1	; 0x01
    1918:	80 e0       	ldi	r24, 0x00	; 0
    191a:	90 e0       	ldi	r25, 0x00	; 0
    191c:	0e 5f       	subi	r16, 0xFE	; 254
    191e:	1f 4f       	sbci	r17, 0xFF	; 255
    1920:	a4 01       	movw	r20, r8
    1922:	0e 94 7a 0d 	call	0x1af4	; 0x1af4 <__ultoa_invert>
    1926:	a8 2e       	mov	r10, r24
    1928:	a8 18       	sub	r10, r8
    192a:	ff e7       	ldi	r31, 0x7F	; 127
    192c:	bf 22       	and	r11, r31
    192e:	b6 fe       	sbrs	r11, 6
    1930:	0b c0       	rjmp	.+22     	; 0x1948 <vfprintf+0x2e2>
    1932:	2b 2d       	mov	r18, r11
    1934:	2e 7f       	andi	r18, 0xFE	; 254
    1936:	a5 14       	cp	r10, r5
    1938:	50 f4       	brcc	.+20     	; 0x194e <vfprintf+0x2e8>
    193a:	b4 fe       	sbrs	r11, 4
    193c:	0a c0       	rjmp	.+20     	; 0x1952 <vfprintf+0x2ec>
    193e:	b2 fc       	sbrc	r11, 2
    1940:	08 c0       	rjmp	.+16     	; 0x1952 <vfprintf+0x2ec>
    1942:	2b 2d       	mov	r18, r11
    1944:	2e 7e       	andi	r18, 0xEE	; 238
    1946:	05 c0       	rjmp	.+10     	; 0x1952 <vfprintf+0x2ec>
    1948:	7a 2c       	mov	r7, r10
    194a:	2b 2d       	mov	r18, r11
    194c:	03 c0       	rjmp	.+6      	; 0x1954 <vfprintf+0x2ee>
    194e:	7a 2c       	mov	r7, r10
    1950:	01 c0       	rjmp	.+2      	; 0x1954 <vfprintf+0x2ee>
    1952:	75 2c       	mov	r7, r5
    1954:	24 ff       	sbrs	r18, 4
    1956:	0d c0       	rjmp	.+26     	; 0x1972 <vfprintf+0x30c>
    1958:	fe 01       	movw	r30, r28
    195a:	ea 0d       	add	r30, r10
    195c:	f1 1d       	adc	r31, r1
    195e:	80 81       	ld	r24, Z
    1960:	80 33       	cpi	r24, 0x30	; 48
    1962:	11 f4       	brne	.+4      	; 0x1968 <vfprintf+0x302>
    1964:	29 7e       	andi	r18, 0xE9	; 233
    1966:	09 c0       	rjmp	.+18     	; 0x197a <vfprintf+0x314>
    1968:	22 ff       	sbrs	r18, 2
    196a:	06 c0       	rjmp	.+12     	; 0x1978 <vfprintf+0x312>
    196c:	73 94       	inc	r7
    196e:	73 94       	inc	r7
    1970:	04 c0       	rjmp	.+8      	; 0x197a <vfprintf+0x314>
    1972:	82 2f       	mov	r24, r18
    1974:	86 78       	andi	r24, 0x86	; 134
    1976:	09 f0       	breq	.+2      	; 0x197a <vfprintf+0x314>
    1978:	73 94       	inc	r7
    197a:	23 fd       	sbrc	r18, 3
    197c:	14 c0       	rjmp	.+40     	; 0x19a6 <vfprintf+0x340>
    197e:	20 ff       	sbrs	r18, 0
    1980:	0f c0       	rjmp	.+30     	; 0x19a0 <vfprintf+0x33a>
    1982:	5a 2c       	mov	r5, r10
    1984:	73 14       	cp	r7, r3
    1986:	60 f4       	brcc	.+24     	; 0x19a0 <vfprintf+0x33a>
    1988:	53 0c       	add	r5, r3
    198a:	57 18       	sub	r5, r7
    198c:	73 2c       	mov	r7, r3
    198e:	08 c0       	rjmp	.+16     	; 0x19a0 <vfprintf+0x33a>
    1990:	b7 01       	movw	r22, r14
    1992:	80 e2       	ldi	r24, 0x20	; 32
    1994:	90 e0       	ldi	r25, 0x00	; 0
    1996:	2c 87       	std	Y+12, r18	; 0x0c
    1998:	0e 94 4e 0d 	call	0x1a9c	; 0x1a9c <fputc>
    199c:	73 94       	inc	r7
    199e:	2c 85       	ldd	r18, Y+12	; 0x0c
    19a0:	73 14       	cp	r7, r3
    19a2:	b0 f3       	brcs	.-20     	; 0x1990 <vfprintf+0x32a>
    19a4:	04 c0       	rjmp	.+8      	; 0x19ae <vfprintf+0x348>
    19a6:	73 14       	cp	r7, r3
    19a8:	10 f4       	brcc	.+4      	; 0x19ae <vfprintf+0x348>
    19aa:	37 18       	sub	r3, r7
    19ac:	01 c0       	rjmp	.+2      	; 0x19b0 <vfprintf+0x34a>
    19ae:	31 2c       	mov	r3, r1
    19b0:	24 ff       	sbrs	r18, 4
    19b2:	12 c0       	rjmp	.+36     	; 0x19d8 <vfprintf+0x372>
    19b4:	b7 01       	movw	r22, r14
    19b6:	80 e3       	ldi	r24, 0x30	; 48
    19b8:	90 e0       	ldi	r25, 0x00	; 0
    19ba:	2c 87       	std	Y+12, r18	; 0x0c
    19bc:	0e 94 4e 0d 	call	0x1a9c	; 0x1a9c <fputc>
    19c0:	2c 85       	ldd	r18, Y+12	; 0x0c
    19c2:	22 ff       	sbrs	r18, 2
    19c4:	1e c0       	rjmp	.+60     	; 0x1a02 <vfprintf+0x39c>
    19c6:	21 ff       	sbrs	r18, 1
    19c8:	03 c0       	rjmp	.+6      	; 0x19d0 <vfprintf+0x36a>
    19ca:	88 e5       	ldi	r24, 0x58	; 88
    19cc:	90 e0       	ldi	r25, 0x00	; 0
    19ce:	02 c0       	rjmp	.+4      	; 0x19d4 <vfprintf+0x36e>
    19d0:	88 e7       	ldi	r24, 0x78	; 120
    19d2:	90 e0       	ldi	r25, 0x00	; 0
    19d4:	b7 01       	movw	r22, r14
    19d6:	0c c0       	rjmp	.+24     	; 0x19f0 <vfprintf+0x38a>
    19d8:	82 2f       	mov	r24, r18
    19da:	86 78       	andi	r24, 0x86	; 134
    19dc:	91 f0       	breq	.+36     	; 0x1a02 <vfprintf+0x39c>
    19de:	21 fd       	sbrc	r18, 1
    19e0:	02 c0       	rjmp	.+4      	; 0x19e6 <vfprintf+0x380>
    19e2:	80 e2       	ldi	r24, 0x20	; 32
    19e4:	01 c0       	rjmp	.+2      	; 0x19e8 <vfprintf+0x382>
    19e6:	8b e2       	ldi	r24, 0x2B	; 43
    19e8:	27 fd       	sbrc	r18, 7
    19ea:	8d e2       	ldi	r24, 0x2D	; 45
    19ec:	b7 01       	movw	r22, r14
    19ee:	90 e0       	ldi	r25, 0x00	; 0
    19f0:	0e 94 4e 0d 	call	0x1a9c	; 0x1a9c <fputc>
    19f4:	06 c0       	rjmp	.+12     	; 0x1a02 <vfprintf+0x39c>
    19f6:	b7 01       	movw	r22, r14
    19f8:	80 e3       	ldi	r24, 0x30	; 48
    19fa:	90 e0       	ldi	r25, 0x00	; 0
    19fc:	0e 94 4e 0d 	call	0x1a9c	; 0x1a9c <fputc>
    1a00:	5a 94       	dec	r5
    1a02:	a5 14       	cp	r10, r5
    1a04:	c0 f3       	brcs	.-16     	; 0x19f6 <vfprintf+0x390>
    1a06:	aa 94       	dec	r10
    1a08:	f4 01       	movw	r30, r8
    1a0a:	ea 0d       	add	r30, r10
    1a0c:	f1 1d       	adc	r31, r1
    1a0e:	b7 01       	movw	r22, r14
    1a10:	80 81       	ld	r24, Z
    1a12:	90 e0       	ldi	r25, 0x00	; 0
    1a14:	0e 94 4e 0d 	call	0x1a9c	; 0x1a9c <fputc>
    1a18:	a1 10       	cpse	r10, r1
    1a1a:	f5 cf       	rjmp	.-22     	; 0x1a06 <vfprintf+0x3a0>
    1a1c:	06 c0       	rjmp	.+12     	; 0x1a2a <vfprintf+0x3c4>
    1a1e:	b7 01       	movw	r22, r14
    1a20:	80 e2       	ldi	r24, 0x20	; 32
    1a22:	90 e0       	ldi	r25, 0x00	; 0
    1a24:	0e 94 4e 0d 	call	0x1a9c	; 0x1a9c <fputc>
    1a28:	3a 94       	dec	r3
    1a2a:	31 10       	cpse	r3, r1
    1a2c:	f8 cf       	rjmp	.-16     	; 0x1a1e <vfprintf+0x3b8>
    1a2e:	43 ce       	rjmp	.-890    	; 0x16b6 <vfprintf+0x50>
    1a30:	f7 01       	movw	r30, r14
    1a32:	26 81       	ldd	r18, Z+6	; 0x06
    1a34:	37 81       	ldd	r19, Z+7	; 0x07
    1a36:	02 c0       	rjmp	.+4      	; 0x1a3c <vfprintf+0x3d6>
    1a38:	2f ef       	ldi	r18, 0xFF	; 255
    1a3a:	3f ef       	ldi	r19, 0xFF	; 255
    1a3c:	c9 01       	movw	r24, r18
    1a3e:	2c 96       	adiw	r28, 0x0c	; 12
    1a40:	0f b6       	in	r0, 0x3f	; 63
    1a42:	f8 94       	cli
    1a44:	de bf       	out	0x3e, r29	; 62
    1a46:	0f be       	out	0x3f, r0	; 63
    1a48:	cd bf       	out	0x3d, r28	; 61
    1a4a:	df 91       	pop	r29
    1a4c:	cf 91       	pop	r28
    1a4e:	1f 91       	pop	r17
    1a50:	0f 91       	pop	r16
    1a52:	ff 90       	pop	r15
    1a54:	ef 90       	pop	r14
    1a56:	df 90       	pop	r13
    1a58:	cf 90       	pop	r12
    1a5a:	bf 90       	pop	r11
    1a5c:	af 90       	pop	r10
    1a5e:	9f 90       	pop	r9
    1a60:	8f 90       	pop	r8
    1a62:	7f 90       	pop	r7
    1a64:	6f 90       	pop	r6
    1a66:	5f 90       	pop	r5
    1a68:	4f 90       	pop	r4
    1a6a:	3f 90       	pop	r3
    1a6c:	2f 90       	pop	r2
    1a6e:	08 95       	ret

00001a70 <strnlen_P>:
    1a70:	fc 01       	movw	r30, r24
    1a72:	05 90       	lpm	r0, Z+
    1a74:	61 50       	subi	r22, 0x01	; 1
    1a76:	70 40       	sbci	r23, 0x00	; 0
    1a78:	01 10       	cpse	r0, r1
    1a7a:	d8 f7       	brcc	.-10     	; 0x1a72 <strnlen_P+0x2>
    1a7c:	80 95       	com	r24
    1a7e:	90 95       	com	r25
    1a80:	8e 0f       	add	r24, r30
    1a82:	9f 1f       	adc	r25, r31
    1a84:	08 95       	ret

00001a86 <strnlen>:
    1a86:	fc 01       	movw	r30, r24
    1a88:	61 50       	subi	r22, 0x01	; 1
    1a8a:	70 40       	sbci	r23, 0x00	; 0
    1a8c:	01 90       	ld	r0, Z+
    1a8e:	01 10       	cpse	r0, r1
    1a90:	d8 f7       	brcc	.-10     	; 0x1a88 <strnlen+0x2>
    1a92:	80 95       	com	r24
    1a94:	90 95       	com	r25
    1a96:	8e 0f       	add	r24, r30
    1a98:	9f 1f       	adc	r25, r31
    1a9a:	08 95       	ret

00001a9c <fputc>:
    1a9c:	0f 93       	push	r16
    1a9e:	1f 93       	push	r17
    1aa0:	cf 93       	push	r28
    1aa2:	df 93       	push	r29
    1aa4:	8c 01       	movw	r16, r24
    1aa6:	eb 01       	movw	r28, r22
    1aa8:	8b 81       	ldd	r24, Y+3	; 0x03
    1aaa:	81 fd       	sbrc	r24, 1
    1aac:	03 c0       	rjmp	.+6      	; 0x1ab4 <fputc+0x18>
    1aae:	0f ef       	ldi	r16, 0xFF	; 255
    1ab0:	1f ef       	ldi	r17, 0xFF	; 255
    1ab2:	1a c0       	rjmp	.+52     	; 0x1ae8 <fputc+0x4c>
    1ab4:	82 ff       	sbrs	r24, 2
    1ab6:	0d c0       	rjmp	.+26     	; 0x1ad2 <fputc+0x36>
    1ab8:	2e 81       	ldd	r18, Y+6	; 0x06
    1aba:	3f 81       	ldd	r19, Y+7	; 0x07
    1abc:	8c 81       	ldd	r24, Y+4	; 0x04
    1abe:	9d 81       	ldd	r25, Y+5	; 0x05
    1ac0:	28 17       	cp	r18, r24
    1ac2:	39 07       	cpc	r19, r25
    1ac4:	64 f4       	brge	.+24     	; 0x1ade <fputc+0x42>
    1ac6:	e8 81       	ld	r30, Y
    1ac8:	f9 81       	ldd	r31, Y+1	; 0x01
    1aca:	01 93       	st	Z+, r16
    1acc:	f9 83       	std	Y+1, r31	; 0x01
    1ace:	e8 83       	st	Y, r30
    1ad0:	06 c0       	rjmp	.+12     	; 0x1ade <fputc+0x42>
    1ad2:	e8 85       	ldd	r30, Y+8	; 0x08
    1ad4:	f9 85       	ldd	r31, Y+9	; 0x09
    1ad6:	80 2f       	mov	r24, r16
    1ad8:	09 95       	icall
    1ada:	89 2b       	or	r24, r25
    1adc:	41 f7       	brne	.-48     	; 0x1aae <fputc+0x12>
    1ade:	8e 81       	ldd	r24, Y+6	; 0x06
    1ae0:	9f 81       	ldd	r25, Y+7	; 0x07
    1ae2:	01 96       	adiw	r24, 0x01	; 1
    1ae4:	9f 83       	std	Y+7, r25	; 0x07
    1ae6:	8e 83       	std	Y+6, r24	; 0x06
    1ae8:	c8 01       	movw	r24, r16
    1aea:	df 91       	pop	r29
    1aec:	cf 91       	pop	r28
    1aee:	1f 91       	pop	r17
    1af0:	0f 91       	pop	r16
    1af2:	08 95       	ret

00001af4 <__ultoa_invert>:
    1af4:	fa 01       	movw	r30, r20
    1af6:	aa 27       	eor	r26, r26
    1af8:	28 30       	cpi	r18, 0x08	; 8
    1afa:	51 f1       	breq	.+84     	; 0x1b50 <__ultoa_invert+0x5c>
    1afc:	20 31       	cpi	r18, 0x10	; 16
    1afe:	81 f1       	breq	.+96     	; 0x1b60 <__ultoa_invert+0x6c>
    1b00:	e8 94       	clt
    1b02:	6f 93       	push	r22
    1b04:	6e 7f       	andi	r22, 0xFE	; 254
    1b06:	6e 5f       	subi	r22, 0xFE	; 254
    1b08:	7f 4f       	sbci	r23, 0xFF	; 255
    1b0a:	8f 4f       	sbci	r24, 0xFF	; 255
    1b0c:	9f 4f       	sbci	r25, 0xFF	; 255
    1b0e:	af 4f       	sbci	r26, 0xFF	; 255
    1b10:	b1 e0       	ldi	r27, 0x01	; 1
    1b12:	3e d0       	rcall	.+124    	; 0x1b90 <__ultoa_invert+0x9c>
    1b14:	b4 e0       	ldi	r27, 0x04	; 4
    1b16:	3c d0       	rcall	.+120    	; 0x1b90 <__ultoa_invert+0x9c>
    1b18:	67 0f       	add	r22, r23
    1b1a:	78 1f       	adc	r23, r24
    1b1c:	89 1f       	adc	r24, r25
    1b1e:	9a 1f       	adc	r25, r26
    1b20:	a1 1d       	adc	r26, r1
    1b22:	68 0f       	add	r22, r24
    1b24:	79 1f       	adc	r23, r25
    1b26:	8a 1f       	adc	r24, r26
    1b28:	91 1d       	adc	r25, r1
    1b2a:	a1 1d       	adc	r26, r1
    1b2c:	6a 0f       	add	r22, r26
    1b2e:	71 1d       	adc	r23, r1
    1b30:	81 1d       	adc	r24, r1
    1b32:	91 1d       	adc	r25, r1
    1b34:	a1 1d       	adc	r26, r1
    1b36:	20 d0       	rcall	.+64     	; 0x1b78 <__ultoa_invert+0x84>
    1b38:	09 f4       	brne	.+2      	; 0x1b3c <__ultoa_invert+0x48>
    1b3a:	68 94       	set
    1b3c:	3f 91       	pop	r19
    1b3e:	2a e0       	ldi	r18, 0x0A	; 10
    1b40:	26 9f       	mul	r18, r22
    1b42:	11 24       	eor	r1, r1
    1b44:	30 19       	sub	r19, r0
    1b46:	30 5d       	subi	r19, 0xD0	; 208
    1b48:	31 93       	st	Z+, r19
    1b4a:	de f6       	brtc	.-74     	; 0x1b02 <__ultoa_invert+0xe>
    1b4c:	cf 01       	movw	r24, r30
    1b4e:	08 95       	ret
    1b50:	46 2f       	mov	r20, r22
    1b52:	47 70       	andi	r20, 0x07	; 7
    1b54:	40 5d       	subi	r20, 0xD0	; 208
    1b56:	41 93       	st	Z+, r20
    1b58:	b3 e0       	ldi	r27, 0x03	; 3
    1b5a:	0f d0       	rcall	.+30     	; 0x1b7a <__ultoa_invert+0x86>
    1b5c:	c9 f7       	brne	.-14     	; 0x1b50 <__ultoa_invert+0x5c>
    1b5e:	f6 cf       	rjmp	.-20     	; 0x1b4c <__ultoa_invert+0x58>
    1b60:	46 2f       	mov	r20, r22
    1b62:	4f 70       	andi	r20, 0x0F	; 15
    1b64:	40 5d       	subi	r20, 0xD0	; 208
    1b66:	4a 33       	cpi	r20, 0x3A	; 58
    1b68:	18 f0       	brcs	.+6      	; 0x1b70 <__ultoa_invert+0x7c>
    1b6a:	49 5d       	subi	r20, 0xD9	; 217
    1b6c:	31 fd       	sbrc	r19, 1
    1b6e:	40 52       	subi	r20, 0x20	; 32
    1b70:	41 93       	st	Z+, r20
    1b72:	02 d0       	rcall	.+4      	; 0x1b78 <__ultoa_invert+0x84>
    1b74:	a9 f7       	brne	.-22     	; 0x1b60 <__ultoa_invert+0x6c>
    1b76:	ea cf       	rjmp	.-44     	; 0x1b4c <__ultoa_invert+0x58>
    1b78:	b4 e0       	ldi	r27, 0x04	; 4
    1b7a:	a6 95       	lsr	r26
    1b7c:	97 95       	ror	r25
    1b7e:	87 95       	ror	r24
    1b80:	77 95       	ror	r23
    1b82:	67 95       	ror	r22
    1b84:	ba 95       	dec	r27
    1b86:	c9 f7       	brne	.-14     	; 0x1b7a <__ultoa_invert+0x86>
    1b88:	00 97       	sbiw	r24, 0x00	; 0
    1b8a:	61 05       	cpc	r22, r1
    1b8c:	71 05       	cpc	r23, r1
    1b8e:	08 95       	ret
    1b90:	9b 01       	movw	r18, r22
    1b92:	ac 01       	movw	r20, r24
    1b94:	0a 2e       	mov	r0, r26
    1b96:	06 94       	lsr	r0
    1b98:	57 95       	ror	r21
    1b9a:	47 95       	ror	r20
    1b9c:	37 95       	ror	r19
    1b9e:	27 95       	ror	r18
    1ba0:	ba 95       	dec	r27
    1ba2:	c9 f7       	brne	.-14     	; 0x1b96 <__ultoa_invert+0xa2>
    1ba4:	62 0f       	add	r22, r18
    1ba6:	73 1f       	adc	r23, r19
    1ba8:	84 1f       	adc	r24, r20
    1baa:	95 1f       	adc	r25, r21
    1bac:	a0 1d       	adc	r26, r0
    1bae:	08 95       	ret
    1bb0:	ce c0       	rjmp	.+412    	; 0x1d4e <__fp_nan>

00001bb2 <__fp_rempio2>:
    1bb2:	3f d0       	rcall	.+126    	; 0x1c32 <__fp_splitA>
    1bb4:	e8 f3       	brcs	.-6      	; 0x1bb0 <__ultoa_invert+0xbc>
    1bb6:	e8 94       	clt
    1bb8:	e0 e0       	ldi	r30, 0x00	; 0
    1bba:	bb 27       	eor	r27, r27
    1bbc:	9f 57       	subi	r25, 0x7F	; 127
    1bbe:	f0 f0       	brcs	.+60     	; 0x1bfc <__fp_rempio2+0x4a>
    1bc0:	2a ed       	ldi	r18, 0xDA	; 218
    1bc2:	3f e0       	ldi	r19, 0x0F	; 15
    1bc4:	49 ec       	ldi	r20, 0xC9	; 201
    1bc6:	06 c0       	rjmp	.+12     	; 0x1bd4 <__fp_rempio2+0x22>
    1bc8:	ee 0f       	add	r30, r30
    1bca:	bb 0f       	add	r27, r27
    1bcc:	66 1f       	adc	r22, r22
    1bce:	77 1f       	adc	r23, r23
    1bd0:	88 1f       	adc	r24, r24
    1bd2:	28 f0       	brcs	.+10     	; 0x1bde <__fp_rempio2+0x2c>
    1bd4:	b2 3a       	cpi	r27, 0xA2	; 162
    1bd6:	62 07       	cpc	r22, r18
    1bd8:	73 07       	cpc	r23, r19
    1bda:	84 07       	cpc	r24, r20
    1bdc:	28 f0       	brcs	.+10     	; 0x1be8 <__fp_rempio2+0x36>
    1bde:	b2 5a       	subi	r27, 0xA2	; 162
    1be0:	62 0b       	sbc	r22, r18
    1be2:	73 0b       	sbc	r23, r19
    1be4:	84 0b       	sbc	r24, r20
    1be6:	e3 95       	inc	r30
    1be8:	9a 95       	dec	r25
    1bea:	72 f7       	brpl	.-36     	; 0x1bc8 <__fp_rempio2+0x16>
    1bec:	80 38       	cpi	r24, 0x80	; 128
    1bee:	30 f4       	brcc	.+12     	; 0x1bfc <__fp_rempio2+0x4a>
    1bf0:	9a 95       	dec	r25
    1bf2:	bb 0f       	add	r27, r27
    1bf4:	66 1f       	adc	r22, r22
    1bf6:	77 1f       	adc	r23, r23
    1bf8:	88 1f       	adc	r24, r24
    1bfa:	d2 f7       	brpl	.-12     	; 0x1bf0 <__fp_rempio2+0x3e>
    1bfc:	90 48       	sbci	r25, 0x80	; 128
    1bfe:	9b c0       	rjmp	.+310    	; 0x1d36 <__fp_mpack_finite>

00001c00 <__fp_sinus>:
    1c00:	ef 93       	push	r30
    1c02:	e0 ff       	sbrs	r30, 0
    1c04:	06 c0       	rjmp	.+12     	; 0x1c12 <__fp_sinus+0x12>
    1c06:	a2 ea       	ldi	r26, 0xA2	; 162
    1c08:	2a ed       	ldi	r18, 0xDA	; 218
    1c0a:	3f e0       	ldi	r19, 0x0F	; 15
    1c0c:	49 ec       	ldi	r20, 0xC9	; 201
    1c0e:	5f eb       	ldi	r21, 0xBF	; 191
    1c10:	37 d0       	rcall	.+110    	; 0x1c80 <__addsf3x>
    1c12:	bf d0       	rcall	.+382    	; 0x1d92 <__fp_round>
    1c14:	0f 90       	pop	r0
    1c16:	03 94       	inc	r0
    1c18:	01 fc       	sbrc	r0, 1
    1c1a:	90 58       	subi	r25, 0x80	; 128
    1c1c:	ec e8       	ldi	r30, 0x8C	; 140
    1c1e:	f0 e0       	ldi	r31, 0x00	; 0
    1c20:	99 c0       	rjmp	.+306    	; 0x1d54 <__fp_powsodd>

00001c22 <__fp_split3>:
    1c22:	57 fd       	sbrc	r21, 7
    1c24:	90 58       	subi	r25, 0x80	; 128
    1c26:	44 0f       	add	r20, r20
    1c28:	55 1f       	adc	r21, r21
    1c2a:	59 f0       	breq	.+22     	; 0x1c42 <__fp_splitA+0x10>
    1c2c:	5f 3f       	cpi	r21, 0xFF	; 255
    1c2e:	71 f0       	breq	.+28     	; 0x1c4c <__fp_splitA+0x1a>
    1c30:	47 95       	ror	r20

00001c32 <__fp_splitA>:
    1c32:	88 0f       	add	r24, r24
    1c34:	97 fb       	bst	r25, 7
    1c36:	99 1f       	adc	r25, r25
    1c38:	61 f0       	breq	.+24     	; 0x1c52 <__fp_splitA+0x20>
    1c3a:	9f 3f       	cpi	r25, 0xFF	; 255
    1c3c:	79 f0       	breq	.+30     	; 0x1c5c <__fp_splitA+0x2a>
    1c3e:	87 95       	ror	r24
    1c40:	08 95       	ret
    1c42:	12 16       	cp	r1, r18
    1c44:	13 06       	cpc	r1, r19
    1c46:	14 06       	cpc	r1, r20
    1c48:	55 1f       	adc	r21, r21
    1c4a:	f2 cf       	rjmp	.-28     	; 0x1c30 <__fp_split3+0xe>
    1c4c:	46 95       	lsr	r20
    1c4e:	f1 df       	rcall	.-30     	; 0x1c32 <__fp_splitA>
    1c50:	08 c0       	rjmp	.+16     	; 0x1c62 <__fp_splitA+0x30>
    1c52:	16 16       	cp	r1, r22
    1c54:	17 06       	cpc	r1, r23
    1c56:	18 06       	cpc	r1, r24
    1c58:	99 1f       	adc	r25, r25
    1c5a:	f1 cf       	rjmp	.-30     	; 0x1c3e <__fp_splitA+0xc>
    1c5c:	86 95       	lsr	r24
    1c5e:	71 05       	cpc	r23, r1
    1c60:	61 05       	cpc	r22, r1
    1c62:	08 94       	sec
    1c64:	08 95       	ret
    1c66:	87 d0       	rcall	.+270    	; 0x1d76 <__fp_pscA>
    1c68:	30 f0       	brcs	.+12     	; 0x1c76 <__fp_splitA+0x44>
    1c6a:	8c d0       	rcall	.+280    	; 0x1d84 <__fp_pscB>
    1c6c:	20 f0       	brcs	.+8      	; 0x1c76 <__fp_splitA+0x44>
    1c6e:	31 f4       	brne	.+12     	; 0x1c7c <__fp_splitA+0x4a>
    1c70:	9f 3f       	cpi	r25, 0xFF	; 255
    1c72:	11 f4       	brne	.+4      	; 0x1c78 <__fp_splitA+0x46>
    1c74:	1e f4       	brtc	.+6      	; 0x1c7c <__fp_splitA+0x4a>
    1c76:	6b c0       	rjmp	.+214    	; 0x1d4e <__fp_nan>
    1c78:	0e f4       	brtc	.+2      	; 0x1c7c <__fp_splitA+0x4a>
    1c7a:	e0 95       	com	r30
    1c7c:	e7 fb       	bst	r30, 7
    1c7e:	53 c0       	rjmp	.+166    	; 0x1d26 <__fp_inf>

00001c80 <__addsf3x>:
    1c80:	e9 2f       	mov	r30, r25
    1c82:	cf df       	rcall	.-98     	; 0x1c22 <__fp_split3>
    1c84:	80 f3       	brcs	.-32     	; 0x1c66 <__fp_splitA+0x34>
    1c86:	ba 17       	cp	r27, r26
    1c88:	62 07       	cpc	r22, r18
    1c8a:	73 07       	cpc	r23, r19
    1c8c:	84 07       	cpc	r24, r20
    1c8e:	95 07       	cpc	r25, r21
    1c90:	18 f0       	brcs	.+6      	; 0x1c98 <__addsf3x+0x18>
    1c92:	71 f4       	brne	.+28     	; 0x1cb0 <__addsf3x+0x30>
    1c94:	9e f5       	brtc	.+102    	; 0x1cfc <__addsf3x+0x7c>
    1c96:	8e c0       	rjmp	.+284    	; 0x1db4 <__fp_zero>
    1c98:	0e f4       	brtc	.+2      	; 0x1c9c <__addsf3x+0x1c>
    1c9a:	e0 95       	com	r30
    1c9c:	0b 2e       	mov	r0, r27
    1c9e:	ba 2f       	mov	r27, r26
    1ca0:	a0 2d       	mov	r26, r0
    1ca2:	0b 01       	movw	r0, r22
    1ca4:	b9 01       	movw	r22, r18
    1ca6:	90 01       	movw	r18, r0
    1ca8:	0c 01       	movw	r0, r24
    1caa:	ca 01       	movw	r24, r20
    1cac:	a0 01       	movw	r20, r0
    1cae:	11 24       	eor	r1, r1
    1cb0:	ff 27       	eor	r31, r31
    1cb2:	59 1b       	sub	r21, r25
    1cb4:	99 f0       	breq	.+38     	; 0x1cdc <__addsf3x+0x5c>
    1cb6:	59 3f       	cpi	r21, 0xF9	; 249
    1cb8:	50 f4       	brcc	.+20     	; 0x1cce <__addsf3x+0x4e>
    1cba:	50 3e       	cpi	r21, 0xE0	; 224
    1cbc:	68 f1       	brcs	.+90     	; 0x1d18 <__addsf3x+0x98>
    1cbe:	1a 16       	cp	r1, r26
    1cc0:	f0 40       	sbci	r31, 0x00	; 0
    1cc2:	a2 2f       	mov	r26, r18
    1cc4:	23 2f       	mov	r18, r19
    1cc6:	34 2f       	mov	r19, r20
    1cc8:	44 27       	eor	r20, r20
    1cca:	58 5f       	subi	r21, 0xF8	; 248
    1ccc:	f3 cf       	rjmp	.-26     	; 0x1cb4 <__addsf3x+0x34>
    1cce:	46 95       	lsr	r20
    1cd0:	37 95       	ror	r19
    1cd2:	27 95       	ror	r18
    1cd4:	a7 95       	ror	r26
    1cd6:	f0 40       	sbci	r31, 0x00	; 0
    1cd8:	53 95       	inc	r21
    1cda:	c9 f7       	brne	.-14     	; 0x1cce <__addsf3x+0x4e>
    1cdc:	7e f4       	brtc	.+30     	; 0x1cfc <__addsf3x+0x7c>
    1cde:	1f 16       	cp	r1, r31
    1ce0:	ba 0b       	sbc	r27, r26
    1ce2:	62 0b       	sbc	r22, r18
    1ce4:	73 0b       	sbc	r23, r19
    1ce6:	84 0b       	sbc	r24, r20
    1ce8:	ba f0       	brmi	.+46     	; 0x1d18 <__addsf3x+0x98>
    1cea:	91 50       	subi	r25, 0x01	; 1
    1cec:	a1 f0       	breq	.+40     	; 0x1d16 <__addsf3x+0x96>
    1cee:	ff 0f       	add	r31, r31
    1cf0:	bb 1f       	adc	r27, r27
    1cf2:	66 1f       	adc	r22, r22
    1cf4:	77 1f       	adc	r23, r23
    1cf6:	88 1f       	adc	r24, r24
    1cf8:	c2 f7       	brpl	.-16     	; 0x1cea <__addsf3x+0x6a>
    1cfa:	0e c0       	rjmp	.+28     	; 0x1d18 <__addsf3x+0x98>
    1cfc:	ba 0f       	add	r27, r26
    1cfe:	62 1f       	adc	r22, r18
    1d00:	73 1f       	adc	r23, r19
    1d02:	84 1f       	adc	r24, r20
    1d04:	48 f4       	brcc	.+18     	; 0x1d18 <__addsf3x+0x98>
    1d06:	87 95       	ror	r24
    1d08:	77 95       	ror	r23
    1d0a:	67 95       	ror	r22
    1d0c:	b7 95       	ror	r27
    1d0e:	f7 95       	ror	r31
    1d10:	9e 3f       	cpi	r25, 0xFE	; 254
    1d12:	08 f0       	brcs	.+2      	; 0x1d16 <__addsf3x+0x96>
    1d14:	b3 cf       	rjmp	.-154    	; 0x1c7c <__fp_splitA+0x4a>
    1d16:	93 95       	inc	r25
    1d18:	88 0f       	add	r24, r24
    1d1a:	08 f0       	brcs	.+2      	; 0x1d1e <__addsf3x+0x9e>
    1d1c:	99 27       	eor	r25, r25
    1d1e:	ee 0f       	add	r30, r30
    1d20:	97 95       	ror	r25
    1d22:	87 95       	ror	r24
    1d24:	08 95       	ret

00001d26 <__fp_inf>:
    1d26:	97 f9       	bld	r25, 7
    1d28:	9f 67       	ori	r25, 0x7F	; 127
    1d2a:	80 e8       	ldi	r24, 0x80	; 128
    1d2c:	70 e0       	ldi	r23, 0x00	; 0
    1d2e:	60 e0       	ldi	r22, 0x00	; 0
    1d30:	08 95       	ret

00001d32 <__fp_mpack>:
    1d32:	9f 3f       	cpi	r25, 0xFF	; 255
    1d34:	31 f0       	breq	.+12     	; 0x1d42 <__fp_mpack_finite+0xc>

00001d36 <__fp_mpack_finite>:
    1d36:	91 50       	subi	r25, 0x01	; 1
    1d38:	20 f4       	brcc	.+8      	; 0x1d42 <__fp_mpack_finite+0xc>
    1d3a:	87 95       	ror	r24
    1d3c:	77 95       	ror	r23
    1d3e:	67 95       	ror	r22
    1d40:	b7 95       	ror	r27
    1d42:	88 0f       	add	r24, r24
    1d44:	91 1d       	adc	r25, r1
    1d46:	96 95       	lsr	r25
    1d48:	87 95       	ror	r24
    1d4a:	97 f9       	bld	r25, 7
    1d4c:	08 95       	ret

00001d4e <__fp_nan>:
    1d4e:	9f ef       	ldi	r25, 0xFF	; 255
    1d50:	80 ec       	ldi	r24, 0xC0	; 192
    1d52:	08 95       	ret

00001d54 <__fp_powsodd>:
    1d54:	9f 93       	push	r25
    1d56:	8f 93       	push	r24
    1d58:	7f 93       	push	r23
    1d5a:	6f 93       	push	r22
    1d5c:	ff 93       	push	r31
    1d5e:	ef 93       	push	r30
    1d60:	9b 01       	movw	r18, r22
    1d62:	ac 01       	movw	r20, r24
    1d64:	6f d8       	rcall	.-3874   	; 0xe44 <__mulsf3>
    1d66:	ef 91       	pop	r30
    1d68:	ff 91       	pop	r31
    1d6a:	2b d0       	rcall	.+86     	; 0x1dc2 <__fp_powser>
    1d6c:	2f 91       	pop	r18
    1d6e:	3f 91       	pop	r19
    1d70:	4f 91       	pop	r20
    1d72:	5f 91       	pop	r21
    1d74:	67 c8       	rjmp	.-3890   	; 0xe44 <__mulsf3>

00001d76 <__fp_pscA>:
    1d76:	00 24       	eor	r0, r0
    1d78:	0a 94       	dec	r0
    1d7a:	16 16       	cp	r1, r22
    1d7c:	17 06       	cpc	r1, r23
    1d7e:	18 06       	cpc	r1, r24
    1d80:	09 06       	cpc	r0, r25
    1d82:	08 95       	ret

00001d84 <__fp_pscB>:
    1d84:	00 24       	eor	r0, r0
    1d86:	0a 94       	dec	r0
    1d88:	12 16       	cp	r1, r18
    1d8a:	13 06       	cpc	r1, r19
    1d8c:	14 06       	cpc	r1, r20
    1d8e:	05 06       	cpc	r0, r21
    1d90:	08 95       	ret

00001d92 <__fp_round>:
    1d92:	09 2e       	mov	r0, r25
    1d94:	03 94       	inc	r0
    1d96:	00 0c       	add	r0, r0
    1d98:	11 f4       	brne	.+4      	; 0x1d9e <__fp_round+0xc>
    1d9a:	88 23       	and	r24, r24
    1d9c:	52 f0       	brmi	.+20     	; 0x1db2 <__fp_round+0x20>
    1d9e:	bb 0f       	add	r27, r27
    1da0:	40 f4       	brcc	.+16     	; 0x1db2 <__fp_round+0x20>
    1da2:	bf 2b       	or	r27, r31
    1da4:	11 f4       	brne	.+4      	; 0x1daa <__fp_round+0x18>
    1da6:	60 ff       	sbrs	r22, 0
    1da8:	04 c0       	rjmp	.+8      	; 0x1db2 <__fp_round+0x20>
    1daa:	6f 5f       	subi	r22, 0xFF	; 255
    1dac:	7f 4f       	sbci	r23, 0xFF	; 255
    1dae:	8f 4f       	sbci	r24, 0xFF	; 255
    1db0:	9f 4f       	sbci	r25, 0xFF	; 255
    1db2:	08 95       	ret

00001db4 <__fp_zero>:
    1db4:	e8 94       	clt

00001db6 <__fp_szero>:
    1db6:	bb 27       	eor	r27, r27
    1db8:	66 27       	eor	r22, r22
    1dba:	77 27       	eor	r23, r23
    1dbc:	cb 01       	movw	r24, r22
    1dbe:	97 f9       	bld	r25, 7
    1dc0:	08 95       	ret

00001dc2 <__fp_powser>:
    1dc2:	df 93       	push	r29
    1dc4:	cf 93       	push	r28
    1dc6:	1f 93       	push	r17
    1dc8:	0f 93       	push	r16
    1dca:	ff 92       	push	r15
    1dcc:	ef 92       	push	r14
    1dce:	df 92       	push	r13
    1dd0:	7b 01       	movw	r14, r22
    1dd2:	8c 01       	movw	r16, r24
    1dd4:	68 94       	set
    1dd6:	05 c0       	rjmp	.+10     	; 0x1de2 <__fp_powser+0x20>
    1dd8:	da 2e       	mov	r13, r26
    1dda:	ef 01       	movw	r28, r30
    1ddc:	21 d0       	rcall	.+66     	; 0x1e20 <__mulsf3x>
    1dde:	fe 01       	movw	r30, r28
    1de0:	e8 94       	clt
    1de2:	a5 91       	lpm	r26, Z+
    1de4:	25 91       	lpm	r18, Z+
    1de6:	35 91       	lpm	r19, Z+
    1de8:	45 91       	lpm	r20, Z+
    1dea:	55 91       	lpm	r21, Z+
    1dec:	ae f3       	brts	.-22     	; 0x1dd8 <__fp_powser+0x16>
    1dee:	ef 01       	movw	r28, r30
    1df0:	47 df       	rcall	.-370    	; 0x1c80 <__addsf3x>
    1df2:	fe 01       	movw	r30, r28
    1df4:	97 01       	movw	r18, r14
    1df6:	a8 01       	movw	r20, r16
    1df8:	da 94       	dec	r13
    1dfa:	79 f7       	brne	.-34     	; 0x1dda <__fp_powser+0x18>
    1dfc:	df 90       	pop	r13
    1dfe:	ef 90       	pop	r14
    1e00:	ff 90       	pop	r15
    1e02:	0f 91       	pop	r16
    1e04:	1f 91       	pop	r17
    1e06:	cf 91       	pop	r28
    1e08:	df 91       	pop	r29
    1e0a:	08 95       	ret
    1e0c:	b4 df       	rcall	.-152    	; 0x1d76 <__fp_pscA>
    1e0e:	28 f0       	brcs	.+10     	; 0x1e1a <__fp_powser+0x58>
    1e10:	b9 df       	rcall	.-142    	; 0x1d84 <__fp_pscB>
    1e12:	18 f0       	brcs	.+6      	; 0x1e1a <__fp_powser+0x58>
    1e14:	95 23       	and	r25, r21
    1e16:	09 f0       	breq	.+2      	; 0x1e1a <__fp_powser+0x58>
    1e18:	86 cf       	rjmp	.-244    	; 0x1d26 <__fp_inf>
    1e1a:	99 cf       	rjmp	.-206    	; 0x1d4e <__fp_nan>
    1e1c:	11 24       	eor	r1, r1
    1e1e:	cb cf       	rjmp	.-106    	; 0x1db6 <__fp_szero>

00001e20 <__mulsf3x>:
    1e20:	00 df       	rcall	.-512    	; 0x1c22 <__fp_split3>
    1e22:	a0 f3       	brcs	.-24     	; 0x1e0c <__fp_powser+0x4a>

00001e24 <__mulsf3_pse>:
    1e24:	95 9f       	mul	r25, r21
    1e26:	d1 f3       	breq	.-12     	; 0x1e1c <__fp_powser+0x5a>
    1e28:	95 0f       	add	r25, r21
    1e2a:	50 e0       	ldi	r21, 0x00	; 0
    1e2c:	55 1f       	adc	r21, r21
    1e2e:	62 9f       	mul	r22, r18
    1e30:	f0 01       	movw	r30, r0
    1e32:	72 9f       	mul	r23, r18
    1e34:	bb 27       	eor	r27, r27
    1e36:	f0 0d       	add	r31, r0
    1e38:	b1 1d       	adc	r27, r1
    1e3a:	63 9f       	mul	r22, r19
    1e3c:	aa 27       	eor	r26, r26
    1e3e:	f0 0d       	add	r31, r0
    1e40:	b1 1d       	adc	r27, r1
    1e42:	aa 1f       	adc	r26, r26
    1e44:	64 9f       	mul	r22, r20
    1e46:	66 27       	eor	r22, r22
    1e48:	b0 0d       	add	r27, r0
    1e4a:	a1 1d       	adc	r26, r1
    1e4c:	66 1f       	adc	r22, r22
    1e4e:	82 9f       	mul	r24, r18
    1e50:	22 27       	eor	r18, r18
    1e52:	b0 0d       	add	r27, r0
    1e54:	a1 1d       	adc	r26, r1
    1e56:	62 1f       	adc	r22, r18
    1e58:	73 9f       	mul	r23, r19
    1e5a:	b0 0d       	add	r27, r0
    1e5c:	a1 1d       	adc	r26, r1
    1e5e:	62 1f       	adc	r22, r18
    1e60:	83 9f       	mul	r24, r19
    1e62:	a0 0d       	add	r26, r0
    1e64:	61 1d       	adc	r22, r1
    1e66:	22 1f       	adc	r18, r18
    1e68:	74 9f       	mul	r23, r20
    1e6a:	33 27       	eor	r19, r19
    1e6c:	a0 0d       	add	r26, r0
    1e6e:	61 1d       	adc	r22, r1
    1e70:	23 1f       	adc	r18, r19
    1e72:	84 9f       	mul	r24, r20
    1e74:	60 0d       	add	r22, r0
    1e76:	21 1d       	adc	r18, r1
    1e78:	82 2f       	mov	r24, r18
    1e7a:	76 2f       	mov	r23, r22
    1e7c:	6a 2f       	mov	r22, r26
    1e7e:	11 24       	eor	r1, r1
    1e80:	9f 57       	subi	r25, 0x7F	; 127
    1e82:	50 40       	sbci	r21, 0x00	; 0
    1e84:	8a f0       	brmi	.+34     	; 0x1ea8 <__mulsf3_pse+0x84>
    1e86:	e1 f0       	breq	.+56     	; 0x1ec0 <__mulsf3_pse+0x9c>
    1e88:	88 23       	and	r24, r24
    1e8a:	4a f0       	brmi	.+18     	; 0x1e9e <__mulsf3_pse+0x7a>
    1e8c:	ee 0f       	add	r30, r30
    1e8e:	ff 1f       	adc	r31, r31
    1e90:	bb 1f       	adc	r27, r27
    1e92:	66 1f       	adc	r22, r22
    1e94:	77 1f       	adc	r23, r23
    1e96:	88 1f       	adc	r24, r24
    1e98:	91 50       	subi	r25, 0x01	; 1
    1e9a:	50 40       	sbci	r21, 0x00	; 0
    1e9c:	a9 f7       	brne	.-22     	; 0x1e88 <__mulsf3_pse+0x64>
    1e9e:	9e 3f       	cpi	r25, 0xFE	; 254
    1ea0:	51 05       	cpc	r21, r1
    1ea2:	70 f0       	brcs	.+28     	; 0x1ec0 <__mulsf3_pse+0x9c>
    1ea4:	40 cf       	rjmp	.-384    	; 0x1d26 <__fp_inf>
    1ea6:	87 cf       	rjmp	.-242    	; 0x1db6 <__fp_szero>
    1ea8:	5f 3f       	cpi	r21, 0xFF	; 255
    1eaa:	ec f3       	brlt	.-6      	; 0x1ea6 <__mulsf3_pse+0x82>
    1eac:	98 3e       	cpi	r25, 0xE8	; 232
    1eae:	dc f3       	brlt	.-10     	; 0x1ea6 <__mulsf3_pse+0x82>
    1eb0:	86 95       	lsr	r24
    1eb2:	77 95       	ror	r23
    1eb4:	67 95       	ror	r22
    1eb6:	b7 95       	ror	r27
    1eb8:	f7 95       	ror	r31
    1eba:	e7 95       	ror	r30
    1ebc:	9f 5f       	subi	r25, 0xFF	; 255
    1ebe:	c1 f7       	brne	.-16     	; 0x1eb0 <__mulsf3_pse+0x8c>
    1ec0:	fe 2b       	or	r31, r30
    1ec2:	88 0f       	add	r24, r24
    1ec4:	91 1d       	adc	r25, r1
    1ec6:	96 95       	lsr	r25
    1ec8:	87 95       	ror	r24
    1eca:	97 f9       	bld	r25, 7
    1ecc:	08 95       	ret

00001ece <_exit>:
    1ece:	f8 94       	cli

00001ed0 <__stop_program>:
    1ed0:	ff cf       	rjmp	.-2      	; 0x1ed0 <__stop_program>
