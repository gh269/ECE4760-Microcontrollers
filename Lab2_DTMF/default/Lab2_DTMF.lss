
Lab2_DTMF.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000bc  00800100  00001f18  00001fac  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001f18  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000002a7  008001bc  008001bc  00002068  2**0
                  ALLOC
  3 .stab         000022a4  00000000  00000000  00002068  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000008d1  00000000  00000000  0000430c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000002f  00000000  00000000  00004bdd  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 00000238  00000000  00000000  00004c0c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   000035ab  00000000  00000000  00004e44  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000019b6  00000000  00000000  000083ef  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000141b  00000000  00000000  00009da5  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000524  00000000  00000000  0000b1c0  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000894  00000000  00000000  0000b6e4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00001a3f  00000000  00000000  0000bf78  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 000000a0  00000000  00000000  0000d9b7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 55 00 	jmp	0xaa	; 0xaa <__ctors_end>
       4:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
       8:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
       c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      10:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      14:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      18:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      1c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      20:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      24:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      28:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      2c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      30:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      34:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      38:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      3c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      40:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      44:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      48:	0c 94 71 03 	jmp	0x6e2	; 0x6e2 <__vector_18>
      4c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      50:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      54:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      58:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      5c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      60:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      64:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      68:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      6c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      70:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      74:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      78:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      7c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      80:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      84:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      88:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      8c:	05 a8       	ldd	r0, Z+53	; 0x35
      8e:	4c cd       	rjmp	.-1384   	; 0xfffffb28 <__eeprom_end+0xff7efb28>
      90:	b2 d4       	rcall	.+2404   	; 0x9f6 <play+0xea>
      92:	4e b9       	out	0x0e, r20	; 14
      94:	38 36       	cpi	r19, 0x68	; 104
      96:	a9 02       	muls	r26, r25
      98:	0c 50       	subi	r16, 0x0C	; 12
      9a:	b9 91       	ld	r27, Y+
      9c:	86 88       	ldd	r8, Z+22	; 0x16
      9e:	08 3c       	cpi	r16, 0xC8	; 200
      a0:	a6 aa       	std	Z+54, r10	; 0x36
      a2:	aa 2a       	or	r10, r26
      a4:	be 00       	.word	0x00be	; ????
      a6:	00 00       	nop
      a8:	80 3f       	cpi	r24, 0xF0	; 240

000000aa <__ctors_end>:
      aa:	11 24       	eor	r1, r1
      ac:	1f be       	out	0x3f, r1	; 63
      ae:	cf ef       	ldi	r28, 0xFF	; 255
      b0:	d0 e4       	ldi	r29, 0x40	; 64
      b2:	de bf       	out	0x3e, r29	; 62
      b4:	cd bf       	out	0x3d, r28	; 61

000000b6 <__do_copy_data>:
      b6:	11 e0       	ldi	r17, 0x01	; 1
      b8:	a0 e0       	ldi	r26, 0x00	; 0
      ba:	b1 e0       	ldi	r27, 0x01	; 1
      bc:	e8 e1       	ldi	r30, 0x18	; 24
      be:	ff e1       	ldi	r31, 0x1F	; 31
      c0:	00 e0       	ldi	r16, 0x00	; 0
      c2:	0b bf       	out	0x3b, r16	; 59
      c4:	02 c0       	rjmp	.+4      	; 0xca <__do_copy_data+0x14>
      c6:	07 90       	elpm	r0, Z+
      c8:	0d 92       	st	X+, r0
      ca:	ac 3b       	cpi	r26, 0xBC	; 188
      cc:	b1 07       	cpc	r27, r17
      ce:	d9 f7       	brne	.-10     	; 0xc6 <__do_copy_data+0x10>

000000d0 <__do_clear_bss>:
      d0:	24 e0       	ldi	r18, 0x04	; 4
      d2:	ac eb       	ldi	r26, 0xBC	; 188
      d4:	b1 e0       	ldi	r27, 0x01	; 1
      d6:	01 c0       	rjmp	.+2      	; 0xda <.do_clear_bss_start>

000000d8 <.do_clear_bss_loop>:
      d8:	1d 92       	st	X+, r1

000000da <.do_clear_bss_start>:
      da:	a3 36       	cpi	r26, 0x63	; 99
      dc:	b2 07       	cpc	r27, r18
      de:	e1 f7       	brne	.-8      	; 0xd8 <.do_clear_bss_loop>
      e0:	0e 94 9e 0a 	call	0x153c	; 0x153c <main>
      e4:	0c 94 8a 0f 	jmp	0x1f14	; 0x1f14 <_exit>

000000e8 <__bad_interrupt>:
      e8:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ec <task1>:
// putchar and getchar are in uart.c
FILE uart_str = FDEV_SETUP_STREAM(uart_putchar, uart_getchar, _FDEV_SETUP_RW);

//******************************* 
//Task 1  
void task1(void) {
      ec:	af 92       	push	r10
      ee:	bf 92       	push	r11
      f0:	df 92       	push	r13
      f2:	ef 92       	push	r14
      f4:	ff 92       	push	r15
      f6:	0f 93       	push	r16
      f8:	1f 93       	push	r17
      fa:	cf 93       	push	r28
      fc:	df 93       	push	r29
      fe:	1f 92       	push	r1
     100:	cd b7       	in	r28, 0x3d	; 61
     102:	de b7       	in	r29, 0x3e	; 62
	time1=0;  //reset the task timer
     104:	10 92 2c 02 	sts	0x022C, r1
     108:	10 92 2b 02 	sts	0x022B, r1

	//get lower nibble
	PORTDIR = 0x0f;
     10c:	8f e0       	ldi	r24, 0x0F	; 15
     10e:	81 b9       	out	0x01, r24	; 1
	PORTDATA = 0xf0; 
     110:	90 ef       	ldi	r25, 0xF0	; 240
     112:	92 b9       	out	0x02, r25	; 2
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     114:	2a e1       	ldi	r18, 0x1A	; 26
     116:	2a 95       	dec	r18
     118:	f1 f7       	brne	.-4      	; 0x116 <task1+0x2a>
     11a:	00 c0       	rjmp	.+0      	; 0x11c <task1+0x30>
	_delay_us(5);
	key = PORTIN;
     11c:	20 b1       	in	r18, 0x00	; 0
     11e:	20 93 2f 02 	sts	0x022F, r18
  
	//get upper nibble
	PORTDIR = 0xf0;
     122:	91 b9       	out	0x01, r25	; 1
	PORTDATA = 0x0f; 
     124:	82 b9       	out	0x02, r24	; 2
     126:	8a e1       	ldi	r24, 0x1A	; 26
     128:	8a 95       	dec	r24
     12a:	f1 f7       	brne	.-4      	; 0x128 <task1+0x3c>
     12c:	00 c0       	rjmp	.+0      	; 0x12e <task1+0x42>
	_delay_us(5);
	key = key | PORTIN;
     12e:	90 b1       	in	r25, 0x00	; 0
     130:	80 91 2f 02 	lds	r24, 0x022F
     134:	98 2b       	or	r25, r24
     136:	90 93 2f 02 	sts	0x022F, r25
  
	//find matching keycode in keytbl
	if (key != 0xff) {
     13a:	9f 3f       	cpi	r25, 0xFF	; 255
     13c:	a9 f0       	breq	.+42     	; 0x168 <task1+0x7c>
	  for (butnum=0; butnum<maxkeys; butnum++) {   
     13e:	80 e0       	ldi	r24, 0x00	; 0
     140:	0a c0       	rjmp	.+20     	; 0x156 <task1+0x6a>
     142:	28 2f       	mov	r18, r24
     144:	2f 5f       	subi	r18, 0xFF	; 255
	  	if (keytbl[butnum]==key)  break;   
     146:	e8 2f       	mov	r30, r24
     148:	f0 e0       	ldi	r31, 0x00	; 0
     14a:	e2 5c       	subi	r30, 0xC2	; 194
     14c:	fe 4f       	sbci	r31, 0xFE	; 254
     14e:	30 81       	ld	r19, Z
     150:	39 17       	cp	r19, r25
     152:	31 f0       	breq	.+12     	; 0x160 <task1+0x74>
     154:	82 2f       	mov	r24, r18
	_delay_us(5);
	key = key | PORTIN;
  
	//find matching keycode in keytbl
	if (key != 0xff) {
	  for (butnum=0; butnum<maxkeys; butnum++) {   
     156:	8c 30       	cpi	r24, 0x0C	; 12
     158:	a0 f3       	brcs	.-24     	; 0x142 <task1+0x56>
	  	if (keytbl[butnum]==key)  break;   
	  }

	  if (butnum==maxkeys) butnum=0;
     15a:	8c 30       	cpi	r24, 0x0C	; 12
     15c:	09 f4       	brne	.+2      	; 0x160 <task1+0x74>
     15e:	04 c0       	rjmp	.+8      	; 0x168 <task1+0x7c>
	  else butnum++;	   //adjust by one to make range 1-16
     160:	8f 5f       	subi	r24, 0xFF	; 255
     162:	80 93 27 02 	sts	0x0227, r24
     166:	02 c0       	rjmp	.+4      	; 0x16c <task1+0x80>
	}
	else butnum=0;
     168:	10 92 27 02 	sts	0x0227, r1
	
	// Switching in the finite state machine.
	switch (PushState) {
     16c:	80 91 33 02 	lds	r24, 0x0233
     170:	82 30       	cpi	r24, 0x02	; 2
     172:	91 f0       	breq	.+36     	; 0x198 <task1+0xac>
     174:	20 f4       	brcc	.+8      	; 0x17e <task1+0x92>
     176:	81 30       	cpi	r24, 0x01	; 1
     178:	09 f0       	breq	.+2      	; 0x17c <task1+0x90>
     17a:	60 c0       	rjmp	.+192    	; 0x23c <task1+0x150>
     17c:	06 c0       	rjmp	.+12     	; 0x18a <task1+0x9e>
     17e:	83 30       	cpi	r24, 0x03	; 3
     180:	d1 f0       	breq	.+52     	; 0x1b6 <task1+0xca>
     182:	84 30       	cpi	r24, 0x04	; 4
     184:	09 f0       	breq	.+2      	; 0x188 <task1+0x9c>
     186:	5a c0       	rjmp	.+180    	; 0x23c <task1+0x150>
     188:	4c c0       	rjmp	.+152    	; 0x222 <task1+0x136>
     case NoPush: 
        if (butnum != 0) {
     18a:	80 91 27 02 	lds	r24, 0x0227
     18e:	88 23       	and	r24, r24
     190:	09 f4       	brne	.+2      	; 0x194 <task1+0xa8>
     192:	54 c0       	rjmp	.+168    	; 0x23c <task1+0x150>
			PushState=MaybePush;
     194:	82 e0       	ldi	r24, 0x02	; 2
     196:	4a c0       	rjmp	.+148    	; 0x22c <task1+0x140>
		}
        else PushState=NoPush;
        break;
     case MaybePush:
        if (butnum != 0) {
     198:	80 91 27 02 	lds	r24, 0x0227
     19c:	88 23       	and	r24, r24
     19e:	49 f0       	breq	.+18     	; 0x1b2 <task1+0xc6>
           	PushState=Pushed; 
     1a0:	83 e0       	ldi	r24, 0x03	; 3
     1a2:	80 93 33 02 	sts	0x0233, r24
			PushFlag=1;
     1a6:	81 e0       	ldi	r24, 0x01	; 1
     1a8:	80 93 28 02 	sts	0x0228, r24
			//Test mode override
			if (~PINB & 0x01) {
     1ac:	18 99       	sbic	0x03, 0	; 3
     1ae:	46 c0       	rjmp	.+140    	; 0x23c <task1+0x150>
     1b0:	43 c0       	rjmp	.+134    	; 0x238 <task1+0x14c>
				//fprintf(stdout, "PINB is pressed.\n\r");
		 		PushFlag=0;			
		   	}  
        }
        else PushState=NoPush;
     1b2:	81 e0       	ldi	r24, 0x01	; 1
     1b4:	3b c0       	rjmp	.+118    	; 0x22c <task1+0x140>
        break;
     case Pushed:  
        if (butnum != 0) {
     1b6:	80 91 27 02 	lds	r24, 0x0227
     1ba:	88 23       	and	r24, r24
     1bc:	81 f1       	breq	.+96     	; 0x21e <task1+0x132>
			PushState=Pushed;
			//Test mode override
			if (~PINB & 0x01) {
     1be:	18 99       	sbic	0x03, 0	; 3
     1c0:	3d c0       	rjmp	.+122    	; 0x23c <task1+0x150>
		 		switch (butnum) {
     1c2:	84 30       	cpi	r24, 0x04	; 4
     1c4:	c1 f0       	breq	.+48     	; 0x1f6 <task1+0x10a>
     1c6:	30 f4       	brcc	.+12     	; 0x1d4 <task1+0xe8>
     1c8:	82 30       	cpi	r24, 0x02	; 2
     1ca:	69 f0       	breq	.+26     	; 0x1e6 <task1+0xfa>
     1cc:	88 f4       	brcc	.+34     	; 0x1f0 <task1+0x104>
     1ce:	81 30       	cpi	r24, 0x01	; 1
     1d0:	a9 f5       	brne	.+106    	; 0x23c <task1+0x150>
     1d2:	06 c0       	rjmp	.+12     	; 0x1e0 <task1+0xf4>
     1d4:	86 30       	cpi	r24, 0x06	; 6
     1d6:	b9 f0       	breq	.+46     	; 0x206 <task1+0x11a>
     1d8:	88 f0       	brcs	.+34     	; 0x1fc <task1+0x110>
     1da:	87 30       	cpi	r24, 0x07	; 7
     1dc:	79 f5       	brne	.+94     	; 0x23c <task1+0x150>
     1de:	18 c0       	rjmp	.+48     	; 0x210 <task1+0x124>
					case 1: 
						play(0, 697);
     1e0:	69 eb       	ldi	r22, 0xB9	; 185
     1e2:	72 e0       	ldi	r23, 0x02	; 2
     1e4:	02 c0       	rjmp	.+4      	; 0x1ea <task1+0xfe>
						break;
					case 2: 
						play(0, 770);
     1e6:	62 e0       	ldi	r22, 0x02	; 2
     1e8:	73 e0       	ldi	r23, 0x03	; 3
     1ea:	80 e0       	ldi	r24, 0x00	; 0
     1ec:	90 e0       	ldi	r25, 0x00	; 0
     1ee:	14 c0       	rjmp	.+40     	; 0x218 <task1+0x12c>
						break;
					case 3: 
						play(0, 852);
     1f0:	64 e5       	ldi	r22, 0x54	; 84
     1f2:	73 e0       	ldi	r23, 0x03	; 3
     1f4:	fa cf       	rjmp	.-12     	; 0x1ea <task1+0xfe>
						break;
					case 4: 
						play(0, 941);
     1f6:	6d ea       	ldi	r22, 0xAD	; 173
     1f8:	73 e0       	ldi	r23, 0x03	; 3
     1fa:	f7 cf       	rjmp	.-18     	; 0x1ea <task1+0xfe>
						break;
					case 5:
						play(1209, 0);
     1fc:	60 e0       	ldi	r22, 0x00	; 0
     1fe:	70 e0       	ldi	r23, 0x00	; 0
     200:	89 eb       	ldi	r24, 0xB9	; 185
     202:	94 e0       	ldi	r25, 0x04	; 4
     204:	09 c0       	rjmp	.+18     	; 0x218 <task1+0x12c>
						break;
					case 6:
						play(1336, 0);
     206:	60 e0       	ldi	r22, 0x00	; 0
     208:	70 e0       	ldi	r23, 0x00	; 0
     20a:	88 e3       	ldi	r24, 0x38	; 56
     20c:	95 e0       	ldi	r25, 0x05	; 5
     20e:	04 c0       	rjmp	.+8      	; 0x218 <task1+0x12c>
						break;
					case 7: 
						play(1477, 0);
     210:	60 e0       	ldi	r22, 0x00	; 0
     212:	70 e0       	ldi	r23, 0x00	; 0
     214:	85 ec       	ldi	r24, 0xC5	; 197
     216:	95 e0       	ldi	r25, 0x05	; 5
     218:	0e 94 86 04 	call	0x90c	; 0x90c <play>
						break;
     21c:	0f c0       	rjmp	.+30     	; 0x23c <task1+0x150>
					default:
						break;
				}	
		   	}  
		}
        else PushState=MaybeNoPush;    
     21e:	84 e0       	ldi	r24, 0x04	; 4
     220:	05 c0       	rjmp	.+10     	; 0x22c <task1+0x140>
        break;
     case MaybeNoPush:
        if (butnum != 0) PushState=Pushed; 
     222:	80 91 27 02 	lds	r24, 0x0227
     226:	88 23       	and	r24, r24
     228:	21 f0       	breq	.+8      	; 0x232 <task1+0x146>
     22a:	83 e0       	ldi	r24, 0x03	; 3
     22c:	80 93 33 02 	sts	0x0233, r24
     230:	05 c0       	rjmp	.+10     	; 0x23c <task1+0x150>
        else {
           PushState=NoPush;
     232:	81 e0       	ldi	r24, 0x01	; 1
     234:	80 93 33 02 	sts	0x0233, r24
           PushFlag=0;
     238:	10 92 28 02 	sts	0x0228, r1
        }    
        break;
  	}

	if (PushState == NoPush && !is_timed_playing) {
     23c:	80 91 33 02 	lds	r24, 0x0233
     240:	81 30       	cpi	r24, 0x01	; 1
     242:	31 f4       	brne	.+12     	; 0x250 <task1+0x164>
     244:	80 91 26 02 	lds	r24, 0x0226
     248:	81 11       	cpse	r24, r1
     24a:	02 c0       	rjmp	.+4      	; 0x250 <task1+0x164>
		//fprintf(stdout, "Depressed...\n\r");
		stop_playing();
     24c:	0e 94 15 05 	call	0xa2a	; 0xa2a <stop_playing>
	}	

	if (PushFlag) {
     250:	80 91 28 02 	lds	r24, 0x0228
     254:	88 23       	and	r24, r24
     256:	09 f4       	brne	.+2      	; 0x25a <task1+0x16e>
     258:	2d c1       	rjmp	.+602    	; 0x4b4 <task1+0x3c8>
		PushFlag = 0;
     25a:	10 92 28 02 	sts	0x0228, r1
		// The * button was pressed. Clear all memory.
		if (butnum == 10) {
     25e:	80 91 27 02 	lds	r24, 0x0227
     262:	8a 30       	cpi	r24, 0x0A	; 10
     264:	09 f5       	brne	.+66     	; 0x2a8 <task1+0x1bc>
			fprintf(stdout, "%u\n\r", butnum);
     266:	1f 92       	push	r1
     268:	8f 93       	push	r24
     26a:	8b e5       	ldi	r24, 0x5B	; 91
     26c:	91 e0       	ldi	r25, 0x01	; 1
     26e:	9f 93       	push	r25
     270:	8f 93       	push	r24
     272:	80 91 60 04 	lds	r24, 0x0460
     276:	8f 93       	push	r24
     278:	80 91 5f 04 	lds	r24, 0x045F
     27c:	8f 93       	push	r24
     27e:	0e 94 15 0b 	call	0x162a	; 0x162a <fprintf>
     282:	ec eb       	ldi	r30, 0xBC	; 188
     284:	f1 e0       	ldi	r31, 0x01	; 1
// putchar and getchar are in uart.c
FILE uart_str = FDEV_SETUP_STREAM(uart_putchar, uart_getchar, _FDEV_SETUP_RW);

//******************************* 
//Task 1  
void task1(void) {
     286:	0f 90       	pop	r0
     288:	0f 90       	pop	r0
     28a:	0f 90       	pop	r0
     28c:	0f 90       	pop	r0
     28e:	0f 90       	pop	r0
     290:	0f 90       	pop	r0
		PushFlag = 0;
		// The * button was pressed. Clear all memory.
		if (butnum == 10) {
			fprintf(stdout, "%u\n\r", butnum);
			for (int i = 0; i < 12; i++) {
				mem[i] = 0;
     292:	11 92       	st	Z+, r1
     294:	11 92       	st	Z+, r1
	if (PushFlag) {
		PushFlag = 0;
		// The * button was pressed. Clear all memory.
		if (butnum == 10) {
			fprintf(stdout, "%u\n\r", butnum);
			for (int i = 0; i < 12; i++) {
     296:	21 e0       	ldi	r18, 0x01	; 1
     298:	e4 3d       	cpi	r30, 0xD4	; 212
     29a:	f2 07       	cpc	r31, r18
     29c:	d1 f7       	brne	.-12     	; 0x292 <task1+0x1a6>
				mem[i] = 0;
			}
			mem_index = 0;
     29e:	10 92 31 02 	sts	0x0231, r1
     2a2:	10 92 30 02 	sts	0x0230, r1
     2a6:	06 c1       	rjmp	.+524    	; 0x4b4 <task1+0x3c8>
		}
		// The # button was pressed. Play all sounds in memory.
		else if (butnum == 12) {
     2a8:	8c 30       	cpi	r24, 0x0C	; 12
     2aa:	09 f0       	breq	.+2      	; 0x2ae <task1+0x1c2>
     2ac:	ba c0       	rjmp	.+372    	; 0x422 <task1+0x336>
			fprintf(stdout, "%u\n\r", butnum);
     2ae:	1f 92       	push	r1
     2b0:	8f 93       	push	r24
     2b2:	8b e5       	ldi	r24, 0x5B	; 91
     2b4:	91 e0       	ldi	r25, 0x01	; 1
     2b6:	9f 93       	push	r25
     2b8:	8f 93       	push	r24
     2ba:	80 91 60 04 	lds	r24, 0x0460
     2be:	8f 93       	push	r24
     2c0:	80 91 5f 04 	lds	r24, 0x045F
     2c4:	8f 93       	push	r24
     2c6:	0e 94 15 0b 	call	0x162a	; 0x162a <fprintf>
			int i = 0;
			is_playing = FALSE;
     2ca:	10 92 34 02 	sts	0x0234, r1
			char silence;
			silence = FALSE;
			//init the playing state machine
			is_timed_playing = FALSE;
     2ce:	10 92 26 02 	sts	0x0226, r1
     2d2:	0f 90       	pop	r0
     2d4:	0f 90       	pop	r0
     2d6:	0f 90       	pop	r0
     2d8:	0f 90       	pop	r0
     2da:	0f 90       	pop	r0
     2dc:	0f 90       	pop	r0
		else if (butnum == 12) {
			fprintf(stdout, "%u\n\r", butnum);
			int i = 0;
			is_playing = FALSE;
			char silence;
			silence = FALSE;
     2de:	20 e0       	ldi	r18, 0x00	; 0
			mem_index = 0;
		}
		// The # button was pressed. Play all sounds in memory.
		else if (butnum == 12) {
			fprintf(stdout, "%u\n\r", butnum);
			int i = 0;
     2e0:	a1 2c       	mov	r10, r1
     2e2:	b1 2c       	mov	r11, r1
					timed_play(high_freq[mem[i]], low_freq[mem[i]], 1000);
					is_timed_playing = TRUE;
					fprintf(stdout, "Playing sound\n\r");
					silence = TRUE;
				}
				if(silence == TRUE && !is_playing) {
     2e4:	dd 24       	eor	r13, r13
     2e6:	d3 94       	inc	r13
				update_status_variables();
				if (mem[i] == 0) {
					break;
				}
				if(silence == FALSE && !is_playing){
					fprintf(stdout, "Int: %u\n\r", mem[i]);
     2e8:	56 e5       	ldi	r21, 0x56	; 86
     2ea:	e5 2e       	mov	r14, r21
     2ec:	51 e0       	ldi	r21, 0x01	; 1
     2ee:	f5 2e       	mov	r15, r21
			char silence;
			silence = FALSE;
			//init the playing state machine
			is_timed_playing = FALSE;
			while( i < 12){
				update_status_variables();
     2f0:	29 83       	std	Y+1, r18	; 0x01
     2f2:	0e 94 3c 05 	call	0xa78	; 0xa78 <update_status_variables>
				if (mem[i] == 0) {
     2f6:	85 01       	movw	r16, r10
     2f8:	00 0f       	add	r16, r16
     2fa:	11 1f       	adc	r17, r17
     2fc:	04 54       	subi	r16, 0x44	; 68
     2fe:	1e 4f       	sbci	r17, 0xFE	; 254
     300:	f8 01       	movw	r30, r16
     302:	80 81       	ld	r24, Z
     304:	91 81       	ldd	r25, Z+1	; 0x01
     306:	29 81       	ldd	r18, Y+1	; 0x01
     308:	00 97       	sbiw	r24, 0x00	; 0
     30a:	09 f4       	brne	.+2      	; 0x30e <task1+0x222>
     30c:	d3 c0       	rjmp	.+422    	; 0x4b4 <task1+0x3c8>
					break;
				}
				if(silence == FALSE && !is_playing){
     30e:	21 11       	cpse	r18, r1
     310:	cb c0       	rjmp	.+406    	; 0x4a8 <task1+0x3bc>
     312:	30 91 34 02 	lds	r19, 0x0234
     316:	31 11       	cpse	r19, r1
     318:	43 c0       	rjmp	.+134    	; 0x3a0 <task1+0x2b4>
					fprintf(stdout, "Int: %u\n\r", mem[i]);
     31a:	9f 93       	push	r25
     31c:	8f 93       	push	r24
     31e:	ff 92       	push	r15
     320:	ef 92       	push	r14
     322:	80 91 60 04 	lds	r24, 0x0460
     326:	8f 93       	push	r24
     328:	80 91 5f 04 	lds	r24, 0x045F
     32c:	8f 93       	push	r24
     32e:	0e 94 15 0b 	call	0x162a	; 0x162a <fprintf>
					timed_play(high_freq[mem[i]], low_freq[mem[i]], 1000);
     332:	f8 01       	movw	r30, r16
     334:	80 81       	ld	r24, Z
     336:	91 81       	ldd	r25, Z+1	; 0x01
     338:	88 0f       	add	r24, r24
     33a:	99 1f       	adc	r25, r25
     33c:	fc 01       	movw	r30, r24
     33e:	e2 5f       	subi	r30, 0xF2	; 242
     340:	fe 4f       	sbci	r31, 0xFE	; 254
     342:	60 81       	ld	r22, Z
     344:	71 81       	ldd	r23, Z+1	; 0x01
     346:	fc 01       	movw	r30, r24
     348:	ea 5d       	subi	r30, 0xDA	; 218
     34a:	fe 4f       	sbci	r31, 0xFE	; 254
     34c:	48 ee       	ldi	r20, 0xE8	; 232
     34e:	53 e0       	ldi	r21, 0x03	; 3
     350:	80 81       	ld	r24, Z
     352:	91 81       	ldd	r25, Z+1	; 0x01
     354:	0e 94 0b 05 	call	0xa16	; 0xa16 <timed_play>
					is_timed_playing = TRUE;
     358:	d0 92 26 02 	sts	0x0226, r13
					fprintf(stdout, "Playing sound\n\r");
     35c:	60 91 5f 04 	lds	r22, 0x045F
     360:	70 91 60 04 	lds	r23, 0x0460
     364:	80 e6       	ldi	r24, 0x60	; 96
     366:	91 e0       	ldi	r25, 0x01	; 1
     368:	0e 94 25 0b 	call	0x164a	; 0x164a <fputs>
     36c:	0f 90       	pop	r0
     36e:	0f 90       	pop	r0
     370:	0f 90       	pop	r0
     372:	0f 90       	pop	r0
     374:	0f 90       	pop	r0
     376:	0f 90       	pop	r0
     378:	97 c0       	rjmp	.+302    	; 0x4a8 <task1+0x3bc>
					silence = TRUE;
				}
				if(silence == TRUE && !is_playing) {
					timed_play(0, 0, 30);
     37a:	4e e1       	ldi	r20, 0x1E	; 30
     37c:	50 e0       	ldi	r21, 0x00	; 0
     37e:	60 e0       	ldi	r22, 0x00	; 0
     380:	70 e0       	ldi	r23, 0x00	; 0
     382:	80 e0       	ldi	r24, 0x00	; 0
     384:	90 e0       	ldi	r25, 0x00	; 0
     386:	0e 94 0b 05 	call	0xa16	; 0xa16 <timed_play>
					is_timed_playing = TRUE;
     38a:	d0 92 26 02 	sts	0x0226, r13
					fprintf(stdout, "Playing silence\n\r");
     38e:	60 91 5f 04 	lds	r22, 0x045F
     392:	70 91 60 04 	lds	r23, 0x0460
     396:	80 e7       	ldi	r24, 0x70	; 112
     398:	91 e0       	ldi	r25, 0x01	; 1
     39a:	0e 94 25 0b 	call	0x164a	; 0x164a <fputs>
     39e:	21 e0       	ldi	r18, 0x01	; 1
				}
				if(is_playing && dds_duration <= 0 && !silence){
     3a0:	80 91 34 02 	lds	r24, 0x0234
     3a4:	88 23       	and	r24, r24
     3a6:	c1 f0       	breq	.+48     	; 0x3d8 <task1+0x2ec>
     3a8:	80 91 29 02 	lds	r24, 0x0229
     3ac:	90 91 2a 02 	lds	r25, 0x022A
     3b0:	18 16       	cp	r1, r24
     3b2:	19 06       	cpc	r1, r25
     3b4:	8c f0       	brlt	.+34     	; 0x3d8 <task1+0x2ec>
     3b6:	21 11       	cpse	r18, r1
     3b8:	0e c0       	rjmp	.+28     	; 0x3d6 <task1+0x2ea>
					fprintf(stdout, "Playing timeout\n\r");
     3ba:	60 91 5f 04 	lds	r22, 0x045F
     3be:	70 91 60 04 	lds	r23, 0x0460
     3c2:	82 e8       	ldi	r24, 0x82	; 130
     3c4:	91 e0       	ldi	r25, 0x01	; 1
     3c6:	0e 94 25 0b 	call	0x164a	; 0x164a <fputs>
					stop_playing();
     3ca:	0e 94 15 05 	call	0xa2a	; 0xa2a <stop_playing>
					is_timed_playing = FALSE;
     3ce:	10 92 26 02 	sts	0x0226, r1
					silence = TRUE;
					is_playing = FALSE;
     3d2:	10 92 34 02 	sts	0x0234, r1
				if(silence == TRUE && !is_playing) {
					timed_play(0, 0, 30);
					is_timed_playing = TRUE;
					fprintf(stdout, "Playing silence\n\r");
				}
				if(is_playing && dds_duration <= 0 && !silence){
     3d6:	21 e0       	ldi	r18, 0x01	; 1
					stop_playing();
					is_timed_playing = FALSE;
					silence = TRUE;
					is_playing = FALSE;
				}
				if(is_playing && dds_duration <= 0 && silence){
     3d8:	80 91 34 02 	lds	r24, 0x0234
     3dc:	88 23       	and	r24, r24
     3de:	d9 f0       	breq	.+54     	; 0x416 <task1+0x32a>
     3e0:	80 91 29 02 	lds	r24, 0x0229
     3e4:	90 91 2a 02 	lds	r25, 0x022A
     3e8:	18 16       	cp	r1, r24
     3ea:	19 06       	cpc	r1, r25
     3ec:	a4 f0       	brlt	.+40     	; 0x416 <task1+0x32a>
     3ee:	22 23       	and	r18, r18
     3f0:	91 f0       	breq	.+36     	; 0x416 <task1+0x32a>
					fprintf(stdout, "Silence timeout\n\r");
     3f2:	60 91 5f 04 	lds	r22, 0x045F
     3f6:	70 91 60 04 	lds	r23, 0x0460
     3fa:	84 e9       	ldi	r24, 0x94	; 148
     3fc:	91 e0       	ldi	r25, 0x01	; 1
     3fe:	0e 94 25 0b 	call	0x164a	; 0x164a <fputs>
					stop_playing();
     402:	0e 94 15 05 	call	0xa2a	; 0xa2a <stop_playing>
					is_timed_playing = FALSE;
     406:	10 92 26 02 	sts	0x0226, r1
					i++;
     40a:	ff ef       	ldi	r31, 0xFF	; 255
     40c:	af 1a       	sub	r10, r31
     40e:	bf 0a       	sbc	r11, r31
					silence = FALSE;
					is_playing = FALSE;
     410:	10 92 34 02 	sts	0x0234, r1
				if(is_playing && dds_duration <= 0 && silence){
					fprintf(stdout, "Silence timeout\n\r");
					stop_playing();
					is_timed_playing = FALSE;
					i++;
					silence = FALSE;
     414:	20 e0       	ldi	r18, 0x00	; 0
			is_playing = FALSE;
			char silence;
			silence = FALSE;
			//init the playing state machine
			is_timed_playing = FALSE;
			while( i < 12){
     416:	8c e0       	ldi	r24, 0x0C	; 12
     418:	a8 16       	cp	r10, r24
     41a:	b1 04       	cpc	r11, r1
     41c:	0c f4       	brge	.+2      	; 0x420 <task1+0x334>
     41e:	68 cf       	rjmp	.-304    	; 0x2f0 <task1+0x204>
     420:	49 c0       	rjmp	.+146    	; 0x4b4 <task1+0x3c8>
				}
			}
		}
		// A normal button press. 
		else {
			fprintf(stdout, "%u\n\r", butnum);
     422:	1f 92       	push	r1
     424:	8f 93       	push	r24
     426:	8b e5       	ldi	r24, 0x5B	; 91
     428:	91 e0       	ldi	r25, 0x01	; 1
     42a:	9f 93       	push	r25
     42c:	8f 93       	push	r24
     42e:	80 91 60 04 	lds	r24, 0x0460
     432:	8f 93       	push	r24
     434:	80 91 5f 04 	lds	r24, 0x045F
     438:	8f 93       	push	r24
     43a:	0e 94 15 0b 	call	0x162a	; 0x162a <fprintf>
			if (mem_index < 12) {
     43e:	20 91 30 02 	lds	r18, 0x0230
     442:	30 91 31 02 	lds	r19, 0x0231
     446:	0f 90       	pop	r0
     448:	0f 90       	pop	r0
     44a:	0f 90       	pop	r0
     44c:	0f 90       	pop	r0
     44e:	0f 90       	pop	r0
     450:	0f 90       	pop	r0
     452:	2c 30       	cpi	r18, 0x0C	; 12
     454:	31 05       	cpc	r19, r1
     456:	70 f5       	brcc	.+92     	; 0x4b4 <task1+0x3c8>
				mem[mem_index] = butnum;
     458:	80 91 27 02 	lds	r24, 0x0227
     45c:	f9 01       	movw	r30, r18
     45e:	ee 0f       	add	r30, r30
     460:	ff 1f       	adc	r31, r31
     462:	e4 54       	subi	r30, 0x44	; 68
     464:	fe 4f       	sbci	r31, 0xFE	; 254
     466:	80 83       	st	Z, r24
     468:	11 82       	std	Z+1, r1	; 0x01
				mem_index++;
     46a:	2f 5f       	subi	r18, 0xFF	; 255
     46c:	3f 4f       	sbci	r19, 0xFF	; 255
     46e:	30 93 31 02 	sts	0x0231, r19
     472:	20 93 30 02 	sts	0x0230, r18
				play(high_freq[butnum], low_freq[butnum]);
     476:	90 e0       	ldi	r25, 0x00	; 0
     478:	88 0f       	add	r24, r24
     47a:	99 1f       	adc	r25, r25
     47c:	fc 01       	movw	r30, r24
     47e:	e2 5f       	subi	r30, 0xF2	; 242
     480:	fe 4f       	sbci	r31, 0xFE	; 254
     482:	60 81       	ld	r22, Z
     484:	71 81       	ldd	r23, Z+1	; 0x01
     486:	fc 01       	movw	r30, r24
     488:	ea 5d       	subi	r30, 0xDA	; 218
     48a:	fe 4f       	sbci	r31, 0xFE	; 254
     48c:	80 81       	ld	r24, Z
     48e:	91 81       	ldd	r25, Z+1	; 0x01
			}		
		}
	}
} 
     490:	0f 90       	pop	r0
     492:	df 91       	pop	r29
     494:	cf 91       	pop	r28
     496:	1f 91       	pop	r17
     498:	0f 91       	pop	r16
     49a:	ff 90       	pop	r15
     49c:	ef 90       	pop	r14
     49e:	df 90       	pop	r13
     4a0:	bf 90       	pop	r11
     4a2:	af 90       	pop	r10
		else {
			fprintf(stdout, "%u\n\r", butnum);
			if (mem_index < 12) {
				mem[mem_index] = butnum;
				mem_index++;
				play(high_freq[butnum], low_freq[butnum]);
     4a4:	0c 94 86 04 	jmp	0x90c	; 0x90c <play>
					timed_play(high_freq[mem[i]], low_freq[mem[i]], 1000);
					is_timed_playing = TRUE;
					fprintf(stdout, "Playing sound\n\r");
					silence = TRUE;
				}
				if(silence == TRUE && !is_playing) {
     4a8:	80 91 34 02 	lds	r24, 0x0234
     4ac:	88 23       	and	r24, r24
     4ae:	09 f4       	brne	.+2      	; 0x4b2 <task1+0x3c6>
     4b0:	64 cf       	rjmp	.-312    	; 0x37a <task1+0x28e>
     4b2:	75 cf       	rjmp	.-278    	; 0x39e <task1+0x2b2>
				mem_index++;
				play(high_freq[butnum], low_freq[butnum]);
			}		
		}
	}
} 
     4b4:	0f 90       	pop	r0
     4b6:	df 91       	pop	r29
     4b8:	cf 91       	pop	r28
     4ba:	1f 91       	pop	r17
     4bc:	0f 91       	pop	r16
     4be:	ff 90       	pop	r15
     4c0:	ef 90       	pop	r14
     4c2:	df 90       	pop	r13
     4c4:	bf 90       	pop	r11
     4c6:	af 90       	pop	r10
     4c8:	08 95       	ret

000004ca <initialize>:
 
//Initialization used for the timer interrupts for debouncing
void initialize(void) {
	//set up timer 0 for 1 mSec timebase 
	OCR0A = 249;  		//set the compare re to 250 time ticks
     4ca:	89 ef       	ldi	r24, 0xF9	; 249
     4cc:	87 bd       	out	0x27, r24	; 39
	TIMSK0= (1<<OCIE0A);	//turn on timer 0 cmp match ISR 
     4ce:	82 e0       	ldi	r24, 0x02	; 2
     4d0:	80 93 6e 00 	sts	0x006E, r24
	//set prescalar to divide by 64 
	TCCR0B= 3; //0b00000011;	
     4d4:	93 e0       	ldi	r25, 0x03	; 3
     4d6:	95 bd       	out	0x25, r25	; 37
	// turn on clear-on-match
	TCCR0A= (1<<WGM01) ;
     4d8:	84 bd       	out	0x24, r24	; 36

	//init the task timers
	time1=0;  
     4da:	10 92 2c 02 	sts	0x022C, r1
     4de:	10 92 2b 02 	sts	0x022B, r1
	// PORT B is an input
	DDRB = 0x00;
     4e2:	14 b8       	out	0x04, r1	; 4
	//for no button push
	PushFlag = 0;
     4e4:	10 92 28 02 	sts	0x0228, r1
	//init the state machine
	PushState = NoPush;
     4e8:	81 e0       	ldi	r24, 0x01	; 1
     4ea:	80 93 33 02 	sts	0x0233, r24

	mem_index = 0;
     4ee:	10 92 31 02 	sts	0x0231, r1
     4f2:	10 92 30 02 	sts	0x0230, r1

	init_dtmf();
     4f6:	0e 94 35 04 	call	0x86a	; 0x86a <init_dtmf>
	//crank up the ISRs
	sei() ;
     4fa:	78 94       	sei
     4fc:	08 95       	ret

000004fe <uart_init>:
{
#if F_CPU < 2000000UL && defined(U2X)
  UCSR0A = _BV(U2X);             /* improve baud rate error by using 2x clk */
  UBRR0L = (F_CPU / (8UL * UART_BAUD)) - 1;
#else
  UBRR0L = (F_CPU / (16UL * UART_BAUD)) - 1;
     4fe:	87 e6       	ldi	r24, 0x67	; 103
     500:	80 93 c4 00 	sts	0x00C4, r24
#endif
  UCSR0B = _BV(TXEN0) | _BV(RXEN0); /* tx/rx enable */
     504:	88 e1       	ldi	r24, 0x18	; 24
     506:	80 93 c1 00 	sts	0x00C1, r24
     50a:	08 95       	ret

0000050c <uart_putchar>:
 * Send character c down the UART Tx, wait until tx holding register
 * is empty.
 */
int
uart_putchar(char c, FILE *stream)
{
     50c:	cf 93       	push	r28
     50e:	c8 2f       	mov	r28, r24

  if (c == '\a')
     510:	87 30       	cpi	r24, 0x07	; 7
     512:	49 f4       	brne	.+18     	; 0x526 <uart_putchar+0x1a>
    {
      fputs("*ring*\n", stderr);
     514:	60 91 61 04 	lds	r22, 0x0461
     518:	70 91 62 04 	lds	r23, 0x0462
     51c:	84 eb       	ldi	r24, 0xB4	; 180
     51e:	91 e0       	ldi	r25, 0x01	; 1
     520:	0e 94 25 0b 	call	0x164a	; 0x164a <fputs>
     524:	0b c0       	rjmp	.+22     	; 0x53c <uart_putchar+0x30>
      return 0;
    }

  if (c == '\n')
     526:	8a 30       	cpi	r24, 0x0A	; 10
     528:	19 f4       	brne	.+6      	; 0x530 <uart_putchar+0x24>
    uart_putchar('\r', stream);
     52a:	8d e0       	ldi	r24, 0x0D	; 13
     52c:	0e 94 86 02 	call	0x50c	; 0x50c <uart_putchar>
  loop_until_bit_is_set(UCSR0A, UDRE0);
     530:	80 91 c0 00 	lds	r24, 0x00C0
     534:	85 ff       	sbrs	r24, 5
     536:	fc cf       	rjmp	.-8      	; 0x530 <uart_putchar+0x24>
  UDR0 = c;
     538:	c0 93 c6 00 	sts	0x00C6, r28

  return 0;
}
     53c:	80 e0       	ldi	r24, 0x00	; 0
     53e:	90 e0       	ldi	r25, 0x00	; 0
     540:	cf 91       	pop	r28
     542:	08 95       	ret

00000544 <uart_getchar>:
 * Successive calls to uart_getchar() will be satisfied from the
 * internal buffer until that buffer is emptied again.
 */
int
uart_getchar(FILE *stream)
{
     544:	ef 92       	push	r14
     546:	ff 92       	push	r15
     548:	0f 93       	push	r16
     54a:	1f 93       	push	r17
     54c:	cf 93       	push	r28
     54e:	df 93       	push	r29
     550:	8c 01       	movw	r16, r24
  uint8_t c;
  char *cp, *cp2;
  static char b[RX_BUFSIZE];
  static char *rxp;

  if (rxp == 0)
     552:	80 91 d4 01 	lds	r24, 0x01D4
     556:	90 91 d5 01 	lds	r25, 0x01D5
     55a:	89 2b       	or	r24, r25
     55c:	09 f0       	breq	.+2      	; 0x560 <uart_getchar+0x1c>
     55e:	a1 c0       	rjmp	.+322    	; 0x6a2 <uart_getchar+0x15e>
     560:	c6 ed       	ldi	r28, 0xD6	; 214
     562:	d1 e0       	ldi	r29, 0x01	; 1
    for (cp = b;;)
      {
	loop_until_bit_is_set(UCSR0A, RXC0);
     564:	80 91 c0 00 	lds	r24, 0x00C0
     568:	87 ff       	sbrs	r24, 7
     56a:	fc cf       	rjmp	.-8      	; 0x564 <uart_getchar+0x20>
	if (UCSR0A & _BV(FE0))
     56c:	80 91 c0 00 	lds	r24, 0x00C0
     570:	84 fd       	sbrc	r24, 4
     572:	aa c0       	rjmp	.+340    	; 0x6c8 <uart_getchar+0x184>
	  return _FDEV_EOF;
	if (UCSR0A & _BV(DOR0))
     574:	80 91 c0 00 	lds	r24, 0x00C0
     578:	83 fd       	sbrc	r24, 3
     57a:	a9 c0       	rjmp	.+338    	; 0x6ce <uart_getchar+0x18a>
	  return _FDEV_ERR;
	c = UDR0;
     57c:	80 91 c6 00 	lds	r24, 0x00C6
	/* behaviour similar to Unix stty ICRNL */
	if (c == '\r')
     580:	8d 30       	cpi	r24, 0x0D	; 13
     582:	61 f4       	brne	.+24     	; 0x59c <uart_getchar+0x58>
	  c = '\n';
	if (c == '\n')
	  {
	    *cp = c;
     584:	8a e0       	ldi	r24, 0x0A	; 10
     586:	88 83       	st	Y, r24
	    uart_putchar(c, stream);
     588:	b8 01       	movw	r22, r16
     58a:	0e 94 86 02 	call	0x50c	; 0x50c <uart_putchar>
	    rxp = b;
     58e:	86 ed       	ldi	r24, 0xD6	; 214
     590:	91 e0       	ldi	r25, 0x01	; 1
     592:	90 93 d5 01 	sts	0x01D5, r25
     596:	80 93 d4 01 	sts	0x01D4, r24
	    break;
     59a:	83 c0       	rjmp	.+262    	; 0x6a2 <uart_getchar+0x15e>
	  return _FDEV_ERR;
	c = UDR0;
	/* behaviour similar to Unix stty ICRNL */
	if (c == '\r')
	  c = '\n';
	if (c == '\n')
     59c:	8a 30       	cpi	r24, 0x0A	; 10
     59e:	91 f3       	breq	.-28     	; 0x584 <uart_getchar+0x40>
	    *cp = c;
	    uart_putchar(c, stream);
	    rxp = b;
	    break;
	  }
	else if (c == '\t')
     5a0:	89 30       	cpi	r24, 0x09	; 9
     5a2:	09 f4       	brne	.+2      	; 0x5a6 <uart_getchar+0x62>
	  c = ' ';
     5a4:	80 e2       	ldi	r24, 0x20	; 32

	if ((c >= (uint8_t)' ' && c <= (uint8_t)'\x7e') ||
     5a6:	98 2f       	mov	r25, r24
     5a8:	90 52       	subi	r25, 0x20	; 32
     5aa:	9f 35       	cpi	r25, 0x5F	; 95
     5ac:	10 f0       	brcs	.+4      	; 0x5b2 <uart_getchar+0x6e>
     5ae:	80 3a       	cpi	r24, 0xA0	; 160
     5b0:	90 f0       	brcs	.+36     	; 0x5d6 <uart_getchar+0x92>
	    c >= (uint8_t)'\xa0')
	  {
	    if (cp == b + RX_BUFSIZE - 1)
     5b2:	92 e0       	ldi	r25, 0x02	; 2
     5b4:	c5 32       	cpi	r28, 0x25	; 37
     5b6:	d9 07       	cpc	r29, r25
     5b8:	49 f4       	brne	.+18     	; 0x5cc <uart_getchar+0x88>
uart_putchar(char c, FILE *stream)
{

  if (c == '\a')
    {
      fputs("*ring*\n", stderr);
     5ba:	60 91 61 04 	lds	r22, 0x0461
     5be:	70 91 62 04 	lds	r23, 0x0462
     5c2:	84 eb       	ldi	r24, 0xB4	; 180
     5c4:	91 e0       	ldi	r25, 0x01	; 1
     5c6:	0e 94 25 0b 	call	0x164a	; 0x164a <fputs>
     5ca:	cc cf       	rjmp	.-104    	; 0x564 <uart_getchar+0x20>
	  {
	    if (cp == b + RX_BUFSIZE - 1)
	      uart_putchar('\a', stream);
	    else
	      {
		*cp++ = c;
     5cc:	89 93       	st	Y+, r24
		uart_putchar(c, stream);
     5ce:	b8 01       	movw	r22, r16
     5d0:	0e 94 86 02 	call	0x50c	; 0x50c <uart_putchar>
     5d4:	c7 cf       	rjmp	.-114    	; 0x564 <uart_getchar+0x20>
	      }
	    continue;
	  }

	switch (c)
     5d6:	82 31       	cpi	r24, 0x12	; 18
     5d8:	29 f1       	breq	.+74     	; 0x624 <uart_getchar+0xe0>
     5da:	38 f4       	brcc	.+14     	; 0x5ea <uart_getchar+0xa6>
     5dc:	83 30       	cpi	r24, 0x03	; 3
     5de:	09 f4       	brne	.+2      	; 0x5e2 <uart_getchar+0x9e>
     5e0:	76 c0       	rjmp	.+236    	; 0x6ce <uart_getchar+0x18a>
     5e2:	88 30       	cpi	r24, 0x08	; 8
     5e4:	09 f0       	breq	.+2      	; 0x5e8 <uart_getchar+0xa4>
     5e6:	be cf       	rjmp	.-132    	; 0x564 <uart_getchar+0x20>
     5e8:	09 c0       	rjmp	.+18     	; 0x5fc <uart_getchar+0xb8>
     5ea:	87 31       	cpi	r24, 0x17	; 23
     5ec:	09 f4       	brne	.+2      	; 0x5f0 <uart_getchar+0xac>
     5ee:	4d c0       	rjmp	.+154    	; 0x68a <uart_getchar+0x146>
     5f0:	8f 37       	cpi	r24, 0x7F	; 127
     5f2:	21 f0       	breq	.+8      	; 0x5fc <uart_getchar+0xb8>
     5f4:	85 31       	cpi	r24, 0x15	; 21
     5f6:	09 f0       	breq	.+2      	; 0x5fa <uart_getchar+0xb6>
     5f8:	b5 cf       	rjmp	.-150    	; 0x564 <uart_getchar+0x20>
     5fa:	34 c0       	rjmp	.+104    	; 0x664 <uart_getchar+0x120>
	  case 'c' & 0x1f:
	    return -1;

	  case '\b':
	  case '\x7f':
	    if (cp > b)
     5fc:	e1 e0       	ldi	r30, 0x01	; 1
     5fe:	c6 3d       	cpi	r28, 0xD6	; 214
     600:	de 07       	cpc	r29, r30
     602:	09 f0       	breq	.+2      	; 0x606 <uart_getchar+0xc2>
     604:	08 f4       	brcc	.+2      	; 0x608 <uart_getchar+0xc4>
     606:	ae cf       	rjmp	.-164    	; 0x564 <uart_getchar+0x20>
	      {
		uart_putchar('\b', stream);
     608:	b8 01       	movw	r22, r16
     60a:	88 e0       	ldi	r24, 0x08	; 8
     60c:	0e 94 86 02 	call	0x50c	; 0x50c <uart_putchar>
		uart_putchar(' ', stream);
     610:	b8 01       	movw	r22, r16
     612:	80 e2       	ldi	r24, 0x20	; 32
     614:	0e 94 86 02 	call	0x50c	; 0x50c <uart_putchar>
		uart_putchar('\b', stream);
     618:	b8 01       	movw	r22, r16
     61a:	88 e0       	ldi	r24, 0x08	; 8
     61c:	0e 94 86 02 	call	0x50c	; 0x50c <uart_putchar>
		cp--;
     620:	21 97       	sbiw	r28, 0x01	; 1
     622:	a0 cf       	rjmp	.-192    	; 0x564 <uart_getchar+0x20>
	      }
	    break;

	  case 'r' & 0x1f:
	    uart_putchar('\r', stream);
     624:	b8 01       	movw	r22, r16
     626:	8d e0       	ldi	r24, 0x0D	; 13
     628:	0e 94 86 02 	call	0x50c	; 0x50c <uart_putchar>
	    for (cp2 = b; cp2 < cp; cp2++)
     62c:	86 ed       	ldi	r24, 0xD6	; 214
     62e:	e8 2e       	mov	r14, r24
     630:	81 e0       	ldi	r24, 0x01	; 1
     632:	f8 2e       	mov	r15, r24
     634:	06 c0       	rjmp	.+12     	; 0x642 <uart_getchar+0xfe>
	      uart_putchar(*cp2, stream);
     636:	b8 01       	movw	r22, r16
     638:	f7 01       	movw	r30, r14
     63a:	81 91       	ld	r24, Z+
     63c:	7f 01       	movw	r14, r30
     63e:	0e 94 86 02 	call	0x50c	; 0x50c <uart_putchar>
	      }
	    break;

	  case 'r' & 0x1f:
	    uart_putchar('\r', stream);
	    for (cp2 = b; cp2 < cp; cp2++)
     642:	ec 16       	cp	r14, r28
     644:	fd 06       	cpc	r15, r29
     646:	b8 f3       	brcs	.-18     	; 0x636 <uart_getchar+0xf2>
     648:	8d cf       	rjmp	.-230    	; 0x564 <uart_getchar+0x20>
	    break;

	  case 'u' & 0x1f:
	    while (cp > b)
	      {
		uart_putchar('\b', stream);
     64a:	b8 01       	movw	r22, r16
     64c:	88 e0       	ldi	r24, 0x08	; 8
     64e:	0e 94 86 02 	call	0x50c	; 0x50c <uart_putchar>
		uart_putchar(' ', stream);
     652:	b8 01       	movw	r22, r16
     654:	80 e2       	ldi	r24, 0x20	; 32
     656:	0e 94 86 02 	call	0x50c	; 0x50c <uart_putchar>
		uart_putchar('\b', stream);
     65a:	b8 01       	movw	r22, r16
     65c:	88 e0       	ldi	r24, 0x08	; 8
     65e:	0e 94 86 02 	call	0x50c	; 0x50c <uart_putchar>
		cp--;
     662:	21 97       	sbiw	r28, 0x01	; 1
	    for (cp2 = b; cp2 < cp; cp2++)
	      uart_putchar(*cp2, stream);
	    break;

	  case 'u' & 0x1f:
	    while (cp > b)
     664:	f1 e0       	ldi	r31, 0x01	; 1
     666:	c6 3d       	cpi	r28, 0xD6	; 214
     668:	df 07       	cpc	r29, r31
     66a:	09 f0       	breq	.+2      	; 0x66e <uart_getchar+0x12a>
     66c:	70 f7       	brcc	.-36     	; 0x64a <uart_getchar+0x106>
     66e:	7a cf       	rjmp	.-268    	; 0x564 <uart_getchar+0x20>
	    break;

	  case 'w' & 0x1f:
	    while (cp > b && cp[-1] != ' ')
	      {
		uart_putchar('\b', stream);
     670:	b8 01       	movw	r22, r16
     672:	88 e0       	ldi	r24, 0x08	; 8
     674:	0e 94 86 02 	call	0x50c	; 0x50c <uart_putchar>
		uart_putchar(' ', stream);
     678:	b8 01       	movw	r22, r16
     67a:	80 e2       	ldi	r24, 0x20	; 32
     67c:	0e 94 86 02 	call	0x50c	; 0x50c <uart_putchar>
		uart_putchar('\b', stream);
     680:	b8 01       	movw	r22, r16
     682:	88 e0       	ldi	r24, 0x08	; 8
     684:	0e 94 86 02 	call	0x50c	; 0x50c <uart_putchar>
		cp--;
     688:	e7 01       	movw	r28, r14
		cp--;
	      }
	    break;

	  case 'w' & 0x1f:
	    while (cp > b && cp[-1] != ' ')
     68a:	81 e0       	ldi	r24, 0x01	; 1
     68c:	c6 3d       	cpi	r28, 0xD6	; 214
     68e:	d8 07       	cpc	r29, r24
     690:	09 f0       	breq	.+2      	; 0x694 <uart_getchar+0x150>
     692:	08 f4       	brcc	.+2      	; 0x696 <uart_getchar+0x152>
     694:	67 cf       	rjmp	.-306    	; 0x564 <uart_getchar+0x20>
     696:	fe 01       	movw	r30, r28
     698:	82 91       	ld	r24, -Z
     69a:	7f 01       	movw	r14, r30
     69c:	80 32       	cpi	r24, 0x20	; 32
     69e:	41 f7       	brne	.-48     	; 0x670 <uart_getchar+0x12c>
     6a0:	61 cf       	rjmp	.-318    	; 0x564 <uart_getchar+0x20>
	      }
	    break;
	  }
      }

  c = *rxp++;
     6a2:	e0 91 d4 01 	lds	r30, 0x01D4
     6a6:	f0 91 d5 01 	lds	r31, 0x01D5
     6aa:	20 81       	ld	r18, Z
  if (c == '\n')
     6ac:	2a 30       	cpi	r18, 0x0A	; 10
     6ae:	31 f0       	breq	.+12     	; 0x6bc <uart_getchar+0x178>
	      }
	    break;
	  }
      }

  c = *rxp++;
     6b0:	31 96       	adiw	r30, 0x01	; 1
     6b2:	f0 93 d5 01 	sts	0x01D5, r31
     6b6:	e0 93 d4 01 	sts	0x01D4, r30
     6ba:	04 c0       	rjmp	.+8      	; 0x6c4 <uart_getchar+0x180>
  if (c == '\n')
    rxp = 0;
     6bc:	10 92 d5 01 	sts	0x01D5, r1
     6c0:	10 92 d4 01 	sts	0x01D4, r1

  return c;
     6c4:	30 e0       	ldi	r19, 0x00	; 0
     6c6:	05 c0       	rjmp	.+10     	; 0x6d2 <uart_getchar+0x18e>
  if (rxp == 0)
    for (cp = b;;)
      {
	loop_until_bit_is_set(UCSR0A, RXC0);
	if (UCSR0A & _BV(FE0))
	  return _FDEV_EOF;
     6c8:	2e ef       	ldi	r18, 0xFE	; 254
     6ca:	3f ef       	ldi	r19, 0xFF	; 255
     6cc:	02 c0       	rjmp	.+4      	; 0x6d2 <uart_getchar+0x18e>
	  }

	switch (c)
	  {
	  case 'c' & 0x1f:
	    return -1;
     6ce:	2f ef       	ldi	r18, 0xFF	; 255
     6d0:	3f ef       	ldi	r19, 0xFF	; 255
  c = *rxp++;
  if (c == '\n')
    rxp = 0;

  return c;
}
     6d2:	c9 01       	movw	r24, r18
     6d4:	df 91       	pop	r29
     6d6:	cf 91       	pop	r28
     6d8:	1f 91       	pop	r17
     6da:	0f 91       	pop	r16
     6dc:	ff 90       	pop	r15
     6de:	ef 90       	pop	r14
     6e0:	08 95       	ret

000006e2 <__vector_18>:
volatile unsigned long accumulator ;
volatile unsigned char changed;


volatile unsigned long increment;
ISR( TIMER0_OVF_vect){
     6e2:	1f 92       	push	r1
     6e4:	0f 92       	push	r0
     6e6:	0f b6       	in	r0, 0x3f	; 63
     6e8:	0f 92       	push	r0
     6ea:	11 24       	eor	r1, r1
     6ec:	0b b6       	in	r0, 0x3b	; 59
     6ee:	0f 92       	push	r0
     6f0:	2f 93       	push	r18
     6f2:	3f 93       	push	r19
     6f4:	4f 93       	push	r20
     6f6:	5f 93       	push	r21
     6f8:	6f 93       	push	r22
     6fa:	7f 93       	push	r23
     6fc:	8f 93       	push	r24
     6fe:	9f 93       	push	r25
     700:	af 93       	push	r26
     702:	bf 93       	push	r27
     704:	cf 93       	push	r28
     706:	df 93       	push	r29
     708:	ef 93       	push	r30
     70a:	ff 93       	push	r31
	//accumulator = accumulator + increment ;
	//highbyte = (char)(accumulator >> 24) ;
	
	// output the wavefrom sample
	//OCR0A = 128 + ((sineTable[highbyte] * rampTable[rampCount])>>7) ;
	changed = TRUE;
     70c:	81 e0       	ldi	r24, 0x01	; 1
     70e:	80 93 4a 04 	sts	0x044A, r24


	OCR0A = 128 + 
	   ( (
	   	   (sineTable[(accumulator_a >> 24)] + sineTable[(accumulator_b >> 24)]) * rampTable[rampCount]
     712:	40 91 42 04 	lds	r20, 0x0442
     716:	50 91 43 04 	lds	r21, 0x0443
     71a:	60 91 44 04 	lds	r22, 0x0444
     71e:	70 91 45 04 	lds	r23, 0x0445
     722:	80 91 4d 04 	lds	r24, 0x044D
     726:	90 91 4e 04 	lds	r25, 0x044E
     72a:	a0 91 4f 04 	lds	r26, 0x044F
     72e:	b0 91 50 04 	lds	r27, 0x0450
     732:	e0 91 4b 04 	lds	r30, 0x044B
     736:	f0 91 4c 04 	lds	r31, 0x044C
     73a:	47 2f       	mov	r20, r23
     73c:	55 27       	eor	r21, r21
     73e:	66 27       	eor	r22, r22
     740:	77 27       	eor	r23, r23
     742:	ea 01       	movw	r28, r20
     744:	ce 5b       	subi	r28, 0xBE	; 190
     746:	dc 4f       	sbci	r29, 0xFC	; 252
     748:	28 81       	ld	r18, Y
     74a:	8b 2f       	mov	r24, r27
     74c:	99 27       	eor	r25, r25
     74e:	aa 27       	eor	r26, r26
     750:	bb 27       	eor	r27, r27
     752:	dc 01       	movw	r26, r24
     754:	ae 5b       	subi	r26, 0xBE	; 190
     756:	bc 4f       	sbci	r27, 0xFC	; 252
     758:	8c 91       	ld	r24, X
     75a:	99 27       	eor	r25, r25
     75c:	87 fd       	sbrc	r24, 7
     75e:	90 95       	com	r25
     760:	82 0f       	add	r24, r18
     762:	91 1d       	adc	r25, r1
     764:	27 fd       	sbrc	r18, 7
     766:	9a 95       	dec	r25
     768:	e7 5c       	subi	r30, 0xC7	; 199
     76a:	fd 4f       	sbci	r31, 0xFD	; 253
     76c:	40 81       	ld	r20, Z
     76e:	48 9f       	mul	r20, r24
     770:	90 01       	movw	r18, r0
     772:	49 9f       	mul	r20, r25
     774:	30 0d       	add	r19, r0
     776:	11 24       	eor	r1, r1
	// output the wavefrom sample
	//OCR0A = 128 + ((sineTable[highbyte] * rampTable[rampCount])>>7) ;
	changed = TRUE;


	OCR0A = 128 + 
     778:	83 2f       	mov	r24, r19
     77a:	80 58       	subi	r24, 0x80	; 128
     77c:	87 bd       	out	0x27, r24	; 39
	   ( (
	   	   (sineTable[(accumulator_a >> 24)] + sineTable[(accumulator_b >> 24)]) * rampTable[rampCount]
	   	 ) >> 8
	   );
	accumulator_a += increment_a;
     77e:	80 91 42 04 	lds	r24, 0x0442
     782:	90 91 43 04 	lds	r25, 0x0443
     786:	a0 91 44 04 	lds	r26, 0x0444
     78a:	b0 91 45 04 	lds	r27, 0x0445
     78e:	40 91 35 02 	lds	r20, 0x0235
     792:	50 91 36 02 	lds	r21, 0x0236
     796:	60 91 37 02 	lds	r22, 0x0237
     79a:	70 91 38 02 	lds	r23, 0x0238
     79e:	84 0f       	add	r24, r20
     7a0:	95 1f       	adc	r25, r21
     7a2:	a6 1f       	adc	r26, r22
     7a4:	b7 1f       	adc	r27, r23
     7a6:	80 93 42 04 	sts	0x0442, r24
     7aa:	90 93 43 04 	sts	0x0443, r25
     7ae:	a0 93 44 04 	sts	0x0444, r26
     7b2:	b0 93 45 04 	sts	0x0445, r27
	accumulator_b += increment_b;
     7b6:	80 91 4d 04 	lds	r24, 0x044D
     7ba:	90 91 4e 04 	lds	r25, 0x044E
     7be:	a0 91 4f 04 	lds	r26, 0x044F
     7c2:	b0 91 50 04 	lds	r27, 0x0450
     7c6:	40 91 56 04 	lds	r20, 0x0456
     7ca:	50 91 57 04 	lds	r21, 0x0457
     7ce:	60 91 58 04 	lds	r22, 0x0458
     7d2:	70 91 59 04 	lds	r23, 0x0459
     7d6:	84 0f       	add	r24, r20
     7d8:	95 1f       	adc	r25, r21
     7da:	a6 1f       	adc	r26, r22
     7dc:	b7 1f       	adc	r27, r23
     7de:	80 93 4d 04 	sts	0x044D, r24
     7e2:	90 93 4e 04 	sts	0x044E, r25
     7e6:	a0 93 4f 04 	sts	0x044F, r26
     7ea:	b0 93 50 04 	sts	0x0450, r27
	//generates a 1 ms timebase
	// Used for keeping track of time.
	if( count <= 0){
     7ee:	80 91 32 02 	lds	r24, 0x0232
     7f2:	81 11       	cpse	r24, r1
     7f4:	20 c0       	rjmp	.+64     	; 0x836 <__vector_18+0x154>
		count = COUNTMS;
     7f6:	8e e3       	ldi	r24, 0x3E	; 62
     7f8:	80 93 32 02 	sts	0x0232, r24
		time1++;
     7fc:	80 91 2b 02 	lds	r24, 0x022B
     800:	90 91 2c 02 	lds	r25, 0x022C
     804:	01 96       	adiw	r24, 0x01	; 1
     806:	90 93 2c 02 	sts	0x022C, r25
     80a:	80 93 2b 02 	sts	0x022B, r24
		if( is_timed_playing && dds_duration > 0){
     80e:	80 91 26 02 	lds	r24, 0x0226
     812:	88 23       	and	r24, r24
     814:	81 f0       	breq	.+32     	; 0x836 <__vector_18+0x154>
     816:	80 91 29 02 	lds	r24, 0x0229
     81a:	90 91 2a 02 	lds	r25, 0x022A
     81e:	18 16       	cp	r1, r24
     820:	19 06       	cpc	r1, r25
     822:	4c f4       	brge	.+18     	; 0x836 <__vector_18+0x154>
			dds_duration--;
     824:	80 91 29 02 	lds	r24, 0x0229
     828:	90 91 2a 02 	lds	r25, 0x022A
     82c:	01 97       	sbiw	r24, 0x01	; 1
     82e:	90 93 2a 02 	sts	0x022A, r25
     832:	80 93 29 02 	sts	0x0229, r24
		}
	}
	count--;	
     836:	80 91 32 02 	lds	r24, 0x0232
     83a:	81 50       	subi	r24, 0x01	; 1
     83c:	80 93 32 02 	sts	0x0232, r24
}
     840:	ff 91       	pop	r31
     842:	ef 91       	pop	r30
     844:	df 91       	pop	r29
     846:	cf 91       	pop	r28
     848:	bf 91       	pop	r27
     84a:	af 91       	pop	r26
     84c:	9f 91       	pop	r25
     84e:	8f 91       	pop	r24
     850:	7f 91       	pop	r23
     852:	6f 91       	pop	r22
     854:	5f 91       	pop	r21
     856:	4f 91       	pop	r20
     858:	3f 91       	pop	r19
     85a:	2f 91       	pop	r18
     85c:	0f 90       	pop	r0
     85e:	0b be       	out	0x3b, r0	; 59
     860:	0f 90       	pop	r0
     862:	0f be       	out	0x3f, r0	; 63
     864:	0f 90       	pop	r0
     866:	1f 90       	pop	r1
     868:	18 95       	reti

0000086a <init_dtmf>:


void init_dtmf(){
     86a:	ef 92       	push	r14
     86c:	ff 92       	push	r15
     86e:	0f 93       	push	r16
     870:	1f 93       	push	r17
     872:	cf 93       	push	r28
     874:	df 93       	push	r29
	DDRB = 0;
     876:	14 b8       	out	0x04, r1	; 4
	DDRB |= OUTPUT_PIN;
     878:	23 9a       	sbi	0x04, 3	; 4
     87a:	52 e4       	ldi	r21, 0x42	; 66
     87c:	e5 2e       	mov	r14, r21
     87e:	53 e0       	ldi	r21, 0x03	; 3
     880:	f5 2e       	mov	r15, r21
     882:	09 e3       	ldi	r16, 0x39	; 57
     884:	12 e0       	ldi	r17, 0x02	; 2
	int i;
	for (i=0; i<256; i++){
     886:	c0 e0       	ldi	r28, 0x00	; 0
     888:	d0 e0       	ldi	r29, 0x00	; 0
		sineTable[i] = (char)(127.0 * sin(6.283*((float)i)/256.0)) ;
     88a:	be 01       	movw	r22, r28
     88c:	88 27       	eor	r24, r24
     88e:	77 fd       	sbrc	r23, 7
     890:	80 95       	com	r24
     892:	98 2f       	mov	r25, r24
     894:	0e 94 59 08 	call	0x10b2	; 0x10b2 <__floatsisf>
     898:	26 e5       	ldi	r18, 0x56	; 86
     89a:	3e e0       	ldi	r19, 0x0E	; 14
     89c:	49 ec       	ldi	r20, 0xC9	; 201
     89e:	50 e4       	ldi	r21, 0x40	; 64
     8a0:	0e 94 45 07 	call	0xe8a	; 0xe8a <__mulsf3>
     8a4:	20 e0       	ldi	r18, 0x00	; 0
     8a6:	30 e0       	ldi	r19, 0x00	; 0
     8a8:	40 e8       	ldi	r20, 0x80	; 128
     8aa:	5b e3       	ldi	r21, 0x3B	; 59
     8ac:	0e 94 45 07 	call	0xe8a	; 0xe8a <__mulsf3>
     8b0:	0e 94 50 0b 	call	0x16a0	; 0x16a0 <sin>
     8b4:	20 e0       	ldi	r18, 0x00	; 0
     8b6:	30 e0       	ldi	r19, 0x00	; 0
     8b8:	4e ef       	ldi	r20, 0xFE	; 254
     8ba:	52 e4       	ldi	r21, 0x42	; 66
     8bc:	0e 94 45 07 	call	0xe8a	; 0xe8a <__mulsf3>
     8c0:	0e 94 60 05 	call	0xac0	; 0xac0 <__fixunssfsi>
     8c4:	f7 01       	movw	r30, r14
     8c6:	61 93       	st	Z+, r22
     8c8:	7f 01       	movw	r14, r30
		// the following table needs 
		// rampTable[0]=0 and rampTable[255]=127
		rampTable[i] = i>>1 ;
     8ca:	ce 01       	movw	r24, r28
     8cc:	95 95       	asr	r25
     8ce:	87 95       	ror	r24
     8d0:	f8 01       	movw	r30, r16
     8d2:	81 93       	st	Z+, r24
     8d4:	8f 01       	movw	r16, r30

void init_dtmf(){
	DDRB = 0;
	DDRB |= OUTPUT_PIN;
	int i;
	for (i=0; i<256; i++){
     8d6:	21 96       	adiw	r28, 0x01	; 1
     8d8:	c1 15       	cp	r28, r1
     8da:	f1 e0       	ldi	r31, 0x01	; 1
     8dc:	df 07       	cpc	r29, r31
     8de:	a9 f6       	brne	.-86     	; 0x88a <init_dtmf+0x20>
	}

	// TCCR0B = 0;
	// //set divider to 1, run T0 at 16 MHz 
	// TCCR0B |= T0_CS00;
	TCCR0B = 1;
     8e0:	81 e0       	ldi	r24, 0x01	; 1
     8e2:	85 bd       	out	0x25, r24	; 37
	TIMSK0 = 0;
     8e4:	10 92 6e 00 	sts	0x006E, r1
	TIMSK0 |= TIMER0_OVERFLOW_INTERRUPT_ENABLE;
     8e8:	80 91 6e 00 	lds	r24, 0x006E
     8ec:	81 60       	ori	r24, 0x01	; 1
     8ee:	80 93 6e 00 	sts	0x006E, r24
	//turn on fast PWM and OC0A - output 
	TCCR0A = 0;
     8f2:	14 bc       	out	0x24, r1	; 36
	TCCR0A = (1<<COM0A0) | (1<<COM0A1) | (1<<WGM00) | (1<<WGM01) ; 
     8f4:	83 ec       	ldi	r24, 0xC3	; 195
     8f6:	84 bd       	out	0x24, r24	; 36

	//TCCR0A |= WAVE_GEN_M00 + WAVE_GEN_M01 + COMPARE_MATCH_OUTPUT_A0 + COMPARE_MATCH_OUTPUT_A1; 
	OCR0A = 128;
     8f8:	80 e8       	ldi	r24, 0x80	; 128
     8fa:	87 bd       	out	0x27, r24	; 39
	//increment = INCREMENT_941;
	//increment_a = INCREMENT_941;
	//increment_b = INCREMENT_941;
	sei();
     8fc:	78 94       	sei
}
     8fe:	df 91       	pop	r29
     900:	cf 91       	pop	r28
     902:	1f 91       	pop	r17
     904:	0f 91       	pop	r16
     906:	ff 90       	pop	r15
     908:	ef 90       	pop	r14
     90a:	08 95       	ret

0000090c <play>:

//plays fA and fB for a duration of duration ms
void play(int fA, int fB){
	//if( !is_playing ){
		//is_playing = TRUE;
		switch( fA){
     90c:	89 3b       	cpi	r24, 0xB9	; 185
     90e:	24 e0       	ldi	r18, 0x04	; 4
     910:	92 07       	cpc	r25, r18
     912:	89 f0       	breq	.+34     	; 0x936 <play+0x2a>
     914:	44 f4       	brge	.+16     	; 0x926 <play+0x1a>
     916:	89 3b       	cpi	r24, 0xB9	; 185
     918:	22 e0       	ldi	r18, 0x02	; 2
     91a:	92 07       	cpc	r25, r18
     91c:	19 f1       	breq	.+70     	; 0x964 <play+0x58>
     91e:	8d 3a       	cpi	r24, 0xAD	; 173
     920:	93 40       	sbci	r25, 0x03	; 3
     922:	51 f5       	brne	.+84     	; 0x978 <play+0x6c>
     924:	24 c0       	rjmp	.+72     	; 0x96e <play+0x62>
     926:	88 33       	cpi	r24, 0x38	; 56
     928:	25 e0       	ldi	r18, 0x05	; 5
     92a:	92 07       	cpc	r25, r18
     92c:	49 f0       	breq	.+18     	; 0x940 <play+0x34>
     92e:	85 3c       	cpi	r24, 0xC5	; 197
     930:	95 40       	sbci	r25, 0x05	; 5
     932:	11 f5       	brne	.+68     	; 0x978 <play+0x6c>
     934:	12 c0       	rjmp	.+36     	; 0x95a <play+0x4e>
			case 1209: increment_a = INCREMENT_1209; break;
     936:	87 e3       	ldi	r24, 0x37	; 55
     938:	98 eb       	ldi	r25, 0xB8	; 184
     93a:	a3 ef       	ldi	r26, 0xF3	; 243
     93c:	b4 e0       	ldi	r27, 0x04	; 4
     93e:	04 c0       	rjmp	.+8      	; 0x948 <play+0x3c>
			case 1336: increment_a = INCREMENT_1336; break;
     940:	88 e4       	ldi	r24, 0x48	; 72
     942:	93 ee       	ldi	r25, 0xE3	; 227
     944:	a8 e7       	ldi	r26, 0x78	; 120
     946:	b5 e0       	ldi	r27, 0x05	; 5
     948:	80 93 35 02 	sts	0x0235, r24
     94c:	90 93 36 02 	sts	0x0236, r25
     950:	a0 93 37 02 	sts	0x0237, r26
     954:	b0 93 38 02 	sts	0x0238, r27
     958:	17 c0       	rjmp	.+46     	; 0x988 <play+0x7c>
			case 1477: increment_a = INCREMENT_1477; break;
     95a:	8b e6       	ldi	r24, 0x6B	; 107
     95c:	9c eb       	ldi	r25, 0xBC	; 188
     95e:	ac e0       	ldi	r26, 0x0C	; 12
     960:	b6 e0       	ldi	r27, 0x06	; 6
     962:	f2 cf       	rjmp	.-28     	; 0x948 <play+0x3c>
			case 697:  increment_a = INCREMENT_697; break;
     964:	87 e3       	ldi	r24, 0x37	; 55
     966:	9a ed       	ldi	r25, 0xDA	; 218
     968:	aa ed       	ldi	r26, 0xDA	; 218
     96a:	b2 e0       	ldi	r27, 0x02	; 2
     96c:	ed cf       	rjmp	.-38     	; 0x948 <play+0x3c>
			case 941: increment_a = INCREMENT_941; break;
     96e:	83 e0       	ldi	r24, 0x03	; 3
     970:	94 eb       	ldi	r25, 0xB4	; 180
     972:	aa ed       	ldi	r26, 0xDA	; 218
     974:	b3 e0       	ldi	r27, 0x03	; 3
     976:	e8 cf       	rjmp	.-48     	; 0x948 <play+0x3c>
			default: increment_a = 0; break;
     978:	10 92 35 02 	sts	0x0235, r1
     97c:	10 92 36 02 	sts	0x0236, r1
     980:	10 92 37 02 	sts	0x0237, r1
     984:	10 92 38 02 	sts	0x0238, r1
		}

		switch ( fB) {
     988:	64 35       	cpi	r22, 0x54	; 84
     98a:	83 e0       	ldi	r24, 0x03	; 3
     98c:	78 07       	cpc	r23, r24
     98e:	d9 f0       	breq	.+54     	; 0x9c6 <play+0xba>
     990:	44 f4       	brge	.+16     	; 0x9a2 <play+0x96>
     992:	69 3b       	cpi	r22, 0xB9	; 185
     994:	82 e0       	ldi	r24, 0x02	; 2
     996:	78 07       	cpc	r23, r24
     998:	61 f0       	breq	.+24     	; 0x9b2 <play+0xa6>
     99a:	62 30       	cpi	r22, 0x02	; 2
     99c:	73 40       	sbci	r23, 0x03	; 3
     99e:	91 f5       	brne	.+100    	; 0xa04 <play+0xf8>
     9a0:	0d c0       	rjmp	.+26     	; 0x9bc <play+0xb0>
     9a2:	6d 3a       	cpi	r22, 0xAD	; 173
     9a4:	83 e0       	ldi	r24, 0x03	; 3
     9a6:	78 07       	cpc	r23, r24
     9a8:	99 f0       	breq	.+38     	; 0x9d0 <play+0xc4>
     9aa:	69 3b       	cpi	r22, 0xB9	; 185
     9ac:	74 40       	sbci	r23, 0x04	; 4
     9ae:	51 f5       	brne	.+84     	; 0xa04 <play+0xf8>
     9b0:	1c c0       	rjmp	.+56     	; 0x9ea <play+0xde>
			case 697: increment_b = INCREMENT_697; break;
     9b2:	87 e3       	ldi	r24, 0x37	; 55
     9b4:	9a ed       	ldi	r25, 0xDA	; 218
     9b6:	aa ed       	ldi	r26, 0xDA	; 218
     9b8:	b2 e0       	ldi	r27, 0x02	; 2
     9ba:	0e c0       	rjmp	.+28     	; 0x9d8 <play+0xcc>
			case 770: increment_b = INCREMENT_770; break;
     9bc:	8e ed       	ldi	r24, 0xDE	; 222
     9be:	95 e6       	ldi	r25, 0x65	; 101
     9c0:	a7 e2       	ldi	r26, 0x27	; 39
     9c2:	b3 e0       	ldi	r27, 0x03	; 3
     9c4:	09 c0       	rjmp	.+18     	; 0x9d8 <play+0xcc>
			case 852: increment_b = INCREMENT_852; break;
     9c6:	8c e6       	ldi	r24, 0x6C	; 108
     9c8:	91 e6       	ldi	r25, 0x61	; 97
     9ca:	ad e7       	ldi	r26, 0x7D	; 125
     9cc:	b3 e0       	ldi	r27, 0x03	; 3
     9ce:	04 c0       	rjmp	.+8      	; 0x9d8 <play+0xcc>
			case 941: increment_b = INCREMENT_941; break;
     9d0:	83 e0       	ldi	r24, 0x03	; 3
     9d2:	94 eb       	ldi	r25, 0xB4	; 180
     9d4:	aa ed       	ldi	r26, 0xDA	; 218
     9d6:	b3 e0       	ldi	r27, 0x03	; 3
     9d8:	80 93 56 04 	sts	0x0456, r24
     9dc:	90 93 57 04 	sts	0x0457, r25
     9e0:	a0 93 58 04 	sts	0x0458, r26
     9e4:	b0 93 59 04 	sts	0x0459, r27
     9e8:	08 95       	ret
			case 1209: increment_a = INCREMENT_1209; break;
     9ea:	87 e3       	ldi	r24, 0x37	; 55
     9ec:	98 eb       	ldi	r25, 0xB8	; 184
     9ee:	a3 ef       	ldi	r26, 0xF3	; 243
     9f0:	b4 e0       	ldi	r27, 0x04	; 4
     9f2:	80 93 35 02 	sts	0x0235, r24
     9f6:	90 93 36 02 	sts	0x0236, r25
     9fa:	a0 93 37 02 	sts	0x0237, r26
     9fe:	b0 93 38 02 	sts	0x0238, r27
     a02:	08 95       	ret
			default: increment_b = 0; break;
     a04:	10 92 56 04 	sts	0x0456, r1
     a08:	10 92 57 04 	sts	0x0457, r1
     a0c:	10 92 58 04 	sts	0x0458, r1
     a10:	10 92 59 04 	sts	0x0459, r1
     a14:	08 95       	ret

00000a16 <timed_play>:
		//OCR0A = 128;	
	//}
}

void timed_play(int fA, int fB, int duration){
	dds_duration = duration;
     a16:	50 93 2a 02 	sts	0x022A, r21
     a1a:	40 93 29 02 	sts	0x0229, r20
	play(fA, fB);
     a1e:	0e 94 86 04 	call	0x90c	; 0x90c <play>
	is_playing=TRUE;
     a22:	81 e0       	ldi	r24, 0x01	; 1
     a24:	80 93 34 02 	sts	0x0234, r24
     a28:	08 95       	ret

00000a2a <stop_playing>:
}

void stop_playing(){
	is_playing = FALSE;
     a2a:	10 92 34 02 	sts	0x0234, r1
	rampCount = 0;
     a2e:	10 92 4c 04 	sts	0x044C, r1
     a32:	10 92 4b 04 	sts	0x044B, r1
	increment_a = increment_b = 0;
     a36:	10 92 56 04 	sts	0x0456, r1
     a3a:	10 92 57 04 	sts	0x0457, r1
     a3e:	10 92 58 04 	sts	0x0458, r1
     a42:	10 92 59 04 	sts	0x0459, r1
     a46:	10 92 35 02 	sts	0x0235, r1
     a4a:	10 92 36 02 	sts	0x0236, r1
     a4e:	10 92 37 02 	sts	0x0237, r1
     a52:	10 92 38 02 	sts	0x0238, r1
	accumulator_a = accumulator_b = 0;
     a56:	10 92 4d 04 	sts	0x044D, r1
     a5a:	10 92 4e 04 	sts	0x044E, r1
     a5e:	10 92 4f 04 	sts	0x044F, r1
     a62:	10 92 50 04 	sts	0x0450, r1
     a66:	10 92 42 04 	sts	0x0442, r1
     a6a:	10 92 43 04 	sts	0x0443, r1
     a6e:	10 92 44 04 	sts	0x0444, r1
     a72:	10 92 45 04 	sts	0x0445, r1
     a76:	08 95       	ret

00000a78 <update_status_variables>:
}


void update_status_variables(){
	if(changed == TRUE){
     a78:	80 91 4a 04 	lds	r24, 0x044A
     a7c:	81 30       	cpi	r24, 0x01	; 1
     a7e:	f9 f4       	brne	.+62     	; 0xabe <update_status_variables+0x46>
		changed = FALSE;
     a80:	10 92 4a 04 	sts	0x044A, r1

		if (PushState == Pushed && rampCount < 255) {
     a84:	80 91 33 02 	lds	r24, 0x0233
     a88:	83 30       	cpi	r24, 0x03	; 3
     a8a:	41 f4       	brne	.+16     	; 0xa9c <update_status_variables+0x24>
     a8c:	80 91 4b 04 	lds	r24, 0x044B
     a90:	90 91 4c 04 	lds	r25, 0x044C
     a94:	8f 3f       	cpi	r24, 0xFF	; 255
     a96:	91 05       	cpc	r25, r1
     a98:	90 f4       	brcc	.+36     	; 0xabe <update_status_variables+0x46>
     a9a:	08 c0       	rjmp	.+16     	; 0xaac <update_status_variables+0x34>
			rampCount++;
		}
		if (PushState == NoPush && rampCount > 0 ) {
     a9c:	81 30       	cpi	r24, 0x01	; 1
     a9e:	79 f4       	brne	.+30     	; 0xabe <update_status_variables+0x46>
     aa0:	80 91 4b 04 	lds	r24, 0x044B
     aa4:	90 91 4c 04 	lds	r25, 0x044C
     aa8:	89 2b       	or	r24, r25
     aaa:	49 f0       	breq	.+18     	; 0xabe <update_status_variables+0x46>
			rampCount++;
     aac:	80 91 4b 04 	lds	r24, 0x044B
     ab0:	90 91 4c 04 	lds	r25, 0x044C
     ab4:	01 96       	adiw	r24, 0x01	; 1
     ab6:	90 93 4c 04 	sts	0x044C, r25
     aba:	80 93 4b 04 	sts	0x044B, r24
     abe:	08 95       	ret

00000ac0 <__fixunssfsi>:
     ac0:	cf 92       	push	r12
     ac2:	df 92       	push	r13
     ac4:	ef 92       	push	r14
     ac6:	ff 92       	push	r15
     ac8:	0f 93       	push	r16
     aca:	1f 93       	push	r17
     acc:	6b 01       	movw	r12, r22
     ace:	7c 01       	movw	r14, r24
     ad0:	20 e0       	ldi	r18, 0x00	; 0
     ad2:	30 e0       	ldi	r19, 0x00	; 0
     ad4:	40 e0       	ldi	r20, 0x00	; 0
     ad6:	5f e4       	ldi	r21, 0x4F	; 79
     ad8:	0e 94 2a 08 	call	0x1054	; 0x1054 <__gesf2>
     adc:	87 fd       	sbrc	r24, 7
     ade:	0e c0       	rjmp	.+28     	; 0xafc <__fixunssfsi+0x3c>
     ae0:	20 e0       	ldi	r18, 0x00	; 0
     ae2:	30 e0       	ldi	r19, 0x00	; 0
     ae4:	40 e0       	ldi	r20, 0x00	; 0
     ae6:	5f e4       	ldi	r21, 0x4F	; 79
     ae8:	c7 01       	movw	r24, r14
     aea:	b6 01       	movw	r22, r12
     aec:	0e 94 15 07 	call	0xe2a	; 0xe2a <__subsf3>
     af0:	0e 94 b5 08 	call	0x116a	; 0x116a <__fixsfsi>
     af4:	8b 01       	movw	r16, r22
     af6:	9c 01       	movw	r18, r24
     af8:	30 58       	subi	r19, 0x80	; 128
     afa:	06 c0       	rjmp	.+12     	; 0xb08 <__fixunssfsi+0x48>
     afc:	c7 01       	movw	r24, r14
     afe:	b6 01       	movw	r22, r12
     b00:	0e 94 b5 08 	call	0x116a	; 0x116a <__fixsfsi>
     b04:	8b 01       	movw	r16, r22
     b06:	9c 01       	movw	r18, r24
     b08:	b8 01       	movw	r22, r16
     b0a:	c9 01       	movw	r24, r18
     b0c:	1f 91       	pop	r17
     b0e:	0f 91       	pop	r16
     b10:	ff 90       	pop	r15
     b12:	ef 90       	pop	r14
     b14:	df 90       	pop	r13
     b16:	cf 90       	pop	r12
     b18:	08 95       	ret

00000b1a <_fpadd_parts>:
     b1a:	a4 e0       	ldi	r26, 0x04	; 4
     b1c:	b0 e0       	ldi	r27, 0x00	; 0
     b1e:	e3 e9       	ldi	r30, 0x93	; 147
     b20:	f5 e0       	ldi	r31, 0x05	; 5
     b22:	0c 94 e0 0a 	jmp	0x15c0	; 0x15c0 <__prologue_saves__+0x4>
     b26:	7c 01       	movw	r14, r24
     b28:	6a 01       	movw	r12, r20
     b2a:	fc 01       	movw	r30, r24
     b2c:	80 81       	ld	r24, Z
     b2e:	82 30       	cpi	r24, 0x02	; 2
     b30:	08 f4       	brcc	.+2      	; 0xb34 <_fpadd_parts+0x1a>
     b32:	4a c1       	rjmp	.+660    	; 0xdc8 <_fpadd_parts+0x2ae>
     b34:	fb 01       	movw	r30, r22
     b36:	90 81       	ld	r25, Z
     b38:	92 30       	cpi	r25, 0x02	; 2
     b3a:	08 f4       	brcc	.+2      	; 0xb3e <_fpadd_parts+0x24>
     b3c:	42 c1       	rjmp	.+644    	; 0xdc2 <_fpadd_parts+0x2a8>
     b3e:	84 30       	cpi	r24, 0x04	; 4
     b40:	79 f4       	brne	.+30     	; 0xb60 <_fpadd_parts+0x46>
     b42:	94 30       	cpi	r25, 0x04	; 4
     b44:	09 f0       	breq	.+2      	; 0xb48 <_fpadd_parts+0x2e>
     b46:	40 c1       	rjmp	.+640    	; 0xdc8 <_fpadd_parts+0x2ae>
     b48:	f7 01       	movw	r30, r14
     b4a:	91 81       	ldd	r25, Z+1	; 0x01
     b4c:	fb 01       	movw	r30, r22
     b4e:	81 81       	ldd	r24, Z+1	; 0x01
     b50:	98 17       	cp	r25, r24
     b52:	09 f4       	brne	.+2      	; 0xb56 <_fpadd_parts+0x3c>
     b54:	39 c1       	rjmp	.+626    	; 0xdc8 <_fpadd_parts+0x2ae>
     b56:	ae e4       	ldi	r26, 0x4E	; 78
     b58:	ea 2e       	mov	r14, r26
     b5a:	a1 e0       	ldi	r26, 0x01	; 1
     b5c:	fa 2e       	mov	r15, r26
     b5e:	34 c1       	rjmp	.+616    	; 0xdc8 <_fpadd_parts+0x2ae>
     b60:	94 30       	cpi	r25, 0x04	; 4
     b62:	09 f4       	brne	.+2      	; 0xb66 <_fpadd_parts+0x4c>
     b64:	2e c1       	rjmp	.+604    	; 0xdc2 <_fpadd_parts+0x2a8>
     b66:	92 30       	cpi	r25, 0x02	; 2
     b68:	91 f4       	brne	.+36     	; 0xb8e <_fpadd_parts+0x74>
     b6a:	82 30       	cpi	r24, 0x02	; 2
     b6c:	09 f0       	breq	.+2      	; 0xb70 <_fpadd_parts+0x56>
     b6e:	2c c1       	rjmp	.+600    	; 0xdc8 <_fpadd_parts+0x2ae>
     b70:	88 e0       	ldi	r24, 0x08	; 8
     b72:	f7 01       	movw	r30, r14
     b74:	da 01       	movw	r26, r20
     b76:	01 90       	ld	r0, Z+
     b78:	0d 92       	st	X+, r0
     b7a:	8a 95       	dec	r24
     b7c:	e1 f7       	brne	.-8      	; 0xb76 <_fpadd_parts+0x5c>
     b7e:	fb 01       	movw	r30, r22
     b80:	81 81       	ldd	r24, Z+1	; 0x01
     b82:	f7 01       	movw	r30, r14
     b84:	91 81       	ldd	r25, Z+1	; 0x01
     b86:	89 23       	and	r24, r25
     b88:	fa 01       	movw	r30, r20
     b8a:	81 83       	std	Z+1, r24	; 0x01
     b8c:	1c c1       	rjmp	.+568    	; 0xdc6 <_fpadd_parts+0x2ac>
     b8e:	82 30       	cpi	r24, 0x02	; 2
     b90:	09 f4       	brne	.+2      	; 0xb94 <_fpadd_parts+0x7a>
     b92:	17 c1       	rjmp	.+558    	; 0xdc2 <_fpadd_parts+0x2a8>
     b94:	f7 01       	movw	r30, r14
     b96:	82 81       	ldd	r24, Z+2	; 0x02
     b98:	93 81       	ldd	r25, Z+3	; 0x03
     b9a:	fb 01       	movw	r30, r22
     b9c:	a2 81       	ldd	r26, Z+2	; 0x02
     b9e:	b3 81       	ldd	r27, Z+3	; 0x03
     ba0:	f7 01       	movw	r30, r14
     ba2:	04 81       	ldd	r16, Z+4	; 0x04
     ba4:	15 81       	ldd	r17, Z+5	; 0x05
     ba6:	26 81       	ldd	r18, Z+6	; 0x06
     ba8:	37 81       	ldd	r19, Z+7	; 0x07
     baa:	fb 01       	movw	r30, r22
     bac:	84 80       	ldd	r8, Z+4	; 0x04
     bae:	95 80       	ldd	r9, Z+5	; 0x05
     bb0:	a6 80       	ldd	r10, Z+6	; 0x06
     bb2:	b7 80       	ldd	r11, Z+7	; 0x07
     bb4:	fc 01       	movw	r30, r24
     bb6:	ea 1b       	sub	r30, r26
     bb8:	fb 0b       	sbc	r31, r27
     bba:	af 01       	movw	r20, r30
     bbc:	f7 ff       	sbrs	r31, 7
     bbe:	04 c0       	rjmp	.+8      	; 0xbc8 <_fpadd_parts+0xae>
     bc0:	44 27       	eor	r20, r20
     bc2:	55 27       	eor	r21, r21
     bc4:	4e 1b       	sub	r20, r30
     bc6:	5f 0b       	sbc	r21, r31
     bc8:	40 32       	cpi	r20, 0x20	; 32
     bca:	51 05       	cpc	r21, r1
     bcc:	0c f0       	brlt	.+2      	; 0xbd0 <_fpadd_parts+0xb6>
     bce:	74 c0       	rjmp	.+232    	; 0xcb8 <_fpadd_parts+0x19e>
     bd0:	1e 16       	cp	r1, r30
     bd2:	1f 06       	cpc	r1, r31
     bd4:	b4 f5       	brge	.+108    	; 0xc42 <_fpadd_parts+0x128>
     bd6:	24 01       	movw	r4, r8
     bd8:	35 01       	movw	r6, r10
     bda:	04 2e       	mov	r0, r20
     bdc:	04 c0       	rjmp	.+8      	; 0xbe6 <_fpadd_parts+0xcc>
     bde:	76 94       	lsr	r7
     be0:	67 94       	ror	r6
     be2:	57 94       	ror	r5
     be4:	47 94       	ror	r4
     be6:	0a 94       	dec	r0
     be8:	d2 f7       	brpl	.-12     	; 0xbde <_fpadd_parts+0xc4>
     bea:	49 82       	std	Y+1, r4	; 0x01
     bec:	5a 82       	std	Y+2, r5	; 0x02
     bee:	6b 82       	std	Y+3, r6	; 0x03
     bf0:	7c 82       	std	Y+4, r7	; 0x04
     bf2:	41 2c       	mov	r4, r1
     bf4:	51 2c       	mov	r5, r1
     bf6:	32 01       	movw	r6, r4
     bf8:	43 94       	inc	r4
     bfa:	04 c0       	rjmp	.+8      	; 0xc04 <_fpadd_parts+0xea>
     bfc:	44 0c       	add	r4, r4
     bfe:	55 1c       	adc	r5, r5
     c00:	66 1c       	adc	r6, r6
     c02:	77 1c       	adc	r7, r7
     c04:	4a 95       	dec	r20
     c06:	d2 f7       	brpl	.-12     	; 0xbfc <_fpadd_parts+0xe2>
     c08:	41 e0       	ldi	r20, 0x01	; 1
     c0a:	44 1a       	sub	r4, r20
     c0c:	51 08       	sbc	r5, r1
     c0e:	61 08       	sbc	r6, r1
     c10:	71 08       	sbc	r7, r1
     c12:	48 20       	and	r4, r8
     c14:	59 20       	and	r5, r9
     c16:	6a 20       	and	r6, r10
     c18:	7b 20       	and	r7, r11
     c1a:	81 2c       	mov	r8, r1
     c1c:	91 2c       	mov	r9, r1
     c1e:	54 01       	movw	r10, r8
     c20:	83 94       	inc	r8
     c22:	45 28       	or	r4, r5
     c24:	46 28       	or	r4, r6
     c26:	47 28       	or	r4, r7
     c28:	19 f4       	brne	.+6      	; 0xc30 <_fpadd_parts+0x116>
     c2a:	81 2c       	mov	r8, r1
     c2c:	91 2c       	mov	r9, r1
     c2e:	54 01       	movw	r10, r8
     c30:	49 80       	ldd	r4, Y+1	; 0x01
     c32:	5a 80       	ldd	r5, Y+2	; 0x02
     c34:	6b 80       	ldd	r6, Y+3	; 0x03
     c36:	7c 80       	ldd	r7, Y+4	; 0x04
     c38:	84 28       	or	r8, r4
     c3a:	95 28       	or	r9, r5
     c3c:	a6 28       	or	r10, r6
     c3e:	b7 28       	or	r11, r7
     c40:	46 c0       	rjmp	.+140    	; 0xcce <_fpadd_parts+0x1b4>
     c42:	ef 2b       	or	r30, r31
     c44:	09 f4       	brne	.+2      	; 0xc48 <_fpadd_parts+0x12e>
     c46:	43 c0       	rjmp	.+134    	; 0xcce <_fpadd_parts+0x1b4>
     c48:	84 0f       	add	r24, r20
     c4a:	95 1f       	adc	r25, r21
     c4c:	28 01       	movw	r4, r16
     c4e:	39 01       	movw	r6, r18
     c50:	04 2e       	mov	r0, r20
     c52:	04 c0       	rjmp	.+8      	; 0xc5c <_fpadd_parts+0x142>
     c54:	76 94       	lsr	r7
     c56:	67 94       	ror	r6
     c58:	57 94       	ror	r5
     c5a:	47 94       	ror	r4
     c5c:	0a 94       	dec	r0
     c5e:	d2 f7       	brpl	.-12     	; 0xc54 <_fpadd_parts+0x13a>
     c60:	49 82       	std	Y+1, r4	; 0x01
     c62:	5a 82       	std	Y+2, r5	; 0x02
     c64:	6b 82       	std	Y+3, r6	; 0x03
     c66:	7c 82       	std	Y+4, r7	; 0x04
     c68:	41 2c       	mov	r4, r1
     c6a:	51 2c       	mov	r5, r1
     c6c:	32 01       	movw	r6, r4
     c6e:	43 94       	inc	r4
     c70:	04 c0       	rjmp	.+8      	; 0xc7a <_fpadd_parts+0x160>
     c72:	44 0c       	add	r4, r4
     c74:	55 1c       	adc	r5, r5
     c76:	66 1c       	adc	r6, r6
     c78:	77 1c       	adc	r7, r7
     c7a:	4a 95       	dec	r20
     c7c:	d2 f7       	brpl	.-12     	; 0xc72 <_fpadd_parts+0x158>
     c7e:	41 e0       	ldi	r20, 0x01	; 1
     c80:	44 1a       	sub	r4, r20
     c82:	51 08       	sbc	r5, r1
     c84:	61 08       	sbc	r6, r1
     c86:	71 08       	sbc	r7, r1
     c88:	40 22       	and	r4, r16
     c8a:	51 22       	and	r5, r17
     c8c:	62 22       	and	r6, r18
     c8e:	73 22       	and	r7, r19
     c90:	01 e0       	ldi	r16, 0x01	; 1
     c92:	10 e0       	ldi	r17, 0x00	; 0
     c94:	20 e0       	ldi	r18, 0x00	; 0
     c96:	30 e0       	ldi	r19, 0x00	; 0
     c98:	45 28       	or	r4, r5
     c9a:	46 28       	or	r4, r6
     c9c:	47 28       	or	r4, r7
     c9e:	19 f4       	brne	.+6      	; 0xca6 <_fpadd_parts+0x18c>
     ca0:	00 e0       	ldi	r16, 0x00	; 0
     ca2:	10 e0       	ldi	r17, 0x00	; 0
     ca4:	98 01       	movw	r18, r16
     ca6:	49 80       	ldd	r4, Y+1	; 0x01
     ca8:	5a 80       	ldd	r5, Y+2	; 0x02
     caa:	6b 80       	ldd	r6, Y+3	; 0x03
     cac:	7c 80       	ldd	r7, Y+4	; 0x04
     cae:	04 29       	or	r16, r4
     cb0:	15 29       	or	r17, r5
     cb2:	26 29       	or	r18, r6
     cb4:	37 29       	or	r19, r7
     cb6:	0b c0       	rjmp	.+22     	; 0xcce <_fpadd_parts+0x1b4>
     cb8:	a8 17       	cp	r26, r24
     cba:	b9 07       	cpc	r27, r25
     cbc:	24 f4       	brge	.+8      	; 0xcc6 <_fpadd_parts+0x1ac>
     cbe:	81 2c       	mov	r8, r1
     cc0:	91 2c       	mov	r9, r1
     cc2:	54 01       	movw	r10, r8
     cc4:	04 c0       	rjmp	.+8      	; 0xcce <_fpadd_parts+0x1b4>
     cc6:	cd 01       	movw	r24, r26
     cc8:	00 e0       	ldi	r16, 0x00	; 0
     cca:	10 e0       	ldi	r17, 0x00	; 0
     ccc:	98 01       	movw	r18, r16
     cce:	f7 01       	movw	r30, r14
     cd0:	41 81       	ldd	r20, Z+1	; 0x01
     cd2:	fb 01       	movw	r30, r22
     cd4:	51 81       	ldd	r21, Z+1	; 0x01
     cd6:	45 17       	cp	r20, r21
     cd8:	09 f4       	brne	.+2      	; 0xcdc <_fpadd_parts+0x1c2>
     cda:	46 c0       	rjmp	.+140    	; 0xd68 <_fpadd_parts+0x24e>
     cdc:	44 23       	and	r20, r20
     cde:	49 f0       	breq	.+18     	; 0xcf2 <_fpadd_parts+0x1d8>
     ce0:	24 01       	movw	r4, r8
     ce2:	35 01       	movw	r6, r10
     ce4:	40 1a       	sub	r4, r16
     ce6:	51 0a       	sbc	r5, r17
     ce8:	62 0a       	sbc	r6, r18
     cea:	73 0a       	sbc	r7, r19
     cec:	93 01       	movw	r18, r6
     cee:	82 01       	movw	r16, r4
     cf0:	04 c0       	rjmp	.+8      	; 0xcfa <_fpadd_parts+0x1e0>
     cf2:	08 19       	sub	r16, r8
     cf4:	19 09       	sbc	r17, r9
     cf6:	2a 09       	sbc	r18, r10
     cf8:	3b 09       	sbc	r19, r11
     cfa:	37 fd       	sbrc	r19, 7
     cfc:	05 c0       	rjmp	.+10     	; 0xd08 <_fpadd_parts+0x1ee>
     cfe:	f6 01       	movw	r30, r12
     d00:	11 82       	std	Z+1, r1	; 0x01
     d02:	93 83       	std	Z+3, r25	; 0x03
     d04:	82 83       	std	Z+2, r24	; 0x02
     d06:	0c c0       	rjmp	.+24     	; 0xd20 <_fpadd_parts+0x206>
     d08:	41 e0       	ldi	r20, 0x01	; 1
     d0a:	f6 01       	movw	r30, r12
     d0c:	41 83       	std	Z+1, r20	; 0x01
     d0e:	93 83       	std	Z+3, r25	; 0x03
     d10:	82 83       	std	Z+2, r24	; 0x02
     d12:	30 95       	com	r19
     d14:	20 95       	com	r18
     d16:	10 95       	com	r17
     d18:	01 95       	neg	r16
     d1a:	1f 4f       	sbci	r17, 0xFF	; 255
     d1c:	2f 4f       	sbci	r18, 0xFF	; 255
     d1e:	3f 4f       	sbci	r19, 0xFF	; 255
     d20:	04 83       	std	Z+4, r16	; 0x04
     d22:	15 83       	std	Z+5, r17	; 0x05
     d24:	26 83       	std	Z+6, r18	; 0x06
     d26:	37 83       	std	Z+7, r19	; 0x07
     d28:	0e c0       	rjmp	.+28     	; 0xd46 <_fpadd_parts+0x22c>
     d2a:	88 0f       	add	r24, r24
     d2c:	99 1f       	adc	r25, r25
     d2e:	aa 1f       	adc	r26, r26
     d30:	bb 1f       	adc	r27, r27
     d32:	f6 01       	movw	r30, r12
     d34:	84 83       	std	Z+4, r24	; 0x04
     d36:	95 83       	std	Z+5, r25	; 0x05
     d38:	a6 83       	std	Z+6, r26	; 0x06
     d3a:	b7 83       	std	Z+7, r27	; 0x07
     d3c:	82 81       	ldd	r24, Z+2	; 0x02
     d3e:	93 81       	ldd	r25, Z+3	; 0x03
     d40:	01 97       	sbiw	r24, 0x01	; 1
     d42:	93 83       	std	Z+3, r25	; 0x03
     d44:	82 83       	std	Z+2, r24	; 0x02
     d46:	f6 01       	movw	r30, r12
     d48:	84 81       	ldd	r24, Z+4	; 0x04
     d4a:	95 81       	ldd	r25, Z+5	; 0x05
     d4c:	a6 81       	ldd	r26, Z+6	; 0x06
     d4e:	b7 81       	ldd	r27, Z+7	; 0x07
     d50:	ac 01       	movw	r20, r24
     d52:	bd 01       	movw	r22, r26
     d54:	41 50       	subi	r20, 0x01	; 1
     d56:	51 09       	sbc	r21, r1
     d58:	61 09       	sbc	r22, r1
     d5a:	71 09       	sbc	r23, r1
     d5c:	4f 3f       	cpi	r20, 0xFF	; 255
     d5e:	5f 4f       	sbci	r21, 0xFF	; 255
     d60:	6f 4f       	sbci	r22, 0xFF	; 255
     d62:	7f 43       	sbci	r23, 0x3F	; 63
     d64:	10 f3       	brcs	.-60     	; 0xd2a <_fpadd_parts+0x210>
     d66:	0c c0       	rjmp	.+24     	; 0xd80 <_fpadd_parts+0x266>
     d68:	f6 01       	movw	r30, r12
     d6a:	41 83       	std	Z+1, r20	; 0x01
     d6c:	93 83       	std	Z+3, r25	; 0x03
     d6e:	82 83       	std	Z+2, r24	; 0x02
     d70:	08 0d       	add	r16, r8
     d72:	19 1d       	adc	r17, r9
     d74:	2a 1d       	adc	r18, r10
     d76:	3b 1d       	adc	r19, r11
     d78:	04 83       	std	Z+4, r16	; 0x04
     d7a:	15 83       	std	Z+5, r17	; 0x05
     d7c:	26 83       	std	Z+6, r18	; 0x06
     d7e:	37 83       	std	Z+7, r19	; 0x07
     d80:	83 e0       	ldi	r24, 0x03	; 3
     d82:	f6 01       	movw	r30, r12
     d84:	80 83       	st	Z, r24
     d86:	44 81       	ldd	r20, Z+4	; 0x04
     d88:	55 81       	ldd	r21, Z+5	; 0x05
     d8a:	66 81       	ldd	r22, Z+6	; 0x06
     d8c:	77 81       	ldd	r23, Z+7	; 0x07
     d8e:	77 ff       	sbrs	r23, 7
     d90:	1a c0       	rjmp	.+52     	; 0xdc6 <_fpadd_parts+0x2ac>
     d92:	db 01       	movw	r26, r22
     d94:	ca 01       	movw	r24, r20
     d96:	81 70       	andi	r24, 0x01	; 1
     d98:	99 27       	eor	r25, r25
     d9a:	aa 27       	eor	r26, r26
     d9c:	bb 27       	eor	r27, r27
     d9e:	76 95       	lsr	r23
     da0:	67 95       	ror	r22
     da2:	57 95       	ror	r21
     da4:	47 95       	ror	r20
     da6:	84 2b       	or	r24, r20
     da8:	95 2b       	or	r25, r21
     daa:	a6 2b       	or	r26, r22
     dac:	b7 2b       	or	r27, r23
     dae:	84 83       	std	Z+4, r24	; 0x04
     db0:	95 83       	std	Z+5, r25	; 0x05
     db2:	a6 83       	std	Z+6, r26	; 0x06
     db4:	b7 83       	std	Z+7, r27	; 0x07
     db6:	82 81       	ldd	r24, Z+2	; 0x02
     db8:	93 81       	ldd	r25, Z+3	; 0x03
     dba:	01 96       	adiw	r24, 0x01	; 1
     dbc:	93 83       	std	Z+3, r25	; 0x03
     dbe:	82 83       	std	Z+2, r24	; 0x02
     dc0:	02 c0       	rjmp	.+4      	; 0xdc6 <_fpadd_parts+0x2ac>
     dc2:	7b 01       	movw	r14, r22
     dc4:	01 c0       	rjmp	.+2      	; 0xdc8 <_fpadd_parts+0x2ae>
     dc6:	76 01       	movw	r14, r12
     dc8:	c7 01       	movw	r24, r14
     dca:	24 96       	adiw	r28, 0x04	; 4
     dcc:	e0 e1       	ldi	r30, 0x10	; 16
     dce:	0c 94 fc 0a 	jmp	0x15f8	; 0x15f8 <__epilogue_restores__+0x4>

00000dd2 <__addsf3>:
     dd2:	a0 e2       	ldi	r26, 0x20	; 32
     dd4:	b0 e0       	ldi	r27, 0x00	; 0
     dd6:	ef ee       	ldi	r30, 0xEF	; 239
     dd8:	f6 e0       	ldi	r31, 0x06	; 6
     dda:	0c 94 ee 0a 	jmp	0x15dc	; 0x15dc <__prologue_saves__+0x20>
     dde:	6d 8f       	std	Y+29, r22	; 0x1d
     de0:	7e 8f       	std	Y+30, r23	; 0x1e
     de2:	8f 8f       	std	Y+31, r24	; 0x1f
     de4:	98 a3       	std	Y+32, r25	; 0x20
     de6:	29 8f       	std	Y+25, r18	; 0x19
     de8:	3a 8f       	std	Y+26, r19	; 0x1a
     dea:	4b 8f       	std	Y+27, r20	; 0x1b
     dec:	5c 8f       	std	Y+28, r21	; 0x1c
     dee:	be 01       	movw	r22, r28
     df0:	6f 5e       	subi	r22, 0xEF	; 239
     df2:	7f 4f       	sbci	r23, 0xFF	; 255
     df4:	ce 01       	movw	r24, r28
     df6:	4d 96       	adiw	r24, 0x1d	; 29
     df8:	0e 94 ce 09 	call	0x139c	; 0x139c <__unpack_f>
     dfc:	be 01       	movw	r22, r28
     dfe:	67 5f       	subi	r22, 0xF7	; 247
     e00:	7f 4f       	sbci	r23, 0xFF	; 255
     e02:	ce 01       	movw	r24, r28
     e04:	49 96       	adiw	r24, 0x19	; 25
     e06:	0e 94 ce 09 	call	0x139c	; 0x139c <__unpack_f>
     e0a:	ae 01       	movw	r20, r28
     e0c:	4f 5f       	subi	r20, 0xFF	; 255
     e0e:	5f 4f       	sbci	r21, 0xFF	; 255
     e10:	be 01       	movw	r22, r28
     e12:	67 5f       	subi	r22, 0xF7	; 247
     e14:	7f 4f       	sbci	r23, 0xFF	; 255
     e16:	ce 01       	movw	r24, r28
     e18:	41 96       	adiw	r24, 0x11	; 17
     e1a:	0e 94 8d 05 	call	0xb1a	; 0xb1a <_fpadd_parts>
     e1e:	0e 94 04 09 	call	0x1208	; 0x1208 <__pack_f>
     e22:	a0 96       	adiw	r28, 0x20	; 32
     e24:	e2 e0       	ldi	r30, 0x02	; 2
     e26:	0c 94 0a 0b 	jmp	0x1614	; 0x1614 <__epilogue_restores__+0x20>

00000e2a <__subsf3>:
     e2a:	a0 e2       	ldi	r26, 0x20	; 32
     e2c:	b0 e0       	ldi	r27, 0x00	; 0
     e2e:	eb e1       	ldi	r30, 0x1B	; 27
     e30:	f7 e0       	ldi	r31, 0x07	; 7
     e32:	0c 94 ee 0a 	jmp	0x15dc	; 0x15dc <__prologue_saves__+0x20>
     e36:	6d 8f       	std	Y+29, r22	; 0x1d
     e38:	7e 8f       	std	Y+30, r23	; 0x1e
     e3a:	8f 8f       	std	Y+31, r24	; 0x1f
     e3c:	98 a3       	std	Y+32, r25	; 0x20
     e3e:	29 8f       	std	Y+25, r18	; 0x19
     e40:	3a 8f       	std	Y+26, r19	; 0x1a
     e42:	4b 8f       	std	Y+27, r20	; 0x1b
     e44:	5c 8f       	std	Y+28, r21	; 0x1c
     e46:	be 01       	movw	r22, r28
     e48:	6f 5e       	subi	r22, 0xEF	; 239
     e4a:	7f 4f       	sbci	r23, 0xFF	; 255
     e4c:	ce 01       	movw	r24, r28
     e4e:	4d 96       	adiw	r24, 0x1d	; 29
     e50:	0e 94 ce 09 	call	0x139c	; 0x139c <__unpack_f>
     e54:	be 01       	movw	r22, r28
     e56:	67 5f       	subi	r22, 0xF7	; 247
     e58:	7f 4f       	sbci	r23, 0xFF	; 255
     e5a:	ce 01       	movw	r24, r28
     e5c:	49 96       	adiw	r24, 0x19	; 25
     e5e:	0e 94 ce 09 	call	0x139c	; 0x139c <__unpack_f>
     e62:	8a 85       	ldd	r24, Y+10	; 0x0a
     e64:	91 e0       	ldi	r25, 0x01	; 1
     e66:	89 27       	eor	r24, r25
     e68:	8a 87       	std	Y+10, r24	; 0x0a
     e6a:	ae 01       	movw	r20, r28
     e6c:	4f 5f       	subi	r20, 0xFF	; 255
     e6e:	5f 4f       	sbci	r21, 0xFF	; 255
     e70:	be 01       	movw	r22, r28
     e72:	67 5f       	subi	r22, 0xF7	; 247
     e74:	7f 4f       	sbci	r23, 0xFF	; 255
     e76:	ce 01       	movw	r24, r28
     e78:	41 96       	adiw	r24, 0x11	; 17
     e7a:	0e 94 8d 05 	call	0xb1a	; 0xb1a <_fpadd_parts>
     e7e:	0e 94 04 09 	call	0x1208	; 0x1208 <__pack_f>
     e82:	a0 96       	adiw	r28, 0x20	; 32
     e84:	e2 e0       	ldi	r30, 0x02	; 2
     e86:	0c 94 0a 0b 	jmp	0x1614	; 0x1614 <__epilogue_restores__+0x20>

00000e8a <__mulsf3>:
     e8a:	a0 e2       	ldi	r26, 0x20	; 32
     e8c:	b0 e0       	ldi	r27, 0x00	; 0
     e8e:	eb e4       	ldi	r30, 0x4B	; 75
     e90:	f7 e0       	ldi	r31, 0x07	; 7
     e92:	0c 94 e0 0a 	jmp	0x15c0	; 0x15c0 <__prologue_saves__+0x4>
     e96:	6d 8f       	std	Y+29, r22	; 0x1d
     e98:	7e 8f       	std	Y+30, r23	; 0x1e
     e9a:	8f 8f       	std	Y+31, r24	; 0x1f
     e9c:	98 a3       	std	Y+32, r25	; 0x20
     e9e:	29 8f       	std	Y+25, r18	; 0x19
     ea0:	3a 8f       	std	Y+26, r19	; 0x1a
     ea2:	4b 8f       	std	Y+27, r20	; 0x1b
     ea4:	5c 8f       	std	Y+28, r21	; 0x1c
     ea6:	be 01       	movw	r22, r28
     ea8:	6f 5e       	subi	r22, 0xEF	; 239
     eaa:	7f 4f       	sbci	r23, 0xFF	; 255
     eac:	ce 01       	movw	r24, r28
     eae:	4d 96       	adiw	r24, 0x1d	; 29
     eb0:	0e 94 ce 09 	call	0x139c	; 0x139c <__unpack_f>
     eb4:	be 01       	movw	r22, r28
     eb6:	67 5f       	subi	r22, 0xF7	; 247
     eb8:	7f 4f       	sbci	r23, 0xFF	; 255
     eba:	ce 01       	movw	r24, r28
     ebc:	49 96       	adiw	r24, 0x19	; 25
     ebe:	0e 94 ce 09 	call	0x139c	; 0x139c <__unpack_f>
     ec2:	99 89       	ldd	r25, Y+17	; 0x11
     ec4:	92 30       	cpi	r25, 0x02	; 2
     ec6:	08 f4       	brcc	.+2      	; 0xeca <__mulsf3+0x40>
     ec8:	12 c0       	rjmp	.+36     	; 0xeee <__mulsf3+0x64>
     eca:	89 85       	ldd	r24, Y+9	; 0x09
     ecc:	82 30       	cpi	r24, 0x02	; 2
     ece:	08 f4       	brcc	.+2      	; 0xed2 <__mulsf3+0x48>
     ed0:	1a c0       	rjmp	.+52     	; 0xf06 <__mulsf3+0x7c>
     ed2:	94 30       	cpi	r25, 0x04	; 4
     ed4:	21 f4       	brne	.+8      	; 0xede <__mulsf3+0x54>
     ed6:	82 30       	cpi	r24, 0x02	; 2
     ed8:	09 f4       	brne	.+2      	; 0xedc <__mulsf3+0x52>
     eda:	b4 c0       	rjmp	.+360    	; 0x1044 <__mulsf3+0x1ba>
     edc:	08 c0       	rjmp	.+16     	; 0xeee <__mulsf3+0x64>
     ede:	84 30       	cpi	r24, 0x04	; 4
     ee0:	21 f4       	brne	.+8      	; 0xeea <__mulsf3+0x60>
     ee2:	92 30       	cpi	r25, 0x02	; 2
     ee4:	09 f4       	brne	.+2      	; 0xee8 <__mulsf3+0x5e>
     ee6:	ae c0       	rjmp	.+348    	; 0x1044 <__mulsf3+0x1ba>
     ee8:	0e c0       	rjmp	.+28     	; 0xf06 <__mulsf3+0x7c>
     eea:	92 30       	cpi	r25, 0x02	; 2
     eec:	51 f4       	brne	.+20     	; 0xf02 <__mulsf3+0x78>
     eee:	81 e0       	ldi	r24, 0x01	; 1
     ef0:	2a 89       	ldd	r18, Y+18	; 0x12
     ef2:	9a 85       	ldd	r25, Y+10	; 0x0a
     ef4:	29 13       	cpse	r18, r25
     ef6:	01 c0       	rjmp	.+2      	; 0xefa <__mulsf3+0x70>
     ef8:	80 e0       	ldi	r24, 0x00	; 0
     efa:	8a 8b       	std	Y+18, r24	; 0x12
     efc:	ce 01       	movw	r24, r28
     efe:	41 96       	adiw	r24, 0x11	; 17
     f00:	a3 c0       	rjmp	.+326    	; 0x1048 <__mulsf3+0x1be>
     f02:	82 30       	cpi	r24, 0x02	; 2
     f04:	51 f4       	brne	.+20     	; 0xf1a <__mulsf3+0x90>
     f06:	81 e0       	ldi	r24, 0x01	; 1
     f08:	2a 89       	ldd	r18, Y+18	; 0x12
     f0a:	9a 85       	ldd	r25, Y+10	; 0x0a
     f0c:	29 13       	cpse	r18, r25
     f0e:	01 c0       	rjmp	.+2      	; 0xf12 <__mulsf3+0x88>
     f10:	80 e0       	ldi	r24, 0x00	; 0
     f12:	8a 87       	std	Y+10, r24	; 0x0a
     f14:	ce 01       	movw	r24, r28
     f16:	09 96       	adiw	r24, 0x09	; 9
     f18:	97 c0       	rjmp	.+302    	; 0x1048 <__mulsf3+0x1be>
     f1a:	8d 88       	ldd	r8, Y+21	; 0x15
     f1c:	9e 88       	ldd	r9, Y+22	; 0x16
     f1e:	af 88       	ldd	r10, Y+23	; 0x17
     f20:	b8 8c       	ldd	r11, Y+24	; 0x18
     f22:	0d 85       	ldd	r16, Y+13	; 0x0d
     f24:	1e 85       	ldd	r17, Y+14	; 0x0e
     f26:	2f 85       	ldd	r18, Y+15	; 0x0f
     f28:	38 89       	ldd	r19, Y+16	; 0x10
     f2a:	e0 e2       	ldi	r30, 0x20	; 32
     f2c:	f0 e0       	ldi	r31, 0x00	; 0
     f2e:	80 e0       	ldi	r24, 0x00	; 0
     f30:	90 e0       	ldi	r25, 0x00	; 0
     f32:	dc 01       	movw	r26, r24
     f34:	c1 2c       	mov	r12, r1
     f36:	d1 2c       	mov	r13, r1
     f38:	76 01       	movw	r14, r12
     f3a:	40 e0       	ldi	r20, 0x00	; 0
     f3c:	50 e0       	ldi	r21, 0x00	; 0
     f3e:	ba 01       	movw	r22, r20
     f40:	80 fe       	sbrs	r8, 0
     f42:	18 c0       	rjmp	.+48     	; 0xf74 <__mulsf3+0xea>
     f44:	40 0f       	add	r20, r16
     f46:	51 1f       	adc	r21, r17
     f48:	62 1f       	adc	r22, r18
     f4a:	73 1f       	adc	r23, r19
     f4c:	8c 0d       	add	r24, r12
     f4e:	9d 1d       	adc	r25, r13
     f50:	ae 1d       	adc	r26, r14
     f52:	bf 1d       	adc	r27, r15
     f54:	41 2c       	mov	r4, r1
     f56:	51 2c       	mov	r5, r1
     f58:	32 01       	movw	r6, r4
     f5a:	43 94       	inc	r4
     f5c:	40 17       	cp	r20, r16
     f5e:	51 07       	cpc	r21, r17
     f60:	62 07       	cpc	r22, r18
     f62:	73 07       	cpc	r23, r19
     f64:	18 f0       	brcs	.+6      	; 0xf6c <__mulsf3+0xe2>
     f66:	41 2c       	mov	r4, r1
     f68:	51 2c       	mov	r5, r1
     f6a:	32 01       	movw	r6, r4
     f6c:	84 0d       	add	r24, r4
     f6e:	95 1d       	adc	r25, r5
     f70:	a6 1d       	adc	r26, r6
     f72:	b7 1d       	adc	r27, r7
     f74:	cc 0c       	add	r12, r12
     f76:	dd 1c       	adc	r13, r13
     f78:	ee 1c       	adc	r14, r14
     f7a:	ff 1c       	adc	r15, r15
     f7c:	37 ff       	sbrs	r19, 7
     f7e:	02 c0       	rjmp	.+4      	; 0xf84 <__mulsf3+0xfa>
     f80:	68 94       	set
     f82:	c0 f8       	bld	r12, 0
     f84:	00 0f       	add	r16, r16
     f86:	11 1f       	adc	r17, r17
     f88:	22 1f       	adc	r18, r18
     f8a:	33 1f       	adc	r19, r19
     f8c:	b6 94       	lsr	r11
     f8e:	a7 94       	ror	r10
     f90:	97 94       	ror	r9
     f92:	87 94       	ror	r8
     f94:	31 97       	sbiw	r30, 0x01	; 1
     f96:	a1 f6       	brne	.-88     	; 0xf40 <__mulsf3+0xb6>
     f98:	2b 89       	ldd	r18, Y+19	; 0x13
     f9a:	3c 89       	ldd	r19, Y+20	; 0x14
     f9c:	eb 85       	ldd	r30, Y+11	; 0x0b
     f9e:	fc 85       	ldd	r31, Y+12	; 0x0c
     fa0:	2e 0f       	add	r18, r30
     fa2:	3f 1f       	adc	r19, r31
     fa4:	2e 5f       	subi	r18, 0xFE	; 254
     fa6:	3f 4f       	sbci	r19, 0xFF	; 255
     fa8:	3c 83       	std	Y+4, r19	; 0x04
     faa:	2b 83       	std	Y+3, r18	; 0x03
     fac:	21 e0       	ldi	r18, 0x01	; 1
     fae:	ea 89       	ldd	r30, Y+18	; 0x12
     fb0:	3a 85       	ldd	r19, Y+10	; 0x0a
     fb2:	e3 13       	cpse	r30, r19
     fb4:	01 c0       	rjmp	.+2      	; 0xfb8 <__mulsf3+0x12e>
     fb6:	20 e0       	ldi	r18, 0x00	; 0
     fb8:	2a 83       	std	Y+2, r18	; 0x02
     fba:	eb 81       	ldd	r30, Y+3	; 0x03
     fbc:	fc 81       	ldd	r31, Y+4	; 0x04
     fbe:	0c c0       	rjmp	.+24     	; 0xfd8 <__mulsf3+0x14e>
     fc0:	80 ff       	sbrs	r24, 0
     fc2:	05 c0       	rjmp	.+10     	; 0xfce <__mulsf3+0x144>
     fc4:	76 95       	lsr	r23
     fc6:	67 95       	ror	r22
     fc8:	57 95       	ror	r21
     fca:	47 95       	ror	r20
     fcc:	70 68       	ori	r23, 0x80	; 128
     fce:	b6 95       	lsr	r27
     fd0:	a7 95       	ror	r26
     fd2:	97 95       	ror	r25
     fd4:	87 95       	ror	r24
     fd6:	31 96       	adiw	r30, 0x01	; 1
     fd8:	b7 fd       	sbrc	r27, 7
     fda:	f2 cf       	rjmp	.-28     	; 0xfc0 <__mulsf3+0x136>
     fdc:	9f 01       	movw	r18, r30
     fde:	0c c0       	rjmp	.+24     	; 0xff8 <__mulsf3+0x16e>
     fe0:	88 0f       	add	r24, r24
     fe2:	99 1f       	adc	r25, r25
     fe4:	aa 1f       	adc	r26, r26
     fe6:	bb 1f       	adc	r27, r27
     fe8:	77 fd       	sbrc	r23, 7
     fea:	81 60       	ori	r24, 0x01	; 1
     fec:	44 0f       	add	r20, r20
     fee:	55 1f       	adc	r21, r21
     ff0:	66 1f       	adc	r22, r22
     ff2:	77 1f       	adc	r23, r23
     ff4:	21 50       	subi	r18, 0x01	; 1
     ff6:	31 09       	sbc	r19, r1
     ff8:	00 97       	sbiw	r24, 0x00	; 0
     ffa:	a1 05       	cpc	r26, r1
     ffc:	e0 e4       	ldi	r30, 0x40	; 64
     ffe:	be 07       	cpc	r27, r30
    1000:	78 f3       	brcs	.-34     	; 0xfe0 <__mulsf3+0x156>
    1002:	2b 83       	std	Y+3, r18	; 0x03
    1004:	3c 83       	std	Y+4, r19	; 0x04
    1006:	8c 01       	movw	r16, r24
    1008:	9d 01       	movw	r18, r26
    100a:	0f 77       	andi	r16, 0x7F	; 127
    100c:	11 27       	eor	r17, r17
    100e:	22 27       	eor	r18, r18
    1010:	33 27       	eor	r19, r19
    1012:	00 34       	cpi	r16, 0x40	; 64
    1014:	11 05       	cpc	r17, r1
    1016:	21 05       	cpc	r18, r1
    1018:	31 05       	cpc	r19, r1
    101a:	59 f4       	brne	.+22     	; 0x1032 <__mulsf3+0x1a8>
    101c:	87 fd       	sbrc	r24, 7
    101e:	09 c0       	rjmp	.+18     	; 0x1032 <__mulsf3+0x1a8>
    1020:	45 2b       	or	r20, r21
    1022:	46 2b       	or	r20, r22
    1024:	47 2b       	or	r20, r23
    1026:	29 f0       	breq	.+10     	; 0x1032 <__mulsf3+0x1a8>
    1028:	80 5c       	subi	r24, 0xC0	; 192
    102a:	9f 4f       	sbci	r25, 0xFF	; 255
    102c:	af 4f       	sbci	r26, 0xFF	; 255
    102e:	bf 4f       	sbci	r27, 0xFF	; 255
    1030:	80 78       	andi	r24, 0x80	; 128
    1032:	8d 83       	std	Y+5, r24	; 0x05
    1034:	9e 83       	std	Y+6, r25	; 0x06
    1036:	af 83       	std	Y+7, r26	; 0x07
    1038:	b8 87       	std	Y+8, r27	; 0x08
    103a:	83 e0       	ldi	r24, 0x03	; 3
    103c:	89 83       	std	Y+1, r24	; 0x01
    103e:	ce 01       	movw	r24, r28
    1040:	01 96       	adiw	r24, 0x01	; 1
    1042:	02 c0       	rjmp	.+4      	; 0x1048 <__mulsf3+0x1be>
    1044:	8e e4       	ldi	r24, 0x4E	; 78
    1046:	91 e0       	ldi	r25, 0x01	; 1
    1048:	0e 94 04 09 	call	0x1208	; 0x1208 <__pack_f>
    104c:	a0 96       	adiw	r28, 0x20	; 32
    104e:	e0 e1       	ldi	r30, 0x10	; 16
    1050:	0c 94 fc 0a 	jmp	0x15f8	; 0x15f8 <__epilogue_restores__+0x4>

00001054 <__gesf2>:
    1054:	a8 e1       	ldi	r26, 0x18	; 24
    1056:	b0 e0       	ldi	r27, 0x00	; 0
    1058:	e0 e3       	ldi	r30, 0x30	; 48
    105a:	f8 e0       	ldi	r31, 0x08	; 8
    105c:	0c 94 ee 0a 	jmp	0x15dc	; 0x15dc <__prologue_saves__+0x20>
    1060:	6d 8b       	std	Y+21, r22	; 0x15
    1062:	7e 8b       	std	Y+22, r23	; 0x16
    1064:	8f 8b       	std	Y+23, r24	; 0x17
    1066:	98 8f       	std	Y+24, r25	; 0x18
    1068:	29 8b       	std	Y+17, r18	; 0x11
    106a:	3a 8b       	std	Y+18, r19	; 0x12
    106c:	4b 8b       	std	Y+19, r20	; 0x13
    106e:	5c 8b       	std	Y+20, r21	; 0x14
    1070:	be 01       	movw	r22, r28
    1072:	67 5f       	subi	r22, 0xF7	; 247
    1074:	7f 4f       	sbci	r23, 0xFF	; 255
    1076:	ce 01       	movw	r24, r28
    1078:	45 96       	adiw	r24, 0x15	; 21
    107a:	0e 94 ce 09 	call	0x139c	; 0x139c <__unpack_f>
    107e:	be 01       	movw	r22, r28
    1080:	6f 5f       	subi	r22, 0xFF	; 255
    1082:	7f 4f       	sbci	r23, 0xFF	; 255
    1084:	ce 01       	movw	r24, r28
    1086:	41 96       	adiw	r24, 0x11	; 17
    1088:	0e 94 ce 09 	call	0x139c	; 0x139c <__unpack_f>
    108c:	89 85       	ldd	r24, Y+9	; 0x09
    108e:	82 30       	cpi	r24, 0x02	; 2
    1090:	58 f0       	brcs	.+22     	; 0x10a8 <__gesf2+0x54>
    1092:	89 81       	ldd	r24, Y+1	; 0x01
    1094:	82 30       	cpi	r24, 0x02	; 2
    1096:	40 f0       	brcs	.+16     	; 0x10a8 <__gesf2+0x54>
    1098:	be 01       	movw	r22, r28
    109a:	6f 5f       	subi	r22, 0xFF	; 255
    109c:	7f 4f       	sbci	r23, 0xFF	; 255
    109e:	ce 01       	movw	r24, r28
    10a0:	09 96       	adiw	r24, 0x09	; 9
    10a2:	0e 94 3d 0a 	call	0x147a	; 0x147a <__fpcmp_parts_f>
    10a6:	01 c0       	rjmp	.+2      	; 0x10aa <__gesf2+0x56>
    10a8:	8f ef       	ldi	r24, 0xFF	; 255
    10aa:	68 96       	adiw	r28, 0x18	; 24
    10ac:	e2 e0       	ldi	r30, 0x02	; 2
    10ae:	0c 94 0a 0b 	jmp	0x1614	; 0x1614 <__epilogue_restores__+0x20>

000010b2 <__floatsisf>:
    10b2:	a8 e0       	ldi	r26, 0x08	; 8
    10b4:	b0 e0       	ldi	r27, 0x00	; 0
    10b6:	ef e5       	ldi	r30, 0x5F	; 95
    10b8:	f8 e0       	ldi	r31, 0x08	; 8
    10ba:	0c 94 ec 0a 	jmp	0x15d8	; 0x15d8 <__prologue_saves__+0x1c>
    10be:	23 e0       	ldi	r18, 0x03	; 3
    10c0:	29 83       	std	Y+1, r18	; 0x01
    10c2:	8b 01       	movw	r16, r22
    10c4:	9c 01       	movw	r18, r24
    10c6:	00 27       	eor	r16, r16
    10c8:	37 fd       	sbrc	r19, 7
    10ca:	03 95       	inc	r16
    10cc:	11 27       	eor	r17, r17
    10ce:	22 27       	eor	r18, r18
    10d0:	33 27       	eor	r19, r19
    10d2:	40 2f       	mov	r20, r16
    10d4:	0a 83       	std	Y+2, r16	; 0x02
    10d6:	61 15       	cp	r22, r1
    10d8:	71 05       	cpc	r23, r1
    10da:	81 05       	cpc	r24, r1
    10dc:	91 05       	cpc	r25, r1
    10de:	19 f4       	brne	.+6      	; 0x10e6 <__floatsisf+0x34>
    10e0:	82 e0       	ldi	r24, 0x02	; 2
    10e2:	89 83       	std	Y+1, r24	; 0x01
    10e4:	35 c0       	rjmp	.+106    	; 0x1150 <__floatsisf+0x9e>
    10e6:	2e e1       	ldi	r18, 0x1E	; 30
    10e8:	30 e0       	ldi	r19, 0x00	; 0
    10ea:	3c 83       	std	Y+4, r19	; 0x04
    10ec:	2b 83       	std	Y+3, r18	; 0x03
    10ee:	44 23       	and	r20, r20
    10f0:	71 f0       	breq	.+28     	; 0x110e <__floatsisf+0x5c>
    10f2:	61 15       	cp	r22, r1
    10f4:	71 05       	cpc	r23, r1
    10f6:	81 05       	cpc	r24, r1
    10f8:	20 e8       	ldi	r18, 0x80	; 128
    10fa:	92 07       	cpc	r25, r18
    10fc:	71 f1       	breq	.+92     	; 0x115a <__floatsisf+0xa8>
    10fe:	00 27       	eor	r16, r16
    1100:	11 27       	eor	r17, r17
    1102:	98 01       	movw	r18, r16
    1104:	06 1b       	sub	r16, r22
    1106:	17 0b       	sbc	r17, r23
    1108:	28 0b       	sbc	r18, r24
    110a:	39 0b       	sbc	r19, r25
    110c:	02 c0       	rjmp	.+4      	; 0x1112 <__floatsisf+0x60>
    110e:	8b 01       	movw	r16, r22
    1110:	9c 01       	movw	r18, r24
    1112:	c9 01       	movw	r24, r18
    1114:	b8 01       	movw	r22, r16
    1116:	0e 94 c3 0a 	call	0x1586	; 0x1586 <__clzsi2>
    111a:	01 97       	sbiw	r24, 0x01	; 1
    111c:	18 16       	cp	r1, r24
    111e:	19 06       	cpc	r1, r25
    1120:	2c f0       	brlt	.+10     	; 0x112c <__floatsisf+0x7a>
    1122:	0d 83       	std	Y+5, r16	; 0x05
    1124:	1e 83       	std	Y+6, r17	; 0x06
    1126:	2f 83       	std	Y+7, r18	; 0x07
    1128:	38 87       	std	Y+8, r19	; 0x08
    112a:	12 c0       	rjmp	.+36     	; 0x1150 <__floatsisf+0x9e>
    112c:	08 2e       	mov	r0, r24
    112e:	04 c0       	rjmp	.+8      	; 0x1138 <__floatsisf+0x86>
    1130:	00 0f       	add	r16, r16
    1132:	11 1f       	adc	r17, r17
    1134:	22 1f       	adc	r18, r18
    1136:	33 1f       	adc	r19, r19
    1138:	0a 94       	dec	r0
    113a:	d2 f7       	brpl	.-12     	; 0x1130 <__floatsisf+0x7e>
    113c:	0d 83       	std	Y+5, r16	; 0x05
    113e:	1e 83       	std	Y+6, r17	; 0x06
    1140:	2f 83       	std	Y+7, r18	; 0x07
    1142:	38 87       	std	Y+8, r19	; 0x08
    1144:	2e e1       	ldi	r18, 0x1E	; 30
    1146:	30 e0       	ldi	r19, 0x00	; 0
    1148:	28 1b       	sub	r18, r24
    114a:	39 0b       	sbc	r19, r25
    114c:	3c 83       	std	Y+4, r19	; 0x04
    114e:	2b 83       	std	Y+3, r18	; 0x03
    1150:	ce 01       	movw	r24, r28
    1152:	01 96       	adiw	r24, 0x01	; 1
    1154:	0e 94 04 09 	call	0x1208	; 0x1208 <__pack_f>
    1158:	04 c0       	rjmp	.+8      	; 0x1162 <__floatsisf+0xb0>
    115a:	60 e0       	ldi	r22, 0x00	; 0
    115c:	70 e0       	ldi	r23, 0x00	; 0
    115e:	80 e0       	ldi	r24, 0x00	; 0
    1160:	9f ec       	ldi	r25, 0xCF	; 207
    1162:	28 96       	adiw	r28, 0x08	; 8
    1164:	e4 e0       	ldi	r30, 0x04	; 4
    1166:	0c 94 08 0b 	jmp	0x1610	; 0x1610 <__epilogue_restores__+0x1c>

0000116a <__fixsfsi>:
    116a:	ac e0       	ldi	r26, 0x0C	; 12
    116c:	b0 e0       	ldi	r27, 0x00	; 0
    116e:	eb eb       	ldi	r30, 0xBB	; 187
    1170:	f8 e0       	ldi	r31, 0x08	; 8
    1172:	0c 94 ec 0a 	jmp	0x15d8	; 0x15d8 <__prologue_saves__+0x1c>
    1176:	69 87       	std	Y+9, r22	; 0x09
    1178:	7a 87       	std	Y+10, r23	; 0x0a
    117a:	8b 87       	std	Y+11, r24	; 0x0b
    117c:	9c 87       	std	Y+12, r25	; 0x0c
    117e:	be 01       	movw	r22, r28
    1180:	6f 5f       	subi	r22, 0xFF	; 255
    1182:	7f 4f       	sbci	r23, 0xFF	; 255
    1184:	ce 01       	movw	r24, r28
    1186:	09 96       	adiw	r24, 0x09	; 9
    1188:	0e 94 ce 09 	call	0x139c	; 0x139c <__unpack_f>
    118c:	89 81       	ldd	r24, Y+1	; 0x01
    118e:	82 30       	cpi	r24, 0x02	; 2
    1190:	91 f1       	breq	.+100    	; 0x11f6 <__fixsfsi+0x8c>
    1192:	82 30       	cpi	r24, 0x02	; 2
    1194:	80 f1       	brcs	.+96     	; 0x11f6 <__fixsfsi+0x8c>
    1196:	84 30       	cpi	r24, 0x04	; 4
    1198:	41 f4       	brne	.+16     	; 0x11aa <__fixsfsi+0x40>
    119a:	8a 81       	ldd	r24, Y+2	; 0x02
    119c:	88 23       	and	r24, r24
    119e:	31 f1       	breq	.+76     	; 0x11ec <__fixsfsi+0x82>
    11a0:	00 e0       	ldi	r16, 0x00	; 0
    11a2:	10 e0       	ldi	r17, 0x00	; 0
    11a4:	20 e0       	ldi	r18, 0x00	; 0
    11a6:	30 e8       	ldi	r19, 0x80	; 128
    11a8:	29 c0       	rjmp	.+82     	; 0x11fc <__fixsfsi+0x92>
    11aa:	2b 81       	ldd	r18, Y+3	; 0x03
    11ac:	3c 81       	ldd	r19, Y+4	; 0x04
    11ae:	37 fd       	sbrc	r19, 7
    11b0:	22 c0       	rjmp	.+68     	; 0x11f6 <__fixsfsi+0x8c>
    11b2:	2f 31       	cpi	r18, 0x1F	; 31
    11b4:	31 05       	cpc	r19, r1
    11b6:	8c f7       	brge	.-30     	; 0x119a <__fixsfsi+0x30>
    11b8:	8e e1       	ldi	r24, 0x1E	; 30
    11ba:	90 e0       	ldi	r25, 0x00	; 0
    11bc:	82 1b       	sub	r24, r18
    11be:	93 0b       	sbc	r25, r19
    11c0:	0d 81       	ldd	r16, Y+5	; 0x05
    11c2:	1e 81       	ldd	r17, Y+6	; 0x06
    11c4:	2f 81       	ldd	r18, Y+7	; 0x07
    11c6:	38 85       	ldd	r19, Y+8	; 0x08
    11c8:	04 c0       	rjmp	.+8      	; 0x11d2 <__fixsfsi+0x68>
    11ca:	36 95       	lsr	r19
    11cc:	27 95       	ror	r18
    11ce:	17 95       	ror	r17
    11d0:	07 95       	ror	r16
    11d2:	8a 95       	dec	r24
    11d4:	d2 f7       	brpl	.-12     	; 0x11ca <__fixsfsi+0x60>
    11d6:	8a 81       	ldd	r24, Y+2	; 0x02
    11d8:	88 23       	and	r24, r24
    11da:	81 f0       	breq	.+32     	; 0x11fc <__fixsfsi+0x92>
    11dc:	30 95       	com	r19
    11de:	20 95       	com	r18
    11e0:	10 95       	com	r17
    11e2:	01 95       	neg	r16
    11e4:	1f 4f       	sbci	r17, 0xFF	; 255
    11e6:	2f 4f       	sbci	r18, 0xFF	; 255
    11e8:	3f 4f       	sbci	r19, 0xFF	; 255
    11ea:	08 c0       	rjmp	.+16     	; 0x11fc <__fixsfsi+0x92>
    11ec:	0f ef       	ldi	r16, 0xFF	; 255
    11ee:	1f ef       	ldi	r17, 0xFF	; 255
    11f0:	2f ef       	ldi	r18, 0xFF	; 255
    11f2:	3f e7       	ldi	r19, 0x7F	; 127
    11f4:	03 c0       	rjmp	.+6      	; 0x11fc <__fixsfsi+0x92>
    11f6:	00 e0       	ldi	r16, 0x00	; 0
    11f8:	10 e0       	ldi	r17, 0x00	; 0
    11fa:	98 01       	movw	r18, r16
    11fc:	b8 01       	movw	r22, r16
    11fe:	c9 01       	movw	r24, r18
    1200:	2c 96       	adiw	r28, 0x0c	; 12
    1202:	e4 e0       	ldi	r30, 0x04	; 4
    1204:	0c 94 08 0b 	jmp	0x1610	; 0x1610 <__epilogue_restores__+0x1c>

00001208 <__pack_f>:
    1208:	0f 93       	push	r16
    120a:	1f 93       	push	r17
    120c:	cf 93       	push	r28
    120e:	df 93       	push	r29
    1210:	dc 01       	movw	r26, r24
    1212:	14 96       	adiw	r26, 0x04	; 4
    1214:	4d 91       	ld	r20, X+
    1216:	5d 91       	ld	r21, X+
    1218:	6d 91       	ld	r22, X+
    121a:	7c 91       	ld	r23, X
    121c:	17 97       	sbiw	r26, 0x07	; 7
    121e:	11 96       	adiw	r26, 0x01	; 1
    1220:	ec 91       	ld	r30, X
    1222:	11 97       	sbiw	r26, 0x01	; 1
    1224:	8c 91       	ld	r24, X
    1226:	82 30       	cpi	r24, 0x02	; 2
    1228:	20 f4       	brcc	.+8      	; 0x1232 <__pack_f+0x2a>
    122a:	60 61       	ori	r22, 0x10	; 16
    122c:	8f ef       	ldi	r24, 0xFF	; 255
    122e:	90 e0       	ldi	r25, 0x00	; 0
    1230:	a6 c0       	rjmp	.+332    	; 0x137e <__pack_f+0x176>
    1232:	84 30       	cpi	r24, 0x04	; 4
    1234:	09 f4       	brne	.+2      	; 0x1238 <__pack_f+0x30>
    1236:	9e c0       	rjmp	.+316    	; 0x1374 <__pack_f+0x16c>
    1238:	82 30       	cpi	r24, 0x02	; 2
    123a:	09 f4       	brne	.+2      	; 0x123e <__pack_f+0x36>
    123c:	95 c0       	rjmp	.+298    	; 0x1368 <__pack_f+0x160>
    123e:	41 15       	cp	r20, r1
    1240:	51 05       	cpc	r21, r1
    1242:	61 05       	cpc	r22, r1
    1244:	71 05       	cpc	r23, r1
    1246:	09 f4       	brne	.+2      	; 0x124a <__pack_f+0x42>
    1248:	92 c0       	rjmp	.+292    	; 0x136e <__pack_f+0x166>
    124a:	12 96       	adiw	r26, 0x02	; 2
    124c:	2d 91       	ld	r18, X+
    124e:	3c 91       	ld	r19, X
    1250:	13 97       	sbiw	r26, 0x03	; 3
    1252:	22 38       	cpi	r18, 0x82	; 130
    1254:	8f ef       	ldi	r24, 0xFF	; 255
    1256:	38 07       	cpc	r19, r24
    1258:	0c f0       	brlt	.+2      	; 0x125c <__pack_f+0x54>
    125a:	58 c0       	rjmp	.+176    	; 0x130c <__pack_f+0x104>
    125c:	c2 e8       	ldi	r28, 0x82	; 130
    125e:	df ef       	ldi	r29, 0xFF	; 255
    1260:	c2 1b       	sub	r28, r18
    1262:	d3 0b       	sbc	r29, r19
    1264:	ca 31       	cpi	r28, 0x1A	; 26
    1266:	d1 05       	cpc	r29, r1
    1268:	6c f5       	brge	.+90     	; 0x12c4 <__pack_f+0xbc>
    126a:	8a 01       	movw	r16, r20
    126c:	9b 01       	movw	r18, r22
    126e:	0c 2e       	mov	r0, r28
    1270:	04 c0       	rjmp	.+8      	; 0x127a <__pack_f+0x72>
    1272:	36 95       	lsr	r19
    1274:	27 95       	ror	r18
    1276:	17 95       	ror	r17
    1278:	07 95       	ror	r16
    127a:	0a 94       	dec	r0
    127c:	d2 f7       	brpl	.-12     	; 0x1272 <__pack_f+0x6a>
    127e:	81 e0       	ldi	r24, 0x01	; 1
    1280:	90 e0       	ldi	r25, 0x00	; 0
    1282:	a0 e0       	ldi	r26, 0x00	; 0
    1284:	b0 e0       	ldi	r27, 0x00	; 0
    1286:	0c 2e       	mov	r0, r28
    1288:	04 c0       	rjmp	.+8      	; 0x1292 <__pack_f+0x8a>
    128a:	88 0f       	add	r24, r24
    128c:	99 1f       	adc	r25, r25
    128e:	aa 1f       	adc	r26, r26
    1290:	bb 1f       	adc	r27, r27
    1292:	0a 94       	dec	r0
    1294:	d2 f7       	brpl	.-12     	; 0x128a <__pack_f+0x82>
    1296:	01 97       	sbiw	r24, 0x01	; 1
    1298:	a1 09       	sbc	r26, r1
    129a:	b1 09       	sbc	r27, r1
    129c:	84 23       	and	r24, r20
    129e:	95 23       	and	r25, r21
    12a0:	a6 23       	and	r26, r22
    12a2:	b7 23       	and	r27, r23
    12a4:	41 e0       	ldi	r20, 0x01	; 1
    12a6:	50 e0       	ldi	r21, 0x00	; 0
    12a8:	60 e0       	ldi	r22, 0x00	; 0
    12aa:	70 e0       	ldi	r23, 0x00	; 0
    12ac:	89 2b       	or	r24, r25
    12ae:	8a 2b       	or	r24, r26
    12b0:	8b 2b       	or	r24, r27
    12b2:	19 f4       	brne	.+6      	; 0x12ba <__pack_f+0xb2>
    12b4:	40 e0       	ldi	r20, 0x00	; 0
    12b6:	50 e0       	ldi	r21, 0x00	; 0
    12b8:	ba 01       	movw	r22, r20
    12ba:	40 2b       	or	r20, r16
    12bc:	51 2b       	or	r21, r17
    12be:	62 2b       	or	r22, r18
    12c0:	73 2b       	or	r23, r19
    12c2:	03 c0       	rjmp	.+6      	; 0x12ca <__pack_f+0xc2>
    12c4:	40 e0       	ldi	r20, 0x00	; 0
    12c6:	50 e0       	ldi	r21, 0x00	; 0
    12c8:	ba 01       	movw	r22, r20
    12ca:	db 01       	movw	r26, r22
    12cc:	ca 01       	movw	r24, r20
    12ce:	8f 77       	andi	r24, 0x7F	; 127
    12d0:	99 27       	eor	r25, r25
    12d2:	aa 27       	eor	r26, r26
    12d4:	bb 27       	eor	r27, r27
    12d6:	80 34       	cpi	r24, 0x40	; 64
    12d8:	91 05       	cpc	r25, r1
    12da:	a1 05       	cpc	r26, r1
    12dc:	b1 05       	cpc	r27, r1
    12de:	39 f4       	brne	.+14     	; 0x12ee <__pack_f+0xe6>
    12e0:	47 ff       	sbrs	r20, 7
    12e2:	09 c0       	rjmp	.+18     	; 0x12f6 <__pack_f+0xee>
    12e4:	40 5c       	subi	r20, 0xC0	; 192
    12e6:	5f 4f       	sbci	r21, 0xFF	; 255
    12e8:	6f 4f       	sbci	r22, 0xFF	; 255
    12ea:	7f 4f       	sbci	r23, 0xFF	; 255
    12ec:	04 c0       	rjmp	.+8      	; 0x12f6 <__pack_f+0xee>
    12ee:	41 5c       	subi	r20, 0xC1	; 193
    12f0:	5f 4f       	sbci	r21, 0xFF	; 255
    12f2:	6f 4f       	sbci	r22, 0xFF	; 255
    12f4:	7f 4f       	sbci	r23, 0xFF	; 255
    12f6:	81 e0       	ldi	r24, 0x01	; 1
    12f8:	90 e0       	ldi	r25, 0x00	; 0
    12fa:	41 15       	cp	r20, r1
    12fc:	51 05       	cpc	r21, r1
    12fe:	61 05       	cpc	r22, r1
    1300:	20 e4       	ldi	r18, 0x40	; 64
    1302:	72 07       	cpc	r23, r18
    1304:	48 f5       	brcc	.+82     	; 0x1358 <__pack_f+0x150>
    1306:	80 e0       	ldi	r24, 0x00	; 0
    1308:	90 e0       	ldi	r25, 0x00	; 0
    130a:	26 c0       	rjmp	.+76     	; 0x1358 <__pack_f+0x150>
    130c:	20 38       	cpi	r18, 0x80	; 128
    130e:	31 05       	cpc	r19, r1
    1310:	8c f5       	brge	.+98     	; 0x1374 <__pack_f+0x16c>
    1312:	db 01       	movw	r26, r22
    1314:	ca 01       	movw	r24, r20
    1316:	8f 77       	andi	r24, 0x7F	; 127
    1318:	99 27       	eor	r25, r25
    131a:	aa 27       	eor	r26, r26
    131c:	bb 27       	eor	r27, r27
    131e:	80 34       	cpi	r24, 0x40	; 64
    1320:	91 05       	cpc	r25, r1
    1322:	a1 05       	cpc	r26, r1
    1324:	b1 05       	cpc	r27, r1
    1326:	39 f4       	brne	.+14     	; 0x1336 <__pack_f+0x12e>
    1328:	47 ff       	sbrs	r20, 7
    132a:	09 c0       	rjmp	.+18     	; 0x133e <__pack_f+0x136>
    132c:	40 5c       	subi	r20, 0xC0	; 192
    132e:	5f 4f       	sbci	r21, 0xFF	; 255
    1330:	6f 4f       	sbci	r22, 0xFF	; 255
    1332:	7f 4f       	sbci	r23, 0xFF	; 255
    1334:	04 c0       	rjmp	.+8      	; 0x133e <__pack_f+0x136>
    1336:	41 5c       	subi	r20, 0xC1	; 193
    1338:	5f 4f       	sbci	r21, 0xFF	; 255
    133a:	6f 4f       	sbci	r22, 0xFF	; 255
    133c:	7f 4f       	sbci	r23, 0xFF	; 255
    133e:	77 fd       	sbrc	r23, 7
    1340:	04 c0       	rjmp	.+8      	; 0x134a <__pack_f+0x142>
    1342:	c9 01       	movw	r24, r18
    1344:	81 58       	subi	r24, 0x81	; 129
    1346:	9f 4f       	sbci	r25, 0xFF	; 255
    1348:	07 c0       	rjmp	.+14     	; 0x1358 <__pack_f+0x150>
    134a:	76 95       	lsr	r23
    134c:	67 95       	ror	r22
    134e:	57 95       	ror	r21
    1350:	47 95       	ror	r20
    1352:	c9 01       	movw	r24, r18
    1354:	80 58       	subi	r24, 0x80	; 128
    1356:	9f 4f       	sbci	r25, 0xFF	; 255
    1358:	97 e0       	ldi	r25, 0x07	; 7
    135a:	76 95       	lsr	r23
    135c:	67 95       	ror	r22
    135e:	57 95       	ror	r21
    1360:	47 95       	ror	r20
    1362:	9a 95       	dec	r25
    1364:	d1 f7       	brne	.-12     	; 0x135a <__pack_f+0x152>
    1366:	0b c0       	rjmp	.+22     	; 0x137e <__pack_f+0x176>
    1368:	80 e0       	ldi	r24, 0x00	; 0
    136a:	90 e0       	ldi	r25, 0x00	; 0
    136c:	05 c0       	rjmp	.+10     	; 0x1378 <__pack_f+0x170>
    136e:	80 e0       	ldi	r24, 0x00	; 0
    1370:	90 e0       	ldi	r25, 0x00	; 0
    1372:	05 c0       	rjmp	.+10     	; 0x137e <__pack_f+0x176>
    1374:	8f ef       	ldi	r24, 0xFF	; 255
    1376:	90 e0       	ldi	r25, 0x00	; 0
    1378:	40 e0       	ldi	r20, 0x00	; 0
    137a:	50 e0       	ldi	r21, 0x00	; 0
    137c:	ba 01       	movw	r22, r20
    137e:	98 2f       	mov	r25, r24
    1380:	96 95       	lsr	r25
    1382:	e0 fb       	bst	r30, 0
    1384:	97 f9       	bld	r25, 7
    1386:	36 2f       	mov	r19, r22
    1388:	80 fb       	bst	r24, 0
    138a:	37 f9       	bld	r19, 7
    138c:	64 2f       	mov	r22, r20
    138e:	75 2f       	mov	r23, r21
    1390:	83 2f       	mov	r24, r19
    1392:	df 91       	pop	r29
    1394:	cf 91       	pop	r28
    1396:	1f 91       	pop	r17
    1398:	0f 91       	pop	r16
    139a:	08 95       	ret

0000139c <__unpack_f>:
    139c:	cf 92       	push	r12
    139e:	df 92       	push	r13
    13a0:	ef 92       	push	r14
    13a2:	dc 01       	movw	r26, r24
    13a4:	fb 01       	movw	r30, r22
    13a6:	cc 90       	ld	r12, X
    13a8:	11 96       	adiw	r26, 0x01	; 1
    13aa:	dc 90       	ld	r13, X
    13ac:	11 97       	sbiw	r26, 0x01	; 1
    13ae:	12 96       	adiw	r26, 0x02	; 2
    13b0:	8c 91       	ld	r24, X
    13b2:	12 97       	sbiw	r26, 0x02	; 2
    13b4:	3f e7       	ldi	r19, 0x7F	; 127
    13b6:	e3 2e       	mov	r14, r19
    13b8:	e8 22       	and	r14, r24
    13ba:	6e 2d       	mov	r22, r14
    13bc:	a6 01       	movw	r20, r12
    13be:	70 e0       	ldi	r23, 0x00	; 0
    13c0:	98 2f       	mov	r25, r24
    13c2:	99 1f       	adc	r25, r25
    13c4:	99 27       	eor	r25, r25
    13c6:	99 1f       	adc	r25, r25
    13c8:	13 96       	adiw	r26, 0x03	; 3
    13ca:	2c 91       	ld	r18, X
    13cc:	82 2f       	mov	r24, r18
    13ce:	88 0f       	add	r24, r24
    13d0:	89 2b       	or	r24, r25
    13d2:	90 e0       	ldi	r25, 0x00	; 0
    13d4:	27 fb       	bst	r18, 7
    13d6:	22 27       	eor	r18, r18
    13d8:	20 f9       	bld	r18, 0
    13da:	21 83       	std	Z+1, r18	; 0x01
    13dc:	00 97       	sbiw	r24, 0x00	; 0
    13de:	29 f5       	brne	.+74     	; 0x142a <__unpack_f+0x8e>
    13e0:	41 15       	cp	r20, r1
    13e2:	51 05       	cpc	r21, r1
    13e4:	61 05       	cpc	r22, r1
    13e6:	71 05       	cpc	r23, r1
    13e8:	11 f4       	brne	.+4      	; 0x13ee <__unpack_f+0x52>
    13ea:	82 e0       	ldi	r24, 0x02	; 2
    13ec:	27 c0       	rjmp	.+78     	; 0x143c <__unpack_f+0xa0>
    13ee:	82 e8       	ldi	r24, 0x82	; 130
    13f0:	9f ef       	ldi	r25, 0xFF	; 255
    13f2:	93 83       	std	Z+3, r25	; 0x03
    13f4:	82 83       	std	Z+2, r24	; 0x02
    13f6:	27 e0       	ldi	r18, 0x07	; 7
    13f8:	44 0f       	add	r20, r20
    13fa:	55 1f       	adc	r21, r21
    13fc:	66 1f       	adc	r22, r22
    13fe:	77 1f       	adc	r23, r23
    1400:	2a 95       	dec	r18
    1402:	d1 f7       	brne	.-12     	; 0x13f8 <__unpack_f+0x5c>
    1404:	83 e0       	ldi	r24, 0x03	; 3
    1406:	80 83       	st	Z, r24
    1408:	09 c0       	rjmp	.+18     	; 0x141c <__unpack_f+0x80>
    140a:	44 0f       	add	r20, r20
    140c:	55 1f       	adc	r21, r21
    140e:	66 1f       	adc	r22, r22
    1410:	77 1f       	adc	r23, r23
    1412:	82 81       	ldd	r24, Z+2	; 0x02
    1414:	93 81       	ldd	r25, Z+3	; 0x03
    1416:	01 97       	sbiw	r24, 0x01	; 1
    1418:	93 83       	std	Z+3, r25	; 0x03
    141a:	82 83       	std	Z+2, r24	; 0x02
    141c:	41 15       	cp	r20, r1
    141e:	51 05       	cpc	r21, r1
    1420:	61 05       	cpc	r22, r1
    1422:	80 e4       	ldi	r24, 0x40	; 64
    1424:	78 07       	cpc	r23, r24
    1426:	88 f3       	brcs	.-30     	; 0x140a <__unpack_f+0x6e>
    1428:	20 c0       	rjmp	.+64     	; 0x146a <__unpack_f+0xce>
    142a:	8f 3f       	cpi	r24, 0xFF	; 255
    142c:	91 05       	cpc	r25, r1
    142e:	79 f4       	brne	.+30     	; 0x144e <__unpack_f+0xb2>
    1430:	41 15       	cp	r20, r1
    1432:	51 05       	cpc	r21, r1
    1434:	61 05       	cpc	r22, r1
    1436:	71 05       	cpc	r23, r1
    1438:	19 f4       	brne	.+6      	; 0x1440 <__unpack_f+0xa4>
    143a:	84 e0       	ldi	r24, 0x04	; 4
    143c:	80 83       	st	Z, r24
    143e:	19 c0       	rjmp	.+50     	; 0x1472 <__unpack_f+0xd6>
    1440:	e4 fe       	sbrs	r14, 4
    1442:	03 c0       	rjmp	.+6      	; 0x144a <__unpack_f+0xae>
    1444:	81 e0       	ldi	r24, 0x01	; 1
    1446:	80 83       	st	Z, r24
    1448:	10 c0       	rjmp	.+32     	; 0x146a <__unpack_f+0xce>
    144a:	10 82       	st	Z, r1
    144c:	0e c0       	rjmp	.+28     	; 0x146a <__unpack_f+0xce>
    144e:	8f 57       	subi	r24, 0x7F	; 127
    1450:	91 09       	sbc	r25, r1
    1452:	93 83       	std	Z+3, r25	; 0x03
    1454:	82 83       	std	Z+2, r24	; 0x02
    1456:	83 e0       	ldi	r24, 0x03	; 3
    1458:	80 83       	st	Z, r24
    145a:	87 e0       	ldi	r24, 0x07	; 7
    145c:	44 0f       	add	r20, r20
    145e:	55 1f       	adc	r21, r21
    1460:	66 1f       	adc	r22, r22
    1462:	77 1f       	adc	r23, r23
    1464:	8a 95       	dec	r24
    1466:	d1 f7       	brne	.-12     	; 0x145c <__unpack_f+0xc0>
    1468:	70 64       	ori	r23, 0x40	; 64
    146a:	44 83       	std	Z+4, r20	; 0x04
    146c:	55 83       	std	Z+5, r21	; 0x05
    146e:	66 83       	std	Z+6, r22	; 0x06
    1470:	77 83       	std	Z+7, r23	; 0x07
    1472:	ef 90       	pop	r14
    1474:	df 90       	pop	r13
    1476:	cf 90       	pop	r12
    1478:	08 95       	ret

0000147a <__fpcmp_parts_f>:
    147a:	cf 93       	push	r28
    147c:	fc 01       	movw	r30, r24
    147e:	db 01       	movw	r26, r22
    1480:	90 81       	ld	r25, Z
    1482:	92 30       	cpi	r25, 0x02	; 2
    1484:	08 f4       	brcc	.+2      	; 0x1488 <__fpcmp_parts_f+0xe>
    1486:	52 c0       	rjmp	.+164    	; 0x152c <__fpcmp_parts_f+0xb2>
    1488:	8c 91       	ld	r24, X
    148a:	82 30       	cpi	r24, 0x02	; 2
    148c:	08 f4       	brcc	.+2      	; 0x1490 <__fpcmp_parts_f+0x16>
    148e:	4e c0       	rjmp	.+156    	; 0x152c <__fpcmp_parts_f+0xb2>
    1490:	94 30       	cpi	r25, 0x04	; 4
    1492:	71 f4       	brne	.+28     	; 0x14b0 <__fpcmp_parts_f+0x36>
    1494:	84 30       	cpi	r24, 0x04	; 4
    1496:	39 f4       	brne	.+14     	; 0x14a6 <__fpcmp_parts_f+0x2c>
    1498:	11 96       	adiw	r26, 0x01	; 1
    149a:	2c 91       	ld	r18, X
    149c:	30 e0       	ldi	r19, 0x00	; 0
    149e:	81 81       	ldd	r24, Z+1	; 0x01
    14a0:	28 1b       	sub	r18, r24
    14a2:	31 09       	sbc	r19, r1
    14a4:	48 c0       	rjmp	.+144    	; 0x1536 <__fpcmp_parts_f+0xbc>
    14a6:	81 81       	ldd	r24, Z+1	; 0x01
    14a8:	88 23       	and	r24, r24
    14aa:	09 f4       	brne	.+2      	; 0x14ae <__fpcmp_parts_f+0x34>
    14ac:	3f c0       	rjmp	.+126    	; 0x152c <__fpcmp_parts_f+0xb2>
    14ae:	3b c0       	rjmp	.+118    	; 0x1526 <__fpcmp_parts_f+0xac>
    14b0:	84 30       	cpi	r24, 0x04	; 4
    14b2:	29 f4       	brne	.+10     	; 0x14be <__fpcmp_parts_f+0x44>
    14b4:	11 96       	adiw	r26, 0x01	; 1
    14b6:	8c 91       	ld	r24, X
    14b8:	81 11       	cpse	r24, r1
    14ba:	38 c0       	rjmp	.+112    	; 0x152c <__fpcmp_parts_f+0xb2>
    14bc:	34 c0       	rjmp	.+104    	; 0x1526 <__fpcmp_parts_f+0xac>
    14be:	92 30       	cpi	r25, 0x02	; 2
    14c0:	19 f4       	brne	.+6      	; 0x14c8 <__fpcmp_parts_f+0x4e>
    14c2:	82 30       	cpi	r24, 0x02	; 2
    14c4:	b9 f7       	brne	.-18     	; 0x14b4 <__fpcmp_parts_f+0x3a>
    14c6:	35 c0       	rjmp	.+106    	; 0x1532 <__fpcmp_parts_f+0xb8>
    14c8:	82 30       	cpi	r24, 0x02	; 2
    14ca:	69 f3       	breq	.-38     	; 0x14a6 <__fpcmp_parts_f+0x2c>
    14cc:	c1 81       	ldd	r28, Z+1	; 0x01
    14ce:	11 96       	adiw	r26, 0x01	; 1
    14d0:	8c 91       	ld	r24, X
    14d2:	11 97       	sbiw	r26, 0x01	; 1
    14d4:	c8 13       	cpse	r28, r24
    14d6:	1d c0       	rjmp	.+58     	; 0x1512 <__fpcmp_parts_f+0x98>
    14d8:	22 81       	ldd	r18, Z+2	; 0x02
    14da:	33 81       	ldd	r19, Z+3	; 0x03
    14dc:	12 96       	adiw	r26, 0x02	; 2
    14de:	8d 91       	ld	r24, X+
    14e0:	9c 91       	ld	r25, X
    14e2:	13 97       	sbiw	r26, 0x03	; 3
    14e4:	82 17       	cp	r24, r18
    14e6:	93 07       	cpc	r25, r19
    14e8:	0c f4       	brge	.+2      	; 0x14ec <__fpcmp_parts_f+0x72>
    14ea:	13 c0       	rjmp	.+38     	; 0x1512 <__fpcmp_parts_f+0x98>
    14ec:	28 17       	cp	r18, r24
    14ee:	39 07       	cpc	r19, r25
    14f0:	0c f4       	brge	.+2      	; 0x14f4 <__fpcmp_parts_f+0x7a>
    14f2:	17 c0       	rjmp	.+46     	; 0x1522 <__fpcmp_parts_f+0xa8>
    14f4:	44 81       	ldd	r20, Z+4	; 0x04
    14f6:	55 81       	ldd	r21, Z+5	; 0x05
    14f8:	66 81       	ldd	r22, Z+6	; 0x06
    14fa:	77 81       	ldd	r23, Z+7	; 0x07
    14fc:	14 96       	adiw	r26, 0x04	; 4
    14fe:	8d 91       	ld	r24, X+
    1500:	9d 91       	ld	r25, X+
    1502:	0d 90       	ld	r0, X+
    1504:	bc 91       	ld	r27, X
    1506:	a0 2d       	mov	r26, r0
    1508:	84 17       	cp	r24, r20
    150a:	95 07       	cpc	r25, r21
    150c:	a6 07       	cpc	r26, r22
    150e:	b7 07       	cpc	r27, r23
    1510:	18 f4       	brcc	.+6      	; 0x1518 <__fpcmp_parts_f+0x9e>
    1512:	c1 11       	cpse	r28, r1
    1514:	08 c0       	rjmp	.+16     	; 0x1526 <__fpcmp_parts_f+0xac>
    1516:	0a c0       	rjmp	.+20     	; 0x152c <__fpcmp_parts_f+0xb2>
    1518:	48 17       	cp	r20, r24
    151a:	59 07       	cpc	r21, r25
    151c:	6a 07       	cpc	r22, r26
    151e:	7b 07       	cpc	r23, r27
    1520:	40 f4       	brcc	.+16     	; 0x1532 <__fpcmp_parts_f+0xb8>
    1522:	c1 11       	cpse	r28, r1
    1524:	03 c0       	rjmp	.+6      	; 0x152c <__fpcmp_parts_f+0xb2>
    1526:	2f ef       	ldi	r18, 0xFF	; 255
    1528:	3f ef       	ldi	r19, 0xFF	; 255
    152a:	05 c0       	rjmp	.+10     	; 0x1536 <__fpcmp_parts_f+0xbc>
    152c:	21 e0       	ldi	r18, 0x01	; 1
    152e:	30 e0       	ldi	r19, 0x00	; 0
    1530:	02 c0       	rjmp	.+4      	; 0x1536 <__fpcmp_parts_f+0xbc>
    1532:	20 e0       	ldi	r18, 0x00	; 0
    1534:	30 e0       	ldi	r19, 0x00	; 0
    1536:	c9 01       	movw	r24, r18
    1538:	cf 91       	pop	r28
    153a:	08 95       	ret

0000153c <main>:
}

int main(void) {
  // Init port B to show keyboard result
  DDRB = 0xff;
    153c:	8f ef       	ldi	r24, 0xFF	; 255
    153e:	84 b9       	out	0x04, r24	; 4
  // and turn out the LEDs
  PORTB = 0xff;   
    1540:	85 b9       	out	0x05, r24	; 5
  
  // init the UART
  uart_init();
    1542:	0e 94 7f 02 	call	0x4fe	; 0x4fe <uart_init>
  stdout = stdin = stderr = &uart_str;
    1546:	80 e0       	ldi	r24, 0x00	; 0
    1548:	91 e0       	ldi	r25, 0x01	; 1
    154a:	90 93 62 04 	sts	0x0462, r25
    154e:	80 93 61 04 	sts	0x0461, r24
    1552:	90 93 5e 04 	sts	0x045E, r25
    1556:	80 93 5d 04 	sts	0x045D, r24
    155a:	90 93 60 04 	sts	0x0460, r25
    155e:	80 93 5f 04 	sts	0x045F, r24
  fprintf(stdout, "Starting...\n\r");
    1562:	bc 01       	movw	r22, r24
    1564:	86 ea       	ldi	r24, 0xA6	; 166
    1566:	91 e0       	ldi	r25, 0x01	; 1
    1568:	0e 94 25 0b 	call	0x164a	; 0x164a <fputs>
  initialize();
    156c:	0e 94 65 02 	call	0x4ca	; 0x4ca <initialize>

  //play(1336, 852);
	
  //endless loop to read keyboard
  while(1) {
	update_status_variables();
    1570:	0e 94 3c 05 	call	0xa78	; 0xa78 <update_status_variables>
	//Used for debouncing
    if (time1>=t1) {
    1574:	80 91 2b 02 	lds	r24, 0x022B
    1578:	90 91 2c 02 	lds	r25, 0x022C
    157c:	44 97       	sbiw	r24, 0x14	; 20
    157e:	c0 f3       	brcs	.-16     	; 0x1570 <main+0x34>
		task1();
    1580:	0e 94 76 00 	call	0xec	; 0xec <task1>
    1584:	f5 cf       	rjmp	.-22     	; 0x1570 <main+0x34>

00001586 <__clzsi2>:
    1586:	0e 94 cc 0a 	call	0x1598	; 0x1598 <__clzhi2>
    158a:	84 ff       	sbrs	r24, 4
    158c:	08 95       	ret
    158e:	cb 01       	movw	r24, r22
    1590:	0e 94 cc 0a 	call	0x1598	; 0x1598 <__clzhi2>
    1594:	80 5f       	subi	r24, 0xF0	; 240
    1596:	08 95       	ret

00001598 <__clzhi2>:
    1598:	aa 27       	eor	r26, r26
    159a:	99 23       	and	r25, r25
    159c:	29 f4       	brne	.+10     	; 0x15a8 <__clzhi2+0x10>
    159e:	a8 5f       	subi	r26, 0xF8	; 248
    15a0:	98 2b       	or	r25, r24
    15a2:	11 f4       	brne	.+4      	; 0x15a8 <__clzhi2+0x10>
    15a4:	80 e1       	ldi	r24, 0x10	; 16
    15a6:	08 95       	ret
    15a8:	90 31       	cpi	r25, 0x10	; 16
    15aa:	18 f4       	brcc	.+6      	; 0x15b2 <__clzhi2+0x1a>
    15ac:	ad 5f       	subi	r26, 0xFD	; 253
    15ae:	92 95       	swap	r25
    15b0:	a3 95       	inc	r26
    15b2:	99 0f       	add	r25, r25
    15b4:	e8 f7       	brcc	.-6      	; 0x15b0 <__clzhi2+0x18>
    15b6:	8a 2f       	mov	r24, r26
    15b8:	99 27       	eor	r25, r25
    15ba:	08 95       	ret

000015bc <__prologue_saves__>:
    15bc:	2f 92       	push	r2
    15be:	3f 92       	push	r3
    15c0:	4f 92       	push	r4
    15c2:	5f 92       	push	r5
    15c4:	6f 92       	push	r6
    15c6:	7f 92       	push	r7
    15c8:	8f 92       	push	r8
    15ca:	9f 92       	push	r9
    15cc:	af 92       	push	r10
    15ce:	bf 92       	push	r11
    15d0:	cf 92       	push	r12
    15d2:	df 92       	push	r13
    15d4:	ef 92       	push	r14
    15d6:	ff 92       	push	r15
    15d8:	0f 93       	push	r16
    15da:	1f 93       	push	r17
    15dc:	cf 93       	push	r28
    15de:	df 93       	push	r29
    15e0:	cd b7       	in	r28, 0x3d	; 61
    15e2:	de b7       	in	r29, 0x3e	; 62
    15e4:	ca 1b       	sub	r28, r26
    15e6:	db 0b       	sbc	r29, r27
    15e8:	0f b6       	in	r0, 0x3f	; 63
    15ea:	f8 94       	cli
    15ec:	de bf       	out	0x3e, r29	; 62
    15ee:	0f be       	out	0x3f, r0	; 63
    15f0:	cd bf       	out	0x3d, r28	; 61
    15f2:	09 94       	ijmp

000015f4 <__epilogue_restores__>:
    15f4:	2a 88       	ldd	r2, Y+18	; 0x12
    15f6:	39 88       	ldd	r3, Y+17	; 0x11
    15f8:	48 88       	ldd	r4, Y+16	; 0x10
    15fa:	5f 84       	ldd	r5, Y+15	; 0x0f
    15fc:	6e 84       	ldd	r6, Y+14	; 0x0e
    15fe:	7d 84       	ldd	r7, Y+13	; 0x0d
    1600:	8c 84       	ldd	r8, Y+12	; 0x0c
    1602:	9b 84       	ldd	r9, Y+11	; 0x0b
    1604:	aa 84       	ldd	r10, Y+10	; 0x0a
    1606:	b9 84       	ldd	r11, Y+9	; 0x09
    1608:	c8 84       	ldd	r12, Y+8	; 0x08
    160a:	df 80       	ldd	r13, Y+7	; 0x07
    160c:	ee 80       	ldd	r14, Y+6	; 0x06
    160e:	fd 80       	ldd	r15, Y+5	; 0x05
    1610:	0c 81       	ldd	r16, Y+4	; 0x04
    1612:	1b 81       	ldd	r17, Y+3	; 0x03
    1614:	aa 81       	ldd	r26, Y+2	; 0x02
    1616:	b9 81       	ldd	r27, Y+1	; 0x01
    1618:	ce 0f       	add	r28, r30
    161a:	d1 1d       	adc	r29, r1
    161c:	0f b6       	in	r0, 0x3f	; 63
    161e:	f8 94       	cli
    1620:	de bf       	out	0x3e, r29	; 62
    1622:	0f be       	out	0x3f, r0	; 63
    1624:	cd bf       	out	0x3d, r28	; 61
    1626:	ed 01       	movw	r28, r26
    1628:	08 95       	ret

0000162a <fprintf>:
    162a:	cf 93       	push	r28
    162c:	df 93       	push	r29
    162e:	cd b7       	in	r28, 0x3d	; 61
    1630:	de b7       	in	r29, 0x3e	; 62
    1632:	ce 01       	movw	r24, r28
    1634:	09 96       	adiw	r24, 0x09	; 9
    1636:	ac 01       	movw	r20, r24
    1638:	6f 81       	ldd	r22, Y+7	; 0x07
    163a:	78 85       	ldd	r23, Y+8	; 0x08
    163c:	8d 81       	ldd	r24, Y+5	; 0x05
    163e:	9e 81       	ldd	r25, Y+6	; 0x06
    1640:	0e 94 56 0b 	call	0x16ac	; 0x16ac <vfprintf>
    1644:	df 91       	pop	r29
    1646:	cf 91       	pop	r28
    1648:	08 95       	ret

0000164a <fputs>:
    164a:	ef 92       	push	r14
    164c:	ff 92       	push	r15
    164e:	0f 93       	push	r16
    1650:	1f 93       	push	r17
    1652:	cf 93       	push	r28
    1654:	df 93       	push	r29
    1656:	7c 01       	movw	r14, r24
    1658:	8b 01       	movw	r16, r22
    165a:	db 01       	movw	r26, r22
    165c:	13 96       	adiw	r26, 0x03	; 3
    165e:	8c 91       	ld	r24, X
    1660:	81 ff       	sbrs	r24, 1
    1662:	14 c0       	rjmp	.+40     	; 0x168c <fputs+0x42>
    1664:	c0 e0       	ldi	r28, 0x00	; 0
    1666:	d0 e0       	ldi	r29, 0x00	; 0
    1668:	0b c0       	rjmp	.+22     	; 0x1680 <fputs+0x36>
    166a:	d8 01       	movw	r26, r16
    166c:	18 96       	adiw	r26, 0x08	; 8
    166e:	ed 91       	ld	r30, X+
    1670:	fc 91       	ld	r31, X
    1672:	19 97       	sbiw	r26, 0x09	; 9
    1674:	b8 01       	movw	r22, r16
    1676:	09 95       	icall
    1678:	89 2b       	or	r24, r25
    167a:	11 f0       	breq	.+4      	; 0x1680 <fputs+0x36>
    167c:	cf ef       	ldi	r28, 0xFF	; 255
    167e:	df ef       	ldi	r29, 0xFF	; 255
    1680:	f7 01       	movw	r30, r14
    1682:	81 91       	ld	r24, Z+
    1684:	7f 01       	movw	r14, r30
    1686:	81 11       	cpse	r24, r1
    1688:	f0 cf       	rjmp	.-32     	; 0x166a <fputs+0x20>
    168a:	02 c0       	rjmp	.+4      	; 0x1690 <fputs+0x46>
    168c:	cf ef       	ldi	r28, 0xFF	; 255
    168e:	df ef       	ldi	r29, 0xFF	; 255
    1690:	ce 01       	movw	r24, r28
    1692:	df 91       	pop	r29
    1694:	cf 91       	pop	r28
    1696:	1f 91       	pop	r17
    1698:	0f 91       	pop	r16
    169a:	ff 90       	pop	r15
    169c:	ef 90       	pop	r14
    169e:	08 95       	ret

000016a0 <sin>:
    16a0:	9f 93       	push	r25
    16a2:	aa d2       	rcall	.+1364   	; 0x1bf8 <__fp_rempio2>
    16a4:	0f 90       	pop	r0
    16a6:	07 fc       	sbrc	r0, 7
    16a8:	ee 5f       	subi	r30, 0xFE	; 254
    16aa:	cd c2       	rjmp	.+1434   	; 0x1c46 <__fp_sinus>

000016ac <vfprintf>:
    16ac:	2f 92       	push	r2
    16ae:	3f 92       	push	r3
    16b0:	4f 92       	push	r4
    16b2:	5f 92       	push	r5
    16b4:	6f 92       	push	r6
    16b6:	7f 92       	push	r7
    16b8:	8f 92       	push	r8
    16ba:	9f 92       	push	r9
    16bc:	af 92       	push	r10
    16be:	bf 92       	push	r11
    16c0:	cf 92       	push	r12
    16c2:	df 92       	push	r13
    16c4:	ef 92       	push	r14
    16c6:	ff 92       	push	r15
    16c8:	0f 93       	push	r16
    16ca:	1f 93       	push	r17
    16cc:	cf 93       	push	r28
    16ce:	df 93       	push	r29
    16d0:	cd b7       	in	r28, 0x3d	; 61
    16d2:	de b7       	in	r29, 0x3e	; 62
    16d4:	2c 97       	sbiw	r28, 0x0c	; 12
    16d6:	0f b6       	in	r0, 0x3f	; 63
    16d8:	f8 94       	cli
    16da:	de bf       	out	0x3e, r29	; 62
    16dc:	0f be       	out	0x3f, r0	; 63
    16de:	cd bf       	out	0x3d, r28	; 61
    16e0:	7c 01       	movw	r14, r24
    16e2:	6b 01       	movw	r12, r22
    16e4:	8a 01       	movw	r16, r20
    16e6:	fc 01       	movw	r30, r24
    16e8:	17 82       	std	Z+7, r1	; 0x07
    16ea:	16 82       	std	Z+6, r1	; 0x06
    16ec:	83 81       	ldd	r24, Z+3	; 0x03
    16ee:	81 ff       	sbrs	r24, 1
    16f0:	c6 c1       	rjmp	.+908    	; 0x1a7e <vfprintf+0x3d2>
    16f2:	88 24       	eor	r8, r8
    16f4:	83 94       	inc	r8
    16f6:	91 2c       	mov	r9, r1
    16f8:	8c 0e       	add	r8, r28
    16fa:	9d 1e       	adc	r9, r29
    16fc:	f7 01       	movw	r30, r14
    16fe:	93 81       	ldd	r25, Z+3	; 0x03
    1700:	f6 01       	movw	r30, r12
    1702:	93 fd       	sbrc	r25, 3
    1704:	85 91       	lpm	r24, Z+
    1706:	93 ff       	sbrs	r25, 3
    1708:	81 91       	ld	r24, Z+
    170a:	6f 01       	movw	r12, r30
    170c:	88 23       	and	r24, r24
    170e:	09 f4       	brne	.+2      	; 0x1712 <vfprintf+0x66>
    1710:	b2 c1       	rjmp	.+868    	; 0x1a76 <vfprintf+0x3ca>
    1712:	85 32       	cpi	r24, 0x25	; 37
    1714:	39 f4       	brne	.+14     	; 0x1724 <vfprintf+0x78>
    1716:	93 fd       	sbrc	r25, 3
    1718:	85 91       	lpm	r24, Z+
    171a:	93 ff       	sbrs	r25, 3
    171c:	81 91       	ld	r24, Z+
    171e:	6f 01       	movw	r12, r30
    1720:	85 32       	cpi	r24, 0x25	; 37
    1722:	29 f4       	brne	.+10     	; 0x172e <vfprintf+0x82>
    1724:	b7 01       	movw	r22, r14
    1726:	90 e0       	ldi	r25, 0x00	; 0
    1728:	0e 94 71 0d 	call	0x1ae2	; 0x1ae2 <fputc>
    172c:	e7 cf       	rjmp	.-50     	; 0x16fc <vfprintf+0x50>
    172e:	51 2c       	mov	r5, r1
    1730:	31 2c       	mov	r3, r1
    1732:	20 e0       	ldi	r18, 0x00	; 0
    1734:	20 32       	cpi	r18, 0x20	; 32
    1736:	a8 f4       	brcc	.+42     	; 0x1762 <vfprintf+0xb6>
    1738:	8b 32       	cpi	r24, 0x2B	; 43
    173a:	61 f0       	breq	.+24     	; 0x1754 <vfprintf+0xa8>
    173c:	28 f4       	brcc	.+10     	; 0x1748 <vfprintf+0x9c>
    173e:	80 32       	cpi	r24, 0x20	; 32
    1740:	51 f0       	breq	.+20     	; 0x1756 <vfprintf+0xaa>
    1742:	83 32       	cpi	r24, 0x23	; 35
    1744:	71 f4       	brne	.+28     	; 0x1762 <vfprintf+0xb6>
    1746:	0b c0       	rjmp	.+22     	; 0x175e <vfprintf+0xb2>
    1748:	8d 32       	cpi	r24, 0x2D	; 45
    174a:	39 f0       	breq	.+14     	; 0x175a <vfprintf+0xae>
    174c:	80 33       	cpi	r24, 0x30	; 48
    174e:	49 f4       	brne	.+18     	; 0x1762 <vfprintf+0xb6>
    1750:	21 60       	ori	r18, 0x01	; 1
    1752:	28 c0       	rjmp	.+80     	; 0x17a4 <vfprintf+0xf8>
    1754:	22 60       	ori	r18, 0x02	; 2
    1756:	24 60       	ori	r18, 0x04	; 4
    1758:	25 c0       	rjmp	.+74     	; 0x17a4 <vfprintf+0xf8>
    175a:	28 60       	ori	r18, 0x08	; 8
    175c:	23 c0       	rjmp	.+70     	; 0x17a4 <vfprintf+0xf8>
    175e:	20 61       	ori	r18, 0x10	; 16
    1760:	21 c0       	rjmp	.+66     	; 0x17a4 <vfprintf+0xf8>
    1762:	27 fd       	sbrc	r18, 7
    1764:	27 c0       	rjmp	.+78     	; 0x17b4 <vfprintf+0x108>
    1766:	38 2f       	mov	r19, r24
    1768:	30 53       	subi	r19, 0x30	; 48
    176a:	3a 30       	cpi	r19, 0x0A	; 10
    176c:	78 f4       	brcc	.+30     	; 0x178c <vfprintf+0xe0>
    176e:	26 ff       	sbrs	r18, 6
    1770:	06 c0       	rjmp	.+12     	; 0x177e <vfprintf+0xd2>
    1772:	fa e0       	ldi	r31, 0x0A	; 10
    1774:	5f 9e       	mul	r5, r31
    1776:	30 0d       	add	r19, r0
    1778:	11 24       	eor	r1, r1
    177a:	53 2e       	mov	r5, r19
    177c:	13 c0       	rjmp	.+38     	; 0x17a4 <vfprintf+0xf8>
    177e:	8a e0       	ldi	r24, 0x0A	; 10
    1780:	38 9e       	mul	r3, r24
    1782:	30 0d       	add	r19, r0
    1784:	11 24       	eor	r1, r1
    1786:	33 2e       	mov	r3, r19
    1788:	20 62       	ori	r18, 0x20	; 32
    178a:	0c c0       	rjmp	.+24     	; 0x17a4 <vfprintf+0xf8>
    178c:	8e 32       	cpi	r24, 0x2E	; 46
    178e:	21 f4       	brne	.+8      	; 0x1798 <vfprintf+0xec>
    1790:	26 fd       	sbrc	r18, 6
    1792:	71 c1       	rjmp	.+738    	; 0x1a76 <vfprintf+0x3ca>
    1794:	20 64       	ori	r18, 0x40	; 64
    1796:	06 c0       	rjmp	.+12     	; 0x17a4 <vfprintf+0xf8>
    1798:	8c 36       	cpi	r24, 0x6C	; 108
    179a:	11 f4       	brne	.+4      	; 0x17a0 <vfprintf+0xf4>
    179c:	20 68       	ori	r18, 0x80	; 128
    179e:	02 c0       	rjmp	.+4      	; 0x17a4 <vfprintf+0xf8>
    17a0:	88 36       	cpi	r24, 0x68	; 104
    17a2:	41 f4       	brne	.+16     	; 0x17b4 <vfprintf+0x108>
    17a4:	f6 01       	movw	r30, r12
    17a6:	93 fd       	sbrc	r25, 3
    17a8:	85 91       	lpm	r24, Z+
    17aa:	93 ff       	sbrs	r25, 3
    17ac:	81 91       	ld	r24, Z+
    17ae:	6f 01       	movw	r12, r30
    17b0:	81 11       	cpse	r24, r1
    17b2:	c0 cf       	rjmp	.-128    	; 0x1734 <vfprintf+0x88>
    17b4:	98 2f       	mov	r25, r24
    17b6:	95 54       	subi	r25, 0x45	; 69
    17b8:	93 30       	cpi	r25, 0x03	; 3
    17ba:	18 f0       	brcs	.+6      	; 0x17c2 <vfprintf+0x116>
    17bc:	90 52       	subi	r25, 0x20	; 32
    17be:	93 30       	cpi	r25, 0x03	; 3
    17c0:	28 f4       	brcc	.+10     	; 0x17cc <vfprintf+0x120>
    17c2:	0c 5f       	subi	r16, 0xFC	; 252
    17c4:	1f 4f       	sbci	r17, 0xFF	; 255
    17c6:	ff e3       	ldi	r31, 0x3F	; 63
    17c8:	f9 83       	std	Y+1, r31	; 0x01
    17ca:	0d c0       	rjmp	.+26     	; 0x17e6 <vfprintf+0x13a>
    17cc:	83 36       	cpi	r24, 0x63	; 99
    17ce:	31 f0       	breq	.+12     	; 0x17dc <vfprintf+0x130>
    17d0:	83 37       	cpi	r24, 0x73	; 115
    17d2:	71 f0       	breq	.+28     	; 0x17f0 <vfprintf+0x144>
    17d4:	83 35       	cpi	r24, 0x53	; 83
    17d6:	09 f0       	breq	.+2      	; 0x17da <vfprintf+0x12e>
    17d8:	5e c0       	rjmp	.+188    	; 0x1896 <vfprintf+0x1ea>
    17da:	23 c0       	rjmp	.+70     	; 0x1822 <vfprintf+0x176>
    17dc:	f8 01       	movw	r30, r16
    17de:	80 81       	ld	r24, Z
    17e0:	89 83       	std	Y+1, r24	; 0x01
    17e2:	0e 5f       	subi	r16, 0xFE	; 254
    17e4:	1f 4f       	sbci	r17, 0xFF	; 255
    17e6:	44 24       	eor	r4, r4
    17e8:	43 94       	inc	r4
    17ea:	51 2c       	mov	r5, r1
    17ec:	54 01       	movw	r10, r8
    17ee:	15 c0       	rjmp	.+42     	; 0x181a <vfprintf+0x16e>
    17f0:	38 01       	movw	r6, r16
    17f2:	f2 e0       	ldi	r31, 0x02	; 2
    17f4:	6f 0e       	add	r6, r31
    17f6:	71 1c       	adc	r7, r1
    17f8:	f8 01       	movw	r30, r16
    17fa:	a0 80       	ld	r10, Z
    17fc:	b1 80       	ldd	r11, Z+1	; 0x01
    17fe:	26 ff       	sbrs	r18, 6
    1800:	03 c0       	rjmp	.+6      	; 0x1808 <vfprintf+0x15c>
    1802:	65 2d       	mov	r22, r5
    1804:	70 e0       	ldi	r23, 0x00	; 0
    1806:	02 c0       	rjmp	.+4      	; 0x180c <vfprintf+0x160>
    1808:	6f ef       	ldi	r22, 0xFF	; 255
    180a:	7f ef       	ldi	r23, 0xFF	; 255
    180c:	c5 01       	movw	r24, r10
    180e:	2c 87       	std	Y+12, r18	; 0x0c
    1810:	0e 94 66 0d 	call	0x1acc	; 0x1acc <strnlen>
    1814:	2c 01       	movw	r4, r24
    1816:	83 01       	movw	r16, r6
    1818:	2c 85       	ldd	r18, Y+12	; 0x0c
    181a:	6f e7       	ldi	r22, 0x7F	; 127
    181c:	26 2e       	mov	r2, r22
    181e:	22 22       	and	r2, r18
    1820:	18 c0       	rjmp	.+48     	; 0x1852 <vfprintf+0x1a6>
    1822:	38 01       	movw	r6, r16
    1824:	f2 e0       	ldi	r31, 0x02	; 2
    1826:	6f 0e       	add	r6, r31
    1828:	71 1c       	adc	r7, r1
    182a:	f8 01       	movw	r30, r16
    182c:	a0 80       	ld	r10, Z
    182e:	b1 80       	ldd	r11, Z+1	; 0x01
    1830:	26 ff       	sbrs	r18, 6
    1832:	03 c0       	rjmp	.+6      	; 0x183a <vfprintf+0x18e>
    1834:	65 2d       	mov	r22, r5
    1836:	70 e0       	ldi	r23, 0x00	; 0
    1838:	02 c0       	rjmp	.+4      	; 0x183e <vfprintf+0x192>
    183a:	6f ef       	ldi	r22, 0xFF	; 255
    183c:	7f ef       	ldi	r23, 0xFF	; 255
    183e:	c5 01       	movw	r24, r10
    1840:	2c 87       	std	Y+12, r18	; 0x0c
    1842:	0e 94 5b 0d 	call	0x1ab6	; 0x1ab6 <strnlen_P>
    1846:	2c 01       	movw	r4, r24
    1848:	2c 85       	ldd	r18, Y+12	; 0x0c
    184a:	50 e8       	ldi	r21, 0x80	; 128
    184c:	25 2e       	mov	r2, r21
    184e:	22 2a       	or	r2, r18
    1850:	83 01       	movw	r16, r6
    1852:	23 fc       	sbrc	r2, 3
    1854:	1c c0       	rjmp	.+56     	; 0x188e <vfprintf+0x1e2>
    1856:	06 c0       	rjmp	.+12     	; 0x1864 <vfprintf+0x1b8>
    1858:	b7 01       	movw	r22, r14
    185a:	80 e2       	ldi	r24, 0x20	; 32
    185c:	90 e0       	ldi	r25, 0x00	; 0
    185e:	0e 94 71 0d 	call	0x1ae2	; 0x1ae2 <fputc>
    1862:	3a 94       	dec	r3
    1864:	83 2d       	mov	r24, r3
    1866:	90 e0       	ldi	r25, 0x00	; 0
    1868:	48 16       	cp	r4, r24
    186a:	59 06       	cpc	r5, r25
    186c:	a8 f3       	brcs	.-22     	; 0x1858 <vfprintf+0x1ac>
    186e:	0f c0       	rjmp	.+30     	; 0x188e <vfprintf+0x1e2>
    1870:	f5 01       	movw	r30, r10
    1872:	27 fc       	sbrc	r2, 7
    1874:	85 91       	lpm	r24, Z+
    1876:	27 fe       	sbrs	r2, 7
    1878:	81 91       	ld	r24, Z+
    187a:	5f 01       	movw	r10, r30
    187c:	b7 01       	movw	r22, r14
    187e:	90 e0       	ldi	r25, 0x00	; 0
    1880:	0e 94 71 0d 	call	0x1ae2	; 0x1ae2 <fputc>
    1884:	31 10       	cpse	r3, r1
    1886:	3a 94       	dec	r3
    1888:	f1 e0       	ldi	r31, 0x01	; 1
    188a:	4f 1a       	sub	r4, r31
    188c:	51 08       	sbc	r5, r1
    188e:	41 14       	cp	r4, r1
    1890:	51 04       	cpc	r5, r1
    1892:	71 f7       	brne	.-36     	; 0x1870 <vfprintf+0x1c4>
    1894:	ed c0       	rjmp	.+474    	; 0x1a70 <vfprintf+0x3c4>
    1896:	84 36       	cpi	r24, 0x64	; 100
    1898:	11 f0       	breq	.+4      	; 0x189e <vfprintf+0x1f2>
    189a:	89 36       	cpi	r24, 0x69	; 105
    189c:	41 f5       	brne	.+80     	; 0x18ee <vfprintf+0x242>
    189e:	f8 01       	movw	r30, r16
    18a0:	27 ff       	sbrs	r18, 7
    18a2:	07 c0       	rjmp	.+14     	; 0x18b2 <vfprintf+0x206>
    18a4:	60 81       	ld	r22, Z
    18a6:	71 81       	ldd	r23, Z+1	; 0x01
    18a8:	82 81       	ldd	r24, Z+2	; 0x02
    18aa:	93 81       	ldd	r25, Z+3	; 0x03
    18ac:	0c 5f       	subi	r16, 0xFC	; 252
    18ae:	1f 4f       	sbci	r17, 0xFF	; 255
    18b0:	08 c0       	rjmp	.+16     	; 0x18c2 <vfprintf+0x216>
    18b2:	60 81       	ld	r22, Z
    18b4:	71 81       	ldd	r23, Z+1	; 0x01
    18b6:	88 27       	eor	r24, r24
    18b8:	77 fd       	sbrc	r23, 7
    18ba:	80 95       	com	r24
    18bc:	98 2f       	mov	r25, r24
    18be:	0e 5f       	subi	r16, 0xFE	; 254
    18c0:	1f 4f       	sbci	r17, 0xFF	; 255
    18c2:	4f e6       	ldi	r20, 0x6F	; 111
    18c4:	b4 2e       	mov	r11, r20
    18c6:	b2 22       	and	r11, r18
    18c8:	97 ff       	sbrs	r25, 7
    18ca:	09 c0       	rjmp	.+18     	; 0x18de <vfprintf+0x232>
    18cc:	90 95       	com	r25
    18ce:	80 95       	com	r24
    18d0:	70 95       	com	r23
    18d2:	61 95       	neg	r22
    18d4:	7f 4f       	sbci	r23, 0xFF	; 255
    18d6:	8f 4f       	sbci	r24, 0xFF	; 255
    18d8:	9f 4f       	sbci	r25, 0xFF	; 255
    18da:	f0 e8       	ldi	r31, 0x80	; 128
    18dc:	bf 2a       	or	r11, r31
    18de:	2a e0       	ldi	r18, 0x0A	; 10
    18e0:	30 e0       	ldi	r19, 0x00	; 0
    18e2:	a4 01       	movw	r20, r8
    18e4:	0e 94 9d 0d 	call	0x1b3a	; 0x1b3a <__ultoa_invert>
    18e8:	a8 2e       	mov	r10, r24
    18ea:	a8 18       	sub	r10, r8
    18ec:	43 c0       	rjmp	.+134    	; 0x1974 <vfprintf+0x2c8>
    18ee:	85 37       	cpi	r24, 0x75	; 117
    18f0:	31 f4       	brne	.+12     	; 0x18fe <vfprintf+0x252>
    18f2:	3f ee       	ldi	r19, 0xEF	; 239
    18f4:	b3 2e       	mov	r11, r19
    18f6:	b2 22       	and	r11, r18
    18f8:	2a e0       	ldi	r18, 0x0A	; 10
    18fa:	30 e0       	ldi	r19, 0x00	; 0
    18fc:	24 c0       	rjmp	.+72     	; 0x1946 <vfprintf+0x29a>
    18fe:	99 ef       	ldi	r25, 0xF9	; 249
    1900:	b9 2e       	mov	r11, r25
    1902:	b2 22       	and	r11, r18
    1904:	8f 36       	cpi	r24, 0x6F	; 111
    1906:	b9 f0       	breq	.+46     	; 0x1936 <vfprintf+0x28a>
    1908:	20 f4       	brcc	.+8      	; 0x1912 <vfprintf+0x266>
    190a:	88 35       	cpi	r24, 0x58	; 88
    190c:	09 f0       	breq	.+2      	; 0x1910 <vfprintf+0x264>
    190e:	b3 c0       	rjmp	.+358    	; 0x1a76 <vfprintf+0x3ca>
    1910:	0d c0       	rjmp	.+26     	; 0x192c <vfprintf+0x280>
    1912:	80 37       	cpi	r24, 0x70	; 112
    1914:	21 f0       	breq	.+8      	; 0x191e <vfprintf+0x272>
    1916:	88 37       	cpi	r24, 0x78	; 120
    1918:	09 f0       	breq	.+2      	; 0x191c <vfprintf+0x270>
    191a:	ad c0       	rjmp	.+346    	; 0x1a76 <vfprintf+0x3ca>
    191c:	02 c0       	rjmp	.+4      	; 0x1922 <vfprintf+0x276>
    191e:	20 e1       	ldi	r18, 0x10	; 16
    1920:	b2 2a       	or	r11, r18
    1922:	b4 fe       	sbrs	r11, 4
    1924:	0b c0       	rjmp	.+22     	; 0x193c <vfprintf+0x290>
    1926:	84 e0       	ldi	r24, 0x04	; 4
    1928:	b8 2a       	or	r11, r24
    192a:	08 c0       	rjmp	.+16     	; 0x193c <vfprintf+0x290>
    192c:	24 ff       	sbrs	r18, 4
    192e:	09 c0       	rjmp	.+18     	; 0x1942 <vfprintf+0x296>
    1930:	e6 e0       	ldi	r30, 0x06	; 6
    1932:	be 2a       	or	r11, r30
    1934:	06 c0       	rjmp	.+12     	; 0x1942 <vfprintf+0x296>
    1936:	28 e0       	ldi	r18, 0x08	; 8
    1938:	30 e0       	ldi	r19, 0x00	; 0
    193a:	05 c0       	rjmp	.+10     	; 0x1946 <vfprintf+0x29a>
    193c:	20 e1       	ldi	r18, 0x10	; 16
    193e:	30 e0       	ldi	r19, 0x00	; 0
    1940:	02 c0       	rjmp	.+4      	; 0x1946 <vfprintf+0x29a>
    1942:	20 e1       	ldi	r18, 0x10	; 16
    1944:	32 e0       	ldi	r19, 0x02	; 2
    1946:	f8 01       	movw	r30, r16
    1948:	b7 fe       	sbrs	r11, 7
    194a:	07 c0       	rjmp	.+14     	; 0x195a <vfprintf+0x2ae>
    194c:	60 81       	ld	r22, Z
    194e:	71 81       	ldd	r23, Z+1	; 0x01
    1950:	82 81       	ldd	r24, Z+2	; 0x02
    1952:	93 81       	ldd	r25, Z+3	; 0x03
    1954:	0c 5f       	subi	r16, 0xFC	; 252
    1956:	1f 4f       	sbci	r17, 0xFF	; 255
    1958:	06 c0       	rjmp	.+12     	; 0x1966 <vfprintf+0x2ba>
    195a:	60 81       	ld	r22, Z
    195c:	71 81       	ldd	r23, Z+1	; 0x01
    195e:	80 e0       	ldi	r24, 0x00	; 0
    1960:	90 e0       	ldi	r25, 0x00	; 0
    1962:	0e 5f       	subi	r16, 0xFE	; 254
    1964:	1f 4f       	sbci	r17, 0xFF	; 255
    1966:	a4 01       	movw	r20, r8
    1968:	0e 94 9d 0d 	call	0x1b3a	; 0x1b3a <__ultoa_invert>
    196c:	a8 2e       	mov	r10, r24
    196e:	a8 18       	sub	r10, r8
    1970:	ff e7       	ldi	r31, 0x7F	; 127
    1972:	bf 22       	and	r11, r31
    1974:	b6 fe       	sbrs	r11, 6
    1976:	0b c0       	rjmp	.+22     	; 0x198e <vfprintf+0x2e2>
    1978:	2b 2d       	mov	r18, r11
    197a:	2e 7f       	andi	r18, 0xFE	; 254
    197c:	a5 14       	cp	r10, r5
    197e:	50 f4       	brcc	.+20     	; 0x1994 <vfprintf+0x2e8>
    1980:	b4 fe       	sbrs	r11, 4
    1982:	0a c0       	rjmp	.+20     	; 0x1998 <vfprintf+0x2ec>
    1984:	b2 fc       	sbrc	r11, 2
    1986:	08 c0       	rjmp	.+16     	; 0x1998 <vfprintf+0x2ec>
    1988:	2b 2d       	mov	r18, r11
    198a:	2e 7e       	andi	r18, 0xEE	; 238
    198c:	05 c0       	rjmp	.+10     	; 0x1998 <vfprintf+0x2ec>
    198e:	7a 2c       	mov	r7, r10
    1990:	2b 2d       	mov	r18, r11
    1992:	03 c0       	rjmp	.+6      	; 0x199a <vfprintf+0x2ee>
    1994:	7a 2c       	mov	r7, r10
    1996:	01 c0       	rjmp	.+2      	; 0x199a <vfprintf+0x2ee>
    1998:	75 2c       	mov	r7, r5
    199a:	24 ff       	sbrs	r18, 4
    199c:	0d c0       	rjmp	.+26     	; 0x19b8 <vfprintf+0x30c>
    199e:	fe 01       	movw	r30, r28
    19a0:	ea 0d       	add	r30, r10
    19a2:	f1 1d       	adc	r31, r1
    19a4:	80 81       	ld	r24, Z
    19a6:	80 33       	cpi	r24, 0x30	; 48
    19a8:	11 f4       	brne	.+4      	; 0x19ae <vfprintf+0x302>
    19aa:	29 7e       	andi	r18, 0xE9	; 233
    19ac:	09 c0       	rjmp	.+18     	; 0x19c0 <vfprintf+0x314>
    19ae:	22 ff       	sbrs	r18, 2
    19b0:	06 c0       	rjmp	.+12     	; 0x19be <vfprintf+0x312>
    19b2:	73 94       	inc	r7
    19b4:	73 94       	inc	r7
    19b6:	04 c0       	rjmp	.+8      	; 0x19c0 <vfprintf+0x314>
    19b8:	82 2f       	mov	r24, r18
    19ba:	86 78       	andi	r24, 0x86	; 134
    19bc:	09 f0       	breq	.+2      	; 0x19c0 <vfprintf+0x314>
    19be:	73 94       	inc	r7
    19c0:	23 fd       	sbrc	r18, 3
    19c2:	14 c0       	rjmp	.+40     	; 0x19ec <vfprintf+0x340>
    19c4:	20 ff       	sbrs	r18, 0
    19c6:	0f c0       	rjmp	.+30     	; 0x19e6 <vfprintf+0x33a>
    19c8:	5a 2c       	mov	r5, r10
    19ca:	73 14       	cp	r7, r3
    19cc:	60 f4       	brcc	.+24     	; 0x19e6 <vfprintf+0x33a>
    19ce:	53 0c       	add	r5, r3
    19d0:	57 18       	sub	r5, r7
    19d2:	73 2c       	mov	r7, r3
    19d4:	08 c0       	rjmp	.+16     	; 0x19e6 <vfprintf+0x33a>
    19d6:	b7 01       	movw	r22, r14
    19d8:	80 e2       	ldi	r24, 0x20	; 32
    19da:	90 e0       	ldi	r25, 0x00	; 0
    19dc:	2c 87       	std	Y+12, r18	; 0x0c
    19de:	0e 94 71 0d 	call	0x1ae2	; 0x1ae2 <fputc>
    19e2:	73 94       	inc	r7
    19e4:	2c 85       	ldd	r18, Y+12	; 0x0c
    19e6:	73 14       	cp	r7, r3
    19e8:	b0 f3       	brcs	.-20     	; 0x19d6 <vfprintf+0x32a>
    19ea:	04 c0       	rjmp	.+8      	; 0x19f4 <vfprintf+0x348>
    19ec:	73 14       	cp	r7, r3
    19ee:	10 f4       	brcc	.+4      	; 0x19f4 <vfprintf+0x348>
    19f0:	37 18       	sub	r3, r7
    19f2:	01 c0       	rjmp	.+2      	; 0x19f6 <vfprintf+0x34a>
    19f4:	31 2c       	mov	r3, r1
    19f6:	24 ff       	sbrs	r18, 4
    19f8:	12 c0       	rjmp	.+36     	; 0x1a1e <vfprintf+0x372>
    19fa:	b7 01       	movw	r22, r14
    19fc:	80 e3       	ldi	r24, 0x30	; 48
    19fe:	90 e0       	ldi	r25, 0x00	; 0
    1a00:	2c 87       	std	Y+12, r18	; 0x0c
    1a02:	0e 94 71 0d 	call	0x1ae2	; 0x1ae2 <fputc>
    1a06:	2c 85       	ldd	r18, Y+12	; 0x0c
    1a08:	22 ff       	sbrs	r18, 2
    1a0a:	1e c0       	rjmp	.+60     	; 0x1a48 <vfprintf+0x39c>
    1a0c:	21 ff       	sbrs	r18, 1
    1a0e:	03 c0       	rjmp	.+6      	; 0x1a16 <vfprintf+0x36a>
    1a10:	88 e5       	ldi	r24, 0x58	; 88
    1a12:	90 e0       	ldi	r25, 0x00	; 0
    1a14:	02 c0       	rjmp	.+4      	; 0x1a1a <vfprintf+0x36e>
    1a16:	88 e7       	ldi	r24, 0x78	; 120
    1a18:	90 e0       	ldi	r25, 0x00	; 0
    1a1a:	b7 01       	movw	r22, r14
    1a1c:	0c c0       	rjmp	.+24     	; 0x1a36 <vfprintf+0x38a>
    1a1e:	82 2f       	mov	r24, r18
    1a20:	86 78       	andi	r24, 0x86	; 134
    1a22:	91 f0       	breq	.+36     	; 0x1a48 <vfprintf+0x39c>
    1a24:	21 fd       	sbrc	r18, 1
    1a26:	02 c0       	rjmp	.+4      	; 0x1a2c <vfprintf+0x380>
    1a28:	80 e2       	ldi	r24, 0x20	; 32
    1a2a:	01 c0       	rjmp	.+2      	; 0x1a2e <vfprintf+0x382>
    1a2c:	8b e2       	ldi	r24, 0x2B	; 43
    1a2e:	27 fd       	sbrc	r18, 7
    1a30:	8d e2       	ldi	r24, 0x2D	; 45
    1a32:	b7 01       	movw	r22, r14
    1a34:	90 e0       	ldi	r25, 0x00	; 0
    1a36:	0e 94 71 0d 	call	0x1ae2	; 0x1ae2 <fputc>
    1a3a:	06 c0       	rjmp	.+12     	; 0x1a48 <vfprintf+0x39c>
    1a3c:	b7 01       	movw	r22, r14
    1a3e:	80 e3       	ldi	r24, 0x30	; 48
    1a40:	90 e0       	ldi	r25, 0x00	; 0
    1a42:	0e 94 71 0d 	call	0x1ae2	; 0x1ae2 <fputc>
    1a46:	5a 94       	dec	r5
    1a48:	a5 14       	cp	r10, r5
    1a4a:	c0 f3       	brcs	.-16     	; 0x1a3c <vfprintf+0x390>
    1a4c:	aa 94       	dec	r10
    1a4e:	f4 01       	movw	r30, r8
    1a50:	ea 0d       	add	r30, r10
    1a52:	f1 1d       	adc	r31, r1
    1a54:	b7 01       	movw	r22, r14
    1a56:	80 81       	ld	r24, Z
    1a58:	90 e0       	ldi	r25, 0x00	; 0
    1a5a:	0e 94 71 0d 	call	0x1ae2	; 0x1ae2 <fputc>
    1a5e:	a1 10       	cpse	r10, r1
    1a60:	f5 cf       	rjmp	.-22     	; 0x1a4c <vfprintf+0x3a0>
    1a62:	06 c0       	rjmp	.+12     	; 0x1a70 <vfprintf+0x3c4>
    1a64:	b7 01       	movw	r22, r14
    1a66:	80 e2       	ldi	r24, 0x20	; 32
    1a68:	90 e0       	ldi	r25, 0x00	; 0
    1a6a:	0e 94 71 0d 	call	0x1ae2	; 0x1ae2 <fputc>
    1a6e:	3a 94       	dec	r3
    1a70:	31 10       	cpse	r3, r1
    1a72:	f8 cf       	rjmp	.-16     	; 0x1a64 <vfprintf+0x3b8>
    1a74:	43 ce       	rjmp	.-890    	; 0x16fc <vfprintf+0x50>
    1a76:	f7 01       	movw	r30, r14
    1a78:	26 81       	ldd	r18, Z+6	; 0x06
    1a7a:	37 81       	ldd	r19, Z+7	; 0x07
    1a7c:	02 c0       	rjmp	.+4      	; 0x1a82 <vfprintf+0x3d6>
    1a7e:	2f ef       	ldi	r18, 0xFF	; 255
    1a80:	3f ef       	ldi	r19, 0xFF	; 255
    1a82:	c9 01       	movw	r24, r18
    1a84:	2c 96       	adiw	r28, 0x0c	; 12
    1a86:	0f b6       	in	r0, 0x3f	; 63
    1a88:	f8 94       	cli
    1a8a:	de bf       	out	0x3e, r29	; 62
    1a8c:	0f be       	out	0x3f, r0	; 63
    1a8e:	cd bf       	out	0x3d, r28	; 61
    1a90:	df 91       	pop	r29
    1a92:	cf 91       	pop	r28
    1a94:	1f 91       	pop	r17
    1a96:	0f 91       	pop	r16
    1a98:	ff 90       	pop	r15
    1a9a:	ef 90       	pop	r14
    1a9c:	df 90       	pop	r13
    1a9e:	cf 90       	pop	r12
    1aa0:	bf 90       	pop	r11
    1aa2:	af 90       	pop	r10
    1aa4:	9f 90       	pop	r9
    1aa6:	8f 90       	pop	r8
    1aa8:	7f 90       	pop	r7
    1aaa:	6f 90       	pop	r6
    1aac:	5f 90       	pop	r5
    1aae:	4f 90       	pop	r4
    1ab0:	3f 90       	pop	r3
    1ab2:	2f 90       	pop	r2
    1ab4:	08 95       	ret

00001ab6 <strnlen_P>:
    1ab6:	fc 01       	movw	r30, r24
    1ab8:	05 90       	lpm	r0, Z+
    1aba:	61 50       	subi	r22, 0x01	; 1
    1abc:	70 40       	sbci	r23, 0x00	; 0
    1abe:	01 10       	cpse	r0, r1
    1ac0:	d8 f7       	brcc	.-10     	; 0x1ab8 <strnlen_P+0x2>
    1ac2:	80 95       	com	r24
    1ac4:	90 95       	com	r25
    1ac6:	8e 0f       	add	r24, r30
    1ac8:	9f 1f       	adc	r25, r31
    1aca:	08 95       	ret

00001acc <strnlen>:
    1acc:	fc 01       	movw	r30, r24
    1ace:	61 50       	subi	r22, 0x01	; 1
    1ad0:	70 40       	sbci	r23, 0x00	; 0
    1ad2:	01 90       	ld	r0, Z+
    1ad4:	01 10       	cpse	r0, r1
    1ad6:	d8 f7       	brcc	.-10     	; 0x1ace <strnlen+0x2>
    1ad8:	80 95       	com	r24
    1ada:	90 95       	com	r25
    1adc:	8e 0f       	add	r24, r30
    1ade:	9f 1f       	adc	r25, r31
    1ae0:	08 95       	ret

00001ae2 <fputc>:
    1ae2:	0f 93       	push	r16
    1ae4:	1f 93       	push	r17
    1ae6:	cf 93       	push	r28
    1ae8:	df 93       	push	r29
    1aea:	8c 01       	movw	r16, r24
    1aec:	eb 01       	movw	r28, r22
    1aee:	8b 81       	ldd	r24, Y+3	; 0x03
    1af0:	81 fd       	sbrc	r24, 1
    1af2:	03 c0       	rjmp	.+6      	; 0x1afa <fputc+0x18>
    1af4:	0f ef       	ldi	r16, 0xFF	; 255
    1af6:	1f ef       	ldi	r17, 0xFF	; 255
    1af8:	1a c0       	rjmp	.+52     	; 0x1b2e <fputc+0x4c>
    1afa:	82 ff       	sbrs	r24, 2
    1afc:	0d c0       	rjmp	.+26     	; 0x1b18 <fputc+0x36>
    1afe:	2e 81       	ldd	r18, Y+6	; 0x06
    1b00:	3f 81       	ldd	r19, Y+7	; 0x07
    1b02:	8c 81       	ldd	r24, Y+4	; 0x04
    1b04:	9d 81       	ldd	r25, Y+5	; 0x05
    1b06:	28 17       	cp	r18, r24
    1b08:	39 07       	cpc	r19, r25
    1b0a:	64 f4       	brge	.+24     	; 0x1b24 <fputc+0x42>
    1b0c:	e8 81       	ld	r30, Y
    1b0e:	f9 81       	ldd	r31, Y+1	; 0x01
    1b10:	01 93       	st	Z+, r16
    1b12:	f9 83       	std	Y+1, r31	; 0x01
    1b14:	e8 83       	st	Y, r30
    1b16:	06 c0       	rjmp	.+12     	; 0x1b24 <fputc+0x42>
    1b18:	e8 85       	ldd	r30, Y+8	; 0x08
    1b1a:	f9 85       	ldd	r31, Y+9	; 0x09
    1b1c:	80 2f       	mov	r24, r16
    1b1e:	09 95       	icall
    1b20:	89 2b       	or	r24, r25
    1b22:	41 f7       	brne	.-48     	; 0x1af4 <fputc+0x12>
    1b24:	8e 81       	ldd	r24, Y+6	; 0x06
    1b26:	9f 81       	ldd	r25, Y+7	; 0x07
    1b28:	01 96       	adiw	r24, 0x01	; 1
    1b2a:	9f 83       	std	Y+7, r25	; 0x07
    1b2c:	8e 83       	std	Y+6, r24	; 0x06
    1b2e:	c8 01       	movw	r24, r16
    1b30:	df 91       	pop	r29
    1b32:	cf 91       	pop	r28
    1b34:	1f 91       	pop	r17
    1b36:	0f 91       	pop	r16
    1b38:	08 95       	ret

00001b3a <__ultoa_invert>:
    1b3a:	fa 01       	movw	r30, r20
    1b3c:	aa 27       	eor	r26, r26
    1b3e:	28 30       	cpi	r18, 0x08	; 8
    1b40:	51 f1       	breq	.+84     	; 0x1b96 <__ultoa_invert+0x5c>
    1b42:	20 31       	cpi	r18, 0x10	; 16
    1b44:	81 f1       	breq	.+96     	; 0x1ba6 <__ultoa_invert+0x6c>
    1b46:	e8 94       	clt
    1b48:	6f 93       	push	r22
    1b4a:	6e 7f       	andi	r22, 0xFE	; 254
    1b4c:	6e 5f       	subi	r22, 0xFE	; 254
    1b4e:	7f 4f       	sbci	r23, 0xFF	; 255
    1b50:	8f 4f       	sbci	r24, 0xFF	; 255
    1b52:	9f 4f       	sbci	r25, 0xFF	; 255
    1b54:	af 4f       	sbci	r26, 0xFF	; 255
    1b56:	b1 e0       	ldi	r27, 0x01	; 1
    1b58:	3e d0       	rcall	.+124    	; 0x1bd6 <__ultoa_invert+0x9c>
    1b5a:	b4 e0       	ldi	r27, 0x04	; 4
    1b5c:	3c d0       	rcall	.+120    	; 0x1bd6 <__ultoa_invert+0x9c>
    1b5e:	67 0f       	add	r22, r23
    1b60:	78 1f       	adc	r23, r24
    1b62:	89 1f       	adc	r24, r25
    1b64:	9a 1f       	adc	r25, r26
    1b66:	a1 1d       	adc	r26, r1
    1b68:	68 0f       	add	r22, r24
    1b6a:	79 1f       	adc	r23, r25
    1b6c:	8a 1f       	adc	r24, r26
    1b6e:	91 1d       	adc	r25, r1
    1b70:	a1 1d       	adc	r26, r1
    1b72:	6a 0f       	add	r22, r26
    1b74:	71 1d       	adc	r23, r1
    1b76:	81 1d       	adc	r24, r1
    1b78:	91 1d       	adc	r25, r1
    1b7a:	a1 1d       	adc	r26, r1
    1b7c:	20 d0       	rcall	.+64     	; 0x1bbe <__ultoa_invert+0x84>
    1b7e:	09 f4       	brne	.+2      	; 0x1b82 <__ultoa_invert+0x48>
    1b80:	68 94       	set
    1b82:	3f 91       	pop	r19
    1b84:	2a e0       	ldi	r18, 0x0A	; 10
    1b86:	26 9f       	mul	r18, r22
    1b88:	11 24       	eor	r1, r1
    1b8a:	30 19       	sub	r19, r0
    1b8c:	30 5d       	subi	r19, 0xD0	; 208
    1b8e:	31 93       	st	Z+, r19
    1b90:	de f6       	brtc	.-74     	; 0x1b48 <__ultoa_invert+0xe>
    1b92:	cf 01       	movw	r24, r30
    1b94:	08 95       	ret
    1b96:	46 2f       	mov	r20, r22
    1b98:	47 70       	andi	r20, 0x07	; 7
    1b9a:	40 5d       	subi	r20, 0xD0	; 208
    1b9c:	41 93       	st	Z+, r20
    1b9e:	b3 e0       	ldi	r27, 0x03	; 3
    1ba0:	0f d0       	rcall	.+30     	; 0x1bc0 <__ultoa_invert+0x86>
    1ba2:	c9 f7       	brne	.-14     	; 0x1b96 <__ultoa_invert+0x5c>
    1ba4:	f6 cf       	rjmp	.-20     	; 0x1b92 <__ultoa_invert+0x58>
    1ba6:	46 2f       	mov	r20, r22
    1ba8:	4f 70       	andi	r20, 0x0F	; 15
    1baa:	40 5d       	subi	r20, 0xD0	; 208
    1bac:	4a 33       	cpi	r20, 0x3A	; 58
    1bae:	18 f0       	brcs	.+6      	; 0x1bb6 <__ultoa_invert+0x7c>
    1bb0:	49 5d       	subi	r20, 0xD9	; 217
    1bb2:	31 fd       	sbrc	r19, 1
    1bb4:	40 52       	subi	r20, 0x20	; 32
    1bb6:	41 93       	st	Z+, r20
    1bb8:	02 d0       	rcall	.+4      	; 0x1bbe <__ultoa_invert+0x84>
    1bba:	a9 f7       	brne	.-22     	; 0x1ba6 <__ultoa_invert+0x6c>
    1bbc:	ea cf       	rjmp	.-44     	; 0x1b92 <__ultoa_invert+0x58>
    1bbe:	b4 e0       	ldi	r27, 0x04	; 4
    1bc0:	a6 95       	lsr	r26
    1bc2:	97 95       	ror	r25
    1bc4:	87 95       	ror	r24
    1bc6:	77 95       	ror	r23
    1bc8:	67 95       	ror	r22
    1bca:	ba 95       	dec	r27
    1bcc:	c9 f7       	brne	.-14     	; 0x1bc0 <__ultoa_invert+0x86>
    1bce:	00 97       	sbiw	r24, 0x00	; 0
    1bd0:	61 05       	cpc	r22, r1
    1bd2:	71 05       	cpc	r23, r1
    1bd4:	08 95       	ret
    1bd6:	9b 01       	movw	r18, r22
    1bd8:	ac 01       	movw	r20, r24
    1bda:	0a 2e       	mov	r0, r26
    1bdc:	06 94       	lsr	r0
    1bde:	57 95       	ror	r21
    1be0:	47 95       	ror	r20
    1be2:	37 95       	ror	r19
    1be4:	27 95       	ror	r18
    1be6:	ba 95       	dec	r27
    1be8:	c9 f7       	brne	.-14     	; 0x1bdc <__ultoa_invert+0xa2>
    1bea:	62 0f       	add	r22, r18
    1bec:	73 1f       	adc	r23, r19
    1bee:	84 1f       	adc	r24, r20
    1bf0:	95 1f       	adc	r25, r21
    1bf2:	a0 1d       	adc	r26, r0
    1bf4:	08 95       	ret
    1bf6:	ce c0       	rjmp	.+412    	; 0x1d94 <__fp_nan>

00001bf8 <__fp_rempio2>:
    1bf8:	3f d0       	rcall	.+126    	; 0x1c78 <__fp_splitA>
    1bfa:	e8 f3       	brcs	.-6      	; 0x1bf6 <__ultoa_invert+0xbc>
    1bfc:	e8 94       	clt
    1bfe:	e0 e0       	ldi	r30, 0x00	; 0
    1c00:	bb 27       	eor	r27, r27
    1c02:	9f 57       	subi	r25, 0x7F	; 127
    1c04:	f0 f0       	brcs	.+60     	; 0x1c42 <__fp_rempio2+0x4a>
    1c06:	2a ed       	ldi	r18, 0xDA	; 218
    1c08:	3f e0       	ldi	r19, 0x0F	; 15
    1c0a:	49 ec       	ldi	r20, 0xC9	; 201
    1c0c:	06 c0       	rjmp	.+12     	; 0x1c1a <__fp_rempio2+0x22>
    1c0e:	ee 0f       	add	r30, r30
    1c10:	bb 0f       	add	r27, r27
    1c12:	66 1f       	adc	r22, r22
    1c14:	77 1f       	adc	r23, r23
    1c16:	88 1f       	adc	r24, r24
    1c18:	28 f0       	brcs	.+10     	; 0x1c24 <__fp_rempio2+0x2c>
    1c1a:	b2 3a       	cpi	r27, 0xA2	; 162
    1c1c:	62 07       	cpc	r22, r18
    1c1e:	73 07       	cpc	r23, r19
    1c20:	84 07       	cpc	r24, r20
    1c22:	28 f0       	brcs	.+10     	; 0x1c2e <__fp_rempio2+0x36>
    1c24:	b2 5a       	subi	r27, 0xA2	; 162
    1c26:	62 0b       	sbc	r22, r18
    1c28:	73 0b       	sbc	r23, r19
    1c2a:	84 0b       	sbc	r24, r20
    1c2c:	e3 95       	inc	r30
    1c2e:	9a 95       	dec	r25
    1c30:	72 f7       	brpl	.-36     	; 0x1c0e <__fp_rempio2+0x16>
    1c32:	80 38       	cpi	r24, 0x80	; 128
    1c34:	30 f4       	brcc	.+12     	; 0x1c42 <__fp_rempio2+0x4a>
    1c36:	9a 95       	dec	r25
    1c38:	bb 0f       	add	r27, r27
    1c3a:	66 1f       	adc	r22, r22
    1c3c:	77 1f       	adc	r23, r23
    1c3e:	88 1f       	adc	r24, r24
    1c40:	d2 f7       	brpl	.-12     	; 0x1c36 <__fp_rempio2+0x3e>
    1c42:	90 48       	sbci	r25, 0x80	; 128
    1c44:	9b c0       	rjmp	.+310    	; 0x1d7c <__fp_mpack_finite>

00001c46 <__fp_sinus>:
    1c46:	ef 93       	push	r30
    1c48:	e0 ff       	sbrs	r30, 0
    1c4a:	06 c0       	rjmp	.+12     	; 0x1c58 <__fp_sinus+0x12>
    1c4c:	a2 ea       	ldi	r26, 0xA2	; 162
    1c4e:	2a ed       	ldi	r18, 0xDA	; 218
    1c50:	3f e0       	ldi	r19, 0x0F	; 15
    1c52:	49 ec       	ldi	r20, 0xC9	; 201
    1c54:	5f eb       	ldi	r21, 0xBF	; 191
    1c56:	37 d0       	rcall	.+110    	; 0x1cc6 <__addsf3x>
    1c58:	bf d0       	rcall	.+382    	; 0x1dd8 <__fp_round>
    1c5a:	0f 90       	pop	r0
    1c5c:	03 94       	inc	r0
    1c5e:	01 fc       	sbrc	r0, 1
    1c60:	90 58       	subi	r25, 0x80	; 128
    1c62:	ec e8       	ldi	r30, 0x8C	; 140
    1c64:	f0 e0       	ldi	r31, 0x00	; 0
    1c66:	99 c0       	rjmp	.+306    	; 0x1d9a <__fp_powsodd>

00001c68 <__fp_split3>:
    1c68:	57 fd       	sbrc	r21, 7
    1c6a:	90 58       	subi	r25, 0x80	; 128
    1c6c:	44 0f       	add	r20, r20
    1c6e:	55 1f       	adc	r21, r21
    1c70:	59 f0       	breq	.+22     	; 0x1c88 <__fp_splitA+0x10>
    1c72:	5f 3f       	cpi	r21, 0xFF	; 255
    1c74:	71 f0       	breq	.+28     	; 0x1c92 <__fp_splitA+0x1a>
    1c76:	47 95       	ror	r20

00001c78 <__fp_splitA>:
    1c78:	88 0f       	add	r24, r24
    1c7a:	97 fb       	bst	r25, 7
    1c7c:	99 1f       	adc	r25, r25
    1c7e:	61 f0       	breq	.+24     	; 0x1c98 <__fp_splitA+0x20>
    1c80:	9f 3f       	cpi	r25, 0xFF	; 255
    1c82:	79 f0       	breq	.+30     	; 0x1ca2 <__fp_splitA+0x2a>
    1c84:	87 95       	ror	r24
    1c86:	08 95       	ret
    1c88:	12 16       	cp	r1, r18
    1c8a:	13 06       	cpc	r1, r19
    1c8c:	14 06       	cpc	r1, r20
    1c8e:	55 1f       	adc	r21, r21
    1c90:	f2 cf       	rjmp	.-28     	; 0x1c76 <__fp_split3+0xe>
    1c92:	46 95       	lsr	r20
    1c94:	f1 df       	rcall	.-30     	; 0x1c78 <__fp_splitA>
    1c96:	08 c0       	rjmp	.+16     	; 0x1ca8 <__fp_splitA+0x30>
    1c98:	16 16       	cp	r1, r22
    1c9a:	17 06       	cpc	r1, r23
    1c9c:	18 06       	cpc	r1, r24
    1c9e:	99 1f       	adc	r25, r25
    1ca0:	f1 cf       	rjmp	.-30     	; 0x1c84 <__fp_splitA+0xc>
    1ca2:	86 95       	lsr	r24
    1ca4:	71 05       	cpc	r23, r1
    1ca6:	61 05       	cpc	r22, r1
    1ca8:	08 94       	sec
    1caa:	08 95       	ret
    1cac:	87 d0       	rcall	.+270    	; 0x1dbc <__fp_pscA>
    1cae:	30 f0       	brcs	.+12     	; 0x1cbc <__fp_splitA+0x44>
    1cb0:	8c d0       	rcall	.+280    	; 0x1dca <__fp_pscB>
    1cb2:	20 f0       	brcs	.+8      	; 0x1cbc <__fp_splitA+0x44>
    1cb4:	31 f4       	brne	.+12     	; 0x1cc2 <__fp_splitA+0x4a>
    1cb6:	9f 3f       	cpi	r25, 0xFF	; 255
    1cb8:	11 f4       	brne	.+4      	; 0x1cbe <__fp_splitA+0x46>
    1cba:	1e f4       	brtc	.+6      	; 0x1cc2 <__fp_splitA+0x4a>
    1cbc:	6b c0       	rjmp	.+214    	; 0x1d94 <__fp_nan>
    1cbe:	0e f4       	brtc	.+2      	; 0x1cc2 <__fp_splitA+0x4a>
    1cc0:	e0 95       	com	r30
    1cc2:	e7 fb       	bst	r30, 7
    1cc4:	53 c0       	rjmp	.+166    	; 0x1d6c <__fp_inf>

00001cc6 <__addsf3x>:
    1cc6:	e9 2f       	mov	r30, r25
    1cc8:	cf df       	rcall	.-98     	; 0x1c68 <__fp_split3>
    1cca:	80 f3       	brcs	.-32     	; 0x1cac <__fp_splitA+0x34>
    1ccc:	ba 17       	cp	r27, r26
    1cce:	62 07       	cpc	r22, r18
    1cd0:	73 07       	cpc	r23, r19
    1cd2:	84 07       	cpc	r24, r20
    1cd4:	95 07       	cpc	r25, r21
    1cd6:	18 f0       	brcs	.+6      	; 0x1cde <__addsf3x+0x18>
    1cd8:	71 f4       	brne	.+28     	; 0x1cf6 <__addsf3x+0x30>
    1cda:	9e f5       	brtc	.+102    	; 0x1d42 <__addsf3x+0x7c>
    1cdc:	8e c0       	rjmp	.+284    	; 0x1dfa <__fp_zero>
    1cde:	0e f4       	brtc	.+2      	; 0x1ce2 <__addsf3x+0x1c>
    1ce0:	e0 95       	com	r30
    1ce2:	0b 2e       	mov	r0, r27
    1ce4:	ba 2f       	mov	r27, r26
    1ce6:	a0 2d       	mov	r26, r0
    1ce8:	0b 01       	movw	r0, r22
    1cea:	b9 01       	movw	r22, r18
    1cec:	90 01       	movw	r18, r0
    1cee:	0c 01       	movw	r0, r24
    1cf0:	ca 01       	movw	r24, r20
    1cf2:	a0 01       	movw	r20, r0
    1cf4:	11 24       	eor	r1, r1
    1cf6:	ff 27       	eor	r31, r31
    1cf8:	59 1b       	sub	r21, r25
    1cfa:	99 f0       	breq	.+38     	; 0x1d22 <__addsf3x+0x5c>
    1cfc:	59 3f       	cpi	r21, 0xF9	; 249
    1cfe:	50 f4       	brcc	.+20     	; 0x1d14 <__addsf3x+0x4e>
    1d00:	50 3e       	cpi	r21, 0xE0	; 224
    1d02:	68 f1       	brcs	.+90     	; 0x1d5e <__addsf3x+0x98>
    1d04:	1a 16       	cp	r1, r26
    1d06:	f0 40       	sbci	r31, 0x00	; 0
    1d08:	a2 2f       	mov	r26, r18
    1d0a:	23 2f       	mov	r18, r19
    1d0c:	34 2f       	mov	r19, r20
    1d0e:	44 27       	eor	r20, r20
    1d10:	58 5f       	subi	r21, 0xF8	; 248
    1d12:	f3 cf       	rjmp	.-26     	; 0x1cfa <__addsf3x+0x34>
    1d14:	46 95       	lsr	r20
    1d16:	37 95       	ror	r19
    1d18:	27 95       	ror	r18
    1d1a:	a7 95       	ror	r26
    1d1c:	f0 40       	sbci	r31, 0x00	; 0
    1d1e:	53 95       	inc	r21
    1d20:	c9 f7       	brne	.-14     	; 0x1d14 <__addsf3x+0x4e>
    1d22:	7e f4       	brtc	.+30     	; 0x1d42 <__addsf3x+0x7c>
    1d24:	1f 16       	cp	r1, r31
    1d26:	ba 0b       	sbc	r27, r26
    1d28:	62 0b       	sbc	r22, r18
    1d2a:	73 0b       	sbc	r23, r19
    1d2c:	84 0b       	sbc	r24, r20
    1d2e:	ba f0       	brmi	.+46     	; 0x1d5e <__addsf3x+0x98>
    1d30:	91 50       	subi	r25, 0x01	; 1
    1d32:	a1 f0       	breq	.+40     	; 0x1d5c <__addsf3x+0x96>
    1d34:	ff 0f       	add	r31, r31
    1d36:	bb 1f       	adc	r27, r27
    1d38:	66 1f       	adc	r22, r22
    1d3a:	77 1f       	adc	r23, r23
    1d3c:	88 1f       	adc	r24, r24
    1d3e:	c2 f7       	brpl	.-16     	; 0x1d30 <__addsf3x+0x6a>
    1d40:	0e c0       	rjmp	.+28     	; 0x1d5e <__addsf3x+0x98>
    1d42:	ba 0f       	add	r27, r26
    1d44:	62 1f       	adc	r22, r18
    1d46:	73 1f       	adc	r23, r19
    1d48:	84 1f       	adc	r24, r20
    1d4a:	48 f4       	brcc	.+18     	; 0x1d5e <__addsf3x+0x98>
    1d4c:	87 95       	ror	r24
    1d4e:	77 95       	ror	r23
    1d50:	67 95       	ror	r22
    1d52:	b7 95       	ror	r27
    1d54:	f7 95       	ror	r31
    1d56:	9e 3f       	cpi	r25, 0xFE	; 254
    1d58:	08 f0       	brcs	.+2      	; 0x1d5c <__addsf3x+0x96>
    1d5a:	b3 cf       	rjmp	.-154    	; 0x1cc2 <__fp_splitA+0x4a>
    1d5c:	93 95       	inc	r25
    1d5e:	88 0f       	add	r24, r24
    1d60:	08 f0       	brcs	.+2      	; 0x1d64 <__addsf3x+0x9e>
    1d62:	99 27       	eor	r25, r25
    1d64:	ee 0f       	add	r30, r30
    1d66:	97 95       	ror	r25
    1d68:	87 95       	ror	r24
    1d6a:	08 95       	ret

00001d6c <__fp_inf>:
    1d6c:	97 f9       	bld	r25, 7
    1d6e:	9f 67       	ori	r25, 0x7F	; 127
    1d70:	80 e8       	ldi	r24, 0x80	; 128
    1d72:	70 e0       	ldi	r23, 0x00	; 0
    1d74:	60 e0       	ldi	r22, 0x00	; 0
    1d76:	08 95       	ret

00001d78 <__fp_mpack>:
    1d78:	9f 3f       	cpi	r25, 0xFF	; 255
    1d7a:	31 f0       	breq	.+12     	; 0x1d88 <__fp_mpack_finite+0xc>

00001d7c <__fp_mpack_finite>:
    1d7c:	91 50       	subi	r25, 0x01	; 1
    1d7e:	20 f4       	brcc	.+8      	; 0x1d88 <__fp_mpack_finite+0xc>
    1d80:	87 95       	ror	r24
    1d82:	77 95       	ror	r23
    1d84:	67 95       	ror	r22
    1d86:	b7 95       	ror	r27
    1d88:	88 0f       	add	r24, r24
    1d8a:	91 1d       	adc	r25, r1
    1d8c:	96 95       	lsr	r25
    1d8e:	87 95       	ror	r24
    1d90:	97 f9       	bld	r25, 7
    1d92:	08 95       	ret

00001d94 <__fp_nan>:
    1d94:	9f ef       	ldi	r25, 0xFF	; 255
    1d96:	80 ec       	ldi	r24, 0xC0	; 192
    1d98:	08 95       	ret

00001d9a <__fp_powsodd>:
    1d9a:	9f 93       	push	r25
    1d9c:	8f 93       	push	r24
    1d9e:	7f 93       	push	r23
    1da0:	6f 93       	push	r22
    1da2:	ff 93       	push	r31
    1da4:	ef 93       	push	r30
    1da6:	9b 01       	movw	r18, r22
    1da8:	ac 01       	movw	r20, r24
    1daa:	6f d8       	rcall	.-3874   	; 0xe8a <__mulsf3>
    1dac:	ef 91       	pop	r30
    1dae:	ff 91       	pop	r31
    1db0:	2b d0       	rcall	.+86     	; 0x1e08 <__fp_powser>
    1db2:	2f 91       	pop	r18
    1db4:	3f 91       	pop	r19
    1db6:	4f 91       	pop	r20
    1db8:	5f 91       	pop	r21
    1dba:	67 c8       	rjmp	.-3890   	; 0xe8a <__mulsf3>

00001dbc <__fp_pscA>:
    1dbc:	00 24       	eor	r0, r0
    1dbe:	0a 94       	dec	r0
    1dc0:	16 16       	cp	r1, r22
    1dc2:	17 06       	cpc	r1, r23
    1dc4:	18 06       	cpc	r1, r24
    1dc6:	09 06       	cpc	r0, r25
    1dc8:	08 95       	ret

00001dca <__fp_pscB>:
    1dca:	00 24       	eor	r0, r0
    1dcc:	0a 94       	dec	r0
    1dce:	12 16       	cp	r1, r18
    1dd0:	13 06       	cpc	r1, r19
    1dd2:	14 06       	cpc	r1, r20
    1dd4:	05 06       	cpc	r0, r21
    1dd6:	08 95       	ret

00001dd8 <__fp_round>:
    1dd8:	09 2e       	mov	r0, r25
    1dda:	03 94       	inc	r0
    1ddc:	00 0c       	add	r0, r0
    1dde:	11 f4       	brne	.+4      	; 0x1de4 <__fp_round+0xc>
    1de0:	88 23       	and	r24, r24
    1de2:	52 f0       	brmi	.+20     	; 0x1df8 <__fp_round+0x20>
    1de4:	bb 0f       	add	r27, r27
    1de6:	40 f4       	brcc	.+16     	; 0x1df8 <__fp_round+0x20>
    1de8:	bf 2b       	or	r27, r31
    1dea:	11 f4       	brne	.+4      	; 0x1df0 <__fp_round+0x18>
    1dec:	60 ff       	sbrs	r22, 0
    1dee:	04 c0       	rjmp	.+8      	; 0x1df8 <__fp_round+0x20>
    1df0:	6f 5f       	subi	r22, 0xFF	; 255
    1df2:	7f 4f       	sbci	r23, 0xFF	; 255
    1df4:	8f 4f       	sbci	r24, 0xFF	; 255
    1df6:	9f 4f       	sbci	r25, 0xFF	; 255
    1df8:	08 95       	ret

00001dfa <__fp_zero>:
    1dfa:	e8 94       	clt

00001dfc <__fp_szero>:
    1dfc:	bb 27       	eor	r27, r27
    1dfe:	66 27       	eor	r22, r22
    1e00:	77 27       	eor	r23, r23
    1e02:	cb 01       	movw	r24, r22
    1e04:	97 f9       	bld	r25, 7
    1e06:	08 95       	ret

00001e08 <__fp_powser>:
    1e08:	df 93       	push	r29
    1e0a:	cf 93       	push	r28
    1e0c:	1f 93       	push	r17
    1e0e:	0f 93       	push	r16
    1e10:	ff 92       	push	r15
    1e12:	ef 92       	push	r14
    1e14:	df 92       	push	r13
    1e16:	7b 01       	movw	r14, r22
    1e18:	8c 01       	movw	r16, r24
    1e1a:	68 94       	set
    1e1c:	05 c0       	rjmp	.+10     	; 0x1e28 <__fp_powser+0x20>
    1e1e:	da 2e       	mov	r13, r26
    1e20:	ef 01       	movw	r28, r30
    1e22:	21 d0       	rcall	.+66     	; 0x1e66 <__mulsf3x>
    1e24:	fe 01       	movw	r30, r28
    1e26:	e8 94       	clt
    1e28:	a5 91       	lpm	r26, Z+
    1e2a:	25 91       	lpm	r18, Z+
    1e2c:	35 91       	lpm	r19, Z+
    1e2e:	45 91       	lpm	r20, Z+
    1e30:	55 91       	lpm	r21, Z+
    1e32:	ae f3       	brts	.-22     	; 0x1e1e <__fp_powser+0x16>
    1e34:	ef 01       	movw	r28, r30
    1e36:	47 df       	rcall	.-370    	; 0x1cc6 <__addsf3x>
    1e38:	fe 01       	movw	r30, r28
    1e3a:	97 01       	movw	r18, r14
    1e3c:	a8 01       	movw	r20, r16
    1e3e:	da 94       	dec	r13
    1e40:	79 f7       	brne	.-34     	; 0x1e20 <__fp_powser+0x18>
    1e42:	df 90       	pop	r13
    1e44:	ef 90       	pop	r14
    1e46:	ff 90       	pop	r15
    1e48:	0f 91       	pop	r16
    1e4a:	1f 91       	pop	r17
    1e4c:	cf 91       	pop	r28
    1e4e:	df 91       	pop	r29
    1e50:	08 95       	ret
    1e52:	b4 df       	rcall	.-152    	; 0x1dbc <__fp_pscA>
    1e54:	28 f0       	brcs	.+10     	; 0x1e60 <__fp_powser+0x58>
    1e56:	b9 df       	rcall	.-142    	; 0x1dca <__fp_pscB>
    1e58:	18 f0       	brcs	.+6      	; 0x1e60 <__fp_powser+0x58>
    1e5a:	95 23       	and	r25, r21
    1e5c:	09 f0       	breq	.+2      	; 0x1e60 <__fp_powser+0x58>
    1e5e:	86 cf       	rjmp	.-244    	; 0x1d6c <__fp_inf>
    1e60:	99 cf       	rjmp	.-206    	; 0x1d94 <__fp_nan>
    1e62:	11 24       	eor	r1, r1
    1e64:	cb cf       	rjmp	.-106    	; 0x1dfc <__fp_szero>

00001e66 <__mulsf3x>:
    1e66:	00 df       	rcall	.-512    	; 0x1c68 <__fp_split3>
    1e68:	a0 f3       	brcs	.-24     	; 0x1e52 <__fp_powser+0x4a>

00001e6a <__mulsf3_pse>:
    1e6a:	95 9f       	mul	r25, r21
    1e6c:	d1 f3       	breq	.-12     	; 0x1e62 <__fp_powser+0x5a>
    1e6e:	95 0f       	add	r25, r21
    1e70:	50 e0       	ldi	r21, 0x00	; 0
    1e72:	55 1f       	adc	r21, r21
    1e74:	62 9f       	mul	r22, r18
    1e76:	f0 01       	movw	r30, r0
    1e78:	72 9f       	mul	r23, r18
    1e7a:	bb 27       	eor	r27, r27
    1e7c:	f0 0d       	add	r31, r0
    1e7e:	b1 1d       	adc	r27, r1
    1e80:	63 9f       	mul	r22, r19
    1e82:	aa 27       	eor	r26, r26
    1e84:	f0 0d       	add	r31, r0
    1e86:	b1 1d       	adc	r27, r1
    1e88:	aa 1f       	adc	r26, r26
    1e8a:	64 9f       	mul	r22, r20
    1e8c:	66 27       	eor	r22, r22
    1e8e:	b0 0d       	add	r27, r0
    1e90:	a1 1d       	adc	r26, r1
    1e92:	66 1f       	adc	r22, r22
    1e94:	82 9f       	mul	r24, r18
    1e96:	22 27       	eor	r18, r18
    1e98:	b0 0d       	add	r27, r0
    1e9a:	a1 1d       	adc	r26, r1
    1e9c:	62 1f       	adc	r22, r18
    1e9e:	73 9f       	mul	r23, r19
    1ea0:	b0 0d       	add	r27, r0
    1ea2:	a1 1d       	adc	r26, r1
    1ea4:	62 1f       	adc	r22, r18
    1ea6:	83 9f       	mul	r24, r19
    1ea8:	a0 0d       	add	r26, r0
    1eaa:	61 1d       	adc	r22, r1
    1eac:	22 1f       	adc	r18, r18
    1eae:	74 9f       	mul	r23, r20
    1eb0:	33 27       	eor	r19, r19
    1eb2:	a0 0d       	add	r26, r0
    1eb4:	61 1d       	adc	r22, r1
    1eb6:	23 1f       	adc	r18, r19
    1eb8:	84 9f       	mul	r24, r20
    1eba:	60 0d       	add	r22, r0
    1ebc:	21 1d       	adc	r18, r1
    1ebe:	82 2f       	mov	r24, r18
    1ec0:	76 2f       	mov	r23, r22
    1ec2:	6a 2f       	mov	r22, r26
    1ec4:	11 24       	eor	r1, r1
    1ec6:	9f 57       	subi	r25, 0x7F	; 127
    1ec8:	50 40       	sbci	r21, 0x00	; 0
    1eca:	8a f0       	brmi	.+34     	; 0x1eee <__mulsf3_pse+0x84>
    1ecc:	e1 f0       	breq	.+56     	; 0x1f06 <__mulsf3_pse+0x9c>
    1ece:	88 23       	and	r24, r24
    1ed0:	4a f0       	brmi	.+18     	; 0x1ee4 <__mulsf3_pse+0x7a>
    1ed2:	ee 0f       	add	r30, r30
    1ed4:	ff 1f       	adc	r31, r31
    1ed6:	bb 1f       	adc	r27, r27
    1ed8:	66 1f       	adc	r22, r22
    1eda:	77 1f       	adc	r23, r23
    1edc:	88 1f       	adc	r24, r24
    1ede:	91 50       	subi	r25, 0x01	; 1
    1ee0:	50 40       	sbci	r21, 0x00	; 0
    1ee2:	a9 f7       	brne	.-22     	; 0x1ece <__mulsf3_pse+0x64>
    1ee4:	9e 3f       	cpi	r25, 0xFE	; 254
    1ee6:	51 05       	cpc	r21, r1
    1ee8:	70 f0       	brcs	.+28     	; 0x1f06 <__mulsf3_pse+0x9c>
    1eea:	40 cf       	rjmp	.-384    	; 0x1d6c <__fp_inf>
    1eec:	87 cf       	rjmp	.-242    	; 0x1dfc <__fp_szero>
    1eee:	5f 3f       	cpi	r21, 0xFF	; 255
    1ef0:	ec f3       	brlt	.-6      	; 0x1eec <__mulsf3_pse+0x82>
    1ef2:	98 3e       	cpi	r25, 0xE8	; 232
    1ef4:	dc f3       	brlt	.-10     	; 0x1eec <__mulsf3_pse+0x82>
    1ef6:	86 95       	lsr	r24
    1ef8:	77 95       	ror	r23
    1efa:	67 95       	ror	r22
    1efc:	b7 95       	ror	r27
    1efe:	f7 95       	ror	r31
    1f00:	e7 95       	ror	r30
    1f02:	9f 5f       	subi	r25, 0xFF	; 255
    1f04:	c1 f7       	brne	.-16     	; 0x1ef6 <__mulsf3_pse+0x8c>
    1f06:	fe 2b       	or	r31, r30
    1f08:	88 0f       	add	r24, r24
    1f0a:	91 1d       	adc	r25, r1
    1f0c:	96 95       	lsr	r25
    1f0e:	87 95       	ror	r24
    1f10:	97 f9       	bld	r25, 7
    1f12:	08 95       	ret

00001f14 <_exit>:
    1f14:	f8 94       	cli

00001f16 <__stop_program>:
    1f16:	ff cf       	rjmp	.-2      	; 0x1f16 <__stop_program>
