
Lab2_DTMF.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000007e  00800100  00001cd2  00001d66  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001cd2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000002a6  0080017e  0080017e  00001de4  2**0
                  ALLOC
  3 .stab         000022a4  00000000  00000000  00001de4  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000008d1  00000000  00000000  00004088  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000002f  00000000  00000000  00004959  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 00000238  00000000  00000000  00004988  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   000033a5  00000000  00000000  00004bc0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 0000196a  00000000  00000000  00007f65  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000013a9  00000000  00000000  000098cf  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000510  00000000  00000000  0000ac78  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000085d  00000000  00000000  0000b188  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000019d2  00000000  00000000  0000b9e5  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000088  00000000  00000000  0000d3b7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 55 00 	jmp	0xaa	; 0xaa <__ctors_end>
       4:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
       8:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
       c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      10:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      14:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      18:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      1c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      20:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      24:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      28:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      2c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      30:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      34:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      38:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      3c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      40:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      44:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      48:	0c 94 9a 02 	jmp	0x534	; 0x534 <__vector_18>
      4c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      50:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      54:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      58:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      5c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      60:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      64:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      68:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      6c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      70:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      74:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      78:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      7c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      80:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      84:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      88:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      8c:	05 a8       	ldd	r0, Z+53	; 0x35
      8e:	4c cd       	rjmp	.-1384   	; 0xfffffb28 <__eeprom_end+0xff7efb28>
      90:	b2 d4       	rcall	.+2404   	; 0x9f6 <_fpadd_parts+0x11e>
      92:	4e b9       	out	0x0e, r20	; 14
      94:	38 36       	cpi	r19, 0x68	; 104
      96:	a9 02       	muls	r26, r25
      98:	0c 50       	subi	r16, 0x0C	; 12
      9a:	b9 91       	ld	r27, Y+
      9c:	86 88       	ldd	r8, Z+22	; 0x16
      9e:	08 3c       	cpi	r16, 0xC8	; 200
      a0:	a6 aa       	std	Z+54, r10	; 0x36
      a2:	aa 2a       	or	r10, r26
      a4:	be 00       	.word	0x00be	; ????
      a6:	00 00       	nop
      a8:	80 3f       	cpi	r24, 0xF0	; 240

000000aa <__ctors_end>:
      aa:	11 24       	eor	r1, r1
      ac:	1f be       	out	0x3f, r1	; 63
      ae:	cf ef       	ldi	r28, 0xFF	; 255
      b0:	d0 e4       	ldi	r29, 0x40	; 64
      b2:	de bf       	out	0x3e, r29	; 62
      b4:	cd bf       	out	0x3d, r28	; 61

000000b6 <__do_copy_data>:
      b6:	11 e0       	ldi	r17, 0x01	; 1
      b8:	a0 e0       	ldi	r26, 0x00	; 0
      ba:	b1 e0       	ldi	r27, 0x01	; 1
      bc:	e2 ed       	ldi	r30, 0xD2	; 210
      be:	fc e1       	ldi	r31, 0x1C	; 28
      c0:	00 e0       	ldi	r16, 0x00	; 0
      c2:	0b bf       	out	0x3b, r16	; 59
      c4:	02 c0       	rjmp	.+4      	; 0xca <__do_copy_data+0x14>
      c6:	07 90       	elpm	r0, Z+
      c8:	0d 92       	st	X+, r0
      ca:	ae 37       	cpi	r26, 0x7E	; 126
      cc:	b1 07       	cpc	r27, r17
      ce:	d9 f7       	brne	.-10     	; 0xc6 <__do_copy_data+0x10>

000000d0 <__do_clear_bss>:
      d0:	24 e0       	ldi	r18, 0x04	; 4
      d2:	ae e7       	ldi	r26, 0x7E	; 126
      d4:	b1 e0       	ldi	r27, 0x01	; 1
      d6:	01 c0       	rjmp	.+2      	; 0xda <.do_clear_bss_start>

000000d8 <.do_clear_bss_loop>:
      d8:	1d 92       	st	X+, r1

000000da <.do_clear_bss_start>:
      da:	a4 32       	cpi	r26, 0x24	; 36
      dc:	b2 07       	cpc	r27, r18
      de:	e1 f7       	brne	.-8      	; 0xd8 <.do_clear_bss_loop>
      e0:	0e 94 7d 09 	call	0x12fa	; 0x12fa <main>
      e4:	0c 94 67 0e 	jmp	0x1cce	; 0x1cce <_exit>

000000e8 <__bad_interrupt>:
      e8:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ec <task1>:
FILE uart_str = FDEV_SETUP_STREAM(uart_putchar, uart_getchar, _FDEV_SETUP_RW);

//******************************* 
//Task 1  
void task1(void) {
	time1=0;  //reset the task timer
      ec:	10 92 ed 01 	sts	0x01ED, r1
      f0:	10 92 ec 01 	sts	0x01EC, r1

	//get lower nibble
	PORTDIR = 0x0f;
      f4:	8f e0       	ldi	r24, 0x0F	; 15
      f6:	81 b9       	out	0x01, r24	; 1
	PORTDATA = 0xf0; 
      f8:	90 ef       	ldi	r25, 0xF0	; 240
      fa:	92 b9       	out	0x02, r25	; 2
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
      fc:	2a e1       	ldi	r18, 0x1A	; 26
      fe:	2a 95       	dec	r18
     100:	f1 f7       	brne	.-4      	; 0xfe <task1+0x12>
     102:	00 c0       	rjmp	.+0      	; 0x104 <task1+0x18>
	_delay_us(5);
	key = PORTIN;
     104:	20 b1       	in	r18, 0x00	; 0
     106:	20 93 f0 01 	sts	0x01F0, r18
  
	//get upper nibble
	PORTDIR = 0xf0;
     10a:	91 b9       	out	0x01, r25	; 1
	PORTDATA = 0x0f; 
     10c:	82 b9       	out	0x02, r24	; 2
     10e:	8a e1       	ldi	r24, 0x1A	; 26
     110:	8a 95       	dec	r24
     112:	f1 f7       	brne	.-4      	; 0x110 <task1+0x24>
     114:	00 c0       	rjmp	.+0      	; 0x116 <task1+0x2a>
	_delay_us(5);
	key = key | PORTIN;
     116:	90 b1       	in	r25, 0x00	; 0
     118:	80 91 f0 01 	lds	r24, 0x01F0
     11c:	98 2b       	or	r25, r24
     11e:	90 93 f0 01 	sts	0x01F0, r25
  
	//find matching keycode in keytbl
	if (key != 0xff) {
     122:	9f 3f       	cpi	r25, 0xFF	; 255
     124:	a9 f0       	breq	.+42     	; 0x150 <task1+0x64>
	  for (butnum=0; butnum<maxkeys; butnum++) {   
     126:	80 e0       	ldi	r24, 0x00	; 0
     128:	0a c0       	rjmp	.+20     	; 0x13e <task1+0x52>
     12a:	28 2f       	mov	r18, r24
     12c:	2f 5f       	subi	r18, 0xFF	; 255
	  	if (keytbl[butnum]==key)  break;   
     12e:	e8 2f       	mov	r30, r24
     130:	f0 e0       	ldi	r31, 0x00	; 0
     132:	e2 5c       	subi	r30, 0xC2	; 194
     134:	fe 4f       	sbci	r31, 0xFE	; 254
     136:	30 81       	ld	r19, Z
     138:	39 17       	cp	r19, r25
     13a:	31 f0       	breq	.+12     	; 0x148 <task1+0x5c>
     13c:	82 2f       	mov	r24, r18
	_delay_us(5);
	key = key | PORTIN;
  
	//find matching keycode in keytbl
	if (key != 0xff) {
	  for (butnum=0; butnum<maxkeys; butnum++) {   
     13e:	8c 30       	cpi	r24, 0x0C	; 12
     140:	a0 f3       	brcs	.-24     	; 0x12a <task1+0x3e>
	  	if (keytbl[butnum]==key)  break;   
	  }

	  if (butnum==maxkeys) butnum=0;
     142:	8c 30       	cpi	r24, 0x0C	; 12
     144:	09 f4       	brne	.+2      	; 0x148 <task1+0x5c>
     146:	04 c0       	rjmp	.+8      	; 0x150 <task1+0x64>
	  else butnum++;	   //adjust by one to make range 1-16
     148:	8f 5f       	subi	r24, 0xFF	; 255
     14a:	80 93 e8 01 	sts	0x01E8, r24
     14e:	02 c0       	rjmp	.+4      	; 0x154 <task1+0x68>
	}
	else butnum=0;
     150:	10 92 e8 01 	sts	0x01E8, r1
	
	// Switching in the finite state machine.
	switch (PushState) {
     154:	80 91 f3 01 	lds	r24, 0x01F3
     158:	82 30       	cpi	r24, 0x02	; 2
     15a:	91 f0       	breq	.+36     	; 0x180 <task1+0x94>
     15c:	20 f4       	brcc	.+8      	; 0x166 <task1+0x7a>
     15e:	81 30       	cpi	r24, 0x01	; 1
     160:	09 f0       	breq	.+2      	; 0x164 <task1+0x78>
     162:	66 c0       	rjmp	.+204    	; 0x230 <task1+0x144>
     164:	06 c0       	rjmp	.+12     	; 0x172 <task1+0x86>
     166:	83 30       	cpi	r24, 0x03	; 3
     168:	d1 f0       	breq	.+52     	; 0x19e <task1+0xb2>
     16a:	84 30       	cpi	r24, 0x04	; 4
     16c:	09 f0       	breq	.+2      	; 0x170 <task1+0x84>
     16e:	60 c0       	rjmp	.+192    	; 0x230 <task1+0x144>
     170:	52 c0       	rjmp	.+164    	; 0x216 <task1+0x12a>
     case NoPush: 
        if (butnum != 0) {
     172:	80 91 e8 01 	lds	r24, 0x01E8
     176:	88 23       	and	r24, r24
     178:	09 f4       	brne	.+2      	; 0x17c <task1+0x90>
     17a:	5a c0       	rjmp	.+180    	; 0x230 <task1+0x144>
			PushState=MaybePush;
     17c:	82 e0       	ldi	r24, 0x02	; 2
     17e:	50 c0       	rjmp	.+160    	; 0x220 <task1+0x134>
		}
        else PushState=NoPush;
        break;
     case MaybePush:
        if (butnum != 0) {
     180:	80 91 e8 01 	lds	r24, 0x01E8
     184:	88 23       	and	r24, r24
     186:	49 f0       	breq	.+18     	; 0x19a <task1+0xae>
           	PushState=Pushed; 
     188:	83 e0       	ldi	r24, 0x03	; 3
     18a:	80 93 f3 01 	sts	0x01F3, r24
			PushFlag=1;
     18e:	81 e0       	ldi	r24, 0x01	; 1
     190:	80 93 e9 01 	sts	0x01E9, r24
			//Test mode override
			if (~PINB & 0x01) {
     194:	18 99       	sbic	0x03, 0	; 3
     196:	4c c0       	rjmp	.+152    	; 0x230 <task1+0x144>
     198:	49 c0       	rjmp	.+146    	; 0x22c <task1+0x140>
		 		PushFlag=0;			
		   	}  
        }
        else PushState=NoPush;
     19a:	81 e0       	ldi	r24, 0x01	; 1
     19c:	41 c0       	rjmp	.+130    	; 0x220 <task1+0x134>
        break;
     case Pushed:  
        if (butnum != 0) {
     19e:	80 91 e8 01 	lds	r24, 0x01E8
     1a2:	88 23       	and	r24, r24
     1a4:	b1 f1       	breq	.+108    	; 0x212 <task1+0x126>
			PushState=Pushed;
			//Test mode override
			if (~PINB & 0x01) {
     1a6:	18 99       	sbic	0x03, 0	; 3
     1a8:	43 c0       	rjmp	.+134    	; 0x230 <task1+0x144>
		 		switch (butnum) {
     1aa:	84 30       	cpi	r24, 0x04	; 4
     1ac:	e1 f0       	breq	.+56     	; 0x1e6 <task1+0xfa>
     1ae:	30 f4       	brcc	.+12     	; 0x1bc <task1+0xd0>
     1b0:	82 30       	cpi	r24, 0x02	; 2
     1b2:	79 f0       	breq	.+30     	; 0x1d2 <task1+0xe6>
     1b4:	98 f4       	brcc	.+38     	; 0x1dc <task1+0xf0>
     1b6:	81 30       	cpi	r24, 0x01	; 1
     1b8:	d9 f5       	brne	.+118    	; 0x230 <task1+0x144>
     1ba:	06 c0       	rjmp	.+12     	; 0x1c8 <task1+0xdc>
     1bc:	86 30       	cpi	r24, 0x06	; 6
     1be:	e9 f0       	breq	.+58     	; 0x1fa <task1+0x10e>
     1c0:	b8 f0       	brcs	.+46     	; 0x1f0 <task1+0x104>
     1c2:	87 30       	cpi	r24, 0x07	; 7
     1c4:	a9 f5       	brne	.+106    	; 0x230 <task1+0x144>
     1c6:	1e c0       	rjmp	.+60     	; 0x204 <task1+0x118>
					case 1: 
						play(697, 0);
     1c8:	60 e0       	ldi	r22, 0x00	; 0
     1ca:	70 e0       	ldi	r23, 0x00	; 0
     1cc:	89 eb       	ldi	r24, 0xB9	; 185
     1ce:	92 e0       	ldi	r25, 0x02	; 2
     1d0:	1d c0       	rjmp	.+58     	; 0x20c <task1+0x120>
						break;
					case 2: 
						play(770, 0);
     1d2:	60 e0       	ldi	r22, 0x00	; 0
     1d4:	70 e0       	ldi	r23, 0x00	; 0
     1d6:	82 e0       	ldi	r24, 0x02	; 2
     1d8:	93 e0       	ldi	r25, 0x03	; 3
     1da:	18 c0       	rjmp	.+48     	; 0x20c <task1+0x120>
						break;
					case 3: 
						play(852, 0);
     1dc:	60 e0       	ldi	r22, 0x00	; 0
     1de:	70 e0       	ldi	r23, 0x00	; 0
     1e0:	84 e5       	ldi	r24, 0x54	; 84
     1e2:	93 e0       	ldi	r25, 0x03	; 3
     1e4:	13 c0       	rjmp	.+38     	; 0x20c <task1+0x120>
						break;
					case 4: 
						play(941, 0);
     1e6:	60 e0       	ldi	r22, 0x00	; 0
     1e8:	70 e0       	ldi	r23, 0x00	; 0
     1ea:	8d ea       	ldi	r24, 0xAD	; 173
     1ec:	93 e0       	ldi	r25, 0x03	; 3
     1ee:	0e c0       	rjmp	.+28     	; 0x20c <task1+0x120>
						break;
					case 5:
						play(1209, 0);
     1f0:	60 e0       	ldi	r22, 0x00	; 0
     1f2:	70 e0       	ldi	r23, 0x00	; 0
     1f4:	89 eb       	ldi	r24, 0xB9	; 185
     1f6:	94 e0       	ldi	r25, 0x04	; 4
     1f8:	09 c0       	rjmp	.+18     	; 0x20c <task1+0x120>
						break;
					case 6:
						play(1336, 0);
     1fa:	60 e0       	ldi	r22, 0x00	; 0
     1fc:	70 e0       	ldi	r23, 0x00	; 0
     1fe:	88 e3       	ldi	r24, 0x38	; 56
     200:	95 e0       	ldi	r25, 0x05	; 5
     202:	04 c0       	rjmp	.+8      	; 0x20c <task1+0x120>
						break;
					case 7: 
						play(1477, 0);
     204:	60 e0       	ldi	r22, 0x00	; 0
     206:	70 e0       	ldi	r23, 0x00	; 0
     208:	85 ec       	ldi	r24, 0xC5	; 197
     20a:	95 e0       	ldi	r25, 0x05	; 5
     20c:	0e 94 8f 03 	call	0x71e	; 0x71e <play>
						break;
     210:	0f c0       	rjmp	.+30     	; 0x230 <task1+0x144>
					default:
						break;
				}	
		   	}  
		}
        else PushState=MaybeNoPush;    
     212:	84 e0       	ldi	r24, 0x04	; 4
     214:	05 c0       	rjmp	.+10     	; 0x220 <task1+0x134>
        break;
     case MaybeNoPush:
        if (butnum != 0) PushState=Pushed; 
     216:	80 91 e8 01 	lds	r24, 0x01E8
     21a:	88 23       	and	r24, r24
     21c:	21 f0       	breq	.+8      	; 0x226 <task1+0x13a>
     21e:	83 e0       	ldi	r24, 0x03	; 3
     220:	80 93 f3 01 	sts	0x01F3, r24
     224:	05 c0       	rjmp	.+10     	; 0x230 <task1+0x144>
        else {
           PushState=NoPush;
     226:	81 e0       	ldi	r24, 0x01	; 1
     228:	80 93 f3 01 	sts	0x01F3, r24
           PushFlag=0;
     22c:	10 92 e9 01 	sts	0x01E9, r1
        }    
        break;
  	}

	if (PushState == NoPush) {
     230:	80 91 f3 01 	lds	r24, 0x01F3
     234:	81 30       	cpi	r24, 0x01	; 1
     236:	41 f4       	brne	.+16     	; 0x248 <task1+0x15c>
		fprintf(stdout, "Depressed...");
     238:	60 91 20 04 	lds	r22, 0x0420
     23c:	70 91 21 04 	lds	r23, 0x0421
     240:	86 e5       	ldi	r24, 0x56	; 86
     242:	91 e0       	ldi	r25, 0x01	; 1
     244:	0e 94 02 0a 	call	0x1404	; 0x1404 <fputs>
		//stop_playing();
	}	

	if (PushFlag) {
     248:	80 91 e9 01 	lds	r24, 0x01E9
     24c:	88 23       	and	r24, r24
     24e:	09 f4       	brne	.+2      	; 0x252 <task1+0x166>
     250:	64 c0       	rjmp	.+200    	; 0x31a <task1+0x22e>
		PushFlag = 0;
     252:	10 92 e9 01 	sts	0x01E9, r1
		// The * button was pressed. Clear all memory.
		if (butnum == 10) {
     256:	20 91 e8 01 	lds	r18, 0x01E8
     25a:	2a 30       	cpi	r18, 0x0A	; 10
     25c:	09 f5       	brne	.+66     	; 0x2a0 <task1+0x1b4>
			fprintf(stdout, "%u\n\r", butnum);
     25e:	1f 92       	push	r1
     260:	2f 93       	push	r18
     262:	83 e6       	ldi	r24, 0x63	; 99
     264:	91 e0       	ldi	r25, 0x01	; 1
     266:	9f 93       	push	r25
     268:	8f 93       	push	r24
     26a:	80 91 21 04 	lds	r24, 0x0421
     26e:	8f 93       	push	r24
     270:	80 91 20 04 	lds	r24, 0x0420
     274:	8f 93       	push	r24
     276:	0e 94 f2 09 	call	0x13e4	; 0x13e4 <fprintf>
     27a:	ee e7       	ldi	r30, 0x7E	; 126
     27c:	f1 e0       	ldi	r31, 0x01	; 1
// putchar and getchar are in uart.c
FILE uart_str = FDEV_SETUP_STREAM(uart_putchar, uart_getchar, _FDEV_SETUP_RW);

//******************************* 
//Task 1  
void task1(void) {
     27e:	0f 90       	pop	r0
     280:	0f 90       	pop	r0
     282:	0f 90       	pop	r0
     284:	0f 90       	pop	r0
     286:	0f 90       	pop	r0
     288:	0f 90       	pop	r0
		PushFlag = 0;
		// The * button was pressed. Clear all memory.
		if (butnum == 10) {
			fprintf(stdout, "%u\n\r", butnum);
			for (int i = 0; i < 12; i++) {
				mem[i] = 0;
     28a:	11 92       	st	Z+, r1
     28c:	11 92       	st	Z+, r1
	if (PushFlag) {
		PushFlag = 0;
		// The * button was pressed. Clear all memory.
		if (butnum == 10) {
			fprintf(stdout, "%u\n\r", butnum);
			for (int i = 0; i < 12; i++) {
     28e:	21 e0       	ldi	r18, 0x01	; 1
     290:	e6 39       	cpi	r30, 0x96	; 150
     292:	f2 07       	cpc	r31, r18
     294:	d1 f7       	brne	.-12     	; 0x28a <task1+0x19e>
				mem[i] = 0;
			}
			mem_index = 0;
     296:	10 92 f2 01 	sts	0x01F2, r1
     29a:	10 92 f1 01 	sts	0x01F1, r1
     29e:	08 95       	ret
		}
		// The # button was pressed. Play all sounds in memory.
		else if (butnum == 12) {
     2a0:	2c 30       	cpi	r18, 0x0C	; 12
     2a2:	79 f4       	brne	.+30     	; 0x2c2 <task1+0x1d6>
			fprintf(stdout, "%u\n\r", butnum);
     2a4:	1f 92       	push	r1
     2a6:	2f 93       	push	r18
     2a8:	83 e6       	ldi	r24, 0x63	; 99
     2aa:	91 e0       	ldi	r25, 0x01	; 1
     2ac:	9f 93       	push	r25
     2ae:	8f 93       	push	r24
     2b0:	80 91 21 04 	lds	r24, 0x0421
     2b4:	8f 93       	push	r24
     2b6:	80 91 20 04 	lds	r24, 0x0420
     2ba:	8f 93       	push	r24
     2bc:	0e 94 f2 09 	call	0x13e4	; 0x13e4 <fprintf>
     2c0:	26 c0       	rjmp	.+76     	; 0x30e <task1+0x222>
				}
			}
		}
		// A normal button press. 
		else {
			if (mem_index < 12) {
     2c2:	80 91 f1 01 	lds	r24, 0x01F1
     2c6:	90 91 f2 01 	lds	r25, 0x01F2
     2ca:	0c 97       	sbiw	r24, 0x0c	; 12
     2cc:	30 f5       	brcc	.+76     	; 0x31a <task1+0x22e>
				fprintf(stdout, "%u\n\r", butnum);
     2ce:	1f 92       	push	r1
     2d0:	2f 93       	push	r18
     2d2:	83 e6       	ldi	r24, 0x63	; 99
     2d4:	91 e0       	ldi	r25, 0x01	; 1
     2d6:	9f 93       	push	r25
     2d8:	8f 93       	push	r24
     2da:	80 91 21 04 	lds	r24, 0x0421
     2de:	8f 93       	push	r24
     2e0:	80 91 20 04 	lds	r24, 0x0420
     2e4:	8f 93       	push	r24
     2e6:	0e 94 f2 09 	call	0x13e4	; 0x13e4 <fprintf>
				mem[mem_index] = butnum;
     2ea:	80 91 f1 01 	lds	r24, 0x01F1
     2ee:	90 91 f2 01 	lds	r25, 0x01F2
     2f2:	fc 01       	movw	r30, r24
     2f4:	ee 0f       	add	r30, r30
     2f6:	ff 1f       	adc	r31, r31
     2f8:	e2 58       	subi	r30, 0x82	; 130
     2fa:	fe 4f       	sbci	r31, 0xFE	; 254
     2fc:	20 91 e8 01 	lds	r18, 0x01E8
     300:	20 83       	st	Z, r18
     302:	11 82       	std	Z+1, r1	; 0x01
				mem_index++;
     304:	01 96       	adiw	r24, 0x01	; 1
     306:	90 93 f2 01 	sts	0x01F2, r25
     30a:	80 93 f1 01 	sts	0x01F1, r24
     30e:	0f 90       	pop	r0
     310:	0f 90       	pop	r0
     312:	0f 90       	pop	r0
     314:	0f 90       	pop	r0
     316:	0f 90       	pop	r0
     318:	0f 90       	pop	r0
     31a:	08 95       	ret

0000031c <initialize>:
} 
 
//Initialization used for the timer interrupts for debouncing
void initialize(void) {
	//set up timer 0 for 1 mSec timebase 
	OCR0A = 249;  		//set the compare re to 250 time ticks
     31c:	89 ef       	ldi	r24, 0xF9	; 249
     31e:	87 bd       	out	0x27, r24	; 39
	TIMSK0= (1<<OCIE0A);	//turn on timer 0 cmp match ISR 
     320:	82 e0       	ldi	r24, 0x02	; 2
     322:	80 93 6e 00 	sts	0x006E, r24
	//set prescalar to divide by 64 
	TCCR0B= 3; //0b00000011;	
     326:	93 e0       	ldi	r25, 0x03	; 3
     328:	95 bd       	out	0x25, r25	; 37
	// turn on clear-on-match
	TCCR0A= (1<<WGM01) ;
     32a:	84 bd       	out	0x24, r24	; 36

	//init the task timers
	time1=0;  
     32c:	10 92 ed 01 	sts	0x01ED, r1
     330:	10 92 ec 01 	sts	0x01EC, r1
	// PORT B is an input
	DDRB = 0x00;
     334:	14 b8       	out	0x04, r1	; 4
	//for no button push
	PushFlag = 0;
     336:	10 92 e9 01 	sts	0x01E9, r1
	//init the state machine
	PushState = NoPush;
     33a:	81 e0       	ldi	r24, 0x01	; 1
     33c:	80 93 f3 01 	sts	0x01F3, r24

	mem_index = 0;
     340:	10 92 f2 01 	sts	0x01F2, r1
     344:	10 92 f1 01 	sts	0x01F1, r1

	init_dtmf();
     348:	0e 94 3a 03 	call	0x674	; 0x674 <init_dtmf>
	//crank up the ISRs
	sei() ;
     34c:	78 94       	sei
     34e:	08 95       	ret

00000350 <uart_init>:
{
#if F_CPU < 2000000UL && defined(U2X)
  UCSR0A = _BV(U2X);             /* improve baud rate error by using 2x clk */
  UBRR0L = (F_CPU / (8UL * UART_BAUD)) - 1;
#else
  UBRR0L = (F_CPU / (16UL * UART_BAUD)) - 1;
     350:	87 e6       	ldi	r24, 0x67	; 103
     352:	80 93 c4 00 	sts	0x00C4, r24
#endif
  UCSR0B = _BV(TXEN0) | _BV(RXEN0); /* tx/rx enable */
     356:	88 e1       	ldi	r24, 0x18	; 24
     358:	80 93 c1 00 	sts	0x00C1, r24
     35c:	08 95       	ret

0000035e <uart_putchar>:
 * Send character c down the UART Tx, wait until tx holding register
 * is empty.
 */
int
uart_putchar(char c, FILE *stream)
{
     35e:	cf 93       	push	r28
     360:	c8 2f       	mov	r28, r24

  if (c == '\a')
     362:	87 30       	cpi	r24, 0x07	; 7
     364:	49 f4       	brne	.+18     	; 0x378 <uart_putchar+0x1a>
    {
      fputs("*ring*\n", stderr);
     366:	60 91 22 04 	lds	r22, 0x0422
     36a:	70 91 23 04 	lds	r23, 0x0423
     36e:	86 e7       	ldi	r24, 0x76	; 118
     370:	91 e0       	ldi	r25, 0x01	; 1
     372:	0e 94 02 0a 	call	0x1404	; 0x1404 <fputs>
     376:	0b c0       	rjmp	.+22     	; 0x38e <uart_putchar+0x30>
      return 0;
    }

  if (c == '\n')
     378:	8a 30       	cpi	r24, 0x0A	; 10
     37a:	19 f4       	brne	.+6      	; 0x382 <uart_putchar+0x24>
    uart_putchar('\r', stream);
     37c:	8d e0       	ldi	r24, 0x0D	; 13
     37e:	0e 94 af 01 	call	0x35e	; 0x35e <uart_putchar>
  loop_until_bit_is_set(UCSR0A, UDRE0);
     382:	80 91 c0 00 	lds	r24, 0x00C0
     386:	85 ff       	sbrs	r24, 5
     388:	fc cf       	rjmp	.-8      	; 0x382 <uart_putchar+0x24>
  UDR0 = c;
     38a:	c0 93 c6 00 	sts	0x00C6, r28

  return 0;
}
     38e:	80 e0       	ldi	r24, 0x00	; 0
     390:	90 e0       	ldi	r25, 0x00	; 0
     392:	cf 91       	pop	r28
     394:	08 95       	ret

00000396 <uart_getchar>:
 * Successive calls to uart_getchar() will be satisfied from the
 * internal buffer until that buffer is emptied again.
 */
int
uart_getchar(FILE *stream)
{
     396:	ef 92       	push	r14
     398:	ff 92       	push	r15
     39a:	0f 93       	push	r16
     39c:	1f 93       	push	r17
     39e:	cf 93       	push	r28
     3a0:	df 93       	push	r29
     3a2:	8c 01       	movw	r16, r24
  uint8_t c;
  char *cp, *cp2;
  static char b[RX_BUFSIZE];
  static char *rxp;

  if (rxp == 0)
     3a4:	80 91 96 01 	lds	r24, 0x0196
     3a8:	90 91 97 01 	lds	r25, 0x0197
     3ac:	89 2b       	or	r24, r25
     3ae:	09 f0       	breq	.+2      	; 0x3b2 <uart_getchar+0x1c>
     3b0:	a1 c0       	rjmp	.+322    	; 0x4f4 <uart_getchar+0x15e>
     3b2:	c8 e9       	ldi	r28, 0x98	; 152
     3b4:	d1 e0       	ldi	r29, 0x01	; 1
    for (cp = b;;)
      {
	loop_until_bit_is_set(UCSR0A, RXC0);
     3b6:	80 91 c0 00 	lds	r24, 0x00C0
     3ba:	87 ff       	sbrs	r24, 7
     3bc:	fc cf       	rjmp	.-8      	; 0x3b6 <uart_getchar+0x20>
	if (UCSR0A & _BV(FE0))
     3be:	80 91 c0 00 	lds	r24, 0x00C0
     3c2:	84 fd       	sbrc	r24, 4
     3c4:	aa c0       	rjmp	.+340    	; 0x51a <uart_getchar+0x184>
	  return _FDEV_EOF;
	if (UCSR0A & _BV(DOR0))
     3c6:	80 91 c0 00 	lds	r24, 0x00C0
     3ca:	83 fd       	sbrc	r24, 3
     3cc:	a9 c0       	rjmp	.+338    	; 0x520 <uart_getchar+0x18a>
	  return _FDEV_ERR;
	c = UDR0;
     3ce:	80 91 c6 00 	lds	r24, 0x00C6
	/* behaviour similar to Unix stty ICRNL */
	if (c == '\r')
     3d2:	8d 30       	cpi	r24, 0x0D	; 13
     3d4:	61 f4       	brne	.+24     	; 0x3ee <uart_getchar+0x58>
	  c = '\n';
	if (c == '\n')
	  {
	    *cp = c;
     3d6:	8a e0       	ldi	r24, 0x0A	; 10
     3d8:	88 83       	st	Y, r24
	    uart_putchar(c, stream);
     3da:	b8 01       	movw	r22, r16
     3dc:	0e 94 af 01 	call	0x35e	; 0x35e <uart_putchar>
	    rxp = b;
     3e0:	88 e9       	ldi	r24, 0x98	; 152
     3e2:	91 e0       	ldi	r25, 0x01	; 1
     3e4:	90 93 97 01 	sts	0x0197, r25
     3e8:	80 93 96 01 	sts	0x0196, r24
	    break;
     3ec:	83 c0       	rjmp	.+262    	; 0x4f4 <uart_getchar+0x15e>
	  return _FDEV_ERR;
	c = UDR0;
	/* behaviour similar to Unix stty ICRNL */
	if (c == '\r')
	  c = '\n';
	if (c == '\n')
     3ee:	8a 30       	cpi	r24, 0x0A	; 10
     3f0:	91 f3       	breq	.-28     	; 0x3d6 <uart_getchar+0x40>
	    *cp = c;
	    uart_putchar(c, stream);
	    rxp = b;
	    break;
	  }
	else if (c == '\t')
     3f2:	89 30       	cpi	r24, 0x09	; 9
     3f4:	09 f4       	brne	.+2      	; 0x3f8 <uart_getchar+0x62>
	  c = ' ';
     3f6:	80 e2       	ldi	r24, 0x20	; 32

	if ((c >= (uint8_t)' ' && c <= (uint8_t)'\x7e') ||
     3f8:	98 2f       	mov	r25, r24
     3fa:	90 52       	subi	r25, 0x20	; 32
     3fc:	9f 35       	cpi	r25, 0x5F	; 95
     3fe:	10 f0       	brcs	.+4      	; 0x404 <uart_getchar+0x6e>
     400:	80 3a       	cpi	r24, 0xA0	; 160
     402:	90 f0       	brcs	.+36     	; 0x428 <uart_getchar+0x92>
	    c >= (uint8_t)'\xa0')
	  {
	    if (cp == b + RX_BUFSIZE - 1)
     404:	91 e0       	ldi	r25, 0x01	; 1
     406:	c7 3e       	cpi	r28, 0xE7	; 231
     408:	d9 07       	cpc	r29, r25
     40a:	49 f4       	brne	.+18     	; 0x41e <uart_getchar+0x88>
uart_putchar(char c, FILE *stream)
{

  if (c == '\a')
    {
      fputs("*ring*\n", stderr);
     40c:	60 91 22 04 	lds	r22, 0x0422
     410:	70 91 23 04 	lds	r23, 0x0423
     414:	86 e7       	ldi	r24, 0x76	; 118
     416:	91 e0       	ldi	r25, 0x01	; 1
     418:	0e 94 02 0a 	call	0x1404	; 0x1404 <fputs>
     41c:	cc cf       	rjmp	.-104    	; 0x3b6 <uart_getchar+0x20>
	  {
	    if (cp == b + RX_BUFSIZE - 1)
	      uart_putchar('\a', stream);
	    else
	      {
		*cp++ = c;
     41e:	89 93       	st	Y+, r24
		uart_putchar(c, stream);
     420:	b8 01       	movw	r22, r16
     422:	0e 94 af 01 	call	0x35e	; 0x35e <uart_putchar>
     426:	c7 cf       	rjmp	.-114    	; 0x3b6 <uart_getchar+0x20>
	      }
	    continue;
	  }

	switch (c)
     428:	82 31       	cpi	r24, 0x12	; 18
     42a:	29 f1       	breq	.+74     	; 0x476 <uart_getchar+0xe0>
     42c:	38 f4       	brcc	.+14     	; 0x43c <uart_getchar+0xa6>
     42e:	83 30       	cpi	r24, 0x03	; 3
     430:	09 f4       	brne	.+2      	; 0x434 <uart_getchar+0x9e>
     432:	76 c0       	rjmp	.+236    	; 0x520 <uart_getchar+0x18a>
     434:	88 30       	cpi	r24, 0x08	; 8
     436:	09 f0       	breq	.+2      	; 0x43a <uart_getchar+0xa4>
     438:	be cf       	rjmp	.-132    	; 0x3b6 <uart_getchar+0x20>
     43a:	09 c0       	rjmp	.+18     	; 0x44e <uart_getchar+0xb8>
     43c:	87 31       	cpi	r24, 0x17	; 23
     43e:	09 f4       	brne	.+2      	; 0x442 <uart_getchar+0xac>
     440:	4d c0       	rjmp	.+154    	; 0x4dc <uart_getchar+0x146>
     442:	8f 37       	cpi	r24, 0x7F	; 127
     444:	21 f0       	breq	.+8      	; 0x44e <uart_getchar+0xb8>
     446:	85 31       	cpi	r24, 0x15	; 21
     448:	09 f0       	breq	.+2      	; 0x44c <uart_getchar+0xb6>
     44a:	b5 cf       	rjmp	.-150    	; 0x3b6 <uart_getchar+0x20>
     44c:	34 c0       	rjmp	.+104    	; 0x4b6 <uart_getchar+0x120>
	  case 'c' & 0x1f:
	    return -1;

	  case '\b':
	  case '\x7f':
	    if (cp > b)
     44e:	e1 e0       	ldi	r30, 0x01	; 1
     450:	c8 39       	cpi	r28, 0x98	; 152
     452:	de 07       	cpc	r29, r30
     454:	09 f0       	breq	.+2      	; 0x458 <uart_getchar+0xc2>
     456:	08 f4       	brcc	.+2      	; 0x45a <uart_getchar+0xc4>
     458:	ae cf       	rjmp	.-164    	; 0x3b6 <uart_getchar+0x20>
	      {
		uart_putchar('\b', stream);
     45a:	b8 01       	movw	r22, r16
     45c:	88 e0       	ldi	r24, 0x08	; 8
     45e:	0e 94 af 01 	call	0x35e	; 0x35e <uart_putchar>
		uart_putchar(' ', stream);
     462:	b8 01       	movw	r22, r16
     464:	80 e2       	ldi	r24, 0x20	; 32
     466:	0e 94 af 01 	call	0x35e	; 0x35e <uart_putchar>
		uart_putchar('\b', stream);
     46a:	b8 01       	movw	r22, r16
     46c:	88 e0       	ldi	r24, 0x08	; 8
     46e:	0e 94 af 01 	call	0x35e	; 0x35e <uart_putchar>
		cp--;
     472:	21 97       	sbiw	r28, 0x01	; 1
     474:	a0 cf       	rjmp	.-192    	; 0x3b6 <uart_getchar+0x20>
	      }
	    break;

	  case 'r' & 0x1f:
	    uart_putchar('\r', stream);
     476:	b8 01       	movw	r22, r16
     478:	8d e0       	ldi	r24, 0x0D	; 13
     47a:	0e 94 af 01 	call	0x35e	; 0x35e <uart_putchar>
	    for (cp2 = b; cp2 < cp; cp2++)
     47e:	88 e9       	ldi	r24, 0x98	; 152
     480:	e8 2e       	mov	r14, r24
     482:	81 e0       	ldi	r24, 0x01	; 1
     484:	f8 2e       	mov	r15, r24
     486:	06 c0       	rjmp	.+12     	; 0x494 <uart_getchar+0xfe>
	      uart_putchar(*cp2, stream);
     488:	b8 01       	movw	r22, r16
     48a:	f7 01       	movw	r30, r14
     48c:	81 91       	ld	r24, Z+
     48e:	7f 01       	movw	r14, r30
     490:	0e 94 af 01 	call	0x35e	; 0x35e <uart_putchar>
	      }
	    break;

	  case 'r' & 0x1f:
	    uart_putchar('\r', stream);
	    for (cp2 = b; cp2 < cp; cp2++)
     494:	ec 16       	cp	r14, r28
     496:	fd 06       	cpc	r15, r29
     498:	b8 f3       	brcs	.-18     	; 0x488 <uart_getchar+0xf2>
     49a:	8d cf       	rjmp	.-230    	; 0x3b6 <uart_getchar+0x20>
	    break;

	  case 'u' & 0x1f:
	    while (cp > b)
	      {
		uart_putchar('\b', stream);
     49c:	b8 01       	movw	r22, r16
     49e:	88 e0       	ldi	r24, 0x08	; 8
     4a0:	0e 94 af 01 	call	0x35e	; 0x35e <uart_putchar>
		uart_putchar(' ', stream);
     4a4:	b8 01       	movw	r22, r16
     4a6:	80 e2       	ldi	r24, 0x20	; 32
     4a8:	0e 94 af 01 	call	0x35e	; 0x35e <uart_putchar>
		uart_putchar('\b', stream);
     4ac:	b8 01       	movw	r22, r16
     4ae:	88 e0       	ldi	r24, 0x08	; 8
     4b0:	0e 94 af 01 	call	0x35e	; 0x35e <uart_putchar>
		cp--;
     4b4:	21 97       	sbiw	r28, 0x01	; 1
	    for (cp2 = b; cp2 < cp; cp2++)
	      uart_putchar(*cp2, stream);
	    break;

	  case 'u' & 0x1f:
	    while (cp > b)
     4b6:	f1 e0       	ldi	r31, 0x01	; 1
     4b8:	c8 39       	cpi	r28, 0x98	; 152
     4ba:	df 07       	cpc	r29, r31
     4bc:	09 f0       	breq	.+2      	; 0x4c0 <uart_getchar+0x12a>
     4be:	70 f7       	brcc	.-36     	; 0x49c <uart_getchar+0x106>
     4c0:	7a cf       	rjmp	.-268    	; 0x3b6 <uart_getchar+0x20>
	    break;

	  case 'w' & 0x1f:
	    while (cp > b && cp[-1] != ' ')
	      {
		uart_putchar('\b', stream);
     4c2:	b8 01       	movw	r22, r16
     4c4:	88 e0       	ldi	r24, 0x08	; 8
     4c6:	0e 94 af 01 	call	0x35e	; 0x35e <uart_putchar>
		uart_putchar(' ', stream);
     4ca:	b8 01       	movw	r22, r16
     4cc:	80 e2       	ldi	r24, 0x20	; 32
     4ce:	0e 94 af 01 	call	0x35e	; 0x35e <uart_putchar>
		uart_putchar('\b', stream);
     4d2:	b8 01       	movw	r22, r16
     4d4:	88 e0       	ldi	r24, 0x08	; 8
     4d6:	0e 94 af 01 	call	0x35e	; 0x35e <uart_putchar>
		cp--;
     4da:	e7 01       	movw	r28, r14
		cp--;
	      }
	    break;

	  case 'w' & 0x1f:
	    while (cp > b && cp[-1] != ' ')
     4dc:	81 e0       	ldi	r24, 0x01	; 1
     4de:	c8 39       	cpi	r28, 0x98	; 152
     4e0:	d8 07       	cpc	r29, r24
     4e2:	09 f0       	breq	.+2      	; 0x4e6 <uart_getchar+0x150>
     4e4:	08 f4       	brcc	.+2      	; 0x4e8 <uart_getchar+0x152>
     4e6:	67 cf       	rjmp	.-306    	; 0x3b6 <uart_getchar+0x20>
     4e8:	fe 01       	movw	r30, r28
     4ea:	82 91       	ld	r24, -Z
     4ec:	7f 01       	movw	r14, r30
     4ee:	80 32       	cpi	r24, 0x20	; 32
     4f0:	41 f7       	brne	.-48     	; 0x4c2 <uart_getchar+0x12c>
     4f2:	61 cf       	rjmp	.-318    	; 0x3b6 <uart_getchar+0x20>
	      }
	    break;
	  }
      }

  c = *rxp++;
     4f4:	e0 91 96 01 	lds	r30, 0x0196
     4f8:	f0 91 97 01 	lds	r31, 0x0197
     4fc:	20 81       	ld	r18, Z
  if (c == '\n')
     4fe:	2a 30       	cpi	r18, 0x0A	; 10
     500:	31 f0       	breq	.+12     	; 0x50e <uart_getchar+0x178>
	      }
	    break;
	  }
      }

  c = *rxp++;
     502:	31 96       	adiw	r30, 0x01	; 1
     504:	f0 93 97 01 	sts	0x0197, r31
     508:	e0 93 96 01 	sts	0x0196, r30
     50c:	04 c0       	rjmp	.+8      	; 0x516 <uart_getchar+0x180>
  if (c == '\n')
    rxp = 0;
     50e:	10 92 97 01 	sts	0x0197, r1
     512:	10 92 96 01 	sts	0x0196, r1

  return c;
     516:	30 e0       	ldi	r19, 0x00	; 0
     518:	05 c0       	rjmp	.+10     	; 0x524 <uart_getchar+0x18e>
  if (rxp == 0)
    for (cp = b;;)
      {
	loop_until_bit_is_set(UCSR0A, RXC0);
	if (UCSR0A & _BV(FE0))
	  return _FDEV_EOF;
     51a:	2e ef       	ldi	r18, 0xFE	; 254
     51c:	3f ef       	ldi	r19, 0xFF	; 255
     51e:	02 c0       	rjmp	.+4      	; 0x524 <uart_getchar+0x18e>
	  }

	switch (c)
	  {
	  case 'c' & 0x1f:
	    return -1;
     520:	2f ef       	ldi	r18, 0xFF	; 255
     522:	3f ef       	ldi	r19, 0xFF	; 255
  c = *rxp++;
  if (c == '\n')
    rxp = 0;

  return c;
}
     524:	c9 01       	movw	r24, r18
     526:	df 91       	pop	r29
     528:	cf 91       	pop	r28
     52a:	1f 91       	pop	r17
     52c:	0f 91       	pop	r16
     52e:	ff 90       	pop	r15
     530:	ef 90       	pop	r14
     532:	08 95       	ret

00000534 <__vector_18>:
volatile unsigned long accumulator ;
volatile unsigned char changed;


volatile unsigned long increment;
ISR( TIMER0_OVF_vect){
     534:	1f 92       	push	r1
     536:	0f 92       	push	r0
     538:	0f b6       	in	r0, 0x3f	; 63
     53a:	0f 92       	push	r0
     53c:	11 24       	eor	r1, r1
     53e:	0b b6       	in	r0, 0x3b	; 59
     540:	0f 92       	push	r0
     542:	2f 93       	push	r18
     544:	3f 93       	push	r19
     546:	4f 93       	push	r20
     548:	5f 93       	push	r21
     54a:	6f 93       	push	r22
     54c:	7f 93       	push	r23
     54e:	8f 93       	push	r24
     550:	9f 93       	push	r25
     552:	af 93       	push	r26
     554:	bf 93       	push	r27
     556:	cf 93       	push	r28
     558:	df 93       	push	r29
     55a:	ef 93       	push	r30
     55c:	ff 93       	push	r31
	//accumulator = accumulator + increment ;
	//highbyte = (char)(accumulator >> 24) ;
	
	// output the wavefrom sample
	//OCR0A = 128 + ((sineTable[highbyte] * rampTable[rampCount])>>7) ;
	changed = TRUE;
     55e:	81 e0       	ldi	r24, 0x01	; 1
     560:	80 93 0a 04 	sts	0x040A, r24


	OCR0A = 128 + 
	   ( (
	   	   (sineTable[(accumulator_a >> 24)] + sineTable[(accumulator_b >> 24)]) * rampTable[rampCount]
     564:	40 91 02 04 	lds	r20, 0x0402
     568:	50 91 03 04 	lds	r21, 0x0403
     56c:	60 91 04 04 	lds	r22, 0x0404
     570:	70 91 05 04 	lds	r23, 0x0405
     574:	80 91 0d 04 	lds	r24, 0x040D
     578:	90 91 0e 04 	lds	r25, 0x040E
     57c:	a0 91 0f 04 	lds	r26, 0x040F
     580:	b0 91 10 04 	lds	r27, 0x0410
     584:	e0 91 0b 04 	lds	r30, 0x040B
     588:	f0 91 0c 04 	lds	r31, 0x040C
     58c:	47 2f       	mov	r20, r23
     58e:	55 27       	eor	r21, r21
     590:	66 27       	eor	r22, r22
     592:	77 27       	eor	r23, r23
     594:	ea 01       	movw	r28, r20
     596:	ce 5f       	subi	r28, 0xFE	; 254
     598:	dc 4f       	sbci	r29, 0xFC	; 252
     59a:	28 81       	ld	r18, Y
     59c:	8b 2f       	mov	r24, r27
     59e:	99 27       	eor	r25, r25
     5a0:	aa 27       	eor	r26, r26
     5a2:	bb 27       	eor	r27, r27
     5a4:	dc 01       	movw	r26, r24
     5a6:	ae 5f       	subi	r26, 0xFE	; 254
     5a8:	bc 4f       	sbci	r27, 0xFC	; 252
     5aa:	8c 91       	ld	r24, X
     5ac:	99 27       	eor	r25, r25
     5ae:	87 fd       	sbrc	r24, 7
     5b0:	90 95       	com	r25
     5b2:	82 0f       	add	r24, r18
     5b4:	91 1d       	adc	r25, r1
     5b6:	27 fd       	sbrc	r18, 7
     5b8:	9a 95       	dec	r25
     5ba:	e7 50       	subi	r30, 0x07	; 7
     5bc:	fe 4f       	sbci	r31, 0xFE	; 254
     5be:	40 81       	ld	r20, Z
     5c0:	48 9f       	mul	r20, r24
     5c2:	90 01       	movw	r18, r0
     5c4:	49 9f       	mul	r20, r25
     5c6:	30 0d       	add	r19, r0
     5c8:	11 24       	eor	r1, r1
	// output the wavefrom sample
	//OCR0A = 128 + ((sineTable[highbyte] * rampTable[rampCount])>>7) ;
	changed = TRUE;


	OCR0A = 128 + 
     5ca:	83 2f       	mov	r24, r19
     5cc:	80 58       	subi	r24, 0x80	; 128
     5ce:	87 bd       	out	0x27, r24	; 39
	   ( (
	   	   (sineTable[(accumulator_a >> 24)] + sineTable[(accumulator_b >> 24)]) * rampTable[rampCount]
	   	 ) >> 8
	   );
	accumulator_a += increment_a;
     5d0:	80 91 02 04 	lds	r24, 0x0402
     5d4:	90 91 03 04 	lds	r25, 0x0403
     5d8:	a0 91 04 04 	lds	r26, 0x0404
     5dc:	b0 91 05 04 	lds	r27, 0x0405
     5e0:	40 91 f5 01 	lds	r20, 0x01F5
     5e4:	50 91 f6 01 	lds	r21, 0x01F6
     5e8:	60 91 f7 01 	lds	r22, 0x01F7
     5ec:	70 91 f8 01 	lds	r23, 0x01F8
     5f0:	84 0f       	add	r24, r20
     5f2:	95 1f       	adc	r25, r21
     5f4:	a6 1f       	adc	r26, r22
     5f6:	b7 1f       	adc	r27, r23
     5f8:	80 93 02 04 	sts	0x0402, r24
     5fc:	90 93 03 04 	sts	0x0403, r25
     600:	a0 93 04 04 	sts	0x0404, r26
     604:	b0 93 05 04 	sts	0x0405, r27
	accumulator_b += increment_b;
     608:	80 91 0d 04 	lds	r24, 0x040D
     60c:	90 91 0e 04 	lds	r25, 0x040E
     610:	a0 91 0f 04 	lds	r26, 0x040F
     614:	b0 91 10 04 	lds	r27, 0x0410
     618:	40 91 17 04 	lds	r20, 0x0417
     61c:	50 91 18 04 	lds	r21, 0x0418
     620:	60 91 19 04 	lds	r22, 0x0419
     624:	70 91 1a 04 	lds	r23, 0x041A
     628:	84 0f       	add	r24, r20
     62a:	95 1f       	adc	r25, r21
     62c:	a6 1f       	adc	r26, r22
     62e:	b7 1f       	adc	r27, r23
     630:	80 93 0d 04 	sts	0x040D, r24
     634:	90 93 0e 04 	sts	0x040E, r25
     638:	a0 93 0f 04 	sts	0x040F, r26
     63c:	b0 93 10 04 	sts	0x0410, r27
	//generates a 1 ms timebase
	count--;	
     640:	80 91 12 04 	lds	r24, 0x0412
     644:	81 50       	subi	r24, 0x01	; 1
     646:	80 93 12 04 	sts	0x0412, r24
}
     64a:	ff 91       	pop	r31
     64c:	ef 91       	pop	r30
     64e:	df 91       	pop	r29
     650:	cf 91       	pop	r28
     652:	bf 91       	pop	r27
     654:	af 91       	pop	r26
     656:	9f 91       	pop	r25
     658:	8f 91       	pop	r24
     65a:	7f 91       	pop	r23
     65c:	6f 91       	pop	r22
     65e:	5f 91       	pop	r21
     660:	4f 91       	pop	r20
     662:	3f 91       	pop	r19
     664:	2f 91       	pop	r18
     666:	0f 90       	pop	r0
     668:	0b be       	out	0x3b, r0	; 59
     66a:	0f 90       	pop	r0
     66c:	0f be       	out	0x3f, r0	; 63
     66e:	0f 90       	pop	r0
     670:	1f 90       	pop	r1
     672:	18 95       	reti

00000674 <init_dtmf>:


void init_dtmf(){
     674:	ef 92       	push	r14
     676:	ff 92       	push	r15
     678:	0f 93       	push	r16
     67a:	1f 93       	push	r17
     67c:	cf 93       	push	r28
     67e:	df 93       	push	r29
	DDRB = 0;
     680:	14 b8       	out	0x04, r1	; 4
	DDRB |= OUTPUT_PIN;
     682:	23 9a       	sbi	0x04, 3	; 4
     684:	52 e0       	ldi	r21, 0x02	; 2
     686:	e5 2e       	mov	r14, r21
     688:	53 e0       	ldi	r21, 0x03	; 3
     68a:	f5 2e       	mov	r15, r21
     68c:	09 ef       	ldi	r16, 0xF9	; 249
     68e:	11 e0       	ldi	r17, 0x01	; 1
	int i;
	for (i=0; i<256; i++){
     690:	c0 e0       	ldi	r28, 0x00	; 0
     692:	d0 e0       	ldi	r29, 0x00	; 0
		sineTable[i] = (char)(127.0 * sin(6.283*((float)i)/256.0)) ;
     694:	be 01       	movw	r22, r28
     696:	88 27       	eor	r24, r24
     698:	77 fd       	sbrc	r23, 7
     69a:	80 95       	com	r24
     69c:	98 2f       	mov	r25, r24
     69e:	0e 94 38 07 	call	0xe70	; 0xe70 <__floatsisf>
     6a2:	26 e5       	ldi	r18, 0x56	; 86
     6a4:	3e e0       	ldi	r19, 0x0E	; 14
     6a6:	49 ec       	ldi	r20, 0xC9	; 201
     6a8:	50 e4       	ldi	r21, 0x40	; 64
     6aa:	0e 94 24 06 	call	0xc48	; 0xc48 <__mulsf3>
     6ae:	20 e0       	ldi	r18, 0x00	; 0
     6b0:	30 e0       	ldi	r19, 0x00	; 0
     6b2:	40 e8       	ldi	r20, 0x80	; 128
     6b4:	5b e3       	ldi	r21, 0x3B	; 59
     6b6:	0e 94 24 06 	call	0xc48	; 0xc48 <__mulsf3>
     6ba:	0e 94 2d 0a 	call	0x145a	; 0x145a <sin>
     6be:	20 e0       	ldi	r18, 0x00	; 0
     6c0:	30 e0       	ldi	r19, 0x00	; 0
     6c2:	4e ef       	ldi	r20, 0xFE	; 254
     6c4:	52 e4       	ldi	r21, 0x42	; 66
     6c6:	0e 94 24 06 	call	0xc48	; 0xc48 <__mulsf3>
     6ca:	0e 94 3f 04 	call	0x87e	; 0x87e <__fixunssfsi>
     6ce:	f7 01       	movw	r30, r14
     6d0:	61 93       	st	Z+, r22
     6d2:	7f 01       	movw	r14, r30
		// the following table needs 
		// rampTable[0]=0 and rampTable[255]=127
		rampTable[i] = i>>1 ;
     6d4:	ce 01       	movw	r24, r28
     6d6:	95 95       	asr	r25
     6d8:	87 95       	ror	r24
     6da:	f8 01       	movw	r30, r16
     6dc:	81 93       	st	Z+, r24
     6de:	8f 01       	movw	r16, r30

void init_dtmf(){
	DDRB = 0;
	DDRB |= OUTPUT_PIN;
	int i;
	for (i=0; i<256; i++){
     6e0:	21 96       	adiw	r28, 0x01	; 1
     6e2:	c1 15       	cp	r28, r1
     6e4:	f1 e0       	ldi	r31, 0x01	; 1
     6e6:	df 07       	cpc	r29, r31
     6e8:	a9 f6       	brne	.-86     	; 0x694 <init_dtmf+0x20>
		sineTable[i] = (char)(127.0 * sin(6.283*((float)i)/256.0)) ;
		// the following table needs 
		// rampTable[0]=0 and rampTable[255]=127
		rampTable[i] = i>>1 ;
	}
	time = 0;
     6ea:	10 92 ef 01 	sts	0x01EF, r1
     6ee:	10 92 ee 01 	sts	0x01EE, r1

	// TCCR0B = 0;
	// //set divider to 1, run T0 at 16 MHz 
	// TCCR0B |= T0_CS00;
	TCCR0B = 1;
     6f2:	81 e0       	ldi	r24, 0x01	; 1
     6f4:	85 bd       	out	0x25, r24	; 37
	TIMSK0 = 0;
     6f6:	10 92 6e 00 	sts	0x006E, r1
	TIMSK0 |= TIMER0_OVERFLOW_INTERRUPT_ENABLE;
     6fa:	80 91 6e 00 	lds	r24, 0x006E
     6fe:	81 60       	ori	r24, 0x01	; 1
     700:	80 93 6e 00 	sts	0x006E, r24
	//turn on fast PWM and OC0A - output 
	TCCR0A = 0;
     704:	14 bc       	out	0x24, r1	; 36
	TCCR0A = (1<<COM0A0) | (1<<COM0A1) | (1<<WGM00) | (1<<WGM01) ; 
     706:	83 ec       	ldi	r24, 0xC3	; 195
     708:	84 bd       	out	0x24, r24	; 36

	//TCCR0A |= WAVE_GEN_M00 + WAVE_GEN_M01 + COMPARE_MATCH_OUTPUT_A0 + COMPARE_MATCH_OUTPUT_A1; 
	OCR0A = 128;
     70a:	80 e8       	ldi	r24, 0x80	; 128
     70c:	87 bd       	out	0x27, r24	; 39
	//increment = INCREMENT_941;
	//increment_a = INCREMENT_941;
	//increment_b = INCREMENT_941;
	sei();
     70e:	78 94       	sei
}
     710:	df 91       	pop	r29
     712:	cf 91       	pop	r28
     714:	1f 91       	pop	r17
     716:	0f 91       	pop	r16
     718:	ff 90       	pop	r15
     71a:	ef 90       	pop	r14
     71c:	08 95       	ret

0000071e <play>:

//plays fA and fB for a duration of duration ms
void play(int fA, int fB){
	//if( !is_playing ){
		//is_playing = TRUE;
		switch( fA){
     71e:	89 3b       	cpi	r24, 0xB9	; 185
     720:	24 e0       	ldi	r18, 0x04	; 4
     722:	92 07       	cpc	r25, r18
     724:	89 f0       	breq	.+34     	; 0x748 <play+0x2a>
     726:	44 f4       	brge	.+16     	; 0x738 <play+0x1a>
     728:	89 3b       	cpi	r24, 0xB9	; 185
     72a:	22 e0       	ldi	r18, 0x02	; 2
     72c:	92 07       	cpc	r25, r18
     72e:	19 f1       	breq	.+70     	; 0x776 <play+0x58>
     730:	8d 3a       	cpi	r24, 0xAD	; 173
     732:	93 40       	sbci	r25, 0x03	; 3
     734:	51 f5       	brne	.+84     	; 0x78a <play+0x6c>
     736:	24 c0       	rjmp	.+72     	; 0x780 <play+0x62>
     738:	88 33       	cpi	r24, 0x38	; 56
     73a:	25 e0       	ldi	r18, 0x05	; 5
     73c:	92 07       	cpc	r25, r18
     73e:	49 f0       	breq	.+18     	; 0x752 <play+0x34>
     740:	85 3c       	cpi	r24, 0xC5	; 197
     742:	95 40       	sbci	r25, 0x05	; 5
     744:	11 f5       	brne	.+68     	; 0x78a <play+0x6c>
     746:	12 c0       	rjmp	.+36     	; 0x76c <play+0x4e>
			case 1209: increment_a = INCREMENT_1209; break;
     748:	87 e3       	ldi	r24, 0x37	; 55
     74a:	98 eb       	ldi	r25, 0xB8	; 184
     74c:	a3 ef       	ldi	r26, 0xF3	; 243
     74e:	b4 e0       	ldi	r27, 0x04	; 4
     750:	04 c0       	rjmp	.+8      	; 0x75a <play+0x3c>
			case 1336: increment_a = INCREMENT_1336; break;
     752:	88 e4       	ldi	r24, 0x48	; 72
     754:	93 ee       	ldi	r25, 0xE3	; 227
     756:	a8 e7       	ldi	r26, 0x78	; 120
     758:	b5 e0       	ldi	r27, 0x05	; 5
     75a:	80 93 f5 01 	sts	0x01F5, r24
     75e:	90 93 f6 01 	sts	0x01F6, r25
     762:	a0 93 f7 01 	sts	0x01F7, r26
     766:	b0 93 f8 01 	sts	0x01F8, r27
     76a:	17 c0       	rjmp	.+46     	; 0x79a <play+0x7c>
			case 1477: increment_a = INCREMENT_1477; break;
     76c:	8b e6       	ldi	r24, 0x6B	; 107
     76e:	9c eb       	ldi	r25, 0xBC	; 188
     770:	ac e0       	ldi	r26, 0x0C	; 12
     772:	b6 e0       	ldi	r27, 0x06	; 6
     774:	f2 cf       	rjmp	.-28     	; 0x75a <play+0x3c>
			case 697:  increment_a = INCREMENT_697; break;
     776:	87 e3       	ldi	r24, 0x37	; 55
     778:	9a ed       	ldi	r25, 0xDA	; 218
     77a:	aa ed       	ldi	r26, 0xDA	; 218
     77c:	b2 e0       	ldi	r27, 0x02	; 2
     77e:	ed cf       	rjmp	.-38     	; 0x75a <play+0x3c>
			case 941: increment_a = INCREMENT_941; break;
     780:	83 e0       	ldi	r24, 0x03	; 3
     782:	94 eb       	ldi	r25, 0xB4	; 180
     784:	aa ed       	ldi	r26, 0xDA	; 218
     786:	b3 e0       	ldi	r27, 0x03	; 3
     788:	e8 cf       	rjmp	.-48     	; 0x75a <play+0x3c>
			default: increment_a = 0; break;
     78a:	10 92 f5 01 	sts	0x01F5, r1
     78e:	10 92 f6 01 	sts	0x01F6, r1
     792:	10 92 f7 01 	sts	0x01F7, r1
     796:	10 92 f8 01 	sts	0x01F8, r1
		}

		switch ( fB) {
     79a:	69 33       	cpi	r22, 0x39	; 57
     79c:	83 e0       	ldi	r24, 0x03	; 3
     79e:	78 07       	cpc	r23, r24
     7a0:	d9 f0       	breq	.+54     	; 0x7d8 <play+0xba>
     7a2:	44 f4       	brge	.+16     	; 0x7b4 <play+0x96>
     7a4:	69 3b       	cpi	r22, 0xB9	; 185
     7a6:	82 e0       	ldi	r24, 0x02	; 2
     7a8:	78 07       	cpc	r23, r24
     7aa:	61 f0       	breq	.+24     	; 0x7c4 <play+0xa6>
     7ac:	62 30       	cpi	r22, 0x02	; 2
     7ae:	73 40       	sbci	r23, 0x03	; 3
     7b0:	91 f5       	brne	.+100    	; 0x816 <play+0xf8>
     7b2:	0d c0       	rjmp	.+26     	; 0x7ce <play+0xb0>
     7b4:	6d 3a       	cpi	r22, 0xAD	; 173
     7b6:	83 e0       	ldi	r24, 0x03	; 3
     7b8:	78 07       	cpc	r23, r24
     7ba:	99 f0       	breq	.+38     	; 0x7e2 <play+0xc4>
     7bc:	69 3b       	cpi	r22, 0xB9	; 185
     7be:	74 40       	sbci	r23, 0x04	; 4
     7c0:	51 f5       	brne	.+84     	; 0x816 <play+0xf8>
     7c2:	1c c0       	rjmp	.+56     	; 0x7fc <play+0xde>
			case 697: increment_b = INCREMENT_697; break;
     7c4:	87 e3       	ldi	r24, 0x37	; 55
     7c6:	9a ed       	ldi	r25, 0xDA	; 218
     7c8:	aa ed       	ldi	r26, 0xDA	; 218
     7ca:	b2 e0       	ldi	r27, 0x02	; 2
     7cc:	0e c0       	rjmp	.+28     	; 0x7ea <play+0xcc>
			case 770: increment_b = INCREMENT_770; break;
     7ce:	8e ed       	ldi	r24, 0xDE	; 222
     7d0:	95 e6       	ldi	r25, 0x65	; 101
     7d2:	a7 e2       	ldi	r26, 0x27	; 39
     7d4:	b3 e0       	ldi	r27, 0x03	; 3
     7d6:	09 c0       	rjmp	.+18     	; 0x7ea <play+0xcc>
			case 825: increment_b = INCREMENT_825; break;
     7d8:	87 eb       	ldi	r24, 0xB7	; 183
     7da:	91 e1       	ldi	r25, 0x11	; 17
     7dc:	a1 e6       	ldi	r26, 0x61	; 97
     7de:	b3 e0       	ldi	r27, 0x03	; 3
     7e0:	04 c0       	rjmp	.+8      	; 0x7ea <play+0xcc>
			case 941: increment_b = INCREMENT_941; break;
     7e2:	83 e0       	ldi	r24, 0x03	; 3
     7e4:	94 eb       	ldi	r25, 0xB4	; 180
     7e6:	aa ed       	ldi	r26, 0xDA	; 218
     7e8:	b3 e0       	ldi	r27, 0x03	; 3
     7ea:	80 93 17 04 	sts	0x0417, r24
     7ee:	90 93 18 04 	sts	0x0418, r25
     7f2:	a0 93 19 04 	sts	0x0419, r26
     7f6:	b0 93 1a 04 	sts	0x041A, r27
     7fa:	08 95       	ret
			case 1209: increment_a = INCREMENT_1209; break;
     7fc:	87 e3       	ldi	r24, 0x37	; 55
     7fe:	98 eb       	ldi	r25, 0xB8	; 184
     800:	a3 ef       	ldi	r26, 0xF3	; 243
     802:	b4 e0       	ldi	r27, 0x04	; 4
     804:	80 93 f5 01 	sts	0x01F5, r24
     808:	90 93 f6 01 	sts	0x01F6, r25
     80c:	a0 93 f7 01 	sts	0x01F7, r26
     810:	b0 93 f8 01 	sts	0x01F8, r27
     814:	08 95       	ret
			default: increment_b = 0; break;
     816:	10 92 17 04 	sts	0x0417, r1
     81a:	10 92 18 04 	sts	0x0418, r1
     81e:	10 92 19 04 	sts	0x0419, r1
     822:	10 92 1a 04 	sts	0x041A, r1
     826:	08 95       	ret

00000828 <stop_playing>:


}

void stop_playing(){
	is_playing = FALSE;
     828:	10 92 f4 01 	sts	0x01F4, r1
	sample = 0;
     82c:	10 92 1d 04 	sts	0x041D, r1
     830:	10 92 1c 04 	sts	0x041C, r1
	rampCount = 0;
     834:	10 92 0c 04 	sts	0x040C, r1
     838:	10 92 0b 04 	sts	0x040B, r1
	increment_a = increment_b = 0;
     83c:	10 92 17 04 	sts	0x0417, r1
     840:	10 92 18 04 	sts	0x0418, r1
     844:	10 92 19 04 	sts	0x0419, r1
     848:	10 92 1a 04 	sts	0x041A, r1
     84c:	10 92 f5 01 	sts	0x01F5, r1
     850:	10 92 f6 01 	sts	0x01F6, r1
     854:	10 92 f7 01 	sts	0x01F7, r1
     858:	10 92 f8 01 	sts	0x01F8, r1
	accumulator_a = accumulator_b = 0;
     85c:	10 92 0d 04 	sts	0x040D, r1
     860:	10 92 0e 04 	sts	0x040E, r1
     864:	10 92 0f 04 	sts	0x040F, r1
     868:	10 92 10 04 	sts	0x0410, r1
     86c:	10 92 02 04 	sts	0x0402, r1
     870:	10 92 03 04 	sts	0x0403, r1
     874:	10 92 04 04 	sts	0x0404, r1
     878:	10 92 05 04 	sts	0x0405, r1
     87c:	08 95       	ret

0000087e <__fixunssfsi>:
     87e:	cf 92       	push	r12
     880:	df 92       	push	r13
     882:	ef 92       	push	r14
     884:	ff 92       	push	r15
     886:	0f 93       	push	r16
     888:	1f 93       	push	r17
     88a:	6b 01       	movw	r12, r22
     88c:	7c 01       	movw	r14, r24
     88e:	20 e0       	ldi	r18, 0x00	; 0
     890:	30 e0       	ldi	r19, 0x00	; 0
     892:	40 e0       	ldi	r20, 0x00	; 0
     894:	5f e4       	ldi	r21, 0x4F	; 79
     896:	0e 94 09 07 	call	0xe12	; 0xe12 <__gesf2>
     89a:	87 fd       	sbrc	r24, 7
     89c:	0e c0       	rjmp	.+28     	; 0x8ba <__fixunssfsi+0x3c>
     89e:	20 e0       	ldi	r18, 0x00	; 0
     8a0:	30 e0       	ldi	r19, 0x00	; 0
     8a2:	40 e0       	ldi	r20, 0x00	; 0
     8a4:	5f e4       	ldi	r21, 0x4F	; 79
     8a6:	c7 01       	movw	r24, r14
     8a8:	b6 01       	movw	r22, r12
     8aa:	0e 94 f4 05 	call	0xbe8	; 0xbe8 <__subsf3>
     8ae:	0e 94 94 07 	call	0xf28	; 0xf28 <__fixsfsi>
     8b2:	8b 01       	movw	r16, r22
     8b4:	9c 01       	movw	r18, r24
     8b6:	30 58       	subi	r19, 0x80	; 128
     8b8:	06 c0       	rjmp	.+12     	; 0x8c6 <__fixunssfsi+0x48>
     8ba:	c7 01       	movw	r24, r14
     8bc:	b6 01       	movw	r22, r12
     8be:	0e 94 94 07 	call	0xf28	; 0xf28 <__fixsfsi>
     8c2:	8b 01       	movw	r16, r22
     8c4:	9c 01       	movw	r18, r24
     8c6:	b8 01       	movw	r22, r16
     8c8:	c9 01       	movw	r24, r18
     8ca:	1f 91       	pop	r17
     8cc:	0f 91       	pop	r16
     8ce:	ff 90       	pop	r15
     8d0:	ef 90       	pop	r14
     8d2:	df 90       	pop	r13
     8d4:	cf 90       	pop	r12
     8d6:	08 95       	ret

000008d8 <_fpadd_parts>:
     8d8:	a4 e0       	ldi	r26, 0x04	; 4
     8da:	b0 e0       	ldi	r27, 0x00	; 0
     8dc:	e2 e7       	ldi	r30, 0x72	; 114
     8de:	f4 e0       	ldi	r31, 0x04	; 4
     8e0:	0c 94 bd 09 	jmp	0x137a	; 0x137a <__prologue_saves__+0x4>
     8e4:	7c 01       	movw	r14, r24
     8e6:	6a 01       	movw	r12, r20
     8e8:	fc 01       	movw	r30, r24
     8ea:	80 81       	ld	r24, Z
     8ec:	82 30       	cpi	r24, 0x02	; 2
     8ee:	08 f4       	brcc	.+2      	; 0x8f2 <_fpadd_parts+0x1a>
     8f0:	4a c1       	rjmp	.+660    	; 0xb86 <_fpadd_parts+0x2ae>
     8f2:	fb 01       	movw	r30, r22
     8f4:	90 81       	ld	r25, Z
     8f6:	92 30       	cpi	r25, 0x02	; 2
     8f8:	08 f4       	brcc	.+2      	; 0x8fc <_fpadd_parts+0x24>
     8fa:	42 c1       	rjmp	.+644    	; 0xb80 <_fpadd_parts+0x2a8>
     8fc:	84 30       	cpi	r24, 0x04	; 4
     8fe:	79 f4       	brne	.+30     	; 0x91e <_fpadd_parts+0x46>
     900:	94 30       	cpi	r25, 0x04	; 4
     902:	09 f0       	breq	.+2      	; 0x906 <_fpadd_parts+0x2e>
     904:	40 c1       	rjmp	.+640    	; 0xb86 <_fpadd_parts+0x2ae>
     906:	f7 01       	movw	r30, r14
     908:	91 81       	ldd	r25, Z+1	; 0x01
     90a:	fb 01       	movw	r30, r22
     90c:	81 81       	ldd	r24, Z+1	; 0x01
     90e:	98 17       	cp	r25, r24
     910:	09 f4       	brne	.+2      	; 0x914 <_fpadd_parts+0x3c>
     912:	39 c1       	rjmp	.+626    	; 0xb86 <_fpadd_parts+0x2ae>
     914:	ae e4       	ldi	r26, 0x4E	; 78
     916:	ea 2e       	mov	r14, r26
     918:	a1 e0       	ldi	r26, 0x01	; 1
     91a:	fa 2e       	mov	r15, r26
     91c:	34 c1       	rjmp	.+616    	; 0xb86 <_fpadd_parts+0x2ae>
     91e:	94 30       	cpi	r25, 0x04	; 4
     920:	09 f4       	brne	.+2      	; 0x924 <_fpadd_parts+0x4c>
     922:	2e c1       	rjmp	.+604    	; 0xb80 <_fpadd_parts+0x2a8>
     924:	92 30       	cpi	r25, 0x02	; 2
     926:	91 f4       	brne	.+36     	; 0x94c <_fpadd_parts+0x74>
     928:	82 30       	cpi	r24, 0x02	; 2
     92a:	09 f0       	breq	.+2      	; 0x92e <_fpadd_parts+0x56>
     92c:	2c c1       	rjmp	.+600    	; 0xb86 <_fpadd_parts+0x2ae>
     92e:	88 e0       	ldi	r24, 0x08	; 8
     930:	f7 01       	movw	r30, r14
     932:	da 01       	movw	r26, r20
     934:	01 90       	ld	r0, Z+
     936:	0d 92       	st	X+, r0
     938:	8a 95       	dec	r24
     93a:	e1 f7       	brne	.-8      	; 0x934 <_fpadd_parts+0x5c>
     93c:	fb 01       	movw	r30, r22
     93e:	81 81       	ldd	r24, Z+1	; 0x01
     940:	f7 01       	movw	r30, r14
     942:	91 81       	ldd	r25, Z+1	; 0x01
     944:	89 23       	and	r24, r25
     946:	fa 01       	movw	r30, r20
     948:	81 83       	std	Z+1, r24	; 0x01
     94a:	1c c1       	rjmp	.+568    	; 0xb84 <_fpadd_parts+0x2ac>
     94c:	82 30       	cpi	r24, 0x02	; 2
     94e:	09 f4       	brne	.+2      	; 0x952 <_fpadd_parts+0x7a>
     950:	17 c1       	rjmp	.+558    	; 0xb80 <_fpadd_parts+0x2a8>
     952:	f7 01       	movw	r30, r14
     954:	82 81       	ldd	r24, Z+2	; 0x02
     956:	93 81       	ldd	r25, Z+3	; 0x03
     958:	fb 01       	movw	r30, r22
     95a:	a2 81       	ldd	r26, Z+2	; 0x02
     95c:	b3 81       	ldd	r27, Z+3	; 0x03
     95e:	f7 01       	movw	r30, r14
     960:	04 81       	ldd	r16, Z+4	; 0x04
     962:	15 81       	ldd	r17, Z+5	; 0x05
     964:	26 81       	ldd	r18, Z+6	; 0x06
     966:	37 81       	ldd	r19, Z+7	; 0x07
     968:	fb 01       	movw	r30, r22
     96a:	84 80       	ldd	r8, Z+4	; 0x04
     96c:	95 80       	ldd	r9, Z+5	; 0x05
     96e:	a6 80       	ldd	r10, Z+6	; 0x06
     970:	b7 80       	ldd	r11, Z+7	; 0x07
     972:	fc 01       	movw	r30, r24
     974:	ea 1b       	sub	r30, r26
     976:	fb 0b       	sbc	r31, r27
     978:	af 01       	movw	r20, r30
     97a:	f7 ff       	sbrs	r31, 7
     97c:	04 c0       	rjmp	.+8      	; 0x986 <_fpadd_parts+0xae>
     97e:	44 27       	eor	r20, r20
     980:	55 27       	eor	r21, r21
     982:	4e 1b       	sub	r20, r30
     984:	5f 0b       	sbc	r21, r31
     986:	40 32       	cpi	r20, 0x20	; 32
     988:	51 05       	cpc	r21, r1
     98a:	0c f0       	brlt	.+2      	; 0x98e <_fpadd_parts+0xb6>
     98c:	74 c0       	rjmp	.+232    	; 0xa76 <_fpadd_parts+0x19e>
     98e:	1e 16       	cp	r1, r30
     990:	1f 06       	cpc	r1, r31
     992:	b4 f5       	brge	.+108    	; 0xa00 <_fpadd_parts+0x128>
     994:	24 01       	movw	r4, r8
     996:	35 01       	movw	r6, r10
     998:	04 2e       	mov	r0, r20
     99a:	04 c0       	rjmp	.+8      	; 0x9a4 <_fpadd_parts+0xcc>
     99c:	76 94       	lsr	r7
     99e:	67 94       	ror	r6
     9a0:	57 94       	ror	r5
     9a2:	47 94       	ror	r4
     9a4:	0a 94       	dec	r0
     9a6:	d2 f7       	brpl	.-12     	; 0x99c <_fpadd_parts+0xc4>
     9a8:	49 82       	std	Y+1, r4	; 0x01
     9aa:	5a 82       	std	Y+2, r5	; 0x02
     9ac:	6b 82       	std	Y+3, r6	; 0x03
     9ae:	7c 82       	std	Y+4, r7	; 0x04
     9b0:	41 2c       	mov	r4, r1
     9b2:	51 2c       	mov	r5, r1
     9b4:	32 01       	movw	r6, r4
     9b6:	43 94       	inc	r4
     9b8:	04 c0       	rjmp	.+8      	; 0x9c2 <_fpadd_parts+0xea>
     9ba:	44 0c       	add	r4, r4
     9bc:	55 1c       	adc	r5, r5
     9be:	66 1c       	adc	r6, r6
     9c0:	77 1c       	adc	r7, r7
     9c2:	4a 95       	dec	r20
     9c4:	d2 f7       	brpl	.-12     	; 0x9ba <_fpadd_parts+0xe2>
     9c6:	41 e0       	ldi	r20, 0x01	; 1
     9c8:	44 1a       	sub	r4, r20
     9ca:	51 08       	sbc	r5, r1
     9cc:	61 08       	sbc	r6, r1
     9ce:	71 08       	sbc	r7, r1
     9d0:	48 20       	and	r4, r8
     9d2:	59 20       	and	r5, r9
     9d4:	6a 20       	and	r6, r10
     9d6:	7b 20       	and	r7, r11
     9d8:	81 2c       	mov	r8, r1
     9da:	91 2c       	mov	r9, r1
     9dc:	54 01       	movw	r10, r8
     9de:	83 94       	inc	r8
     9e0:	45 28       	or	r4, r5
     9e2:	46 28       	or	r4, r6
     9e4:	47 28       	or	r4, r7
     9e6:	19 f4       	brne	.+6      	; 0x9ee <_fpadd_parts+0x116>
     9e8:	81 2c       	mov	r8, r1
     9ea:	91 2c       	mov	r9, r1
     9ec:	54 01       	movw	r10, r8
     9ee:	49 80       	ldd	r4, Y+1	; 0x01
     9f0:	5a 80       	ldd	r5, Y+2	; 0x02
     9f2:	6b 80       	ldd	r6, Y+3	; 0x03
     9f4:	7c 80       	ldd	r7, Y+4	; 0x04
     9f6:	84 28       	or	r8, r4
     9f8:	95 28       	or	r9, r5
     9fa:	a6 28       	or	r10, r6
     9fc:	b7 28       	or	r11, r7
     9fe:	46 c0       	rjmp	.+140    	; 0xa8c <_fpadd_parts+0x1b4>
     a00:	ef 2b       	or	r30, r31
     a02:	09 f4       	brne	.+2      	; 0xa06 <_fpadd_parts+0x12e>
     a04:	43 c0       	rjmp	.+134    	; 0xa8c <_fpadd_parts+0x1b4>
     a06:	84 0f       	add	r24, r20
     a08:	95 1f       	adc	r25, r21
     a0a:	28 01       	movw	r4, r16
     a0c:	39 01       	movw	r6, r18
     a0e:	04 2e       	mov	r0, r20
     a10:	04 c0       	rjmp	.+8      	; 0xa1a <_fpadd_parts+0x142>
     a12:	76 94       	lsr	r7
     a14:	67 94       	ror	r6
     a16:	57 94       	ror	r5
     a18:	47 94       	ror	r4
     a1a:	0a 94       	dec	r0
     a1c:	d2 f7       	brpl	.-12     	; 0xa12 <_fpadd_parts+0x13a>
     a1e:	49 82       	std	Y+1, r4	; 0x01
     a20:	5a 82       	std	Y+2, r5	; 0x02
     a22:	6b 82       	std	Y+3, r6	; 0x03
     a24:	7c 82       	std	Y+4, r7	; 0x04
     a26:	41 2c       	mov	r4, r1
     a28:	51 2c       	mov	r5, r1
     a2a:	32 01       	movw	r6, r4
     a2c:	43 94       	inc	r4
     a2e:	04 c0       	rjmp	.+8      	; 0xa38 <_fpadd_parts+0x160>
     a30:	44 0c       	add	r4, r4
     a32:	55 1c       	adc	r5, r5
     a34:	66 1c       	adc	r6, r6
     a36:	77 1c       	adc	r7, r7
     a38:	4a 95       	dec	r20
     a3a:	d2 f7       	brpl	.-12     	; 0xa30 <_fpadd_parts+0x158>
     a3c:	41 e0       	ldi	r20, 0x01	; 1
     a3e:	44 1a       	sub	r4, r20
     a40:	51 08       	sbc	r5, r1
     a42:	61 08       	sbc	r6, r1
     a44:	71 08       	sbc	r7, r1
     a46:	40 22       	and	r4, r16
     a48:	51 22       	and	r5, r17
     a4a:	62 22       	and	r6, r18
     a4c:	73 22       	and	r7, r19
     a4e:	01 e0       	ldi	r16, 0x01	; 1
     a50:	10 e0       	ldi	r17, 0x00	; 0
     a52:	20 e0       	ldi	r18, 0x00	; 0
     a54:	30 e0       	ldi	r19, 0x00	; 0
     a56:	45 28       	or	r4, r5
     a58:	46 28       	or	r4, r6
     a5a:	47 28       	or	r4, r7
     a5c:	19 f4       	brne	.+6      	; 0xa64 <_fpadd_parts+0x18c>
     a5e:	00 e0       	ldi	r16, 0x00	; 0
     a60:	10 e0       	ldi	r17, 0x00	; 0
     a62:	98 01       	movw	r18, r16
     a64:	49 80       	ldd	r4, Y+1	; 0x01
     a66:	5a 80       	ldd	r5, Y+2	; 0x02
     a68:	6b 80       	ldd	r6, Y+3	; 0x03
     a6a:	7c 80       	ldd	r7, Y+4	; 0x04
     a6c:	04 29       	or	r16, r4
     a6e:	15 29       	or	r17, r5
     a70:	26 29       	or	r18, r6
     a72:	37 29       	or	r19, r7
     a74:	0b c0       	rjmp	.+22     	; 0xa8c <_fpadd_parts+0x1b4>
     a76:	a8 17       	cp	r26, r24
     a78:	b9 07       	cpc	r27, r25
     a7a:	24 f4       	brge	.+8      	; 0xa84 <_fpadd_parts+0x1ac>
     a7c:	81 2c       	mov	r8, r1
     a7e:	91 2c       	mov	r9, r1
     a80:	54 01       	movw	r10, r8
     a82:	04 c0       	rjmp	.+8      	; 0xa8c <_fpadd_parts+0x1b4>
     a84:	cd 01       	movw	r24, r26
     a86:	00 e0       	ldi	r16, 0x00	; 0
     a88:	10 e0       	ldi	r17, 0x00	; 0
     a8a:	98 01       	movw	r18, r16
     a8c:	f7 01       	movw	r30, r14
     a8e:	41 81       	ldd	r20, Z+1	; 0x01
     a90:	fb 01       	movw	r30, r22
     a92:	51 81       	ldd	r21, Z+1	; 0x01
     a94:	45 17       	cp	r20, r21
     a96:	09 f4       	brne	.+2      	; 0xa9a <_fpadd_parts+0x1c2>
     a98:	46 c0       	rjmp	.+140    	; 0xb26 <_fpadd_parts+0x24e>
     a9a:	44 23       	and	r20, r20
     a9c:	49 f0       	breq	.+18     	; 0xab0 <_fpadd_parts+0x1d8>
     a9e:	24 01       	movw	r4, r8
     aa0:	35 01       	movw	r6, r10
     aa2:	40 1a       	sub	r4, r16
     aa4:	51 0a       	sbc	r5, r17
     aa6:	62 0a       	sbc	r6, r18
     aa8:	73 0a       	sbc	r7, r19
     aaa:	93 01       	movw	r18, r6
     aac:	82 01       	movw	r16, r4
     aae:	04 c0       	rjmp	.+8      	; 0xab8 <_fpadd_parts+0x1e0>
     ab0:	08 19       	sub	r16, r8
     ab2:	19 09       	sbc	r17, r9
     ab4:	2a 09       	sbc	r18, r10
     ab6:	3b 09       	sbc	r19, r11
     ab8:	37 fd       	sbrc	r19, 7
     aba:	05 c0       	rjmp	.+10     	; 0xac6 <_fpadd_parts+0x1ee>
     abc:	f6 01       	movw	r30, r12
     abe:	11 82       	std	Z+1, r1	; 0x01
     ac0:	93 83       	std	Z+3, r25	; 0x03
     ac2:	82 83       	std	Z+2, r24	; 0x02
     ac4:	0c c0       	rjmp	.+24     	; 0xade <_fpadd_parts+0x206>
     ac6:	41 e0       	ldi	r20, 0x01	; 1
     ac8:	f6 01       	movw	r30, r12
     aca:	41 83       	std	Z+1, r20	; 0x01
     acc:	93 83       	std	Z+3, r25	; 0x03
     ace:	82 83       	std	Z+2, r24	; 0x02
     ad0:	30 95       	com	r19
     ad2:	20 95       	com	r18
     ad4:	10 95       	com	r17
     ad6:	01 95       	neg	r16
     ad8:	1f 4f       	sbci	r17, 0xFF	; 255
     ada:	2f 4f       	sbci	r18, 0xFF	; 255
     adc:	3f 4f       	sbci	r19, 0xFF	; 255
     ade:	04 83       	std	Z+4, r16	; 0x04
     ae0:	15 83       	std	Z+5, r17	; 0x05
     ae2:	26 83       	std	Z+6, r18	; 0x06
     ae4:	37 83       	std	Z+7, r19	; 0x07
     ae6:	0e c0       	rjmp	.+28     	; 0xb04 <_fpadd_parts+0x22c>
     ae8:	88 0f       	add	r24, r24
     aea:	99 1f       	adc	r25, r25
     aec:	aa 1f       	adc	r26, r26
     aee:	bb 1f       	adc	r27, r27
     af0:	f6 01       	movw	r30, r12
     af2:	84 83       	std	Z+4, r24	; 0x04
     af4:	95 83       	std	Z+5, r25	; 0x05
     af6:	a6 83       	std	Z+6, r26	; 0x06
     af8:	b7 83       	std	Z+7, r27	; 0x07
     afa:	82 81       	ldd	r24, Z+2	; 0x02
     afc:	93 81       	ldd	r25, Z+3	; 0x03
     afe:	01 97       	sbiw	r24, 0x01	; 1
     b00:	93 83       	std	Z+3, r25	; 0x03
     b02:	82 83       	std	Z+2, r24	; 0x02
     b04:	f6 01       	movw	r30, r12
     b06:	84 81       	ldd	r24, Z+4	; 0x04
     b08:	95 81       	ldd	r25, Z+5	; 0x05
     b0a:	a6 81       	ldd	r26, Z+6	; 0x06
     b0c:	b7 81       	ldd	r27, Z+7	; 0x07
     b0e:	ac 01       	movw	r20, r24
     b10:	bd 01       	movw	r22, r26
     b12:	41 50       	subi	r20, 0x01	; 1
     b14:	51 09       	sbc	r21, r1
     b16:	61 09       	sbc	r22, r1
     b18:	71 09       	sbc	r23, r1
     b1a:	4f 3f       	cpi	r20, 0xFF	; 255
     b1c:	5f 4f       	sbci	r21, 0xFF	; 255
     b1e:	6f 4f       	sbci	r22, 0xFF	; 255
     b20:	7f 43       	sbci	r23, 0x3F	; 63
     b22:	10 f3       	brcs	.-60     	; 0xae8 <_fpadd_parts+0x210>
     b24:	0c c0       	rjmp	.+24     	; 0xb3e <_fpadd_parts+0x266>
     b26:	f6 01       	movw	r30, r12
     b28:	41 83       	std	Z+1, r20	; 0x01
     b2a:	93 83       	std	Z+3, r25	; 0x03
     b2c:	82 83       	std	Z+2, r24	; 0x02
     b2e:	08 0d       	add	r16, r8
     b30:	19 1d       	adc	r17, r9
     b32:	2a 1d       	adc	r18, r10
     b34:	3b 1d       	adc	r19, r11
     b36:	04 83       	std	Z+4, r16	; 0x04
     b38:	15 83       	std	Z+5, r17	; 0x05
     b3a:	26 83       	std	Z+6, r18	; 0x06
     b3c:	37 83       	std	Z+7, r19	; 0x07
     b3e:	83 e0       	ldi	r24, 0x03	; 3
     b40:	f6 01       	movw	r30, r12
     b42:	80 83       	st	Z, r24
     b44:	44 81       	ldd	r20, Z+4	; 0x04
     b46:	55 81       	ldd	r21, Z+5	; 0x05
     b48:	66 81       	ldd	r22, Z+6	; 0x06
     b4a:	77 81       	ldd	r23, Z+7	; 0x07
     b4c:	77 ff       	sbrs	r23, 7
     b4e:	1a c0       	rjmp	.+52     	; 0xb84 <_fpadd_parts+0x2ac>
     b50:	db 01       	movw	r26, r22
     b52:	ca 01       	movw	r24, r20
     b54:	81 70       	andi	r24, 0x01	; 1
     b56:	99 27       	eor	r25, r25
     b58:	aa 27       	eor	r26, r26
     b5a:	bb 27       	eor	r27, r27
     b5c:	76 95       	lsr	r23
     b5e:	67 95       	ror	r22
     b60:	57 95       	ror	r21
     b62:	47 95       	ror	r20
     b64:	84 2b       	or	r24, r20
     b66:	95 2b       	or	r25, r21
     b68:	a6 2b       	or	r26, r22
     b6a:	b7 2b       	or	r27, r23
     b6c:	84 83       	std	Z+4, r24	; 0x04
     b6e:	95 83       	std	Z+5, r25	; 0x05
     b70:	a6 83       	std	Z+6, r26	; 0x06
     b72:	b7 83       	std	Z+7, r27	; 0x07
     b74:	82 81       	ldd	r24, Z+2	; 0x02
     b76:	93 81       	ldd	r25, Z+3	; 0x03
     b78:	01 96       	adiw	r24, 0x01	; 1
     b7a:	93 83       	std	Z+3, r25	; 0x03
     b7c:	82 83       	std	Z+2, r24	; 0x02
     b7e:	02 c0       	rjmp	.+4      	; 0xb84 <_fpadd_parts+0x2ac>
     b80:	7b 01       	movw	r14, r22
     b82:	01 c0       	rjmp	.+2      	; 0xb86 <_fpadd_parts+0x2ae>
     b84:	76 01       	movw	r14, r12
     b86:	c7 01       	movw	r24, r14
     b88:	24 96       	adiw	r28, 0x04	; 4
     b8a:	e0 e1       	ldi	r30, 0x10	; 16
     b8c:	0c 94 d9 09 	jmp	0x13b2	; 0x13b2 <__epilogue_restores__+0x4>

00000b90 <__addsf3>:
     b90:	a0 e2       	ldi	r26, 0x20	; 32
     b92:	b0 e0       	ldi	r27, 0x00	; 0
     b94:	ee ec       	ldi	r30, 0xCE	; 206
     b96:	f5 e0       	ldi	r31, 0x05	; 5
     b98:	0c 94 cb 09 	jmp	0x1396	; 0x1396 <__prologue_saves__+0x20>
     b9c:	6d 8f       	std	Y+29, r22	; 0x1d
     b9e:	7e 8f       	std	Y+30, r23	; 0x1e
     ba0:	8f 8f       	std	Y+31, r24	; 0x1f
     ba2:	98 a3       	std	Y+32, r25	; 0x20
     ba4:	29 8f       	std	Y+25, r18	; 0x19
     ba6:	3a 8f       	std	Y+26, r19	; 0x1a
     ba8:	4b 8f       	std	Y+27, r20	; 0x1b
     baa:	5c 8f       	std	Y+28, r21	; 0x1c
     bac:	be 01       	movw	r22, r28
     bae:	6f 5e       	subi	r22, 0xEF	; 239
     bb0:	7f 4f       	sbci	r23, 0xFF	; 255
     bb2:	ce 01       	movw	r24, r28
     bb4:	4d 96       	adiw	r24, 0x1d	; 29
     bb6:	0e 94 ad 08 	call	0x115a	; 0x115a <__unpack_f>
     bba:	be 01       	movw	r22, r28
     bbc:	67 5f       	subi	r22, 0xF7	; 247
     bbe:	7f 4f       	sbci	r23, 0xFF	; 255
     bc0:	ce 01       	movw	r24, r28
     bc2:	49 96       	adiw	r24, 0x19	; 25
     bc4:	0e 94 ad 08 	call	0x115a	; 0x115a <__unpack_f>
     bc8:	ae 01       	movw	r20, r28
     bca:	4f 5f       	subi	r20, 0xFF	; 255
     bcc:	5f 4f       	sbci	r21, 0xFF	; 255
     bce:	be 01       	movw	r22, r28
     bd0:	67 5f       	subi	r22, 0xF7	; 247
     bd2:	7f 4f       	sbci	r23, 0xFF	; 255
     bd4:	ce 01       	movw	r24, r28
     bd6:	41 96       	adiw	r24, 0x11	; 17
     bd8:	0e 94 6c 04 	call	0x8d8	; 0x8d8 <_fpadd_parts>
     bdc:	0e 94 e3 07 	call	0xfc6	; 0xfc6 <__pack_f>
     be0:	a0 96       	adiw	r28, 0x20	; 32
     be2:	e2 e0       	ldi	r30, 0x02	; 2
     be4:	0c 94 e7 09 	jmp	0x13ce	; 0x13ce <__epilogue_restores__+0x20>

00000be8 <__subsf3>:
     be8:	a0 e2       	ldi	r26, 0x20	; 32
     bea:	b0 e0       	ldi	r27, 0x00	; 0
     bec:	ea ef       	ldi	r30, 0xFA	; 250
     bee:	f5 e0       	ldi	r31, 0x05	; 5
     bf0:	0c 94 cb 09 	jmp	0x1396	; 0x1396 <__prologue_saves__+0x20>
     bf4:	6d 8f       	std	Y+29, r22	; 0x1d
     bf6:	7e 8f       	std	Y+30, r23	; 0x1e
     bf8:	8f 8f       	std	Y+31, r24	; 0x1f
     bfa:	98 a3       	std	Y+32, r25	; 0x20
     bfc:	29 8f       	std	Y+25, r18	; 0x19
     bfe:	3a 8f       	std	Y+26, r19	; 0x1a
     c00:	4b 8f       	std	Y+27, r20	; 0x1b
     c02:	5c 8f       	std	Y+28, r21	; 0x1c
     c04:	be 01       	movw	r22, r28
     c06:	6f 5e       	subi	r22, 0xEF	; 239
     c08:	7f 4f       	sbci	r23, 0xFF	; 255
     c0a:	ce 01       	movw	r24, r28
     c0c:	4d 96       	adiw	r24, 0x1d	; 29
     c0e:	0e 94 ad 08 	call	0x115a	; 0x115a <__unpack_f>
     c12:	be 01       	movw	r22, r28
     c14:	67 5f       	subi	r22, 0xF7	; 247
     c16:	7f 4f       	sbci	r23, 0xFF	; 255
     c18:	ce 01       	movw	r24, r28
     c1a:	49 96       	adiw	r24, 0x19	; 25
     c1c:	0e 94 ad 08 	call	0x115a	; 0x115a <__unpack_f>
     c20:	8a 85       	ldd	r24, Y+10	; 0x0a
     c22:	91 e0       	ldi	r25, 0x01	; 1
     c24:	89 27       	eor	r24, r25
     c26:	8a 87       	std	Y+10, r24	; 0x0a
     c28:	ae 01       	movw	r20, r28
     c2a:	4f 5f       	subi	r20, 0xFF	; 255
     c2c:	5f 4f       	sbci	r21, 0xFF	; 255
     c2e:	be 01       	movw	r22, r28
     c30:	67 5f       	subi	r22, 0xF7	; 247
     c32:	7f 4f       	sbci	r23, 0xFF	; 255
     c34:	ce 01       	movw	r24, r28
     c36:	41 96       	adiw	r24, 0x11	; 17
     c38:	0e 94 6c 04 	call	0x8d8	; 0x8d8 <_fpadd_parts>
     c3c:	0e 94 e3 07 	call	0xfc6	; 0xfc6 <__pack_f>
     c40:	a0 96       	adiw	r28, 0x20	; 32
     c42:	e2 e0       	ldi	r30, 0x02	; 2
     c44:	0c 94 e7 09 	jmp	0x13ce	; 0x13ce <__epilogue_restores__+0x20>

00000c48 <__mulsf3>:
     c48:	a0 e2       	ldi	r26, 0x20	; 32
     c4a:	b0 e0       	ldi	r27, 0x00	; 0
     c4c:	ea e2       	ldi	r30, 0x2A	; 42
     c4e:	f6 e0       	ldi	r31, 0x06	; 6
     c50:	0c 94 bd 09 	jmp	0x137a	; 0x137a <__prologue_saves__+0x4>
     c54:	6d 8f       	std	Y+29, r22	; 0x1d
     c56:	7e 8f       	std	Y+30, r23	; 0x1e
     c58:	8f 8f       	std	Y+31, r24	; 0x1f
     c5a:	98 a3       	std	Y+32, r25	; 0x20
     c5c:	29 8f       	std	Y+25, r18	; 0x19
     c5e:	3a 8f       	std	Y+26, r19	; 0x1a
     c60:	4b 8f       	std	Y+27, r20	; 0x1b
     c62:	5c 8f       	std	Y+28, r21	; 0x1c
     c64:	be 01       	movw	r22, r28
     c66:	6f 5e       	subi	r22, 0xEF	; 239
     c68:	7f 4f       	sbci	r23, 0xFF	; 255
     c6a:	ce 01       	movw	r24, r28
     c6c:	4d 96       	adiw	r24, 0x1d	; 29
     c6e:	0e 94 ad 08 	call	0x115a	; 0x115a <__unpack_f>
     c72:	be 01       	movw	r22, r28
     c74:	67 5f       	subi	r22, 0xF7	; 247
     c76:	7f 4f       	sbci	r23, 0xFF	; 255
     c78:	ce 01       	movw	r24, r28
     c7a:	49 96       	adiw	r24, 0x19	; 25
     c7c:	0e 94 ad 08 	call	0x115a	; 0x115a <__unpack_f>
     c80:	99 89       	ldd	r25, Y+17	; 0x11
     c82:	92 30       	cpi	r25, 0x02	; 2
     c84:	08 f4       	brcc	.+2      	; 0xc88 <__mulsf3+0x40>
     c86:	12 c0       	rjmp	.+36     	; 0xcac <__mulsf3+0x64>
     c88:	89 85       	ldd	r24, Y+9	; 0x09
     c8a:	82 30       	cpi	r24, 0x02	; 2
     c8c:	08 f4       	brcc	.+2      	; 0xc90 <__mulsf3+0x48>
     c8e:	1a c0       	rjmp	.+52     	; 0xcc4 <__mulsf3+0x7c>
     c90:	94 30       	cpi	r25, 0x04	; 4
     c92:	21 f4       	brne	.+8      	; 0xc9c <__mulsf3+0x54>
     c94:	82 30       	cpi	r24, 0x02	; 2
     c96:	09 f4       	brne	.+2      	; 0xc9a <__mulsf3+0x52>
     c98:	b4 c0       	rjmp	.+360    	; 0xe02 <__mulsf3+0x1ba>
     c9a:	08 c0       	rjmp	.+16     	; 0xcac <__mulsf3+0x64>
     c9c:	84 30       	cpi	r24, 0x04	; 4
     c9e:	21 f4       	brne	.+8      	; 0xca8 <__mulsf3+0x60>
     ca0:	92 30       	cpi	r25, 0x02	; 2
     ca2:	09 f4       	brne	.+2      	; 0xca6 <__mulsf3+0x5e>
     ca4:	ae c0       	rjmp	.+348    	; 0xe02 <__mulsf3+0x1ba>
     ca6:	0e c0       	rjmp	.+28     	; 0xcc4 <__mulsf3+0x7c>
     ca8:	92 30       	cpi	r25, 0x02	; 2
     caa:	51 f4       	brne	.+20     	; 0xcc0 <__mulsf3+0x78>
     cac:	81 e0       	ldi	r24, 0x01	; 1
     cae:	2a 89       	ldd	r18, Y+18	; 0x12
     cb0:	9a 85       	ldd	r25, Y+10	; 0x0a
     cb2:	29 13       	cpse	r18, r25
     cb4:	01 c0       	rjmp	.+2      	; 0xcb8 <__mulsf3+0x70>
     cb6:	80 e0       	ldi	r24, 0x00	; 0
     cb8:	8a 8b       	std	Y+18, r24	; 0x12
     cba:	ce 01       	movw	r24, r28
     cbc:	41 96       	adiw	r24, 0x11	; 17
     cbe:	a3 c0       	rjmp	.+326    	; 0xe06 <__mulsf3+0x1be>
     cc0:	82 30       	cpi	r24, 0x02	; 2
     cc2:	51 f4       	brne	.+20     	; 0xcd8 <__mulsf3+0x90>
     cc4:	81 e0       	ldi	r24, 0x01	; 1
     cc6:	2a 89       	ldd	r18, Y+18	; 0x12
     cc8:	9a 85       	ldd	r25, Y+10	; 0x0a
     cca:	29 13       	cpse	r18, r25
     ccc:	01 c0       	rjmp	.+2      	; 0xcd0 <__mulsf3+0x88>
     cce:	80 e0       	ldi	r24, 0x00	; 0
     cd0:	8a 87       	std	Y+10, r24	; 0x0a
     cd2:	ce 01       	movw	r24, r28
     cd4:	09 96       	adiw	r24, 0x09	; 9
     cd6:	97 c0       	rjmp	.+302    	; 0xe06 <__mulsf3+0x1be>
     cd8:	8d 88       	ldd	r8, Y+21	; 0x15
     cda:	9e 88       	ldd	r9, Y+22	; 0x16
     cdc:	af 88       	ldd	r10, Y+23	; 0x17
     cde:	b8 8c       	ldd	r11, Y+24	; 0x18
     ce0:	0d 85       	ldd	r16, Y+13	; 0x0d
     ce2:	1e 85       	ldd	r17, Y+14	; 0x0e
     ce4:	2f 85       	ldd	r18, Y+15	; 0x0f
     ce6:	38 89       	ldd	r19, Y+16	; 0x10
     ce8:	e0 e2       	ldi	r30, 0x20	; 32
     cea:	f0 e0       	ldi	r31, 0x00	; 0
     cec:	80 e0       	ldi	r24, 0x00	; 0
     cee:	90 e0       	ldi	r25, 0x00	; 0
     cf0:	dc 01       	movw	r26, r24
     cf2:	c1 2c       	mov	r12, r1
     cf4:	d1 2c       	mov	r13, r1
     cf6:	76 01       	movw	r14, r12
     cf8:	40 e0       	ldi	r20, 0x00	; 0
     cfa:	50 e0       	ldi	r21, 0x00	; 0
     cfc:	ba 01       	movw	r22, r20
     cfe:	80 fe       	sbrs	r8, 0
     d00:	18 c0       	rjmp	.+48     	; 0xd32 <__mulsf3+0xea>
     d02:	40 0f       	add	r20, r16
     d04:	51 1f       	adc	r21, r17
     d06:	62 1f       	adc	r22, r18
     d08:	73 1f       	adc	r23, r19
     d0a:	8c 0d       	add	r24, r12
     d0c:	9d 1d       	adc	r25, r13
     d0e:	ae 1d       	adc	r26, r14
     d10:	bf 1d       	adc	r27, r15
     d12:	41 2c       	mov	r4, r1
     d14:	51 2c       	mov	r5, r1
     d16:	32 01       	movw	r6, r4
     d18:	43 94       	inc	r4
     d1a:	40 17       	cp	r20, r16
     d1c:	51 07       	cpc	r21, r17
     d1e:	62 07       	cpc	r22, r18
     d20:	73 07       	cpc	r23, r19
     d22:	18 f0       	brcs	.+6      	; 0xd2a <__mulsf3+0xe2>
     d24:	41 2c       	mov	r4, r1
     d26:	51 2c       	mov	r5, r1
     d28:	32 01       	movw	r6, r4
     d2a:	84 0d       	add	r24, r4
     d2c:	95 1d       	adc	r25, r5
     d2e:	a6 1d       	adc	r26, r6
     d30:	b7 1d       	adc	r27, r7
     d32:	cc 0c       	add	r12, r12
     d34:	dd 1c       	adc	r13, r13
     d36:	ee 1c       	adc	r14, r14
     d38:	ff 1c       	adc	r15, r15
     d3a:	37 ff       	sbrs	r19, 7
     d3c:	02 c0       	rjmp	.+4      	; 0xd42 <__mulsf3+0xfa>
     d3e:	68 94       	set
     d40:	c0 f8       	bld	r12, 0
     d42:	00 0f       	add	r16, r16
     d44:	11 1f       	adc	r17, r17
     d46:	22 1f       	adc	r18, r18
     d48:	33 1f       	adc	r19, r19
     d4a:	b6 94       	lsr	r11
     d4c:	a7 94       	ror	r10
     d4e:	97 94       	ror	r9
     d50:	87 94       	ror	r8
     d52:	31 97       	sbiw	r30, 0x01	; 1
     d54:	a1 f6       	brne	.-88     	; 0xcfe <__mulsf3+0xb6>
     d56:	2b 89       	ldd	r18, Y+19	; 0x13
     d58:	3c 89       	ldd	r19, Y+20	; 0x14
     d5a:	eb 85       	ldd	r30, Y+11	; 0x0b
     d5c:	fc 85       	ldd	r31, Y+12	; 0x0c
     d5e:	2e 0f       	add	r18, r30
     d60:	3f 1f       	adc	r19, r31
     d62:	2e 5f       	subi	r18, 0xFE	; 254
     d64:	3f 4f       	sbci	r19, 0xFF	; 255
     d66:	3c 83       	std	Y+4, r19	; 0x04
     d68:	2b 83       	std	Y+3, r18	; 0x03
     d6a:	21 e0       	ldi	r18, 0x01	; 1
     d6c:	ea 89       	ldd	r30, Y+18	; 0x12
     d6e:	3a 85       	ldd	r19, Y+10	; 0x0a
     d70:	e3 13       	cpse	r30, r19
     d72:	01 c0       	rjmp	.+2      	; 0xd76 <__mulsf3+0x12e>
     d74:	20 e0       	ldi	r18, 0x00	; 0
     d76:	2a 83       	std	Y+2, r18	; 0x02
     d78:	eb 81       	ldd	r30, Y+3	; 0x03
     d7a:	fc 81       	ldd	r31, Y+4	; 0x04
     d7c:	0c c0       	rjmp	.+24     	; 0xd96 <__mulsf3+0x14e>
     d7e:	80 ff       	sbrs	r24, 0
     d80:	05 c0       	rjmp	.+10     	; 0xd8c <__mulsf3+0x144>
     d82:	76 95       	lsr	r23
     d84:	67 95       	ror	r22
     d86:	57 95       	ror	r21
     d88:	47 95       	ror	r20
     d8a:	70 68       	ori	r23, 0x80	; 128
     d8c:	b6 95       	lsr	r27
     d8e:	a7 95       	ror	r26
     d90:	97 95       	ror	r25
     d92:	87 95       	ror	r24
     d94:	31 96       	adiw	r30, 0x01	; 1
     d96:	b7 fd       	sbrc	r27, 7
     d98:	f2 cf       	rjmp	.-28     	; 0xd7e <__mulsf3+0x136>
     d9a:	9f 01       	movw	r18, r30
     d9c:	0c c0       	rjmp	.+24     	; 0xdb6 <__mulsf3+0x16e>
     d9e:	88 0f       	add	r24, r24
     da0:	99 1f       	adc	r25, r25
     da2:	aa 1f       	adc	r26, r26
     da4:	bb 1f       	adc	r27, r27
     da6:	77 fd       	sbrc	r23, 7
     da8:	81 60       	ori	r24, 0x01	; 1
     daa:	44 0f       	add	r20, r20
     dac:	55 1f       	adc	r21, r21
     dae:	66 1f       	adc	r22, r22
     db0:	77 1f       	adc	r23, r23
     db2:	21 50       	subi	r18, 0x01	; 1
     db4:	31 09       	sbc	r19, r1
     db6:	00 97       	sbiw	r24, 0x00	; 0
     db8:	a1 05       	cpc	r26, r1
     dba:	e0 e4       	ldi	r30, 0x40	; 64
     dbc:	be 07       	cpc	r27, r30
     dbe:	78 f3       	brcs	.-34     	; 0xd9e <__mulsf3+0x156>
     dc0:	2b 83       	std	Y+3, r18	; 0x03
     dc2:	3c 83       	std	Y+4, r19	; 0x04
     dc4:	8c 01       	movw	r16, r24
     dc6:	9d 01       	movw	r18, r26
     dc8:	0f 77       	andi	r16, 0x7F	; 127
     dca:	11 27       	eor	r17, r17
     dcc:	22 27       	eor	r18, r18
     dce:	33 27       	eor	r19, r19
     dd0:	00 34       	cpi	r16, 0x40	; 64
     dd2:	11 05       	cpc	r17, r1
     dd4:	21 05       	cpc	r18, r1
     dd6:	31 05       	cpc	r19, r1
     dd8:	59 f4       	brne	.+22     	; 0xdf0 <__mulsf3+0x1a8>
     dda:	87 fd       	sbrc	r24, 7
     ddc:	09 c0       	rjmp	.+18     	; 0xdf0 <__mulsf3+0x1a8>
     dde:	45 2b       	or	r20, r21
     de0:	46 2b       	or	r20, r22
     de2:	47 2b       	or	r20, r23
     de4:	29 f0       	breq	.+10     	; 0xdf0 <__mulsf3+0x1a8>
     de6:	80 5c       	subi	r24, 0xC0	; 192
     de8:	9f 4f       	sbci	r25, 0xFF	; 255
     dea:	af 4f       	sbci	r26, 0xFF	; 255
     dec:	bf 4f       	sbci	r27, 0xFF	; 255
     dee:	80 78       	andi	r24, 0x80	; 128
     df0:	8d 83       	std	Y+5, r24	; 0x05
     df2:	9e 83       	std	Y+6, r25	; 0x06
     df4:	af 83       	std	Y+7, r26	; 0x07
     df6:	b8 87       	std	Y+8, r27	; 0x08
     df8:	83 e0       	ldi	r24, 0x03	; 3
     dfa:	89 83       	std	Y+1, r24	; 0x01
     dfc:	ce 01       	movw	r24, r28
     dfe:	01 96       	adiw	r24, 0x01	; 1
     e00:	02 c0       	rjmp	.+4      	; 0xe06 <__mulsf3+0x1be>
     e02:	8e e4       	ldi	r24, 0x4E	; 78
     e04:	91 e0       	ldi	r25, 0x01	; 1
     e06:	0e 94 e3 07 	call	0xfc6	; 0xfc6 <__pack_f>
     e0a:	a0 96       	adiw	r28, 0x20	; 32
     e0c:	e0 e1       	ldi	r30, 0x10	; 16
     e0e:	0c 94 d9 09 	jmp	0x13b2	; 0x13b2 <__epilogue_restores__+0x4>

00000e12 <__gesf2>:
     e12:	a8 e1       	ldi	r26, 0x18	; 24
     e14:	b0 e0       	ldi	r27, 0x00	; 0
     e16:	ef e0       	ldi	r30, 0x0F	; 15
     e18:	f7 e0       	ldi	r31, 0x07	; 7
     e1a:	0c 94 cb 09 	jmp	0x1396	; 0x1396 <__prologue_saves__+0x20>
     e1e:	6d 8b       	std	Y+21, r22	; 0x15
     e20:	7e 8b       	std	Y+22, r23	; 0x16
     e22:	8f 8b       	std	Y+23, r24	; 0x17
     e24:	98 8f       	std	Y+24, r25	; 0x18
     e26:	29 8b       	std	Y+17, r18	; 0x11
     e28:	3a 8b       	std	Y+18, r19	; 0x12
     e2a:	4b 8b       	std	Y+19, r20	; 0x13
     e2c:	5c 8b       	std	Y+20, r21	; 0x14
     e2e:	be 01       	movw	r22, r28
     e30:	67 5f       	subi	r22, 0xF7	; 247
     e32:	7f 4f       	sbci	r23, 0xFF	; 255
     e34:	ce 01       	movw	r24, r28
     e36:	45 96       	adiw	r24, 0x15	; 21
     e38:	0e 94 ad 08 	call	0x115a	; 0x115a <__unpack_f>
     e3c:	be 01       	movw	r22, r28
     e3e:	6f 5f       	subi	r22, 0xFF	; 255
     e40:	7f 4f       	sbci	r23, 0xFF	; 255
     e42:	ce 01       	movw	r24, r28
     e44:	41 96       	adiw	r24, 0x11	; 17
     e46:	0e 94 ad 08 	call	0x115a	; 0x115a <__unpack_f>
     e4a:	89 85       	ldd	r24, Y+9	; 0x09
     e4c:	82 30       	cpi	r24, 0x02	; 2
     e4e:	58 f0       	brcs	.+22     	; 0xe66 <__gesf2+0x54>
     e50:	89 81       	ldd	r24, Y+1	; 0x01
     e52:	82 30       	cpi	r24, 0x02	; 2
     e54:	40 f0       	brcs	.+16     	; 0xe66 <__gesf2+0x54>
     e56:	be 01       	movw	r22, r28
     e58:	6f 5f       	subi	r22, 0xFF	; 255
     e5a:	7f 4f       	sbci	r23, 0xFF	; 255
     e5c:	ce 01       	movw	r24, r28
     e5e:	09 96       	adiw	r24, 0x09	; 9
     e60:	0e 94 1c 09 	call	0x1238	; 0x1238 <__fpcmp_parts_f>
     e64:	01 c0       	rjmp	.+2      	; 0xe68 <__gesf2+0x56>
     e66:	8f ef       	ldi	r24, 0xFF	; 255
     e68:	68 96       	adiw	r28, 0x18	; 24
     e6a:	e2 e0       	ldi	r30, 0x02	; 2
     e6c:	0c 94 e7 09 	jmp	0x13ce	; 0x13ce <__epilogue_restores__+0x20>

00000e70 <__floatsisf>:
     e70:	a8 e0       	ldi	r26, 0x08	; 8
     e72:	b0 e0       	ldi	r27, 0x00	; 0
     e74:	ee e3       	ldi	r30, 0x3E	; 62
     e76:	f7 e0       	ldi	r31, 0x07	; 7
     e78:	0c 94 c9 09 	jmp	0x1392	; 0x1392 <__prologue_saves__+0x1c>
     e7c:	23 e0       	ldi	r18, 0x03	; 3
     e7e:	29 83       	std	Y+1, r18	; 0x01
     e80:	8b 01       	movw	r16, r22
     e82:	9c 01       	movw	r18, r24
     e84:	00 27       	eor	r16, r16
     e86:	37 fd       	sbrc	r19, 7
     e88:	03 95       	inc	r16
     e8a:	11 27       	eor	r17, r17
     e8c:	22 27       	eor	r18, r18
     e8e:	33 27       	eor	r19, r19
     e90:	40 2f       	mov	r20, r16
     e92:	0a 83       	std	Y+2, r16	; 0x02
     e94:	61 15       	cp	r22, r1
     e96:	71 05       	cpc	r23, r1
     e98:	81 05       	cpc	r24, r1
     e9a:	91 05       	cpc	r25, r1
     e9c:	19 f4       	brne	.+6      	; 0xea4 <__floatsisf+0x34>
     e9e:	82 e0       	ldi	r24, 0x02	; 2
     ea0:	89 83       	std	Y+1, r24	; 0x01
     ea2:	35 c0       	rjmp	.+106    	; 0xf0e <__floatsisf+0x9e>
     ea4:	2e e1       	ldi	r18, 0x1E	; 30
     ea6:	30 e0       	ldi	r19, 0x00	; 0
     ea8:	3c 83       	std	Y+4, r19	; 0x04
     eaa:	2b 83       	std	Y+3, r18	; 0x03
     eac:	44 23       	and	r20, r20
     eae:	71 f0       	breq	.+28     	; 0xecc <__floatsisf+0x5c>
     eb0:	61 15       	cp	r22, r1
     eb2:	71 05       	cpc	r23, r1
     eb4:	81 05       	cpc	r24, r1
     eb6:	20 e8       	ldi	r18, 0x80	; 128
     eb8:	92 07       	cpc	r25, r18
     eba:	71 f1       	breq	.+92     	; 0xf18 <__floatsisf+0xa8>
     ebc:	00 27       	eor	r16, r16
     ebe:	11 27       	eor	r17, r17
     ec0:	98 01       	movw	r18, r16
     ec2:	06 1b       	sub	r16, r22
     ec4:	17 0b       	sbc	r17, r23
     ec6:	28 0b       	sbc	r18, r24
     ec8:	39 0b       	sbc	r19, r25
     eca:	02 c0       	rjmp	.+4      	; 0xed0 <__floatsisf+0x60>
     ecc:	8b 01       	movw	r16, r22
     ece:	9c 01       	movw	r18, r24
     ed0:	c9 01       	movw	r24, r18
     ed2:	b8 01       	movw	r22, r16
     ed4:	0e 94 a0 09 	call	0x1340	; 0x1340 <__clzsi2>
     ed8:	01 97       	sbiw	r24, 0x01	; 1
     eda:	18 16       	cp	r1, r24
     edc:	19 06       	cpc	r1, r25
     ede:	2c f0       	brlt	.+10     	; 0xeea <__floatsisf+0x7a>
     ee0:	0d 83       	std	Y+5, r16	; 0x05
     ee2:	1e 83       	std	Y+6, r17	; 0x06
     ee4:	2f 83       	std	Y+7, r18	; 0x07
     ee6:	38 87       	std	Y+8, r19	; 0x08
     ee8:	12 c0       	rjmp	.+36     	; 0xf0e <__floatsisf+0x9e>
     eea:	08 2e       	mov	r0, r24
     eec:	04 c0       	rjmp	.+8      	; 0xef6 <__floatsisf+0x86>
     eee:	00 0f       	add	r16, r16
     ef0:	11 1f       	adc	r17, r17
     ef2:	22 1f       	adc	r18, r18
     ef4:	33 1f       	adc	r19, r19
     ef6:	0a 94       	dec	r0
     ef8:	d2 f7       	brpl	.-12     	; 0xeee <__floatsisf+0x7e>
     efa:	0d 83       	std	Y+5, r16	; 0x05
     efc:	1e 83       	std	Y+6, r17	; 0x06
     efe:	2f 83       	std	Y+7, r18	; 0x07
     f00:	38 87       	std	Y+8, r19	; 0x08
     f02:	2e e1       	ldi	r18, 0x1E	; 30
     f04:	30 e0       	ldi	r19, 0x00	; 0
     f06:	28 1b       	sub	r18, r24
     f08:	39 0b       	sbc	r19, r25
     f0a:	3c 83       	std	Y+4, r19	; 0x04
     f0c:	2b 83       	std	Y+3, r18	; 0x03
     f0e:	ce 01       	movw	r24, r28
     f10:	01 96       	adiw	r24, 0x01	; 1
     f12:	0e 94 e3 07 	call	0xfc6	; 0xfc6 <__pack_f>
     f16:	04 c0       	rjmp	.+8      	; 0xf20 <__floatsisf+0xb0>
     f18:	60 e0       	ldi	r22, 0x00	; 0
     f1a:	70 e0       	ldi	r23, 0x00	; 0
     f1c:	80 e0       	ldi	r24, 0x00	; 0
     f1e:	9f ec       	ldi	r25, 0xCF	; 207
     f20:	28 96       	adiw	r28, 0x08	; 8
     f22:	e4 e0       	ldi	r30, 0x04	; 4
     f24:	0c 94 e5 09 	jmp	0x13ca	; 0x13ca <__epilogue_restores__+0x1c>

00000f28 <__fixsfsi>:
     f28:	ac e0       	ldi	r26, 0x0C	; 12
     f2a:	b0 e0       	ldi	r27, 0x00	; 0
     f2c:	ea e9       	ldi	r30, 0x9A	; 154
     f2e:	f7 e0       	ldi	r31, 0x07	; 7
     f30:	0c 94 c9 09 	jmp	0x1392	; 0x1392 <__prologue_saves__+0x1c>
     f34:	69 87       	std	Y+9, r22	; 0x09
     f36:	7a 87       	std	Y+10, r23	; 0x0a
     f38:	8b 87       	std	Y+11, r24	; 0x0b
     f3a:	9c 87       	std	Y+12, r25	; 0x0c
     f3c:	be 01       	movw	r22, r28
     f3e:	6f 5f       	subi	r22, 0xFF	; 255
     f40:	7f 4f       	sbci	r23, 0xFF	; 255
     f42:	ce 01       	movw	r24, r28
     f44:	09 96       	adiw	r24, 0x09	; 9
     f46:	0e 94 ad 08 	call	0x115a	; 0x115a <__unpack_f>
     f4a:	89 81       	ldd	r24, Y+1	; 0x01
     f4c:	82 30       	cpi	r24, 0x02	; 2
     f4e:	91 f1       	breq	.+100    	; 0xfb4 <__fixsfsi+0x8c>
     f50:	82 30       	cpi	r24, 0x02	; 2
     f52:	80 f1       	brcs	.+96     	; 0xfb4 <__fixsfsi+0x8c>
     f54:	84 30       	cpi	r24, 0x04	; 4
     f56:	41 f4       	brne	.+16     	; 0xf68 <__fixsfsi+0x40>
     f58:	8a 81       	ldd	r24, Y+2	; 0x02
     f5a:	88 23       	and	r24, r24
     f5c:	31 f1       	breq	.+76     	; 0xfaa <__fixsfsi+0x82>
     f5e:	00 e0       	ldi	r16, 0x00	; 0
     f60:	10 e0       	ldi	r17, 0x00	; 0
     f62:	20 e0       	ldi	r18, 0x00	; 0
     f64:	30 e8       	ldi	r19, 0x80	; 128
     f66:	29 c0       	rjmp	.+82     	; 0xfba <__fixsfsi+0x92>
     f68:	2b 81       	ldd	r18, Y+3	; 0x03
     f6a:	3c 81       	ldd	r19, Y+4	; 0x04
     f6c:	37 fd       	sbrc	r19, 7
     f6e:	22 c0       	rjmp	.+68     	; 0xfb4 <__fixsfsi+0x8c>
     f70:	2f 31       	cpi	r18, 0x1F	; 31
     f72:	31 05       	cpc	r19, r1
     f74:	8c f7       	brge	.-30     	; 0xf58 <__fixsfsi+0x30>
     f76:	8e e1       	ldi	r24, 0x1E	; 30
     f78:	90 e0       	ldi	r25, 0x00	; 0
     f7a:	82 1b       	sub	r24, r18
     f7c:	93 0b       	sbc	r25, r19
     f7e:	0d 81       	ldd	r16, Y+5	; 0x05
     f80:	1e 81       	ldd	r17, Y+6	; 0x06
     f82:	2f 81       	ldd	r18, Y+7	; 0x07
     f84:	38 85       	ldd	r19, Y+8	; 0x08
     f86:	04 c0       	rjmp	.+8      	; 0xf90 <__fixsfsi+0x68>
     f88:	36 95       	lsr	r19
     f8a:	27 95       	ror	r18
     f8c:	17 95       	ror	r17
     f8e:	07 95       	ror	r16
     f90:	8a 95       	dec	r24
     f92:	d2 f7       	brpl	.-12     	; 0xf88 <__fixsfsi+0x60>
     f94:	8a 81       	ldd	r24, Y+2	; 0x02
     f96:	88 23       	and	r24, r24
     f98:	81 f0       	breq	.+32     	; 0xfba <__fixsfsi+0x92>
     f9a:	30 95       	com	r19
     f9c:	20 95       	com	r18
     f9e:	10 95       	com	r17
     fa0:	01 95       	neg	r16
     fa2:	1f 4f       	sbci	r17, 0xFF	; 255
     fa4:	2f 4f       	sbci	r18, 0xFF	; 255
     fa6:	3f 4f       	sbci	r19, 0xFF	; 255
     fa8:	08 c0       	rjmp	.+16     	; 0xfba <__fixsfsi+0x92>
     faa:	0f ef       	ldi	r16, 0xFF	; 255
     fac:	1f ef       	ldi	r17, 0xFF	; 255
     fae:	2f ef       	ldi	r18, 0xFF	; 255
     fb0:	3f e7       	ldi	r19, 0x7F	; 127
     fb2:	03 c0       	rjmp	.+6      	; 0xfba <__fixsfsi+0x92>
     fb4:	00 e0       	ldi	r16, 0x00	; 0
     fb6:	10 e0       	ldi	r17, 0x00	; 0
     fb8:	98 01       	movw	r18, r16
     fba:	b8 01       	movw	r22, r16
     fbc:	c9 01       	movw	r24, r18
     fbe:	2c 96       	adiw	r28, 0x0c	; 12
     fc0:	e4 e0       	ldi	r30, 0x04	; 4
     fc2:	0c 94 e5 09 	jmp	0x13ca	; 0x13ca <__epilogue_restores__+0x1c>

00000fc6 <__pack_f>:
     fc6:	0f 93       	push	r16
     fc8:	1f 93       	push	r17
     fca:	cf 93       	push	r28
     fcc:	df 93       	push	r29
     fce:	dc 01       	movw	r26, r24
     fd0:	14 96       	adiw	r26, 0x04	; 4
     fd2:	4d 91       	ld	r20, X+
     fd4:	5d 91       	ld	r21, X+
     fd6:	6d 91       	ld	r22, X+
     fd8:	7c 91       	ld	r23, X
     fda:	17 97       	sbiw	r26, 0x07	; 7
     fdc:	11 96       	adiw	r26, 0x01	; 1
     fde:	ec 91       	ld	r30, X
     fe0:	11 97       	sbiw	r26, 0x01	; 1
     fe2:	8c 91       	ld	r24, X
     fe4:	82 30       	cpi	r24, 0x02	; 2
     fe6:	20 f4       	brcc	.+8      	; 0xff0 <__pack_f+0x2a>
     fe8:	60 61       	ori	r22, 0x10	; 16
     fea:	8f ef       	ldi	r24, 0xFF	; 255
     fec:	90 e0       	ldi	r25, 0x00	; 0
     fee:	a6 c0       	rjmp	.+332    	; 0x113c <__pack_f+0x176>
     ff0:	84 30       	cpi	r24, 0x04	; 4
     ff2:	09 f4       	brne	.+2      	; 0xff6 <__pack_f+0x30>
     ff4:	9e c0       	rjmp	.+316    	; 0x1132 <__pack_f+0x16c>
     ff6:	82 30       	cpi	r24, 0x02	; 2
     ff8:	09 f4       	brne	.+2      	; 0xffc <__pack_f+0x36>
     ffa:	95 c0       	rjmp	.+298    	; 0x1126 <__pack_f+0x160>
     ffc:	41 15       	cp	r20, r1
     ffe:	51 05       	cpc	r21, r1
    1000:	61 05       	cpc	r22, r1
    1002:	71 05       	cpc	r23, r1
    1004:	09 f4       	brne	.+2      	; 0x1008 <__pack_f+0x42>
    1006:	92 c0       	rjmp	.+292    	; 0x112c <__pack_f+0x166>
    1008:	12 96       	adiw	r26, 0x02	; 2
    100a:	2d 91       	ld	r18, X+
    100c:	3c 91       	ld	r19, X
    100e:	13 97       	sbiw	r26, 0x03	; 3
    1010:	22 38       	cpi	r18, 0x82	; 130
    1012:	8f ef       	ldi	r24, 0xFF	; 255
    1014:	38 07       	cpc	r19, r24
    1016:	0c f0       	brlt	.+2      	; 0x101a <__pack_f+0x54>
    1018:	58 c0       	rjmp	.+176    	; 0x10ca <__pack_f+0x104>
    101a:	c2 e8       	ldi	r28, 0x82	; 130
    101c:	df ef       	ldi	r29, 0xFF	; 255
    101e:	c2 1b       	sub	r28, r18
    1020:	d3 0b       	sbc	r29, r19
    1022:	ca 31       	cpi	r28, 0x1A	; 26
    1024:	d1 05       	cpc	r29, r1
    1026:	6c f5       	brge	.+90     	; 0x1082 <__pack_f+0xbc>
    1028:	8a 01       	movw	r16, r20
    102a:	9b 01       	movw	r18, r22
    102c:	0c 2e       	mov	r0, r28
    102e:	04 c0       	rjmp	.+8      	; 0x1038 <__pack_f+0x72>
    1030:	36 95       	lsr	r19
    1032:	27 95       	ror	r18
    1034:	17 95       	ror	r17
    1036:	07 95       	ror	r16
    1038:	0a 94       	dec	r0
    103a:	d2 f7       	brpl	.-12     	; 0x1030 <__pack_f+0x6a>
    103c:	81 e0       	ldi	r24, 0x01	; 1
    103e:	90 e0       	ldi	r25, 0x00	; 0
    1040:	a0 e0       	ldi	r26, 0x00	; 0
    1042:	b0 e0       	ldi	r27, 0x00	; 0
    1044:	0c 2e       	mov	r0, r28
    1046:	04 c0       	rjmp	.+8      	; 0x1050 <__pack_f+0x8a>
    1048:	88 0f       	add	r24, r24
    104a:	99 1f       	adc	r25, r25
    104c:	aa 1f       	adc	r26, r26
    104e:	bb 1f       	adc	r27, r27
    1050:	0a 94       	dec	r0
    1052:	d2 f7       	brpl	.-12     	; 0x1048 <__pack_f+0x82>
    1054:	01 97       	sbiw	r24, 0x01	; 1
    1056:	a1 09       	sbc	r26, r1
    1058:	b1 09       	sbc	r27, r1
    105a:	84 23       	and	r24, r20
    105c:	95 23       	and	r25, r21
    105e:	a6 23       	and	r26, r22
    1060:	b7 23       	and	r27, r23
    1062:	41 e0       	ldi	r20, 0x01	; 1
    1064:	50 e0       	ldi	r21, 0x00	; 0
    1066:	60 e0       	ldi	r22, 0x00	; 0
    1068:	70 e0       	ldi	r23, 0x00	; 0
    106a:	89 2b       	or	r24, r25
    106c:	8a 2b       	or	r24, r26
    106e:	8b 2b       	or	r24, r27
    1070:	19 f4       	brne	.+6      	; 0x1078 <__pack_f+0xb2>
    1072:	40 e0       	ldi	r20, 0x00	; 0
    1074:	50 e0       	ldi	r21, 0x00	; 0
    1076:	ba 01       	movw	r22, r20
    1078:	40 2b       	or	r20, r16
    107a:	51 2b       	or	r21, r17
    107c:	62 2b       	or	r22, r18
    107e:	73 2b       	or	r23, r19
    1080:	03 c0       	rjmp	.+6      	; 0x1088 <__pack_f+0xc2>
    1082:	40 e0       	ldi	r20, 0x00	; 0
    1084:	50 e0       	ldi	r21, 0x00	; 0
    1086:	ba 01       	movw	r22, r20
    1088:	db 01       	movw	r26, r22
    108a:	ca 01       	movw	r24, r20
    108c:	8f 77       	andi	r24, 0x7F	; 127
    108e:	99 27       	eor	r25, r25
    1090:	aa 27       	eor	r26, r26
    1092:	bb 27       	eor	r27, r27
    1094:	80 34       	cpi	r24, 0x40	; 64
    1096:	91 05       	cpc	r25, r1
    1098:	a1 05       	cpc	r26, r1
    109a:	b1 05       	cpc	r27, r1
    109c:	39 f4       	brne	.+14     	; 0x10ac <__pack_f+0xe6>
    109e:	47 ff       	sbrs	r20, 7
    10a0:	09 c0       	rjmp	.+18     	; 0x10b4 <__pack_f+0xee>
    10a2:	40 5c       	subi	r20, 0xC0	; 192
    10a4:	5f 4f       	sbci	r21, 0xFF	; 255
    10a6:	6f 4f       	sbci	r22, 0xFF	; 255
    10a8:	7f 4f       	sbci	r23, 0xFF	; 255
    10aa:	04 c0       	rjmp	.+8      	; 0x10b4 <__pack_f+0xee>
    10ac:	41 5c       	subi	r20, 0xC1	; 193
    10ae:	5f 4f       	sbci	r21, 0xFF	; 255
    10b0:	6f 4f       	sbci	r22, 0xFF	; 255
    10b2:	7f 4f       	sbci	r23, 0xFF	; 255
    10b4:	81 e0       	ldi	r24, 0x01	; 1
    10b6:	90 e0       	ldi	r25, 0x00	; 0
    10b8:	41 15       	cp	r20, r1
    10ba:	51 05       	cpc	r21, r1
    10bc:	61 05       	cpc	r22, r1
    10be:	20 e4       	ldi	r18, 0x40	; 64
    10c0:	72 07       	cpc	r23, r18
    10c2:	48 f5       	brcc	.+82     	; 0x1116 <__pack_f+0x150>
    10c4:	80 e0       	ldi	r24, 0x00	; 0
    10c6:	90 e0       	ldi	r25, 0x00	; 0
    10c8:	26 c0       	rjmp	.+76     	; 0x1116 <__pack_f+0x150>
    10ca:	20 38       	cpi	r18, 0x80	; 128
    10cc:	31 05       	cpc	r19, r1
    10ce:	8c f5       	brge	.+98     	; 0x1132 <__pack_f+0x16c>
    10d0:	db 01       	movw	r26, r22
    10d2:	ca 01       	movw	r24, r20
    10d4:	8f 77       	andi	r24, 0x7F	; 127
    10d6:	99 27       	eor	r25, r25
    10d8:	aa 27       	eor	r26, r26
    10da:	bb 27       	eor	r27, r27
    10dc:	80 34       	cpi	r24, 0x40	; 64
    10de:	91 05       	cpc	r25, r1
    10e0:	a1 05       	cpc	r26, r1
    10e2:	b1 05       	cpc	r27, r1
    10e4:	39 f4       	brne	.+14     	; 0x10f4 <__pack_f+0x12e>
    10e6:	47 ff       	sbrs	r20, 7
    10e8:	09 c0       	rjmp	.+18     	; 0x10fc <__pack_f+0x136>
    10ea:	40 5c       	subi	r20, 0xC0	; 192
    10ec:	5f 4f       	sbci	r21, 0xFF	; 255
    10ee:	6f 4f       	sbci	r22, 0xFF	; 255
    10f0:	7f 4f       	sbci	r23, 0xFF	; 255
    10f2:	04 c0       	rjmp	.+8      	; 0x10fc <__pack_f+0x136>
    10f4:	41 5c       	subi	r20, 0xC1	; 193
    10f6:	5f 4f       	sbci	r21, 0xFF	; 255
    10f8:	6f 4f       	sbci	r22, 0xFF	; 255
    10fa:	7f 4f       	sbci	r23, 0xFF	; 255
    10fc:	77 fd       	sbrc	r23, 7
    10fe:	04 c0       	rjmp	.+8      	; 0x1108 <__pack_f+0x142>
    1100:	c9 01       	movw	r24, r18
    1102:	81 58       	subi	r24, 0x81	; 129
    1104:	9f 4f       	sbci	r25, 0xFF	; 255
    1106:	07 c0       	rjmp	.+14     	; 0x1116 <__pack_f+0x150>
    1108:	76 95       	lsr	r23
    110a:	67 95       	ror	r22
    110c:	57 95       	ror	r21
    110e:	47 95       	ror	r20
    1110:	c9 01       	movw	r24, r18
    1112:	80 58       	subi	r24, 0x80	; 128
    1114:	9f 4f       	sbci	r25, 0xFF	; 255
    1116:	97 e0       	ldi	r25, 0x07	; 7
    1118:	76 95       	lsr	r23
    111a:	67 95       	ror	r22
    111c:	57 95       	ror	r21
    111e:	47 95       	ror	r20
    1120:	9a 95       	dec	r25
    1122:	d1 f7       	brne	.-12     	; 0x1118 <__pack_f+0x152>
    1124:	0b c0       	rjmp	.+22     	; 0x113c <__pack_f+0x176>
    1126:	80 e0       	ldi	r24, 0x00	; 0
    1128:	90 e0       	ldi	r25, 0x00	; 0
    112a:	05 c0       	rjmp	.+10     	; 0x1136 <__pack_f+0x170>
    112c:	80 e0       	ldi	r24, 0x00	; 0
    112e:	90 e0       	ldi	r25, 0x00	; 0
    1130:	05 c0       	rjmp	.+10     	; 0x113c <__pack_f+0x176>
    1132:	8f ef       	ldi	r24, 0xFF	; 255
    1134:	90 e0       	ldi	r25, 0x00	; 0
    1136:	40 e0       	ldi	r20, 0x00	; 0
    1138:	50 e0       	ldi	r21, 0x00	; 0
    113a:	ba 01       	movw	r22, r20
    113c:	98 2f       	mov	r25, r24
    113e:	96 95       	lsr	r25
    1140:	e0 fb       	bst	r30, 0
    1142:	97 f9       	bld	r25, 7
    1144:	36 2f       	mov	r19, r22
    1146:	80 fb       	bst	r24, 0
    1148:	37 f9       	bld	r19, 7
    114a:	64 2f       	mov	r22, r20
    114c:	75 2f       	mov	r23, r21
    114e:	83 2f       	mov	r24, r19
    1150:	df 91       	pop	r29
    1152:	cf 91       	pop	r28
    1154:	1f 91       	pop	r17
    1156:	0f 91       	pop	r16
    1158:	08 95       	ret

0000115a <__unpack_f>:
    115a:	cf 92       	push	r12
    115c:	df 92       	push	r13
    115e:	ef 92       	push	r14
    1160:	dc 01       	movw	r26, r24
    1162:	fb 01       	movw	r30, r22
    1164:	cc 90       	ld	r12, X
    1166:	11 96       	adiw	r26, 0x01	; 1
    1168:	dc 90       	ld	r13, X
    116a:	11 97       	sbiw	r26, 0x01	; 1
    116c:	12 96       	adiw	r26, 0x02	; 2
    116e:	8c 91       	ld	r24, X
    1170:	12 97       	sbiw	r26, 0x02	; 2
    1172:	3f e7       	ldi	r19, 0x7F	; 127
    1174:	e3 2e       	mov	r14, r19
    1176:	e8 22       	and	r14, r24
    1178:	6e 2d       	mov	r22, r14
    117a:	a6 01       	movw	r20, r12
    117c:	70 e0       	ldi	r23, 0x00	; 0
    117e:	98 2f       	mov	r25, r24
    1180:	99 1f       	adc	r25, r25
    1182:	99 27       	eor	r25, r25
    1184:	99 1f       	adc	r25, r25
    1186:	13 96       	adiw	r26, 0x03	; 3
    1188:	2c 91       	ld	r18, X
    118a:	82 2f       	mov	r24, r18
    118c:	88 0f       	add	r24, r24
    118e:	89 2b       	or	r24, r25
    1190:	90 e0       	ldi	r25, 0x00	; 0
    1192:	27 fb       	bst	r18, 7
    1194:	22 27       	eor	r18, r18
    1196:	20 f9       	bld	r18, 0
    1198:	21 83       	std	Z+1, r18	; 0x01
    119a:	00 97       	sbiw	r24, 0x00	; 0
    119c:	29 f5       	brne	.+74     	; 0x11e8 <__unpack_f+0x8e>
    119e:	41 15       	cp	r20, r1
    11a0:	51 05       	cpc	r21, r1
    11a2:	61 05       	cpc	r22, r1
    11a4:	71 05       	cpc	r23, r1
    11a6:	11 f4       	brne	.+4      	; 0x11ac <__unpack_f+0x52>
    11a8:	82 e0       	ldi	r24, 0x02	; 2
    11aa:	27 c0       	rjmp	.+78     	; 0x11fa <__unpack_f+0xa0>
    11ac:	82 e8       	ldi	r24, 0x82	; 130
    11ae:	9f ef       	ldi	r25, 0xFF	; 255
    11b0:	93 83       	std	Z+3, r25	; 0x03
    11b2:	82 83       	std	Z+2, r24	; 0x02
    11b4:	27 e0       	ldi	r18, 0x07	; 7
    11b6:	44 0f       	add	r20, r20
    11b8:	55 1f       	adc	r21, r21
    11ba:	66 1f       	adc	r22, r22
    11bc:	77 1f       	adc	r23, r23
    11be:	2a 95       	dec	r18
    11c0:	d1 f7       	brne	.-12     	; 0x11b6 <__unpack_f+0x5c>
    11c2:	83 e0       	ldi	r24, 0x03	; 3
    11c4:	80 83       	st	Z, r24
    11c6:	09 c0       	rjmp	.+18     	; 0x11da <__unpack_f+0x80>
    11c8:	44 0f       	add	r20, r20
    11ca:	55 1f       	adc	r21, r21
    11cc:	66 1f       	adc	r22, r22
    11ce:	77 1f       	adc	r23, r23
    11d0:	82 81       	ldd	r24, Z+2	; 0x02
    11d2:	93 81       	ldd	r25, Z+3	; 0x03
    11d4:	01 97       	sbiw	r24, 0x01	; 1
    11d6:	93 83       	std	Z+3, r25	; 0x03
    11d8:	82 83       	std	Z+2, r24	; 0x02
    11da:	41 15       	cp	r20, r1
    11dc:	51 05       	cpc	r21, r1
    11de:	61 05       	cpc	r22, r1
    11e0:	80 e4       	ldi	r24, 0x40	; 64
    11e2:	78 07       	cpc	r23, r24
    11e4:	88 f3       	brcs	.-30     	; 0x11c8 <__unpack_f+0x6e>
    11e6:	20 c0       	rjmp	.+64     	; 0x1228 <__unpack_f+0xce>
    11e8:	8f 3f       	cpi	r24, 0xFF	; 255
    11ea:	91 05       	cpc	r25, r1
    11ec:	79 f4       	brne	.+30     	; 0x120c <__unpack_f+0xb2>
    11ee:	41 15       	cp	r20, r1
    11f0:	51 05       	cpc	r21, r1
    11f2:	61 05       	cpc	r22, r1
    11f4:	71 05       	cpc	r23, r1
    11f6:	19 f4       	brne	.+6      	; 0x11fe <__unpack_f+0xa4>
    11f8:	84 e0       	ldi	r24, 0x04	; 4
    11fa:	80 83       	st	Z, r24
    11fc:	19 c0       	rjmp	.+50     	; 0x1230 <__unpack_f+0xd6>
    11fe:	e4 fe       	sbrs	r14, 4
    1200:	03 c0       	rjmp	.+6      	; 0x1208 <__unpack_f+0xae>
    1202:	81 e0       	ldi	r24, 0x01	; 1
    1204:	80 83       	st	Z, r24
    1206:	10 c0       	rjmp	.+32     	; 0x1228 <__unpack_f+0xce>
    1208:	10 82       	st	Z, r1
    120a:	0e c0       	rjmp	.+28     	; 0x1228 <__unpack_f+0xce>
    120c:	8f 57       	subi	r24, 0x7F	; 127
    120e:	91 09       	sbc	r25, r1
    1210:	93 83       	std	Z+3, r25	; 0x03
    1212:	82 83       	std	Z+2, r24	; 0x02
    1214:	83 e0       	ldi	r24, 0x03	; 3
    1216:	80 83       	st	Z, r24
    1218:	87 e0       	ldi	r24, 0x07	; 7
    121a:	44 0f       	add	r20, r20
    121c:	55 1f       	adc	r21, r21
    121e:	66 1f       	adc	r22, r22
    1220:	77 1f       	adc	r23, r23
    1222:	8a 95       	dec	r24
    1224:	d1 f7       	brne	.-12     	; 0x121a <__unpack_f+0xc0>
    1226:	70 64       	ori	r23, 0x40	; 64
    1228:	44 83       	std	Z+4, r20	; 0x04
    122a:	55 83       	std	Z+5, r21	; 0x05
    122c:	66 83       	std	Z+6, r22	; 0x06
    122e:	77 83       	std	Z+7, r23	; 0x07
    1230:	ef 90       	pop	r14
    1232:	df 90       	pop	r13
    1234:	cf 90       	pop	r12
    1236:	08 95       	ret

00001238 <__fpcmp_parts_f>:
    1238:	cf 93       	push	r28
    123a:	fc 01       	movw	r30, r24
    123c:	db 01       	movw	r26, r22
    123e:	90 81       	ld	r25, Z
    1240:	92 30       	cpi	r25, 0x02	; 2
    1242:	08 f4       	brcc	.+2      	; 0x1246 <__fpcmp_parts_f+0xe>
    1244:	52 c0       	rjmp	.+164    	; 0x12ea <__fpcmp_parts_f+0xb2>
    1246:	8c 91       	ld	r24, X
    1248:	82 30       	cpi	r24, 0x02	; 2
    124a:	08 f4       	brcc	.+2      	; 0x124e <__fpcmp_parts_f+0x16>
    124c:	4e c0       	rjmp	.+156    	; 0x12ea <__fpcmp_parts_f+0xb2>
    124e:	94 30       	cpi	r25, 0x04	; 4
    1250:	71 f4       	brne	.+28     	; 0x126e <__fpcmp_parts_f+0x36>
    1252:	84 30       	cpi	r24, 0x04	; 4
    1254:	39 f4       	brne	.+14     	; 0x1264 <__fpcmp_parts_f+0x2c>
    1256:	11 96       	adiw	r26, 0x01	; 1
    1258:	2c 91       	ld	r18, X
    125a:	30 e0       	ldi	r19, 0x00	; 0
    125c:	81 81       	ldd	r24, Z+1	; 0x01
    125e:	28 1b       	sub	r18, r24
    1260:	31 09       	sbc	r19, r1
    1262:	48 c0       	rjmp	.+144    	; 0x12f4 <__fpcmp_parts_f+0xbc>
    1264:	81 81       	ldd	r24, Z+1	; 0x01
    1266:	88 23       	and	r24, r24
    1268:	09 f4       	brne	.+2      	; 0x126c <__fpcmp_parts_f+0x34>
    126a:	3f c0       	rjmp	.+126    	; 0x12ea <__fpcmp_parts_f+0xb2>
    126c:	3b c0       	rjmp	.+118    	; 0x12e4 <__fpcmp_parts_f+0xac>
    126e:	84 30       	cpi	r24, 0x04	; 4
    1270:	29 f4       	brne	.+10     	; 0x127c <__fpcmp_parts_f+0x44>
    1272:	11 96       	adiw	r26, 0x01	; 1
    1274:	8c 91       	ld	r24, X
    1276:	81 11       	cpse	r24, r1
    1278:	38 c0       	rjmp	.+112    	; 0x12ea <__fpcmp_parts_f+0xb2>
    127a:	34 c0       	rjmp	.+104    	; 0x12e4 <__fpcmp_parts_f+0xac>
    127c:	92 30       	cpi	r25, 0x02	; 2
    127e:	19 f4       	brne	.+6      	; 0x1286 <__fpcmp_parts_f+0x4e>
    1280:	82 30       	cpi	r24, 0x02	; 2
    1282:	b9 f7       	brne	.-18     	; 0x1272 <__fpcmp_parts_f+0x3a>
    1284:	35 c0       	rjmp	.+106    	; 0x12f0 <__fpcmp_parts_f+0xb8>
    1286:	82 30       	cpi	r24, 0x02	; 2
    1288:	69 f3       	breq	.-38     	; 0x1264 <__fpcmp_parts_f+0x2c>
    128a:	c1 81       	ldd	r28, Z+1	; 0x01
    128c:	11 96       	adiw	r26, 0x01	; 1
    128e:	8c 91       	ld	r24, X
    1290:	11 97       	sbiw	r26, 0x01	; 1
    1292:	c8 13       	cpse	r28, r24
    1294:	1d c0       	rjmp	.+58     	; 0x12d0 <__fpcmp_parts_f+0x98>
    1296:	22 81       	ldd	r18, Z+2	; 0x02
    1298:	33 81       	ldd	r19, Z+3	; 0x03
    129a:	12 96       	adiw	r26, 0x02	; 2
    129c:	8d 91       	ld	r24, X+
    129e:	9c 91       	ld	r25, X
    12a0:	13 97       	sbiw	r26, 0x03	; 3
    12a2:	82 17       	cp	r24, r18
    12a4:	93 07       	cpc	r25, r19
    12a6:	0c f4       	brge	.+2      	; 0x12aa <__fpcmp_parts_f+0x72>
    12a8:	13 c0       	rjmp	.+38     	; 0x12d0 <__fpcmp_parts_f+0x98>
    12aa:	28 17       	cp	r18, r24
    12ac:	39 07       	cpc	r19, r25
    12ae:	0c f4       	brge	.+2      	; 0x12b2 <__fpcmp_parts_f+0x7a>
    12b0:	17 c0       	rjmp	.+46     	; 0x12e0 <__fpcmp_parts_f+0xa8>
    12b2:	44 81       	ldd	r20, Z+4	; 0x04
    12b4:	55 81       	ldd	r21, Z+5	; 0x05
    12b6:	66 81       	ldd	r22, Z+6	; 0x06
    12b8:	77 81       	ldd	r23, Z+7	; 0x07
    12ba:	14 96       	adiw	r26, 0x04	; 4
    12bc:	8d 91       	ld	r24, X+
    12be:	9d 91       	ld	r25, X+
    12c0:	0d 90       	ld	r0, X+
    12c2:	bc 91       	ld	r27, X
    12c4:	a0 2d       	mov	r26, r0
    12c6:	84 17       	cp	r24, r20
    12c8:	95 07       	cpc	r25, r21
    12ca:	a6 07       	cpc	r26, r22
    12cc:	b7 07       	cpc	r27, r23
    12ce:	18 f4       	brcc	.+6      	; 0x12d6 <__fpcmp_parts_f+0x9e>
    12d0:	c1 11       	cpse	r28, r1
    12d2:	08 c0       	rjmp	.+16     	; 0x12e4 <__fpcmp_parts_f+0xac>
    12d4:	0a c0       	rjmp	.+20     	; 0x12ea <__fpcmp_parts_f+0xb2>
    12d6:	48 17       	cp	r20, r24
    12d8:	59 07       	cpc	r21, r25
    12da:	6a 07       	cpc	r22, r26
    12dc:	7b 07       	cpc	r23, r27
    12de:	40 f4       	brcc	.+16     	; 0x12f0 <__fpcmp_parts_f+0xb8>
    12e0:	c1 11       	cpse	r28, r1
    12e2:	03 c0       	rjmp	.+6      	; 0x12ea <__fpcmp_parts_f+0xb2>
    12e4:	2f ef       	ldi	r18, 0xFF	; 255
    12e6:	3f ef       	ldi	r19, 0xFF	; 255
    12e8:	05 c0       	rjmp	.+10     	; 0x12f4 <__fpcmp_parts_f+0xbc>
    12ea:	21 e0       	ldi	r18, 0x01	; 1
    12ec:	30 e0       	ldi	r19, 0x00	; 0
    12ee:	02 c0       	rjmp	.+4      	; 0x12f4 <__fpcmp_parts_f+0xbc>
    12f0:	20 e0       	ldi	r18, 0x00	; 0
    12f2:	30 e0       	ldi	r19, 0x00	; 0
    12f4:	c9 01       	movw	r24, r18
    12f6:	cf 91       	pop	r28
    12f8:	08 95       	ret

000012fa <main>:
}

int main(void) {
  // Init port B to show keyboard result
  DDRB = 0xff;
    12fa:	8f ef       	ldi	r24, 0xFF	; 255
    12fc:	84 b9       	out	0x04, r24	; 4
  // and turn out the LEDs
  PORTB = 0xff;   
    12fe:	85 b9       	out	0x05, r24	; 5
  
  // init the UART
  uart_init();
    1300:	0e 94 a8 01 	call	0x350	; 0x350 <uart_init>
  stdout = stdin = stderr = &uart_str;
    1304:	80 e0       	ldi	r24, 0x00	; 0
    1306:	91 e0       	ldi	r25, 0x01	; 1
    1308:	90 93 23 04 	sts	0x0423, r25
    130c:	80 93 22 04 	sts	0x0422, r24
    1310:	90 93 1f 04 	sts	0x041F, r25
    1314:	80 93 1e 04 	sts	0x041E, r24
    1318:	90 93 21 04 	sts	0x0421, r25
    131c:	80 93 20 04 	sts	0x0420, r24
  fprintf(stdout, "Starting...\n\r");
    1320:	bc 01       	movw	r22, r24
    1322:	88 e6       	ldi	r24, 0x68	; 104
    1324:	91 e0       	ldi	r25, 0x01	; 1
    1326:	0e 94 02 0a 	call	0x1404	; 0x1404 <fputs>

  initialize();
    132a:	0e 94 8e 01 	call	0x31c	; 0x31c <initialize>

  //endless loop to read keyboard
  while(1) {
	//Used for debouncing
    if (time1>=t1) {
    132e:	80 91 ec 01 	lds	r24, 0x01EC
    1332:	90 91 ed 01 	lds	r25, 0x01ED
    1336:	44 97       	sbiw	r24, 0x14	; 20
    1338:	d0 f3       	brcs	.-12     	; 0x132e <main+0x34>
		task1();
    133a:	0e 94 76 00 	call	0xec	; 0xec <task1>
    133e:	f7 cf       	rjmp	.-18     	; 0x132e <main+0x34>

00001340 <__clzsi2>:
    1340:	0e 94 a9 09 	call	0x1352	; 0x1352 <__clzhi2>
    1344:	84 ff       	sbrs	r24, 4
    1346:	08 95       	ret
    1348:	cb 01       	movw	r24, r22
    134a:	0e 94 a9 09 	call	0x1352	; 0x1352 <__clzhi2>
    134e:	80 5f       	subi	r24, 0xF0	; 240
    1350:	08 95       	ret

00001352 <__clzhi2>:
    1352:	aa 27       	eor	r26, r26
    1354:	99 23       	and	r25, r25
    1356:	29 f4       	brne	.+10     	; 0x1362 <__clzhi2+0x10>
    1358:	a8 5f       	subi	r26, 0xF8	; 248
    135a:	98 2b       	or	r25, r24
    135c:	11 f4       	brne	.+4      	; 0x1362 <__clzhi2+0x10>
    135e:	80 e1       	ldi	r24, 0x10	; 16
    1360:	08 95       	ret
    1362:	90 31       	cpi	r25, 0x10	; 16
    1364:	18 f4       	brcc	.+6      	; 0x136c <__clzhi2+0x1a>
    1366:	ad 5f       	subi	r26, 0xFD	; 253
    1368:	92 95       	swap	r25
    136a:	a3 95       	inc	r26
    136c:	99 0f       	add	r25, r25
    136e:	e8 f7       	brcc	.-6      	; 0x136a <__clzhi2+0x18>
    1370:	8a 2f       	mov	r24, r26
    1372:	99 27       	eor	r25, r25
    1374:	08 95       	ret

00001376 <__prologue_saves__>:
    1376:	2f 92       	push	r2
    1378:	3f 92       	push	r3
    137a:	4f 92       	push	r4
    137c:	5f 92       	push	r5
    137e:	6f 92       	push	r6
    1380:	7f 92       	push	r7
    1382:	8f 92       	push	r8
    1384:	9f 92       	push	r9
    1386:	af 92       	push	r10
    1388:	bf 92       	push	r11
    138a:	cf 92       	push	r12
    138c:	df 92       	push	r13
    138e:	ef 92       	push	r14
    1390:	ff 92       	push	r15
    1392:	0f 93       	push	r16
    1394:	1f 93       	push	r17
    1396:	cf 93       	push	r28
    1398:	df 93       	push	r29
    139a:	cd b7       	in	r28, 0x3d	; 61
    139c:	de b7       	in	r29, 0x3e	; 62
    139e:	ca 1b       	sub	r28, r26
    13a0:	db 0b       	sbc	r29, r27
    13a2:	0f b6       	in	r0, 0x3f	; 63
    13a4:	f8 94       	cli
    13a6:	de bf       	out	0x3e, r29	; 62
    13a8:	0f be       	out	0x3f, r0	; 63
    13aa:	cd bf       	out	0x3d, r28	; 61
    13ac:	09 94       	ijmp

000013ae <__epilogue_restores__>:
    13ae:	2a 88       	ldd	r2, Y+18	; 0x12
    13b0:	39 88       	ldd	r3, Y+17	; 0x11
    13b2:	48 88       	ldd	r4, Y+16	; 0x10
    13b4:	5f 84       	ldd	r5, Y+15	; 0x0f
    13b6:	6e 84       	ldd	r6, Y+14	; 0x0e
    13b8:	7d 84       	ldd	r7, Y+13	; 0x0d
    13ba:	8c 84       	ldd	r8, Y+12	; 0x0c
    13bc:	9b 84       	ldd	r9, Y+11	; 0x0b
    13be:	aa 84       	ldd	r10, Y+10	; 0x0a
    13c0:	b9 84       	ldd	r11, Y+9	; 0x09
    13c2:	c8 84       	ldd	r12, Y+8	; 0x08
    13c4:	df 80       	ldd	r13, Y+7	; 0x07
    13c6:	ee 80       	ldd	r14, Y+6	; 0x06
    13c8:	fd 80       	ldd	r15, Y+5	; 0x05
    13ca:	0c 81       	ldd	r16, Y+4	; 0x04
    13cc:	1b 81       	ldd	r17, Y+3	; 0x03
    13ce:	aa 81       	ldd	r26, Y+2	; 0x02
    13d0:	b9 81       	ldd	r27, Y+1	; 0x01
    13d2:	ce 0f       	add	r28, r30
    13d4:	d1 1d       	adc	r29, r1
    13d6:	0f b6       	in	r0, 0x3f	; 63
    13d8:	f8 94       	cli
    13da:	de bf       	out	0x3e, r29	; 62
    13dc:	0f be       	out	0x3f, r0	; 63
    13de:	cd bf       	out	0x3d, r28	; 61
    13e0:	ed 01       	movw	r28, r26
    13e2:	08 95       	ret

000013e4 <fprintf>:
    13e4:	cf 93       	push	r28
    13e6:	df 93       	push	r29
    13e8:	cd b7       	in	r28, 0x3d	; 61
    13ea:	de b7       	in	r29, 0x3e	; 62
    13ec:	ce 01       	movw	r24, r28
    13ee:	09 96       	adiw	r24, 0x09	; 9
    13f0:	ac 01       	movw	r20, r24
    13f2:	6f 81       	ldd	r22, Y+7	; 0x07
    13f4:	78 85       	ldd	r23, Y+8	; 0x08
    13f6:	8d 81       	ldd	r24, Y+5	; 0x05
    13f8:	9e 81       	ldd	r25, Y+6	; 0x06
    13fa:	0e 94 33 0a 	call	0x1466	; 0x1466 <vfprintf>
    13fe:	df 91       	pop	r29
    1400:	cf 91       	pop	r28
    1402:	08 95       	ret

00001404 <fputs>:
    1404:	ef 92       	push	r14
    1406:	ff 92       	push	r15
    1408:	0f 93       	push	r16
    140a:	1f 93       	push	r17
    140c:	cf 93       	push	r28
    140e:	df 93       	push	r29
    1410:	7c 01       	movw	r14, r24
    1412:	8b 01       	movw	r16, r22
    1414:	db 01       	movw	r26, r22
    1416:	13 96       	adiw	r26, 0x03	; 3
    1418:	8c 91       	ld	r24, X
    141a:	81 ff       	sbrs	r24, 1
    141c:	14 c0       	rjmp	.+40     	; 0x1446 <fputs+0x42>
    141e:	c0 e0       	ldi	r28, 0x00	; 0
    1420:	d0 e0       	ldi	r29, 0x00	; 0
    1422:	0b c0       	rjmp	.+22     	; 0x143a <fputs+0x36>
    1424:	d8 01       	movw	r26, r16
    1426:	18 96       	adiw	r26, 0x08	; 8
    1428:	ed 91       	ld	r30, X+
    142a:	fc 91       	ld	r31, X
    142c:	19 97       	sbiw	r26, 0x09	; 9
    142e:	b8 01       	movw	r22, r16
    1430:	09 95       	icall
    1432:	89 2b       	or	r24, r25
    1434:	11 f0       	breq	.+4      	; 0x143a <fputs+0x36>
    1436:	cf ef       	ldi	r28, 0xFF	; 255
    1438:	df ef       	ldi	r29, 0xFF	; 255
    143a:	f7 01       	movw	r30, r14
    143c:	81 91       	ld	r24, Z+
    143e:	7f 01       	movw	r14, r30
    1440:	81 11       	cpse	r24, r1
    1442:	f0 cf       	rjmp	.-32     	; 0x1424 <fputs+0x20>
    1444:	02 c0       	rjmp	.+4      	; 0x144a <fputs+0x46>
    1446:	cf ef       	ldi	r28, 0xFF	; 255
    1448:	df ef       	ldi	r29, 0xFF	; 255
    144a:	ce 01       	movw	r24, r28
    144c:	df 91       	pop	r29
    144e:	cf 91       	pop	r28
    1450:	1f 91       	pop	r17
    1452:	0f 91       	pop	r16
    1454:	ff 90       	pop	r15
    1456:	ef 90       	pop	r14
    1458:	08 95       	ret

0000145a <sin>:
    145a:	9f 93       	push	r25
    145c:	aa d2       	rcall	.+1364   	; 0x19b2 <__fp_rempio2>
    145e:	0f 90       	pop	r0
    1460:	07 fc       	sbrc	r0, 7
    1462:	ee 5f       	subi	r30, 0xFE	; 254
    1464:	cd c2       	rjmp	.+1434   	; 0x1a00 <__fp_sinus>

00001466 <vfprintf>:
    1466:	2f 92       	push	r2
    1468:	3f 92       	push	r3
    146a:	4f 92       	push	r4
    146c:	5f 92       	push	r5
    146e:	6f 92       	push	r6
    1470:	7f 92       	push	r7
    1472:	8f 92       	push	r8
    1474:	9f 92       	push	r9
    1476:	af 92       	push	r10
    1478:	bf 92       	push	r11
    147a:	cf 92       	push	r12
    147c:	df 92       	push	r13
    147e:	ef 92       	push	r14
    1480:	ff 92       	push	r15
    1482:	0f 93       	push	r16
    1484:	1f 93       	push	r17
    1486:	cf 93       	push	r28
    1488:	df 93       	push	r29
    148a:	cd b7       	in	r28, 0x3d	; 61
    148c:	de b7       	in	r29, 0x3e	; 62
    148e:	2c 97       	sbiw	r28, 0x0c	; 12
    1490:	0f b6       	in	r0, 0x3f	; 63
    1492:	f8 94       	cli
    1494:	de bf       	out	0x3e, r29	; 62
    1496:	0f be       	out	0x3f, r0	; 63
    1498:	cd bf       	out	0x3d, r28	; 61
    149a:	7c 01       	movw	r14, r24
    149c:	6b 01       	movw	r12, r22
    149e:	8a 01       	movw	r16, r20
    14a0:	fc 01       	movw	r30, r24
    14a2:	17 82       	std	Z+7, r1	; 0x07
    14a4:	16 82       	std	Z+6, r1	; 0x06
    14a6:	83 81       	ldd	r24, Z+3	; 0x03
    14a8:	81 ff       	sbrs	r24, 1
    14aa:	c6 c1       	rjmp	.+908    	; 0x1838 <vfprintf+0x3d2>
    14ac:	88 24       	eor	r8, r8
    14ae:	83 94       	inc	r8
    14b0:	91 2c       	mov	r9, r1
    14b2:	8c 0e       	add	r8, r28
    14b4:	9d 1e       	adc	r9, r29
    14b6:	f7 01       	movw	r30, r14
    14b8:	93 81       	ldd	r25, Z+3	; 0x03
    14ba:	f6 01       	movw	r30, r12
    14bc:	93 fd       	sbrc	r25, 3
    14be:	85 91       	lpm	r24, Z+
    14c0:	93 ff       	sbrs	r25, 3
    14c2:	81 91       	ld	r24, Z+
    14c4:	6f 01       	movw	r12, r30
    14c6:	88 23       	and	r24, r24
    14c8:	09 f4       	brne	.+2      	; 0x14cc <vfprintf+0x66>
    14ca:	b2 c1       	rjmp	.+868    	; 0x1830 <vfprintf+0x3ca>
    14cc:	85 32       	cpi	r24, 0x25	; 37
    14ce:	39 f4       	brne	.+14     	; 0x14de <vfprintf+0x78>
    14d0:	93 fd       	sbrc	r25, 3
    14d2:	85 91       	lpm	r24, Z+
    14d4:	93 ff       	sbrs	r25, 3
    14d6:	81 91       	ld	r24, Z+
    14d8:	6f 01       	movw	r12, r30
    14da:	85 32       	cpi	r24, 0x25	; 37
    14dc:	29 f4       	brne	.+10     	; 0x14e8 <vfprintf+0x82>
    14de:	b7 01       	movw	r22, r14
    14e0:	90 e0       	ldi	r25, 0x00	; 0
    14e2:	0e 94 4e 0c 	call	0x189c	; 0x189c <fputc>
    14e6:	e7 cf       	rjmp	.-50     	; 0x14b6 <vfprintf+0x50>
    14e8:	51 2c       	mov	r5, r1
    14ea:	31 2c       	mov	r3, r1
    14ec:	20 e0       	ldi	r18, 0x00	; 0
    14ee:	20 32       	cpi	r18, 0x20	; 32
    14f0:	a8 f4       	brcc	.+42     	; 0x151c <vfprintf+0xb6>
    14f2:	8b 32       	cpi	r24, 0x2B	; 43
    14f4:	61 f0       	breq	.+24     	; 0x150e <vfprintf+0xa8>
    14f6:	28 f4       	brcc	.+10     	; 0x1502 <vfprintf+0x9c>
    14f8:	80 32       	cpi	r24, 0x20	; 32
    14fa:	51 f0       	breq	.+20     	; 0x1510 <vfprintf+0xaa>
    14fc:	83 32       	cpi	r24, 0x23	; 35
    14fe:	71 f4       	brne	.+28     	; 0x151c <vfprintf+0xb6>
    1500:	0b c0       	rjmp	.+22     	; 0x1518 <vfprintf+0xb2>
    1502:	8d 32       	cpi	r24, 0x2D	; 45
    1504:	39 f0       	breq	.+14     	; 0x1514 <vfprintf+0xae>
    1506:	80 33       	cpi	r24, 0x30	; 48
    1508:	49 f4       	brne	.+18     	; 0x151c <vfprintf+0xb6>
    150a:	21 60       	ori	r18, 0x01	; 1
    150c:	28 c0       	rjmp	.+80     	; 0x155e <vfprintf+0xf8>
    150e:	22 60       	ori	r18, 0x02	; 2
    1510:	24 60       	ori	r18, 0x04	; 4
    1512:	25 c0       	rjmp	.+74     	; 0x155e <vfprintf+0xf8>
    1514:	28 60       	ori	r18, 0x08	; 8
    1516:	23 c0       	rjmp	.+70     	; 0x155e <vfprintf+0xf8>
    1518:	20 61       	ori	r18, 0x10	; 16
    151a:	21 c0       	rjmp	.+66     	; 0x155e <vfprintf+0xf8>
    151c:	27 fd       	sbrc	r18, 7
    151e:	27 c0       	rjmp	.+78     	; 0x156e <vfprintf+0x108>
    1520:	38 2f       	mov	r19, r24
    1522:	30 53       	subi	r19, 0x30	; 48
    1524:	3a 30       	cpi	r19, 0x0A	; 10
    1526:	78 f4       	brcc	.+30     	; 0x1546 <vfprintf+0xe0>
    1528:	26 ff       	sbrs	r18, 6
    152a:	06 c0       	rjmp	.+12     	; 0x1538 <vfprintf+0xd2>
    152c:	fa e0       	ldi	r31, 0x0A	; 10
    152e:	5f 9e       	mul	r5, r31
    1530:	30 0d       	add	r19, r0
    1532:	11 24       	eor	r1, r1
    1534:	53 2e       	mov	r5, r19
    1536:	13 c0       	rjmp	.+38     	; 0x155e <vfprintf+0xf8>
    1538:	8a e0       	ldi	r24, 0x0A	; 10
    153a:	38 9e       	mul	r3, r24
    153c:	30 0d       	add	r19, r0
    153e:	11 24       	eor	r1, r1
    1540:	33 2e       	mov	r3, r19
    1542:	20 62       	ori	r18, 0x20	; 32
    1544:	0c c0       	rjmp	.+24     	; 0x155e <vfprintf+0xf8>
    1546:	8e 32       	cpi	r24, 0x2E	; 46
    1548:	21 f4       	brne	.+8      	; 0x1552 <vfprintf+0xec>
    154a:	26 fd       	sbrc	r18, 6
    154c:	71 c1       	rjmp	.+738    	; 0x1830 <vfprintf+0x3ca>
    154e:	20 64       	ori	r18, 0x40	; 64
    1550:	06 c0       	rjmp	.+12     	; 0x155e <vfprintf+0xf8>
    1552:	8c 36       	cpi	r24, 0x6C	; 108
    1554:	11 f4       	brne	.+4      	; 0x155a <vfprintf+0xf4>
    1556:	20 68       	ori	r18, 0x80	; 128
    1558:	02 c0       	rjmp	.+4      	; 0x155e <vfprintf+0xf8>
    155a:	88 36       	cpi	r24, 0x68	; 104
    155c:	41 f4       	brne	.+16     	; 0x156e <vfprintf+0x108>
    155e:	f6 01       	movw	r30, r12
    1560:	93 fd       	sbrc	r25, 3
    1562:	85 91       	lpm	r24, Z+
    1564:	93 ff       	sbrs	r25, 3
    1566:	81 91       	ld	r24, Z+
    1568:	6f 01       	movw	r12, r30
    156a:	81 11       	cpse	r24, r1
    156c:	c0 cf       	rjmp	.-128    	; 0x14ee <vfprintf+0x88>
    156e:	98 2f       	mov	r25, r24
    1570:	95 54       	subi	r25, 0x45	; 69
    1572:	93 30       	cpi	r25, 0x03	; 3
    1574:	18 f0       	brcs	.+6      	; 0x157c <vfprintf+0x116>
    1576:	90 52       	subi	r25, 0x20	; 32
    1578:	93 30       	cpi	r25, 0x03	; 3
    157a:	28 f4       	brcc	.+10     	; 0x1586 <vfprintf+0x120>
    157c:	0c 5f       	subi	r16, 0xFC	; 252
    157e:	1f 4f       	sbci	r17, 0xFF	; 255
    1580:	ff e3       	ldi	r31, 0x3F	; 63
    1582:	f9 83       	std	Y+1, r31	; 0x01
    1584:	0d c0       	rjmp	.+26     	; 0x15a0 <vfprintf+0x13a>
    1586:	83 36       	cpi	r24, 0x63	; 99
    1588:	31 f0       	breq	.+12     	; 0x1596 <vfprintf+0x130>
    158a:	83 37       	cpi	r24, 0x73	; 115
    158c:	71 f0       	breq	.+28     	; 0x15aa <vfprintf+0x144>
    158e:	83 35       	cpi	r24, 0x53	; 83
    1590:	09 f0       	breq	.+2      	; 0x1594 <vfprintf+0x12e>
    1592:	5e c0       	rjmp	.+188    	; 0x1650 <vfprintf+0x1ea>
    1594:	23 c0       	rjmp	.+70     	; 0x15dc <vfprintf+0x176>
    1596:	f8 01       	movw	r30, r16
    1598:	80 81       	ld	r24, Z
    159a:	89 83       	std	Y+1, r24	; 0x01
    159c:	0e 5f       	subi	r16, 0xFE	; 254
    159e:	1f 4f       	sbci	r17, 0xFF	; 255
    15a0:	44 24       	eor	r4, r4
    15a2:	43 94       	inc	r4
    15a4:	51 2c       	mov	r5, r1
    15a6:	54 01       	movw	r10, r8
    15a8:	15 c0       	rjmp	.+42     	; 0x15d4 <vfprintf+0x16e>
    15aa:	38 01       	movw	r6, r16
    15ac:	f2 e0       	ldi	r31, 0x02	; 2
    15ae:	6f 0e       	add	r6, r31
    15b0:	71 1c       	adc	r7, r1
    15b2:	f8 01       	movw	r30, r16
    15b4:	a0 80       	ld	r10, Z
    15b6:	b1 80       	ldd	r11, Z+1	; 0x01
    15b8:	26 ff       	sbrs	r18, 6
    15ba:	03 c0       	rjmp	.+6      	; 0x15c2 <vfprintf+0x15c>
    15bc:	65 2d       	mov	r22, r5
    15be:	70 e0       	ldi	r23, 0x00	; 0
    15c0:	02 c0       	rjmp	.+4      	; 0x15c6 <vfprintf+0x160>
    15c2:	6f ef       	ldi	r22, 0xFF	; 255
    15c4:	7f ef       	ldi	r23, 0xFF	; 255
    15c6:	c5 01       	movw	r24, r10
    15c8:	2c 87       	std	Y+12, r18	; 0x0c
    15ca:	0e 94 43 0c 	call	0x1886	; 0x1886 <strnlen>
    15ce:	2c 01       	movw	r4, r24
    15d0:	83 01       	movw	r16, r6
    15d2:	2c 85       	ldd	r18, Y+12	; 0x0c
    15d4:	6f e7       	ldi	r22, 0x7F	; 127
    15d6:	26 2e       	mov	r2, r22
    15d8:	22 22       	and	r2, r18
    15da:	18 c0       	rjmp	.+48     	; 0x160c <vfprintf+0x1a6>
    15dc:	38 01       	movw	r6, r16
    15de:	f2 e0       	ldi	r31, 0x02	; 2
    15e0:	6f 0e       	add	r6, r31
    15e2:	71 1c       	adc	r7, r1
    15e4:	f8 01       	movw	r30, r16
    15e6:	a0 80       	ld	r10, Z
    15e8:	b1 80       	ldd	r11, Z+1	; 0x01
    15ea:	26 ff       	sbrs	r18, 6
    15ec:	03 c0       	rjmp	.+6      	; 0x15f4 <vfprintf+0x18e>
    15ee:	65 2d       	mov	r22, r5
    15f0:	70 e0       	ldi	r23, 0x00	; 0
    15f2:	02 c0       	rjmp	.+4      	; 0x15f8 <vfprintf+0x192>
    15f4:	6f ef       	ldi	r22, 0xFF	; 255
    15f6:	7f ef       	ldi	r23, 0xFF	; 255
    15f8:	c5 01       	movw	r24, r10
    15fa:	2c 87       	std	Y+12, r18	; 0x0c
    15fc:	0e 94 38 0c 	call	0x1870	; 0x1870 <strnlen_P>
    1600:	2c 01       	movw	r4, r24
    1602:	2c 85       	ldd	r18, Y+12	; 0x0c
    1604:	50 e8       	ldi	r21, 0x80	; 128
    1606:	25 2e       	mov	r2, r21
    1608:	22 2a       	or	r2, r18
    160a:	83 01       	movw	r16, r6
    160c:	23 fc       	sbrc	r2, 3
    160e:	1c c0       	rjmp	.+56     	; 0x1648 <vfprintf+0x1e2>
    1610:	06 c0       	rjmp	.+12     	; 0x161e <vfprintf+0x1b8>
    1612:	b7 01       	movw	r22, r14
    1614:	80 e2       	ldi	r24, 0x20	; 32
    1616:	90 e0       	ldi	r25, 0x00	; 0
    1618:	0e 94 4e 0c 	call	0x189c	; 0x189c <fputc>
    161c:	3a 94       	dec	r3
    161e:	83 2d       	mov	r24, r3
    1620:	90 e0       	ldi	r25, 0x00	; 0
    1622:	48 16       	cp	r4, r24
    1624:	59 06       	cpc	r5, r25
    1626:	a8 f3       	brcs	.-22     	; 0x1612 <vfprintf+0x1ac>
    1628:	0f c0       	rjmp	.+30     	; 0x1648 <vfprintf+0x1e2>
    162a:	f5 01       	movw	r30, r10
    162c:	27 fc       	sbrc	r2, 7
    162e:	85 91       	lpm	r24, Z+
    1630:	27 fe       	sbrs	r2, 7
    1632:	81 91       	ld	r24, Z+
    1634:	5f 01       	movw	r10, r30
    1636:	b7 01       	movw	r22, r14
    1638:	90 e0       	ldi	r25, 0x00	; 0
    163a:	0e 94 4e 0c 	call	0x189c	; 0x189c <fputc>
    163e:	31 10       	cpse	r3, r1
    1640:	3a 94       	dec	r3
    1642:	f1 e0       	ldi	r31, 0x01	; 1
    1644:	4f 1a       	sub	r4, r31
    1646:	51 08       	sbc	r5, r1
    1648:	41 14       	cp	r4, r1
    164a:	51 04       	cpc	r5, r1
    164c:	71 f7       	brne	.-36     	; 0x162a <vfprintf+0x1c4>
    164e:	ed c0       	rjmp	.+474    	; 0x182a <vfprintf+0x3c4>
    1650:	84 36       	cpi	r24, 0x64	; 100
    1652:	11 f0       	breq	.+4      	; 0x1658 <vfprintf+0x1f2>
    1654:	89 36       	cpi	r24, 0x69	; 105
    1656:	41 f5       	brne	.+80     	; 0x16a8 <vfprintf+0x242>
    1658:	f8 01       	movw	r30, r16
    165a:	27 ff       	sbrs	r18, 7
    165c:	07 c0       	rjmp	.+14     	; 0x166c <vfprintf+0x206>
    165e:	60 81       	ld	r22, Z
    1660:	71 81       	ldd	r23, Z+1	; 0x01
    1662:	82 81       	ldd	r24, Z+2	; 0x02
    1664:	93 81       	ldd	r25, Z+3	; 0x03
    1666:	0c 5f       	subi	r16, 0xFC	; 252
    1668:	1f 4f       	sbci	r17, 0xFF	; 255
    166a:	08 c0       	rjmp	.+16     	; 0x167c <vfprintf+0x216>
    166c:	60 81       	ld	r22, Z
    166e:	71 81       	ldd	r23, Z+1	; 0x01
    1670:	88 27       	eor	r24, r24
    1672:	77 fd       	sbrc	r23, 7
    1674:	80 95       	com	r24
    1676:	98 2f       	mov	r25, r24
    1678:	0e 5f       	subi	r16, 0xFE	; 254
    167a:	1f 4f       	sbci	r17, 0xFF	; 255
    167c:	4f e6       	ldi	r20, 0x6F	; 111
    167e:	b4 2e       	mov	r11, r20
    1680:	b2 22       	and	r11, r18
    1682:	97 ff       	sbrs	r25, 7
    1684:	09 c0       	rjmp	.+18     	; 0x1698 <vfprintf+0x232>
    1686:	90 95       	com	r25
    1688:	80 95       	com	r24
    168a:	70 95       	com	r23
    168c:	61 95       	neg	r22
    168e:	7f 4f       	sbci	r23, 0xFF	; 255
    1690:	8f 4f       	sbci	r24, 0xFF	; 255
    1692:	9f 4f       	sbci	r25, 0xFF	; 255
    1694:	f0 e8       	ldi	r31, 0x80	; 128
    1696:	bf 2a       	or	r11, r31
    1698:	2a e0       	ldi	r18, 0x0A	; 10
    169a:	30 e0       	ldi	r19, 0x00	; 0
    169c:	a4 01       	movw	r20, r8
    169e:	0e 94 7a 0c 	call	0x18f4	; 0x18f4 <__ultoa_invert>
    16a2:	a8 2e       	mov	r10, r24
    16a4:	a8 18       	sub	r10, r8
    16a6:	43 c0       	rjmp	.+134    	; 0x172e <vfprintf+0x2c8>
    16a8:	85 37       	cpi	r24, 0x75	; 117
    16aa:	31 f4       	brne	.+12     	; 0x16b8 <vfprintf+0x252>
    16ac:	3f ee       	ldi	r19, 0xEF	; 239
    16ae:	b3 2e       	mov	r11, r19
    16b0:	b2 22       	and	r11, r18
    16b2:	2a e0       	ldi	r18, 0x0A	; 10
    16b4:	30 e0       	ldi	r19, 0x00	; 0
    16b6:	24 c0       	rjmp	.+72     	; 0x1700 <vfprintf+0x29a>
    16b8:	99 ef       	ldi	r25, 0xF9	; 249
    16ba:	b9 2e       	mov	r11, r25
    16bc:	b2 22       	and	r11, r18
    16be:	8f 36       	cpi	r24, 0x6F	; 111
    16c0:	b9 f0       	breq	.+46     	; 0x16f0 <vfprintf+0x28a>
    16c2:	20 f4       	brcc	.+8      	; 0x16cc <vfprintf+0x266>
    16c4:	88 35       	cpi	r24, 0x58	; 88
    16c6:	09 f0       	breq	.+2      	; 0x16ca <vfprintf+0x264>
    16c8:	b3 c0       	rjmp	.+358    	; 0x1830 <vfprintf+0x3ca>
    16ca:	0d c0       	rjmp	.+26     	; 0x16e6 <vfprintf+0x280>
    16cc:	80 37       	cpi	r24, 0x70	; 112
    16ce:	21 f0       	breq	.+8      	; 0x16d8 <vfprintf+0x272>
    16d0:	88 37       	cpi	r24, 0x78	; 120
    16d2:	09 f0       	breq	.+2      	; 0x16d6 <vfprintf+0x270>
    16d4:	ad c0       	rjmp	.+346    	; 0x1830 <vfprintf+0x3ca>
    16d6:	02 c0       	rjmp	.+4      	; 0x16dc <vfprintf+0x276>
    16d8:	20 e1       	ldi	r18, 0x10	; 16
    16da:	b2 2a       	or	r11, r18
    16dc:	b4 fe       	sbrs	r11, 4
    16de:	0b c0       	rjmp	.+22     	; 0x16f6 <vfprintf+0x290>
    16e0:	84 e0       	ldi	r24, 0x04	; 4
    16e2:	b8 2a       	or	r11, r24
    16e4:	08 c0       	rjmp	.+16     	; 0x16f6 <vfprintf+0x290>
    16e6:	24 ff       	sbrs	r18, 4
    16e8:	09 c0       	rjmp	.+18     	; 0x16fc <vfprintf+0x296>
    16ea:	e6 e0       	ldi	r30, 0x06	; 6
    16ec:	be 2a       	or	r11, r30
    16ee:	06 c0       	rjmp	.+12     	; 0x16fc <vfprintf+0x296>
    16f0:	28 e0       	ldi	r18, 0x08	; 8
    16f2:	30 e0       	ldi	r19, 0x00	; 0
    16f4:	05 c0       	rjmp	.+10     	; 0x1700 <vfprintf+0x29a>
    16f6:	20 e1       	ldi	r18, 0x10	; 16
    16f8:	30 e0       	ldi	r19, 0x00	; 0
    16fa:	02 c0       	rjmp	.+4      	; 0x1700 <vfprintf+0x29a>
    16fc:	20 e1       	ldi	r18, 0x10	; 16
    16fe:	32 e0       	ldi	r19, 0x02	; 2
    1700:	f8 01       	movw	r30, r16
    1702:	b7 fe       	sbrs	r11, 7
    1704:	07 c0       	rjmp	.+14     	; 0x1714 <vfprintf+0x2ae>
    1706:	60 81       	ld	r22, Z
    1708:	71 81       	ldd	r23, Z+1	; 0x01
    170a:	82 81       	ldd	r24, Z+2	; 0x02
    170c:	93 81       	ldd	r25, Z+3	; 0x03
    170e:	0c 5f       	subi	r16, 0xFC	; 252
    1710:	1f 4f       	sbci	r17, 0xFF	; 255
    1712:	06 c0       	rjmp	.+12     	; 0x1720 <vfprintf+0x2ba>
    1714:	60 81       	ld	r22, Z
    1716:	71 81       	ldd	r23, Z+1	; 0x01
    1718:	80 e0       	ldi	r24, 0x00	; 0
    171a:	90 e0       	ldi	r25, 0x00	; 0
    171c:	0e 5f       	subi	r16, 0xFE	; 254
    171e:	1f 4f       	sbci	r17, 0xFF	; 255
    1720:	a4 01       	movw	r20, r8
    1722:	0e 94 7a 0c 	call	0x18f4	; 0x18f4 <__ultoa_invert>
    1726:	a8 2e       	mov	r10, r24
    1728:	a8 18       	sub	r10, r8
    172a:	ff e7       	ldi	r31, 0x7F	; 127
    172c:	bf 22       	and	r11, r31
    172e:	b6 fe       	sbrs	r11, 6
    1730:	0b c0       	rjmp	.+22     	; 0x1748 <vfprintf+0x2e2>
    1732:	2b 2d       	mov	r18, r11
    1734:	2e 7f       	andi	r18, 0xFE	; 254
    1736:	a5 14       	cp	r10, r5
    1738:	50 f4       	brcc	.+20     	; 0x174e <vfprintf+0x2e8>
    173a:	b4 fe       	sbrs	r11, 4
    173c:	0a c0       	rjmp	.+20     	; 0x1752 <vfprintf+0x2ec>
    173e:	b2 fc       	sbrc	r11, 2
    1740:	08 c0       	rjmp	.+16     	; 0x1752 <vfprintf+0x2ec>
    1742:	2b 2d       	mov	r18, r11
    1744:	2e 7e       	andi	r18, 0xEE	; 238
    1746:	05 c0       	rjmp	.+10     	; 0x1752 <vfprintf+0x2ec>
    1748:	7a 2c       	mov	r7, r10
    174a:	2b 2d       	mov	r18, r11
    174c:	03 c0       	rjmp	.+6      	; 0x1754 <vfprintf+0x2ee>
    174e:	7a 2c       	mov	r7, r10
    1750:	01 c0       	rjmp	.+2      	; 0x1754 <vfprintf+0x2ee>
    1752:	75 2c       	mov	r7, r5
    1754:	24 ff       	sbrs	r18, 4
    1756:	0d c0       	rjmp	.+26     	; 0x1772 <vfprintf+0x30c>
    1758:	fe 01       	movw	r30, r28
    175a:	ea 0d       	add	r30, r10
    175c:	f1 1d       	adc	r31, r1
    175e:	80 81       	ld	r24, Z
    1760:	80 33       	cpi	r24, 0x30	; 48
    1762:	11 f4       	brne	.+4      	; 0x1768 <vfprintf+0x302>
    1764:	29 7e       	andi	r18, 0xE9	; 233
    1766:	09 c0       	rjmp	.+18     	; 0x177a <vfprintf+0x314>
    1768:	22 ff       	sbrs	r18, 2
    176a:	06 c0       	rjmp	.+12     	; 0x1778 <vfprintf+0x312>
    176c:	73 94       	inc	r7
    176e:	73 94       	inc	r7
    1770:	04 c0       	rjmp	.+8      	; 0x177a <vfprintf+0x314>
    1772:	82 2f       	mov	r24, r18
    1774:	86 78       	andi	r24, 0x86	; 134
    1776:	09 f0       	breq	.+2      	; 0x177a <vfprintf+0x314>
    1778:	73 94       	inc	r7
    177a:	23 fd       	sbrc	r18, 3
    177c:	14 c0       	rjmp	.+40     	; 0x17a6 <vfprintf+0x340>
    177e:	20 ff       	sbrs	r18, 0
    1780:	0f c0       	rjmp	.+30     	; 0x17a0 <vfprintf+0x33a>
    1782:	5a 2c       	mov	r5, r10
    1784:	73 14       	cp	r7, r3
    1786:	60 f4       	brcc	.+24     	; 0x17a0 <vfprintf+0x33a>
    1788:	53 0c       	add	r5, r3
    178a:	57 18       	sub	r5, r7
    178c:	73 2c       	mov	r7, r3
    178e:	08 c0       	rjmp	.+16     	; 0x17a0 <vfprintf+0x33a>
    1790:	b7 01       	movw	r22, r14
    1792:	80 e2       	ldi	r24, 0x20	; 32
    1794:	90 e0       	ldi	r25, 0x00	; 0
    1796:	2c 87       	std	Y+12, r18	; 0x0c
    1798:	0e 94 4e 0c 	call	0x189c	; 0x189c <fputc>
    179c:	73 94       	inc	r7
    179e:	2c 85       	ldd	r18, Y+12	; 0x0c
    17a0:	73 14       	cp	r7, r3
    17a2:	b0 f3       	brcs	.-20     	; 0x1790 <vfprintf+0x32a>
    17a4:	04 c0       	rjmp	.+8      	; 0x17ae <vfprintf+0x348>
    17a6:	73 14       	cp	r7, r3
    17a8:	10 f4       	brcc	.+4      	; 0x17ae <vfprintf+0x348>
    17aa:	37 18       	sub	r3, r7
    17ac:	01 c0       	rjmp	.+2      	; 0x17b0 <vfprintf+0x34a>
    17ae:	31 2c       	mov	r3, r1
    17b0:	24 ff       	sbrs	r18, 4
    17b2:	12 c0       	rjmp	.+36     	; 0x17d8 <vfprintf+0x372>
    17b4:	b7 01       	movw	r22, r14
    17b6:	80 e3       	ldi	r24, 0x30	; 48
    17b8:	90 e0       	ldi	r25, 0x00	; 0
    17ba:	2c 87       	std	Y+12, r18	; 0x0c
    17bc:	0e 94 4e 0c 	call	0x189c	; 0x189c <fputc>
    17c0:	2c 85       	ldd	r18, Y+12	; 0x0c
    17c2:	22 ff       	sbrs	r18, 2
    17c4:	1e c0       	rjmp	.+60     	; 0x1802 <vfprintf+0x39c>
    17c6:	21 ff       	sbrs	r18, 1
    17c8:	03 c0       	rjmp	.+6      	; 0x17d0 <vfprintf+0x36a>
    17ca:	88 e5       	ldi	r24, 0x58	; 88
    17cc:	90 e0       	ldi	r25, 0x00	; 0
    17ce:	02 c0       	rjmp	.+4      	; 0x17d4 <vfprintf+0x36e>
    17d0:	88 e7       	ldi	r24, 0x78	; 120
    17d2:	90 e0       	ldi	r25, 0x00	; 0
    17d4:	b7 01       	movw	r22, r14
    17d6:	0c c0       	rjmp	.+24     	; 0x17f0 <vfprintf+0x38a>
    17d8:	82 2f       	mov	r24, r18
    17da:	86 78       	andi	r24, 0x86	; 134
    17dc:	91 f0       	breq	.+36     	; 0x1802 <vfprintf+0x39c>
    17de:	21 fd       	sbrc	r18, 1
    17e0:	02 c0       	rjmp	.+4      	; 0x17e6 <vfprintf+0x380>
    17e2:	80 e2       	ldi	r24, 0x20	; 32
    17e4:	01 c0       	rjmp	.+2      	; 0x17e8 <vfprintf+0x382>
    17e6:	8b e2       	ldi	r24, 0x2B	; 43
    17e8:	27 fd       	sbrc	r18, 7
    17ea:	8d e2       	ldi	r24, 0x2D	; 45
    17ec:	b7 01       	movw	r22, r14
    17ee:	90 e0       	ldi	r25, 0x00	; 0
    17f0:	0e 94 4e 0c 	call	0x189c	; 0x189c <fputc>
    17f4:	06 c0       	rjmp	.+12     	; 0x1802 <vfprintf+0x39c>
    17f6:	b7 01       	movw	r22, r14
    17f8:	80 e3       	ldi	r24, 0x30	; 48
    17fa:	90 e0       	ldi	r25, 0x00	; 0
    17fc:	0e 94 4e 0c 	call	0x189c	; 0x189c <fputc>
    1800:	5a 94       	dec	r5
    1802:	a5 14       	cp	r10, r5
    1804:	c0 f3       	brcs	.-16     	; 0x17f6 <vfprintf+0x390>
    1806:	aa 94       	dec	r10
    1808:	f4 01       	movw	r30, r8
    180a:	ea 0d       	add	r30, r10
    180c:	f1 1d       	adc	r31, r1
    180e:	b7 01       	movw	r22, r14
    1810:	80 81       	ld	r24, Z
    1812:	90 e0       	ldi	r25, 0x00	; 0
    1814:	0e 94 4e 0c 	call	0x189c	; 0x189c <fputc>
    1818:	a1 10       	cpse	r10, r1
    181a:	f5 cf       	rjmp	.-22     	; 0x1806 <vfprintf+0x3a0>
    181c:	06 c0       	rjmp	.+12     	; 0x182a <vfprintf+0x3c4>
    181e:	b7 01       	movw	r22, r14
    1820:	80 e2       	ldi	r24, 0x20	; 32
    1822:	90 e0       	ldi	r25, 0x00	; 0
    1824:	0e 94 4e 0c 	call	0x189c	; 0x189c <fputc>
    1828:	3a 94       	dec	r3
    182a:	31 10       	cpse	r3, r1
    182c:	f8 cf       	rjmp	.-16     	; 0x181e <vfprintf+0x3b8>
    182e:	43 ce       	rjmp	.-890    	; 0x14b6 <vfprintf+0x50>
    1830:	f7 01       	movw	r30, r14
    1832:	26 81       	ldd	r18, Z+6	; 0x06
    1834:	37 81       	ldd	r19, Z+7	; 0x07
    1836:	02 c0       	rjmp	.+4      	; 0x183c <vfprintf+0x3d6>
    1838:	2f ef       	ldi	r18, 0xFF	; 255
    183a:	3f ef       	ldi	r19, 0xFF	; 255
    183c:	c9 01       	movw	r24, r18
    183e:	2c 96       	adiw	r28, 0x0c	; 12
    1840:	0f b6       	in	r0, 0x3f	; 63
    1842:	f8 94       	cli
    1844:	de bf       	out	0x3e, r29	; 62
    1846:	0f be       	out	0x3f, r0	; 63
    1848:	cd bf       	out	0x3d, r28	; 61
    184a:	df 91       	pop	r29
    184c:	cf 91       	pop	r28
    184e:	1f 91       	pop	r17
    1850:	0f 91       	pop	r16
    1852:	ff 90       	pop	r15
    1854:	ef 90       	pop	r14
    1856:	df 90       	pop	r13
    1858:	cf 90       	pop	r12
    185a:	bf 90       	pop	r11
    185c:	af 90       	pop	r10
    185e:	9f 90       	pop	r9
    1860:	8f 90       	pop	r8
    1862:	7f 90       	pop	r7
    1864:	6f 90       	pop	r6
    1866:	5f 90       	pop	r5
    1868:	4f 90       	pop	r4
    186a:	3f 90       	pop	r3
    186c:	2f 90       	pop	r2
    186e:	08 95       	ret

00001870 <strnlen_P>:
    1870:	fc 01       	movw	r30, r24
    1872:	05 90       	lpm	r0, Z+
    1874:	61 50       	subi	r22, 0x01	; 1
    1876:	70 40       	sbci	r23, 0x00	; 0
    1878:	01 10       	cpse	r0, r1
    187a:	d8 f7       	brcc	.-10     	; 0x1872 <strnlen_P+0x2>
    187c:	80 95       	com	r24
    187e:	90 95       	com	r25
    1880:	8e 0f       	add	r24, r30
    1882:	9f 1f       	adc	r25, r31
    1884:	08 95       	ret

00001886 <strnlen>:
    1886:	fc 01       	movw	r30, r24
    1888:	61 50       	subi	r22, 0x01	; 1
    188a:	70 40       	sbci	r23, 0x00	; 0
    188c:	01 90       	ld	r0, Z+
    188e:	01 10       	cpse	r0, r1
    1890:	d8 f7       	brcc	.-10     	; 0x1888 <strnlen+0x2>
    1892:	80 95       	com	r24
    1894:	90 95       	com	r25
    1896:	8e 0f       	add	r24, r30
    1898:	9f 1f       	adc	r25, r31
    189a:	08 95       	ret

0000189c <fputc>:
    189c:	0f 93       	push	r16
    189e:	1f 93       	push	r17
    18a0:	cf 93       	push	r28
    18a2:	df 93       	push	r29
    18a4:	8c 01       	movw	r16, r24
    18a6:	eb 01       	movw	r28, r22
    18a8:	8b 81       	ldd	r24, Y+3	; 0x03
    18aa:	81 fd       	sbrc	r24, 1
    18ac:	03 c0       	rjmp	.+6      	; 0x18b4 <fputc+0x18>
    18ae:	0f ef       	ldi	r16, 0xFF	; 255
    18b0:	1f ef       	ldi	r17, 0xFF	; 255
    18b2:	1a c0       	rjmp	.+52     	; 0x18e8 <fputc+0x4c>
    18b4:	82 ff       	sbrs	r24, 2
    18b6:	0d c0       	rjmp	.+26     	; 0x18d2 <fputc+0x36>
    18b8:	2e 81       	ldd	r18, Y+6	; 0x06
    18ba:	3f 81       	ldd	r19, Y+7	; 0x07
    18bc:	8c 81       	ldd	r24, Y+4	; 0x04
    18be:	9d 81       	ldd	r25, Y+5	; 0x05
    18c0:	28 17       	cp	r18, r24
    18c2:	39 07       	cpc	r19, r25
    18c4:	64 f4       	brge	.+24     	; 0x18de <fputc+0x42>
    18c6:	e8 81       	ld	r30, Y
    18c8:	f9 81       	ldd	r31, Y+1	; 0x01
    18ca:	01 93       	st	Z+, r16
    18cc:	f9 83       	std	Y+1, r31	; 0x01
    18ce:	e8 83       	st	Y, r30
    18d0:	06 c0       	rjmp	.+12     	; 0x18de <fputc+0x42>
    18d2:	e8 85       	ldd	r30, Y+8	; 0x08
    18d4:	f9 85       	ldd	r31, Y+9	; 0x09
    18d6:	80 2f       	mov	r24, r16
    18d8:	09 95       	icall
    18da:	89 2b       	or	r24, r25
    18dc:	41 f7       	brne	.-48     	; 0x18ae <fputc+0x12>
    18de:	8e 81       	ldd	r24, Y+6	; 0x06
    18e0:	9f 81       	ldd	r25, Y+7	; 0x07
    18e2:	01 96       	adiw	r24, 0x01	; 1
    18e4:	9f 83       	std	Y+7, r25	; 0x07
    18e6:	8e 83       	std	Y+6, r24	; 0x06
    18e8:	c8 01       	movw	r24, r16
    18ea:	df 91       	pop	r29
    18ec:	cf 91       	pop	r28
    18ee:	1f 91       	pop	r17
    18f0:	0f 91       	pop	r16
    18f2:	08 95       	ret

000018f4 <__ultoa_invert>:
    18f4:	fa 01       	movw	r30, r20
    18f6:	aa 27       	eor	r26, r26
    18f8:	28 30       	cpi	r18, 0x08	; 8
    18fa:	51 f1       	breq	.+84     	; 0x1950 <__ultoa_invert+0x5c>
    18fc:	20 31       	cpi	r18, 0x10	; 16
    18fe:	81 f1       	breq	.+96     	; 0x1960 <__ultoa_invert+0x6c>
    1900:	e8 94       	clt
    1902:	6f 93       	push	r22
    1904:	6e 7f       	andi	r22, 0xFE	; 254
    1906:	6e 5f       	subi	r22, 0xFE	; 254
    1908:	7f 4f       	sbci	r23, 0xFF	; 255
    190a:	8f 4f       	sbci	r24, 0xFF	; 255
    190c:	9f 4f       	sbci	r25, 0xFF	; 255
    190e:	af 4f       	sbci	r26, 0xFF	; 255
    1910:	b1 e0       	ldi	r27, 0x01	; 1
    1912:	3e d0       	rcall	.+124    	; 0x1990 <__ultoa_invert+0x9c>
    1914:	b4 e0       	ldi	r27, 0x04	; 4
    1916:	3c d0       	rcall	.+120    	; 0x1990 <__ultoa_invert+0x9c>
    1918:	67 0f       	add	r22, r23
    191a:	78 1f       	adc	r23, r24
    191c:	89 1f       	adc	r24, r25
    191e:	9a 1f       	adc	r25, r26
    1920:	a1 1d       	adc	r26, r1
    1922:	68 0f       	add	r22, r24
    1924:	79 1f       	adc	r23, r25
    1926:	8a 1f       	adc	r24, r26
    1928:	91 1d       	adc	r25, r1
    192a:	a1 1d       	adc	r26, r1
    192c:	6a 0f       	add	r22, r26
    192e:	71 1d       	adc	r23, r1
    1930:	81 1d       	adc	r24, r1
    1932:	91 1d       	adc	r25, r1
    1934:	a1 1d       	adc	r26, r1
    1936:	20 d0       	rcall	.+64     	; 0x1978 <__ultoa_invert+0x84>
    1938:	09 f4       	brne	.+2      	; 0x193c <__ultoa_invert+0x48>
    193a:	68 94       	set
    193c:	3f 91       	pop	r19
    193e:	2a e0       	ldi	r18, 0x0A	; 10
    1940:	26 9f       	mul	r18, r22
    1942:	11 24       	eor	r1, r1
    1944:	30 19       	sub	r19, r0
    1946:	30 5d       	subi	r19, 0xD0	; 208
    1948:	31 93       	st	Z+, r19
    194a:	de f6       	brtc	.-74     	; 0x1902 <__ultoa_invert+0xe>
    194c:	cf 01       	movw	r24, r30
    194e:	08 95       	ret
    1950:	46 2f       	mov	r20, r22
    1952:	47 70       	andi	r20, 0x07	; 7
    1954:	40 5d       	subi	r20, 0xD0	; 208
    1956:	41 93       	st	Z+, r20
    1958:	b3 e0       	ldi	r27, 0x03	; 3
    195a:	0f d0       	rcall	.+30     	; 0x197a <__ultoa_invert+0x86>
    195c:	c9 f7       	brne	.-14     	; 0x1950 <__ultoa_invert+0x5c>
    195e:	f6 cf       	rjmp	.-20     	; 0x194c <__ultoa_invert+0x58>
    1960:	46 2f       	mov	r20, r22
    1962:	4f 70       	andi	r20, 0x0F	; 15
    1964:	40 5d       	subi	r20, 0xD0	; 208
    1966:	4a 33       	cpi	r20, 0x3A	; 58
    1968:	18 f0       	brcs	.+6      	; 0x1970 <__ultoa_invert+0x7c>
    196a:	49 5d       	subi	r20, 0xD9	; 217
    196c:	31 fd       	sbrc	r19, 1
    196e:	40 52       	subi	r20, 0x20	; 32
    1970:	41 93       	st	Z+, r20
    1972:	02 d0       	rcall	.+4      	; 0x1978 <__ultoa_invert+0x84>
    1974:	a9 f7       	brne	.-22     	; 0x1960 <__ultoa_invert+0x6c>
    1976:	ea cf       	rjmp	.-44     	; 0x194c <__ultoa_invert+0x58>
    1978:	b4 e0       	ldi	r27, 0x04	; 4
    197a:	a6 95       	lsr	r26
    197c:	97 95       	ror	r25
    197e:	87 95       	ror	r24
    1980:	77 95       	ror	r23
    1982:	67 95       	ror	r22
    1984:	ba 95       	dec	r27
    1986:	c9 f7       	brne	.-14     	; 0x197a <__ultoa_invert+0x86>
    1988:	00 97       	sbiw	r24, 0x00	; 0
    198a:	61 05       	cpc	r22, r1
    198c:	71 05       	cpc	r23, r1
    198e:	08 95       	ret
    1990:	9b 01       	movw	r18, r22
    1992:	ac 01       	movw	r20, r24
    1994:	0a 2e       	mov	r0, r26
    1996:	06 94       	lsr	r0
    1998:	57 95       	ror	r21
    199a:	47 95       	ror	r20
    199c:	37 95       	ror	r19
    199e:	27 95       	ror	r18
    19a0:	ba 95       	dec	r27
    19a2:	c9 f7       	brne	.-14     	; 0x1996 <__ultoa_invert+0xa2>
    19a4:	62 0f       	add	r22, r18
    19a6:	73 1f       	adc	r23, r19
    19a8:	84 1f       	adc	r24, r20
    19aa:	95 1f       	adc	r25, r21
    19ac:	a0 1d       	adc	r26, r0
    19ae:	08 95       	ret
    19b0:	ce c0       	rjmp	.+412    	; 0x1b4e <__fp_nan>

000019b2 <__fp_rempio2>:
    19b2:	3f d0       	rcall	.+126    	; 0x1a32 <__fp_splitA>
    19b4:	e8 f3       	brcs	.-6      	; 0x19b0 <__ultoa_invert+0xbc>
    19b6:	e8 94       	clt
    19b8:	e0 e0       	ldi	r30, 0x00	; 0
    19ba:	bb 27       	eor	r27, r27
    19bc:	9f 57       	subi	r25, 0x7F	; 127
    19be:	f0 f0       	brcs	.+60     	; 0x19fc <__fp_rempio2+0x4a>
    19c0:	2a ed       	ldi	r18, 0xDA	; 218
    19c2:	3f e0       	ldi	r19, 0x0F	; 15
    19c4:	49 ec       	ldi	r20, 0xC9	; 201
    19c6:	06 c0       	rjmp	.+12     	; 0x19d4 <__fp_rempio2+0x22>
    19c8:	ee 0f       	add	r30, r30
    19ca:	bb 0f       	add	r27, r27
    19cc:	66 1f       	adc	r22, r22
    19ce:	77 1f       	adc	r23, r23
    19d0:	88 1f       	adc	r24, r24
    19d2:	28 f0       	brcs	.+10     	; 0x19de <__fp_rempio2+0x2c>
    19d4:	b2 3a       	cpi	r27, 0xA2	; 162
    19d6:	62 07       	cpc	r22, r18
    19d8:	73 07       	cpc	r23, r19
    19da:	84 07       	cpc	r24, r20
    19dc:	28 f0       	brcs	.+10     	; 0x19e8 <__fp_rempio2+0x36>
    19de:	b2 5a       	subi	r27, 0xA2	; 162
    19e0:	62 0b       	sbc	r22, r18
    19e2:	73 0b       	sbc	r23, r19
    19e4:	84 0b       	sbc	r24, r20
    19e6:	e3 95       	inc	r30
    19e8:	9a 95       	dec	r25
    19ea:	72 f7       	brpl	.-36     	; 0x19c8 <__fp_rempio2+0x16>
    19ec:	80 38       	cpi	r24, 0x80	; 128
    19ee:	30 f4       	brcc	.+12     	; 0x19fc <__fp_rempio2+0x4a>
    19f0:	9a 95       	dec	r25
    19f2:	bb 0f       	add	r27, r27
    19f4:	66 1f       	adc	r22, r22
    19f6:	77 1f       	adc	r23, r23
    19f8:	88 1f       	adc	r24, r24
    19fa:	d2 f7       	brpl	.-12     	; 0x19f0 <__fp_rempio2+0x3e>
    19fc:	90 48       	sbci	r25, 0x80	; 128
    19fe:	9b c0       	rjmp	.+310    	; 0x1b36 <__fp_mpack_finite>

00001a00 <__fp_sinus>:
    1a00:	ef 93       	push	r30
    1a02:	e0 ff       	sbrs	r30, 0
    1a04:	06 c0       	rjmp	.+12     	; 0x1a12 <__fp_sinus+0x12>
    1a06:	a2 ea       	ldi	r26, 0xA2	; 162
    1a08:	2a ed       	ldi	r18, 0xDA	; 218
    1a0a:	3f e0       	ldi	r19, 0x0F	; 15
    1a0c:	49 ec       	ldi	r20, 0xC9	; 201
    1a0e:	5f eb       	ldi	r21, 0xBF	; 191
    1a10:	37 d0       	rcall	.+110    	; 0x1a80 <__addsf3x>
    1a12:	bf d0       	rcall	.+382    	; 0x1b92 <__fp_round>
    1a14:	0f 90       	pop	r0
    1a16:	03 94       	inc	r0
    1a18:	01 fc       	sbrc	r0, 1
    1a1a:	90 58       	subi	r25, 0x80	; 128
    1a1c:	ec e8       	ldi	r30, 0x8C	; 140
    1a1e:	f0 e0       	ldi	r31, 0x00	; 0
    1a20:	99 c0       	rjmp	.+306    	; 0x1b54 <__fp_powsodd>

00001a22 <__fp_split3>:
    1a22:	57 fd       	sbrc	r21, 7
    1a24:	90 58       	subi	r25, 0x80	; 128
    1a26:	44 0f       	add	r20, r20
    1a28:	55 1f       	adc	r21, r21
    1a2a:	59 f0       	breq	.+22     	; 0x1a42 <__fp_splitA+0x10>
    1a2c:	5f 3f       	cpi	r21, 0xFF	; 255
    1a2e:	71 f0       	breq	.+28     	; 0x1a4c <__fp_splitA+0x1a>
    1a30:	47 95       	ror	r20

00001a32 <__fp_splitA>:
    1a32:	88 0f       	add	r24, r24
    1a34:	97 fb       	bst	r25, 7
    1a36:	99 1f       	adc	r25, r25
    1a38:	61 f0       	breq	.+24     	; 0x1a52 <__fp_splitA+0x20>
    1a3a:	9f 3f       	cpi	r25, 0xFF	; 255
    1a3c:	79 f0       	breq	.+30     	; 0x1a5c <__fp_splitA+0x2a>
    1a3e:	87 95       	ror	r24
    1a40:	08 95       	ret
    1a42:	12 16       	cp	r1, r18
    1a44:	13 06       	cpc	r1, r19
    1a46:	14 06       	cpc	r1, r20
    1a48:	55 1f       	adc	r21, r21
    1a4a:	f2 cf       	rjmp	.-28     	; 0x1a30 <__fp_split3+0xe>
    1a4c:	46 95       	lsr	r20
    1a4e:	f1 df       	rcall	.-30     	; 0x1a32 <__fp_splitA>
    1a50:	08 c0       	rjmp	.+16     	; 0x1a62 <__fp_splitA+0x30>
    1a52:	16 16       	cp	r1, r22
    1a54:	17 06       	cpc	r1, r23
    1a56:	18 06       	cpc	r1, r24
    1a58:	99 1f       	adc	r25, r25
    1a5a:	f1 cf       	rjmp	.-30     	; 0x1a3e <__fp_splitA+0xc>
    1a5c:	86 95       	lsr	r24
    1a5e:	71 05       	cpc	r23, r1
    1a60:	61 05       	cpc	r22, r1
    1a62:	08 94       	sec
    1a64:	08 95       	ret
    1a66:	87 d0       	rcall	.+270    	; 0x1b76 <__fp_pscA>
    1a68:	30 f0       	brcs	.+12     	; 0x1a76 <__fp_splitA+0x44>
    1a6a:	8c d0       	rcall	.+280    	; 0x1b84 <__fp_pscB>
    1a6c:	20 f0       	brcs	.+8      	; 0x1a76 <__fp_splitA+0x44>
    1a6e:	31 f4       	brne	.+12     	; 0x1a7c <__fp_splitA+0x4a>
    1a70:	9f 3f       	cpi	r25, 0xFF	; 255
    1a72:	11 f4       	brne	.+4      	; 0x1a78 <__fp_splitA+0x46>
    1a74:	1e f4       	brtc	.+6      	; 0x1a7c <__fp_splitA+0x4a>
    1a76:	6b c0       	rjmp	.+214    	; 0x1b4e <__fp_nan>
    1a78:	0e f4       	brtc	.+2      	; 0x1a7c <__fp_splitA+0x4a>
    1a7a:	e0 95       	com	r30
    1a7c:	e7 fb       	bst	r30, 7
    1a7e:	53 c0       	rjmp	.+166    	; 0x1b26 <__fp_inf>

00001a80 <__addsf3x>:
    1a80:	e9 2f       	mov	r30, r25
    1a82:	cf df       	rcall	.-98     	; 0x1a22 <__fp_split3>
    1a84:	80 f3       	brcs	.-32     	; 0x1a66 <__fp_splitA+0x34>
    1a86:	ba 17       	cp	r27, r26
    1a88:	62 07       	cpc	r22, r18
    1a8a:	73 07       	cpc	r23, r19
    1a8c:	84 07       	cpc	r24, r20
    1a8e:	95 07       	cpc	r25, r21
    1a90:	18 f0       	brcs	.+6      	; 0x1a98 <__addsf3x+0x18>
    1a92:	71 f4       	brne	.+28     	; 0x1ab0 <__addsf3x+0x30>
    1a94:	9e f5       	brtc	.+102    	; 0x1afc <__addsf3x+0x7c>
    1a96:	8e c0       	rjmp	.+284    	; 0x1bb4 <__fp_zero>
    1a98:	0e f4       	brtc	.+2      	; 0x1a9c <__addsf3x+0x1c>
    1a9a:	e0 95       	com	r30
    1a9c:	0b 2e       	mov	r0, r27
    1a9e:	ba 2f       	mov	r27, r26
    1aa0:	a0 2d       	mov	r26, r0
    1aa2:	0b 01       	movw	r0, r22
    1aa4:	b9 01       	movw	r22, r18
    1aa6:	90 01       	movw	r18, r0
    1aa8:	0c 01       	movw	r0, r24
    1aaa:	ca 01       	movw	r24, r20
    1aac:	a0 01       	movw	r20, r0
    1aae:	11 24       	eor	r1, r1
    1ab0:	ff 27       	eor	r31, r31
    1ab2:	59 1b       	sub	r21, r25
    1ab4:	99 f0       	breq	.+38     	; 0x1adc <__addsf3x+0x5c>
    1ab6:	59 3f       	cpi	r21, 0xF9	; 249
    1ab8:	50 f4       	brcc	.+20     	; 0x1ace <__addsf3x+0x4e>
    1aba:	50 3e       	cpi	r21, 0xE0	; 224
    1abc:	68 f1       	brcs	.+90     	; 0x1b18 <__addsf3x+0x98>
    1abe:	1a 16       	cp	r1, r26
    1ac0:	f0 40       	sbci	r31, 0x00	; 0
    1ac2:	a2 2f       	mov	r26, r18
    1ac4:	23 2f       	mov	r18, r19
    1ac6:	34 2f       	mov	r19, r20
    1ac8:	44 27       	eor	r20, r20
    1aca:	58 5f       	subi	r21, 0xF8	; 248
    1acc:	f3 cf       	rjmp	.-26     	; 0x1ab4 <__addsf3x+0x34>
    1ace:	46 95       	lsr	r20
    1ad0:	37 95       	ror	r19
    1ad2:	27 95       	ror	r18
    1ad4:	a7 95       	ror	r26
    1ad6:	f0 40       	sbci	r31, 0x00	; 0
    1ad8:	53 95       	inc	r21
    1ada:	c9 f7       	brne	.-14     	; 0x1ace <__addsf3x+0x4e>
    1adc:	7e f4       	brtc	.+30     	; 0x1afc <__addsf3x+0x7c>
    1ade:	1f 16       	cp	r1, r31
    1ae0:	ba 0b       	sbc	r27, r26
    1ae2:	62 0b       	sbc	r22, r18
    1ae4:	73 0b       	sbc	r23, r19
    1ae6:	84 0b       	sbc	r24, r20
    1ae8:	ba f0       	brmi	.+46     	; 0x1b18 <__addsf3x+0x98>
    1aea:	91 50       	subi	r25, 0x01	; 1
    1aec:	a1 f0       	breq	.+40     	; 0x1b16 <__addsf3x+0x96>
    1aee:	ff 0f       	add	r31, r31
    1af0:	bb 1f       	adc	r27, r27
    1af2:	66 1f       	adc	r22, r22
    1af4:	77 1f       	adc	r23, r23
    1af6:	88 1f       	adc	r24, r24
    1af8:	c2 f7       	brpl	.-16     	; 0x1aea <__addsf3x+0x6a>
    1afa:	0e c0       	rjmp	.+28     	; 0x1b18 <__addsf3x+0x98>
    1afc:	ba 0f       	add	r27, r26
    1afe:	62 1f       	adc	r22, r18
    1b00:	73 1f       	adc	r23, r19
    1b02:	84 1f       	adc	r24, r20
    1b04:	48 f4       	brcc	.+18     	; 0x1b18 <__addsf3x+0x98>
    1b06:	87 95       	ror	r24
    1b08:	77 95       	ror	r23
    1b0a:	67 95       	ror	r22
    1b0c:	b7 95       	ror	r27
    1b0e:	f7 95       	ror	r31
    1b10:	9e 3f       	cpi	r25, 0xFE	; 254
    1b12:	08 f0       	brcs	.+2      	; 0x1b16 <__addsf3x+0x96>
    1b14:	b3 cf       	rjmp	.-154    	; 0x1a7c <__fp_splitA+0x4a>
    1b16:	93 95       	inc	r25
    1b18:	88 0f       	add	r24, r24
    1b1a:	08 f0       	brcs	.+2      	; 0x1b1e <__addsf3x+0x9e>
    1b1c:	99 27       	eor	r25, r25
    1b1e:	ee 0f       	add	r30, r30
    1b20:	97 95       	ror	r25
    1b22:	87 95       	ror	r24
    1b24:	08 95       	ret

00001b26 <__fp_inf>:
    1b26:	97 f9       	bld	r25, 7
    1b28:	9f 67       	ori	r25, 0x7F	; 127
    1b2a:	80 e8       	ldi	r24, 0x80	; 128
    1b2c:	70 e0       	ldi	r23, 0x00	; 0
    1b2e:	60 e0       	ldi	r22, 0x00	; 0
    1b30:	08 95       	ret

00001b32 <__fp_mpack>:
    1b32:	9f 3f       	cpi	r25, 0xFF	; 255
    1b34:	31 f0       	breq	.+12     	; 0x1b42 <__fp_mpack_finite+0xc>

00001b36 <__fp_mpack_finite>:
    1b36:	91 50       	subi	r25, 0x01	; 1
    1b38:	20 f4       	brcc	.+8      	; 0x1b42 <__fp_mpack_finite+0xc>
    1b3a:	87 95       	ror	r24
    1b3c:	77 95       	ror	r23
    1b3e:	67 95       	ror	r22
    1b40:	b7 95       	ror	r27
    1b42:	88 0f       	add	r24, r24
    1b44:	91 1d       	adc	r25, r1
    1b46:	96 95       	lsr	r25
    1b48:	87 95       	ror	r24
    1b4a:	97 f9       	bld	r25, 7
    1b4c:	08 95       	ret

00001b4e <__fp_nan>:
    1b4e:	9f ef       	ldi	r25, 0xFF	; 255
    1b50:	80 ec       	ldi	r24, 0xC0	; 192
    1b52:	08 95       	ret

00001b54 <__fp_powsodd>:
    1b54:	9f 93       	push	r25
    1b56:	8f 93       	push	r24
    1b58:	7f 93       	push	r23
    1b5a:	6f 93       	push	r22
    1b5c:	ff 93       	push	r31
    1b5e:	ef 93       	push	r30
    1b60:	9b 01       	movw	r18, r22
    1b62:	ac 01       	movw	r20, r24
    1b64:	71 d8       	rcall	.-3870   	; 0xc48 <__mulsf3>
    1b66:	ef 91       	pop	r30
    1b68:	ff 91       	pop	r31
    1b6a:	2b d0       	rcall	.+86     	; 0x1bc2 <__fp_powser>
    1b6c:	2f 91       	pop	r18
    1b6e:	3f 91       	pop	r19
    1b70:	4f 91       	pop	r20
    1b72:	5f 91       	pop	r21
    1b74:	69 c8       	rjmp	.-3886   	; 0xc48 <__mulsf3>

00001b76 <__fp_pscA>:
    1b76:	00 24       	eor	r0, r0
    1b78:	0a 94       	dec	r0
    1b7a:	16 16       	cp	r1, r22
    1b7c:	17 06       	cpc	r1, r23
    1b7e:	18 06       	cpc	r1, r24
    1b80:	09 06       	cpc	r0, r25
    1b82:	08 95       	ret

00001b84 <__fp_pscB>:
    1b84:	00 24       	eor	r0, r0
    1b86:	0a 94       	dec	r0
    1b88:	12 16       	cp	r1, r18
    1b8a:	13 06       	cpc	r1, r19
    1b8c:	14 06       	cpc	r1, r20
    1b8e:	05 06       	cpc	r0, r21
    1b90:	08 95       	ret

00001b92 <__fp_round>:
    1b92:	09 2e       	mov	r0, r25
    1b94:	03 94       	inc	r0
    1b96:	00 0c       	add	r0, r0
    1b98:	11 f4       	brne	.+4      	; 0x1b9e <__fp_round+0xc>
    1b9a:	88 23       	and	r24, r24
    1b9c:	52 f0       	brmi	.+20     	; 0x1bb2 <__fp_round+0x20>
    1b9e:	bb 0f       	add	r27, r27
    1ba0:	40 f4       	brcc	.+16     	; 0x1bb2 <__fp_round+0x20>
    1ba2:	bf 2b       	or	r27, r31
    1ba4:	11 f4       	brne	.+4      	; 0x1baa <__fp_round+0x18>
    1ba6:	60 ff       	sbrs	r22, 0
    1ba8:	04 c0       	rjmp	.+8      	; 0x1bb2 <__fp_round+0x20>
    1baa:	6f 5f       	subi	r22, 0xFF	; 255
    1bac:	7f 4f       	sbci	r23, 0xFF	; 255
    1bae:	8f 4f       	sbci	r24, 0xFF	; 255
    1bb0:	9f 4f       	sbci	r25, 0xFF	; 255
    1bb2:	08 95       	ret

00001bb4 <__fp_zero>:
    1bb4:	e8 94       	clt

00001bb6 <__fp_szero>:
    1bb6:	bb 27       	eor	r27, r27
    1bb8:	66 27       	eor	r22, r22
    1bba:	77 27       	eor	r23, r23
    1bbc:	cb 01       	movw	r24, r22
    1bbe:	97 f9       	bld	r25, 7
    1bc0:	08 95       	ret

00001bc2 <__fp_powser>:
    1bc2:	df 93       	push	r29
    1bc4:	cf 93       	push	r28
    1bc6:	1f 93       	push	r17
    1bc8:	0f 93       	push	r16
    1bca:	ff 92       	push	r15
    1bcc:	ef 92       	push	r14
    1bce:	df 92       	push	r13
    1bd0:	7b 01       	movw	r14, r22
    1bd2:	8c 01       	movw	r16, r24
    1bd4:	68 94       	set
    1bd6:	05 c0       	rjmp	.+10     	; 0x1be2 <__fp_powser+0x20>
    1bd8:	da 2e       	mov	r13, r26
    1bda:	ef 01       	movw	r28, r30
    1bdc:	21 d0       	rcall	.+66     	; 0x1c20 <__mulsf3x>
    1bde:	fe 01       	movw	r30, r28
    1be0:	e8 94       	clt
    1be2:	a5 91       	lpm	r26, Z+
    1be4:	25 91       	lpm	r18, Z+
    1be6:	35 91       	lpm	r19, Z+
    1be8:	45 91       	lpm	r20, Z+
    1bea:	55 91       	lpm	r21, Z+
    1bec:	ae f3       	brts	.-22     	; 0x1bd8 <__fp_powser+0x16>
    1bee:	ef 01       	movw	r28, r30
    1bf0:	47 df       	rcall	.-370    	; 0x1a80 <__addsf3x>
    1bf2:	fe 01       	movw	r30, r28
    1bf4:	97 01       	movw	r18, r14
    1bf6:	a8 01       	movw	r20, r16
    1bf8:	da 94       	dec	r13
    1bfa:	79 f7       	brne	.-34     	; 0x1bda <__fp_powser+0x18>
    1bfc:	df 90       	pop	r13
    1bfe:	ef 90       	pop	r14
    1c00:	ff 90       	pop	r15
    1c02:	0f 91       	pop	r16
    1c04:	1f 91       	pop	r17
    1c06:	cf 91       	pop	r28
    1c08:	df 91       	pop	r29
    1c0a:	08 95       	ret
    1c0c:	b4 df       	rcall	.-152    	; 0x1b76 <__fp_pscA>
    1c0e:	28 f0       	brcs	.+10     	; 0x1c1a <__fp_powser+0x58>
    1c10:	b9 df       	rcall	.-142    	; 0x1b84 <__fp_pscB>
    1c12:	18 f0       	brcs	.+6      	; 0x1c1a <__fp_powser+0x58>
    1c14:	95 23       	and	r25, r21
    1c16:	09 f0       	breq	.+2      	; 0x1c1a <__fp_powser+0x58>
    1c18:	86 cf       	rjmp	.-244    	; 0x1b26 <__fp_inf>
    1c1a:	99 cf       	rjmp	.-206    	; 0x1b4e <__fp_nan>
    1c1c:	11 24       	eor	r1, r1
    1c1e:	cb cf       	rjmp	.-106    	; 0x1bb6 <__fp_szero>

00001c20 <__mulsf3x>:
    1c20:	00 df       	rcall	.-512    	; 0x1a22 <__fp_split3>
    1c22:	a0 f3       	brcs	.-24     	; 0x1c0c <__fp_powser+0x4a>

00001c24 <__mulsf3_pse>:
    1c24:	95 9f       	mul	r25, r21
    1c26:	d1 f3       	breq	.-12     	; 0x1c1c <__fp_powser+0x5a>
    1c28:	95 0f       	add	r25, r21
    1c2a:	50 e0       	ldi	r21, 0x00	; 0
    1c2c:	55 1f       	adc	r21, r21
    1c2e:	62 9f       	mul	r22, r18
    1c30:	f0 01       	movw	r30, r0
    1c32:	72 9f       	mul	r23, r18
    1c34:	bb 27       	eor	r27, r27
    1c36:	f0 0d       	add	r31, r0
    1c38:	b1 1d       	adc	r27, r1
    1c3a:	63 9f       	mul	r22, r19
    1c3c:	aa 27       	eor	r26, r26
    1c3e:	f0 0d       	add	r31, r0
    1c40:	b1 1d       	adc	r27, r1
    1c42:	aa 1f       	adc	r26, r26
    1c44:	64 9f       	mul	r22, r20
    1c46:	66 27       	eor	r22, r22
    1c48:	b0 0d       	add	r27, r0
    1c4a:	a1 1d       	adc	r26, r1
    1c4c:	66 1f       	adc	r22, r22
    1c4e:	82 9f       	mul	r24, r18
    1c50:	22 27       	eor	r18, r18
    1c52:	b0 0d       	add	r27, r0
    1c54:	a1 1d       	adc	r26, r1
    1c56:	62 1f       	adc	r22, r18
    1c58:	73 9f       	mul	r23, r19
    1c5a:	b0 0d       	add	r27, r0
    1c5c:	a1 1d       	adc	r26, r1
    1c5e:	62 1f       	adc	r22, r18
    1c60:	83 9f       	mul	r24, r19
    1c62:	a0 0d       	add	r26, r0
    1c64:	61 1d       	adc	r22, r1
    1c66:	22 1f       	adc	r18, r18
    1c68:	74 9f       	mul	r23, r20
    1c6a:	33 27       	eor	r19, r19
    1c6c:	a0 0d       	add	r26, r0
    1c6e:	61 1d       	adc	r22, r1
    1c70:	23 1f       	adc	r18, r19
    1c72:	84 9f       	mul	r24, r20
    1c74:	60 0d       	add	r22, r0
    1c76:	21 1d       	adc	r18, r1
    1c78:	82 2f       	mov	r24, r18
    1c7a:	76 2f       	mov	r23, r22
    1c7c:	6a 2f       	mov	r22, r26
    1c7e:	11 24       	eor	r1, r1
    1c80:	9f 57       	subi	r25, 0x7F	; 127
    1c82:	50 40       	sbci	r21, 0x00	; 0
    1c84:	8a f0       	brmi	.+34     	; 0x1ca8 <__mulsf3_pse+0x84>
    1c86:	e1 f0       	breq	.+56     	; 0x1cc0 <__mulsf3_pse+0x9c>
    1c88:	88 23       	and	r24, r24
    1c8a:	4a f0       	brmi	.+18     	; 0x1c9e <__mulsf3_pse+0x7a>
    1c8c:	ee 0f       	add	r30, r30
    1c8e:	ff 1f       	adc	r31, r31
    1c90:	bb 1f       	adc	r27, r27
    1c92:	66 1f       	adc	r22, r22
    1c94:	77 1f       	adc	r23, r23
    1c96:	88 1f       	adc	r24, r24
    1c98:	91 50       	subi	r25, 0x01	; 1
    1c9a:	50 40       	sbci	r21, 0x00	; 0
    1c9c:	a9 f7       	brne	.-22     	; 0x1c88 <__mulsf3_pse+0x64>
    1c9e:	9e 3f       	cpi	r25, 0xFE	; 254
    1ca0:	51 05       	cpc	r21, r1
    1ca2:	70 f0       	brcs	.+28     	; 0x1cc0 <__mulsf3_pse+0x9c>
    1ca4:	40 cf       	rjmp	.-384    	; 0x1b26 <__fp_inf>
    1ca6:	87 cf       	rjmp	.-242    	; 0x1bb6 <__fp_szero>
    1ca8:	5f 3f       	cpi	r21, 0xFF	; 255
    1caa:	ec f3       	brlt	.-6      	; 0x1ca6 <__mulsf3_pse+0x82>
    1cac:	98 3e       	cpi	r25, 0xE8	; 232
    1cae:	dc f3       	brlt	.-10     	; 0x1ca6 <__mulsf3_pse+0x82>
    1cb0:	86 95       	lsr	r24
    1cb2:	77 95       	ror	r23
    1cb4:	67 95       	ror	r22
    1cb6:	b7 95       	ror	r27
    1cb8:	f7 95       	ror	r31
    1cba:	e7 95       	ror	r30
    1cbc:	9f 5f       	subi	r25, 0xFF	; 255
    1cbe:	c1 f7       	brne	.-16     	; 0x1cb0 <__mulsf3_pse+0x8c>
    1cc0:	fe 2b       	or	r31, r30
    1cc2:	88 0f       	add	r24, r24
    1cc4:	91 1d       	adc	r25, r1
    1cc6:	96 95       	lsr	r25
    1cc8:	87 95       	ror	r24
    1cca:	97 f9       	bld	r25, 7
    1ccc:	08 95       	ret

00001cce <_exit>:
    1cce:	f8 94       	cli

00001cd0 <__stop_program>:
    1cd0:	ff cf       	rjmp	.-2      	; 0x1cd0 <__stop_program>
