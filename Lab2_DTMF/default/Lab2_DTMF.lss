
Lab2_DTMF.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000080  00800100  00001da8  00001e3c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001da8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000002a7  00800180  00800180  00001ebc  2**0
                  ALLOC
  3 .stab         000022a4  00000000  00000000  00001ebc  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000008d1  00000000  00000000  00004160  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000002f  00000000  00000000  00004a31  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 00000238  00000000  00000000  00004a60  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   000034d9  00000000  00000000  00004c98  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000019bc  00000000  00000000  00008171  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000013d2  00000000  00000000  00009b2d  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000530  00000000  00000000  0000af00  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000894  00000000  00000000  0000b430  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00001a6c  00000000  00000000  0000bcc4  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000088  00000000  00000000  0000d730  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 55 00 	jmp	0xaa	; 0xaa <__ctors_end>
       4:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
       8:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
       c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      10:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      14:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      18:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      1c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      20:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      24:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      28:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      2c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      30:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      34:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      38:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      3c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      40:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      44:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      48:	0c 94 c9 02 	jmp	0x592	; 0x592 <__vector_18>
      4c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      50:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      54:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      58:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      5c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      60:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      64:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      68:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      6c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      70:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      74:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      78:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      7c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      80:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      84:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      88:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      8c:	05 a8       	ldd	r0, Z+53	; 0x35
      8e:	4c cd       	rjmp	.-1384   	; 0xfffffb28 <__eeprom_end+0xff7efb28>
      90:	b2 d4       	rcall	.+2404   	; 0x9f6 <_fpadd_parts+0x4c>
      92:	4e b9       	out	0x0e, r20	; 14
      94:	38 36       	cpi	r19, 0x68	; 104
      96:	a9 02       	muls	r26, r25
      98:	0c 50       	subi	r16, 0x0C	; 12
      9a:	b9 91       	ld	r27, Y+
      9c:	86 88       	ldd	r8, Z+22	; 0x16
      9e:	08 3c       	cpi	r16, 0xC8	; 200
      a0:	a6 aa       	std	Z+54, r10	; 0x36
      a2:	aa 2a       	or	r10, r26
      a4:	be 00       	.word	0x00be	; ????
      a6:	00 00       	nop
      a8:	80 3f       	cpi	r24, 0xF0	; 240

000000aa <__ctors_end>:
      aa:	11 24       	eor	r1, r1
      ac:	1f be       	out	0x3f, r1	; 63
      ae:	cf ef       	ldi	r28, 0xFF	; 255
      b0:	d0 e4       	ldi	r29, 0x40	; 64
      b2:	de bf       	out	0x3e, r29	; 62
      b4:	cd bf       	out	0x3d, r28	; 61

000000b6 <__do_copy_data>:
      b6:	11 e0       	ldi	r17, 0x01	; 1
      b8:	a0 e0       	ldi	r26, 0x00	; 0
      ba:	b1 e0       	ldi	r27, 0x01	; 1
      bc:	e8 ea       	ldi	r30, 0xA8	; 168
      be:	fd e1       	ldi	r31, 0x1D	; 29
      c0:	00 e0       	ldi	r16, 0x00	; 0
      c2:	0b bf       	out	0x3b, r16	; 59
      c4:	02 c0       	rjmp	.+4      	; 0xca <__do_copy_data+0x14>
      c6:	07 90       	elpm	r0, Z+
      c8:	0d 92       	st	X+, r0
      ca:	a0 38       	cpi	r26, 0x80	; 128
      cc:	b1 07       	cpc	r27, r17
      ce:	d9 f7       	brne	.-10     	; 0xc6 <__do_copy_data+0x10>

000000d0 <__do_clear_bss>:
      d0:	24 e0       	ldi	r18, 0x04	; 4
      d2:	a0 e8       	ldi	r26, 0x80	; 128
      d4:	b1 e0       	ldi	r27, 0x01	; 1
      d6:	01 c0       	rjmp	.+2      	; 0xda <.do_clear_bss_start>

000000d8 <.do_clear_bss_loop>:
      d8:	1d 92       	st	X+, r1

000000da <.do_clear_bss_start>:
      da:	a7 32       	cpi	r26, 0x27	; 39
      dc:	b2 07       	cpc	r27, r18
      de:	e1 f7       	brne	.-8      	; 0xd8 <.do_clear_bss_loop>
      e0:	0e 94 e6 09 	call	0x13cc	; 0x13cc <main>
      e4:	0c 94 d2 0e 	jmp	0x1da4	; 0x1da4 <_exit>

000000e8 <__bad_interrupt>:
      e8:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ec <task1>:
FILE uart_str = FDEV_SETUP_STREAM(uart_putchar, uart_getchar, _FDEV_SETUP_RW);

//******************************* 
//Task 1  
void task1(void) {
	time1=0;  //reset the task timer
      ec:	10 92 f0 01 	sts	0x01F0, r1
      f0:	10 92 ef 01 	sts	0x01EF, r1

	//get lower nibble
	PORTDIR = 0x0f;
      f4:	8f e0       	ldi	r24, 0x0F	; 15
      f6:	81 b9       	out	0x01, r24	; 1
	PORTDATA = 0xf0; 
      f8:	90 ef       	ldi	r25, 0xF0	; 240
      fa:	92 b9       	out	0x02, r25	; 2
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
      fc:	2a e1       	ldi	r18, 0x1A	; 26
      fe:	2a 95       	dec	r18
     100:	f1 f7       	brne	.-4      	; 0xfe <task1+0x12>
     102:	00 c0       	rjmp	.+0      	; 0x104 <task1+0x18>
	_delay_us(5);
	key = PORTIN;
     104:	20 b1       	in	r18, 0x00	; 0
     106:	20 93 f3 01 	sts	0x01F3, r18
  
	//get upper nibble
	PORTDIR = 0xf0;
     10a:	91 b9       	out	0x01, r25	; 1
	PORTDATA = 0x0f; 
     10c:	82 b9       	out	0x02, r24	; 2
     10e:	8a e1       	ldi	r24, 0x1A	; 26
     110:	8a 95       	dec	r24
     112:	f1 f7       	brne	.-4      	; 0x110 <task1+0x24>
     114:	00 c0       	rjmp	.+0      	; 0x116 <task1+0x2a>
	_delay_us(5);
	key = key | PORTIN;
     116:	90 b1       	in	r25, 0x00	; 0
     118:	80 91 f3 01 	lds	r24, 0x01F3
     11c:	98 2b       	or	r25, r24
     11e:	90 93 f3 01 	sts	0x01F3, r25
  
	//find matching keycode in keytbl
	if (key != 0xff) {
     122:	9f 3f       	cpi	r25, 0xFF	; 255
     124:	a9 f0       	breq	.+42     	; 0x150 <task1+0x64>
	  for (butnum=0; butnum<maxkeys; butnum++) {   
     126:	80 e0       	ldi	r24, 0x00	; 0
     128:	0a c0       	rjmp	.+20     	; 0x13e <task1+0x52>
     12a:	28 2f       	mov	r18, r24
     12c:	2f 5f       	subi	r18, 0xFF	; 255
	  	if (keytbl[butnum]==key)  break;   
     12e:	e8 2f       	mov	r30, r24
     130:	f0 e0       	ldi	r31, 0x00	; 0
     132:	e2 5c       	subi	r30, 0xC2	; 194
     134:	fe 4f       	sbci	r31, 0xFE	; 254
     136:	30 81       	ld	r19, Z
     138:	39 17       	cp	r19, r25
     13a:	31 f0       	breq	.+12     	; 0x148 <task1+0x5c>
     13c:	82 2f       	mov	r24, r18
	_delay_us(5);
	key = key | PORTIN;
  
	//find matching keycode in keytbl
	if (key != 0xff) {
	  for (butnum=0; butnum<maxkeys; butnum++) {   
     13e:	8c 30       	cpi	r24, 0x0C	; 12
     140:	a0 f3       	brcs	.-24     	; 0x12a <task1+0x3e>
	  	if (keytbl[butnum]==key)  break;   
	  }

	  if (butnum==maxkeys) butnum=0;
     142:	8c 30       	cpi	r24, 0x0C	; 12
     144:	09 f4       	brne	.+2      	; 0x148 <task1+0x5c>
     146:	04 c0       	rjmp	.+8      	; 0x150 <task1+0x64>
	  else butnum++;	   //adjust by one to make range 1-16
     148:	8f 5f       	subi	r24, 0xFF	; 255
     14a:	80 93 eb 01 	sts	0x01EB, r24
     14e:	02 c0       	rjmp	.+4      	; 0x154 <task1+0x68>
	}
	else butnum=0;
     150:	10 92 eb 01 	sts	0x01EB, r1
	
	// Switching in the finite state machine.
	switch (PushState) {
     154:	80 91 f7 01 	lds	r24, 0x01F7
     158:	82 30       	cpi	r24, 0x02	; 2
     15a:	91 f0       	breq	.+36     	; 0x180 <task1+0x94>
     15c:	20 f4       	brcc	.+8      	; 0x166 <task1+0x7a>
     15e:	81 30       	cpi	r24, 0x01	; 1
     160:	09 f0       	breq	.+2      	; 0x164 <task1+0x78>
     162:	60 c0       	rjmp	.+192    	; 0x224 <task1+0x138>
     164:	06 c0       	rjmp	.+12     	; 0x172 <task1+0x86>
     166:	83 30       	cpi	r24, 0x03	; 3
     168:	d1 f0       	breq	.+52     	; 0x19e <task1+0xb2>
     16a:	84 30       	cpi	r24, 0x04	; 4
     16c:	09 f0       	breq	.+2      	; 0x170 <task1+0x84>
     16e:	5a c0       	rjmp	.+180    	; 0x224 <task1+0x138>
     170:	4c c0       	rjmp	.+152    	; 0x20a <task1+0x11e>
     case NoPush: 
        if (butnum != 0) {
     172:	80 91 eb 01 	lds	r24, 0x01EB
     176:	88 23       	and	r24, r24
     178:	09 f4       	brne	.+2      	; 0x17c <task1+0x90>
     17a:	54 c0       	rjmp	.+168    	; 0x224 <task1+0x138>
			PushState=MaybePush;
     17c:	82 e0       	ldi	r24, 0x02	; 2
     17e:	4a c0       	rjmp	.+148    	; 0x214 <task1+0x128>
		}
        else PushState=NoPush;
        break;
     case MaybePush:
        if (butnum != 0) {
     180:	80 91 eb 01 	lds	r24, 0x01EB
     184:	88 23       	and	r24, r24
     186:	49 f0       	breq	.+18     	; 0x19a <task1+0xae>
           	PushState=Pushed; 
     188:	83 e0       	ldi	r24, 0x03	; 3
     18a:	80 93 f7 01 	sts	0x01F7, r24
			PushFlag=1;
     18e:	81 e0       	ldi	r24, 0x01	; 1
     190:	80 93 ec 01 	sts	0x01EC, r24
			//Test mode override
			if (~PINB & 0x01) {
     194:	18 99       	sbic	0x03, 0	; 3
     196:	46 c0       	rjmp	.+140    	; 0x224 <task1+0x138>
     198:	43 c0       	rjmp	.+134    	; 0x220 <task1+0x134>
				//fprintf(stdout, "PINB is pressed.\n\r");
		 		PushFlag=0;			
		   	}  
        }
        else PushState=NoPush;
     19a:	81 e0       	ldi	r24, 0x01	; 1
     19c:	3b c0       	rjmp	.+118    	; 0x214 <task1+0x128>
        break;
     case Pushed:  
        if (butnum != 0) {
     19e:	80 91 eb 01 	lds	r24, 0x01EB
     1a2:	88 23       	and	r24, r24
     1a4:	81 f1       	breq	.+96     	; 0x206 <task1+0x11a>
			PushState=Pushed;
			//Test mode override
			if (~PINB & 0x01) {
     1a6:	18 99       	sbic	0x03, 0	; 3
     1a8:	3d c0       	rjmp	.+122    	; 0x224 <task1+0x138>
		 		switch (butnum) {
     1aa:	84 30       	cpi	r24, 0x04	; 4
     1ac:	c1 f0       	breq	.+48     	; 0x1de <task1+0xf2>
     1ae:	30 f4       	brcc	.+12     	; 0x1bc <task1+0xd0>
     1b0:	82 30       	cpi	r24, 0x02	; 2
     1b2:	69 f0       	breq	.+26     	; 0x1ce <task1+0xe2>
     1b4:	88 f4       	brcc	.+34     	; 0x1d8 <task1+0xec>
     1b6:	81 30       	cpi	r24, 0x01	; 1
     1b8:	a9 f5       	brne	.+106    	; 0x224 <task1+0x138>
     1ba:	06 c0       	rjmp	.+12     	; 0x1c8 <task1+0xdc>
     1bc:	86 30       	cpi	r24, 0x06	; 6
     1be:	b9 f0       	breq	.+46     	; 0x1ee <task1+0x102>
     1c0:	88 f0       	brcs	.+34     	; 0x1e4 <task1+0xf8>
     1c2:	87 30       	cpi	r24, 0x07	; 7
     1c4:	79 f5       	brne	.+94     	; 0x224 <task1+0x138>
     1c6:	18 c0       	rjmp	.+48     	; 0x1f8 <task1+0x10c>
					case 1: 
						play(0, 697);
     1c8:	69 eb       	ldi	r22, 0xB9	; 185
     1ca:	72 e0       	ldi	r23, 0x02	; 2
     1cc:	02 c0       	rjmp	.+4      	; 0x1d2 <task1+0xe6>
						break;
					case 2: 
						play(0, 770);
     1ce:	62 e0       	ldi	r22, 0x02	; 2
     1d0:	73 e0       	ldi	r23, 0x03	; 3
     1d2:	80 e0       	ldi	r24, 0x00	; 0
     1d4:	90 e0       	ldi	r25, 0x00	; 0
     1d6:	14 c0       	rjmp	.+40     	; 0x200 <task1+0x114>
						break;
					case 3: 
						play(0, 852);
     1d8:	64 e5       	ldi	r22, 0x54	; 84
     1da:	73 e0       	ldi	r23, 0x03	; 3
     1dc:	fa cf       	rjmp	.-12     	; 0x1d2 <task1+0xe6>
						break;
					case 4: 
						play(0, 941);
     1de:	6d ea       	ldi	r22, 0xAD	; 173
     1e0:	73 e0       	ldi	r23, 0x03	; 3
     1e2:	f7 cf       	rjmp	.-18     	; 0x1d2 <task1+0xe6>
						break;
					case 5:
						play(1209, 0);
     1e4:	60 e0       	ldi	r22, 0x00	; 0
     1e6:	70 e0       	ldi	r23, 0x00	; 0
     1e8:	89 eb       	ldi	r24, 0xB9	; 185
     1ea:	94 e0       	ldi	r25, 0x04	; 4
     1ec:	09 c0       	rjmp	.+18     	; 0x200 <task1+0x114>
						break;
					case 6:
						play(1336, 0);
     1ee:	60 e0       	ldi	r22, 0x00	; 0
     1f0:	70 e0       	ldi	r23, 0x00	; 0
     1f2:	88 e3       	ldi	r24, 0x38	; 56
     1f4:	95 e0       	ldi	r25, 0x05	; 5
     1f6:	04 c0       	rjmp	.+8      	; 0x200 <task1+0x114>
						break;
					case 7: 
						play(1477, 0);
     1f8:	60 e0       	ldi	r22, 0x00	; 0
     1fa:	70 e0       	ldi	r23, 0x00	; 0
     1fc:	85 ec       	ldi	r24, 0xC5	; 197
     1fe:	95 e0       	ldi	r25, 0x05	; 5
     200:	0e 94 ce 03 	call	0x79c	; 0x79c <play>
						break;
     204:	0f c0       	rjmp	.+30     	; 0x224 <task1+0x138>
					default:
						break;
				}	
		   	}  
		}
        else PushState=MaybeNoPush;    
     206:	84 e0       	ldi	r24, 0x04	; 4
     208:	05 c0       	rjmp	.+10     	; 0x214 <task1+0x128>
        break;
     case MaybeNoPush:
        if (butnum != 0) PushState=Pushed; 
     20a:	80 91 eb 01 	lds	r24, 0x01EB
     20e:	88 23       	and	r24, r24
     210:	21 f0       	breq	.+8      	; 0x21a <task1+0x12e>
     212:	83 e0       	ldi	r24, 0x03	; 3
     214:	80 93 f7 01 	sts	0x01F7, r24
     218:	05 c0       	rjmp	.+10     	; 0x224 <task1+0x138>
        else {
           PushState=NoPush;
     21a:	81 e0       	ldi	r24, 0x01	; 1
     21c:	80 93 f7 01 	sts	0x01F7, r24
           PushFlag=0;
     220:	10 92 ec 01 	sts	0x01EC, r1
        }    
        break;
  	}

	if (PushState == NoPush && !is_timed_playing) {
     224:	80 91 f7 01 	lds	r24, 0x01F7
     228:	81 30       	cpi	r24, 0x01	; 1
     22a:	71 f4       	brne	.+28     	; 0x248 <task1+0x15c>
     22c:	80 91 ea 01 	lds	r24, 0x01EA
     230:	81 11       	cpse	r24, r1
     232:	0a c0       	rjmp	.+20     	; 0x248 <task1+0x15c>
		fprintf(stdout, "Depressed...\n\r");
     234:	60 91 23 04 	lds	r22, 0x0423
     238:	70 91 24 04 	lds	r23, 0x0424
     23c:	86 e5       	ldi	r24, 0x56	; 86
     23e:	91 e0       	ldi	r25, 0x01	; 1
     240:	0e 94 6d 0a 	call	0x14da	; 0x14da <fputs>
		stop_playing();
     244:	0e 94 5d 04 	call	0x8ba	; 0x8ba <stop_playing>
	}	

	if (PushFlag) {
     248:	80 91 ec 01 	lds	r24, 0x01EC
     24c:	88 23       	and	r24, r24
     24e:	09 f4       	brne	.+2      	; 0x252 <task1+0x166>
     250:	93 c0       	rjmp	.+294    	; 0x378 <task1+0x28c>
		PushFlag = 0;
     252:	10 92 ec 01 	sts	0x01EC, r1
		// The * button was pressed. Clear all memory.
		if (butnum == 10) {
     256:	80 91 eb 01 	lds	r24, 0x01EB
     25a:	8a 30       	cpi	r24, 0x0A	; 10
     25c:	09 f5       	brne	.+66     	; 0x2a0 <task1+0x1b4>
			fprintf(stdout, "%u\n\r", butnum);
     25e:	1f 92       	push	r1
     260:	8f 93       	push	r24
     262:	85 e6       	ldi	r24, 0x65	; 101
     264:	91 e0       	ldi	r25, 0x01	; 1
     266:	9f 93       	push	r25
     268:	8f 93       	push	r24
     26a:	80 91 24 04 	lds	r24, 0x0424
     26e:	8f 93       	push	r24
     270:	80 91 23 04 	lds	r24, 0x0423
     274:	8f 93       	push	r24
     276:	0e 94 5d 0a 	call	0x14ba	; 0x14ba <fprintf>
     27a:	e0 e8       	ldi	r30, 0x80	; 128
     27c:	f1 e0       	ldi	r31, 0x01	; 1
// putchar and getchar are in uart.c
FILE uart_str = FDEV_SETUP_STREAM(uart_putchar, uart_getchar, _FDEV_SETUP_RW);

//******************************* 
//Task 1  
void task1(void) {
     27e:	0f 90       	pop	r0
     280:	0f 90       	pop	r0
     282:	0f 90       	pop	r0
     284:	0f 90       	pop	r0
     286:	0f 90       	pop	r0
     288:	0f 90       	pop	r0
		PushFlag = 0;
		// The * button was pressed. Clear all memory.
		if (butnum == 10) {
			fprintf(stdout, "%u\n\r", butnum);
			for (int i = 0; i < 12; i++) {
				mem[i] = 0;
     28a:	11 92       	st	Z+, r1
     28c:	11 92       	st	Z+, r1
	if (PushFlag) {
		PushFlag = 0;
		// The * button was pressed. Clear all memory.
		if (butnum == 10) {
			fprintf(stdout, "%u\n\r", butnum);
			for (int i = 0; i < 12; i++) {
     28e:	21 e0       	ldi	r18, 0x01	; 1
     290:	e8 39       	cpi	r30, 0x98	; 152
     292:	f2 07       	cpc	r31, r18
     294:	d1 f7       	brne	.-12     	; 0x28a <task1+0x19e>
				mem[i] = 0;
			}
			mem_index = 0;
     296:	10 92 f5 01 	sts	0x01F5, r1
     29a:	10 92 f4 01 	sts	0x01F4, r1
     29e:	08 95       	ret
		}
		// The # button was pressed. Play all sounds in memory.
		else if (butnum == 12) {
     2a0:	8c 30       	cpi	r24, 0x0C	; 12
     2a2:	89 f5       	brne	.+98     	; 0x306 <task1+0x21a>
			fprintf(stdout, "%u\n\r", butnum);
     2a4:	1f 92       	push	r1
     2a6:	8f 93       	push	r24
     2a8:	85 e6       	ldi	r24, 0x65	; 101
     2aa:	91 e0       	ldi	r25, 0x01	; 1
     2ac:	9f 93       	push	r25
     2ae:	8f 93       	push	r24
     2b0:	80 91 24 04 	lds	r24, 0x0424
     2b4:	8f 93       	push	r24
     2b6:	80 91 23 04 	lds	r24, 0x0423
     2ba:	8f 93       	push	r24
     2bc:	0e 94 5d 0a 	call	0x14ba	; 0x14ba <fprintf>
			int i = 0;
			is_playing = FALSE;
     2c0:	10 92 f8 01 	sts	0x01F8, r1
			char silence;
			silence = FALSE;
			//init the playing state machine
			is_timed_playing = FALSE;
     2c4:	10 92 ea 01 	sts	0x01EA, r1
			while( i < 12){
				if (mem[i] == 0) {
     2c8:	80 91 80 01 	lds	r24, 0x0180
     2cc:	90 91 81 01 	lds	r25, 0x0181
     2d0:	0f 90       	pop	r0
     2d2:	0f 90       	pop	r0
     2d4:	0f 90       	pop	r0
     2d6:	0f 90       	pop	r0
     2d8:	0f 90       	pop	r0
     2da:	0f 90       	pop	r0
     2dc:	00 97       	sbiw	r24, 0x00	; 0
     2de:	09 f4       	brne	.+2      	; 0x2e2 <task1+0x1f6>
     2e0:	4b c0       	rjmp	.+150    	; 0x378 <task1+0x28c>
					break;
				}
				play(high_freq[mem[i]], low_freq[mem[i]]);
     2e2:	88 0f       	add	r24, r24
     2e4:	99 1f       	adc	r25, r25
     2e6:	fc 01       	movw	r30, r24
     2e8:	e2 5f       	subi	r30, 0xF2	; 242
     2ea:	fe 4f       	sbci	r31, 0xFE	; 254
     2ec:	60 81       	ld	r22, Z
     2ee:	71 81       	ldd	r23, Z+1	; 0x01
     2f0:	fc 01       	movw	r30, r24
     2f2:	ea 5d       	subi	r30, 0xDA	; 218
     2f4:	fe 4f       	sbci	r31, 0xFE	; 254
     2f6:	80 81       	ld	r24, Z
     2f8:	91 81       	ldd	r25, Z+1	; 0x01
     2fa:	0e 94 ce 03 	call	0x79c	; 0x79c <play>
				is_timed_playing = TRUE;
     2fe:	81 e0       	ldi	r24, 0x01	; 1
     300:	80 93 ea 01 	sts	0x01EA, r24
				break;
     304:	08 95       	ret
			// 	}
			// }
		}
		// A normal button press. 
		else {
			fprintf(stdout, "%u\n\r", butnum);
     306:	1f 92       	push	r1
     308:	8f 93       	push	r24
     30a:	85 e6       	ldi	r24, 0x65	; 101
     30c:	91 e0       	ldi	r25, 0x01	; 1
     30e:	9f 93       	push	r25
     310:	8f 93       	push	r24
     312:	80 91 24 04 	lds	r24, 0x0424
     316:	8f 93       	push	r24
     318:	80 91 23 04 	lds	r24, 0x0423
     31c:	8f 93       	push	r24
     31e:	0e 94 5d 0a 	call	0x14ba	; 0x14ba <fprintf>
			if (mem_index < 12) {
     322:	20 91 f4 01 	lds	r18, 0x01F4
     326:	30 91 f5 01 	lds	r19, 0x01F5
     32a:	0f 90       	pop	r0
     32c:	0f 90       	pop	r0
     32e:	0f 90       	pop	r0
     330:	0f 90       	pop	r0
     332:	0f 90       	pop	r0
     334:	0f 90       	pop	r0
     336:	2c 30       	cpi	r18, 0x0C	; 12
     338:	31 05       	cpc	r19, r1
     33a:	f0 f4       	brcc	.+60     	; 0x378 <task1+0x28c>
				mem[mem_index] = butnum;
     33c:	80 91 eb 01 	lds	r24, 0x01EB
     340:	f9 01       	movw	r30, r18
     342:	ee 0f       	add	r30, r30
     344:	ff 1f       	adc	r31, r31
     346:	e0 58       	subi	r30, 0x80	; 128
     348:	fe 4f       	sbci	r31, 0xFE	; 254
     34a:	80 83       	st	Z, r24
     34c:	11 82       	std	Z+1, r1	; 0x01
				mem_index++;
     34e:	2f 5f       	subi	r18, 0xFF	; 255
     350:	3f 4f       	sbci	r19, 0xFF	; 255
     352:	30 93 f5 01 	sts	0x01F5, r19
     356:	20 93 f4 01 	sts	0x01F4, r18
				play(high_freq[butnum], low_freq[butnum]);
     35a:	90 e0       	ldi	r25, 0x00	; 0
     35c:	88 0f       	add	r24, r24
     35e:	99 1f       	adc	r25, r25
     360:	fc 01       	movw	r30, r24
     362:	e2 5f       	subi	r30, 0xF2	; 242
     364:	fe 4f       	sbci	r31, 0xFE	; 254
     366:	60 81       	ld	r22, Z
     368:	71 81       	ldd	r23, Z+1	; 0x01
     36a:	fc 01       	movw	r30, r24
     36c:	ea 5d       	subi	r30, 0xDA	; 218
     36e:	fe 4f       	sbci	r31, 0xFE	; 254
     370:	80 81       	ld	r24, Z
     372:	91 81       	ldd	r25, Z+1	; 0x01
     374:	0c 94 ce 03 	jmp	0x79c	; 0x79c <play>
     378:	08 95       	ret

0000037a <initialize>:
} 
 
//Initialization used for the timer interrupts for debouncing
void initialize(void) {
	//set up timer 0 for 1 mSec timebase 
	OCR0A = 249;  		//set the compare re to 250 time ticks
     37a:	89 ef       	ldi	r24, 0xF9	; 249
     37c:	87 bd       	out	0x27, r24	; 39
	TIMSK0= (1<<OCIE0A);	//turn on timer 0 cmp match ISR 
     37e:	82 e0       	ldi	r24, 0x02	; 2
     380:	80 93 6e 00 	sts	0x006E, r24
	//set prescalar to divide by 64 
	TCCR0B= 3; //0b00000011;	
     384:	93 e0       	ldi	r25, 0x03	; 3
     386:	95 bd       	out	0x25, r25	; 37
	// turn on clear-on-match
	TCCR0A= (1<<WGM01) ;
     388:	84 bd       	out	0x24, r24	; 36

	//init the task timers
	time1=0;  
     38a:	10 92 f0 01 	sts	0x01F0, r1
     38e:	10 92 ef 01 	sts	0x01EF, r1
	// PORT B is an input
	DDRB = 0x00;
     392:	14 b8       	out	0x04, r1	; 4
	//for no button push
	PushFlag = 0;
     394:	10 92 ec 01 	sts	0x01EC, r1
	//init the state machine
	PushState = NoPush;
     398:	81 e0       	ldi	r24, 0x01	; 1
     39a:	80 93 f7 01 	sts	0x01F7, r24

	mem_index = 0;
     39e:	10 92 f5 01 	sts	0x01F5, r1
     3a2:	10 92 f4 01 	sts	0x01F4, r1

	init_dtmf();
     3a6:	0e 94 79 03 	call	0x6f2	; 0x6f2 <init_dtmf>
	//crank up the ISRs
	sei() ;
     3aa:	78 94       	sei
     3ac:	08 95       	ret

000003ae <uart_init>:
{
#if F_CPU < 2000000UL && defined(U2X)
  UCSR0A = _BV(U2X);             /* improve baud rate error by using 2x clk */
  UBRR0L = (F_CPU / (8UL * UART_BAUD)) - 1;
#else
  UBRR0L = (F_CPU / (16UL * UART_BAUD)) - 1;
     3ae:	87 e6       	ldi	r24, 0x67	; 103
     3b0:	80 93 c4 00 	sts	0x00C4, r24
#endif
  UCSR0B = _BV(TXEN0) | _BV(RXEN0); /* tx/rx enable */
     3b4:	88 e1       	ldi	r24, 0x18	; 24
     3b6:	80 93 c1 00 	sts	0x00C1, r24
     3ba:	08 95       	ret

000003bc <uart_putchar>:
 * Send character c down the UART Tx, wait until tx holding register
 * is empty.
 */
int
uart_putchar(char c, FILE *stream)
{
     3bc:	cf 93       	push	r28
     3be:	c8 2f       	mov	r28, r24

  if (c == '\a')
     3c0:	87 30       	cpi	r24, 0x07	; 7
     3c2:	49 f4       	brne	.+18     	; 0x3d6 <uart_putchar+0x1a>
    {
      fputs("*ring*\n", stderr);
     3c4:	60 91 25 04 	lds	r22, 0x0425
     3c8:	70 91 26 04 	lds	r23, 0x0426
     3cc:	88 e7       	ldi	r24, 0x78	; 120
     3ce:	91 e0       	ldi	r25, 0x01	; 1
     3d0:	0e 94 6d 0a 	call	0x14da	; 0x14da <fputs>
     3d4:	0b c0       	rjmp	.+22     	; 0x3ec <uart_putchar+0x30>
      return 0;
    }

  if (c == '\n')
     3d6:	8a 30       	cpi	r24, 0x0A	; 10
     3d8:	19 f4       	brne	.+6      	; 0x3e0 <uart_putchar+0x24>
    uart_putchar('\r', stream);
     3da:	8d e0       	ldi	r24, 0x0D	; 13
     3dc:	0e 94 de 01 	call	0x3bc	; 0x3bc <uart_putchar>
  loop_until_bit_is_set(UCSR0A, UDRE0);
     3e0:	80 91 c0 00 	lds	r24, 0x00C0
     3e4:	85 ff       	sbrs	r24, 5
     3e6:	fc cf       	rjmp	.-8      	; 0x3e0 <uart_putchar+0x24>
  UDR0 = c;
     3e8:	c0 93 c6 00 	sts	0x00C6, r28

  return 0;
}
     3ec:	80 e0       	ldi	r24, 0x00	; 0
     3ee:	90 e0       	ldi	r25, 0x00	; 0
     3f0:	cf 91       	pop	r28
     3f2:	08 95       	ret

000003f4 <uart_getchar>:
 * Successive calls to uart_getchar() will be satisfied from the
 * internal buffer until that buffer is emptied again.
 */
int
uart_getchar(FILE *stream)
{
     3f4:	ef 92       	push	r14
     3f6:	ff 92       	push	r15
     3f8:	0f 93       	push	r16
     3fa:	1f 93       	push	r17
     3fc:	cf 93       	push	r28
     3fe:	df 93       	push	r29
     400:	8c 01       	movw	r16, r24
  uint8_t c;
  char *cp, *cp2;
  static char b[RX_BUFSIZE];
  static char *rxp;

  if (rxp == 0)
     402:	80 91 98 01 	lds	r24, 0x0198
     406:	90 91 99 01 	lds	r25, 0x0199
     40a:	89 2b       	or	r24, r25
     40c:	09 f0       	breq	.+2      	; 0x410 <uart_getchar+0x1c>
     40e:	a1 c0       	rjmp	.+322    	; 0x552 <uart_getchar+0x15e>
     410:	ca e9       	ldi	r28, 0x9A	; 154
     412:	d1 e0       	ldi	r29, 0x01	; 1
    for (cp = b;;)
      {
	loop_until_bit_is_set(UCSR0A, RXC0);
     414:	80 91 c0 00 	lds	r24, 0x00C0
     418:	87 ff       	sbrs	r24, 7
     41a:	fc cf       	rjmp	.-8      	; 0x414 <uart_getchar+0x20>
	if (UCSR0A & _BV(FE0))
     41c:	80 91 c0 00 	lds	r24, 0x00C0
     420:	84 fd       	sbrc	r24, 4
     422:	aa c0       	rjmp	.+340    	; 0x578 <uart_getchar+0x184>
	  return _FDEV_EOF;
	if (UCSR0A & _BV(DOR0))
     424:	80 91 c0 00 	lds	r24, 0x00C0
     428:	83 fd       	sbrc	r24, 3
     42a:	a9 c0       	rjmp	.+338    	; 0x57e <uart_getchar+0x18a>
	  return _FDEV_ERR;
	c = UDR0;
     42c:	80 91 c6 00 	lds	r24, 0x00C6
	/* behaviour similar to Unix stty ICRNL */
	if (c == '\r')
     430:	8d 30       	cpi	r24, 0x0D	; 13
     432:	61 f4       	brne	.+24     	; 0x44c <uart_getchar+0x58>
	  c = '\n';
	if (c == '\n')
	  {
	    *cp = c;
     434:	8a e0       	ldi	r24, 0x0A	; 10
     436:	88 83       	st	Y, r24
	    uart_putchar(c, stream);
     438:	b8 01       	movw	r22, r16
     43a:	0e 94 de 01 	call	0x3bc	; 0x3bc <uart_putchar>
	    rxp = b;
     43e:	8a e9       	ldi	r24, 0x9A	; 154
     440:	91 e0       	ldi	r25, 0x01	; 1
     442:	90 93 99 01 	sts	0x0199, r25
     446:	80 93 98 01 	sts	0x0198, r24
	    break;
     44a:	83 c0       	rjmp	.+262    	; 0x552 <uart_getchar+0x15e>
	  return _FDEV_ERR;
	c = UDR0;
	/* behaviour similar to Unix stty ICRNL */
	if (c == '\r')
	  c = '\n';
	if (c == '\n')
     44c:	8a 30       	cpi	r24, 0x0A	; 10
     44e:	91 f3       	breq	.-28     	; 0x434 <uart_getchar+0x40>
	    *cp = c;
	    uart_putchar(c, stream);
	    rxp = b;
	    break;
	  }
	else if (c == '\t')
     450:	89 30       	cpi	r24, 0x09	; 9
     452:	09 f4       	brne	.+2      	; 0x456 <uart_getchar+0x62>
	  c = ' ';
     454:	80 e2       	ldi	r24, 0x20	; 32

	if ((c >= (uint8_t)' ' && c <= (uint8_t)'\x7e') ||
     456:	98 2f       	mov	r25, r24
     458:	90 52       	subi	r25, 0x20	; 32
     45a:	9f 35       	cpi	r25, 0x5F	; 95
     45c:	10 f0       	brcs	.+4      	; 0x462 <uart_getchar+0x6e>
     45e:	80 3a       	cpi	r24, 0xA0	; 160
     460:	90 f0       	brcs	.+36     	; 0x486 <uart_getchar+0x92>
	    c >= (uint8_t)'\xa0')
	  {
	    if (cp == b + RX_BUFSIZE - 1)
     462:	91 e0       	ldi	r25, 0x01	; 1
     464:	c9 3e       	cpi	r28, 0xE9	; 233
     466:	d9 07       	cpc	r29, r25
     468:	49 f4       	brne	.+18     	; 0x47c <uart_getchar+0x88>
uart_putchar(char c, FILE *stream)
{

  if (c == '\a')
    {
      fputs("*ring*\n", stderr);
     46a:	60 91 25 04 	lds	r22, 0x0425
     46e:	70 91 26 04 	lds	r23, 0x0426
     472:	88 e7       	ldi	r24, 0x78	; 120
     474:	91 e0       	ldi	r25, 0x01	; 1
     476:	0e 94 6d 0a 	call	0x14da	; 0x14da <fputs>
     47a:	cc cf       	rjmp	.-104    	; 0x414 <uart_getchar+0x20>
	  {
	    if (cp == b + RX_BUFSIZE - 1)
	      uart_putchar('\a', stream);
	    else
	      {
		*cp++ = c;
     47c:	89 93       	st	Y+, r24
		uart_putchar(c, stream);
     47e:	b8 01       	movw	r22, r16
     480:	0e 94 de 01 	call	0x3bc	; 0x3bc <uart_putchar>
     484:	c7 cf       	rjmp	.-114    	; 0x414 <uart_getchar+0x20>
	      }
	    continue;
	  }

	switch (c)
     486:	82 31       	cpi	r24, 0x12	; 18
     488:	29 f1       	breq	.+74     	; 0x4d4 <uart_getchar+0xe0>
     48a:	38 f4       	brcc	.+14     	; 0x49a <uart_getchar+0xa6>
     48c:	83 30       	cpi	r24, 0x03	; 3
     48e:	09 f4       	brne	.+2      	; 0x492 <uart_getchar+0x9e>
     490:	76 c0       	rjmp	.+236    	; 0x57e <uart_getchar+0x18a>
     492:	88 30       	cpi	r24, 0x08	; 8
     494:	09 f0       	breq	.+2      	; 0x498 <uart_getchar+0xa4>
     496:	be cf       	rjmp	.-132    	; 0x414 <uart_getchar+0x20>
     498:	09 c0       	rjmp	.+18     	; 0x4ac <uart_getchar+0xb8>
     49a:	87 31       	cpi	r24, 0x17	; 23
     49c:	09 f4       	brne	.+2      	; 0x4a0 <uart_getchar+0xac>
     49e:	4d c0       	rjmp	.+154    	; 0x53a <uart_getchar+0x146>
     4a0:	8f 37       	cpi	r24, 0x7F	; 127
     4a2:	21 f0       	breq	.+8      	; 0x4ac <uart_getchar+0xb8>
     4a4:	85 31       	cpi	r24, 0x15	; 21
     4a6:	09 f0       	breq	.+2      	; 0x4aa <uart_getchar+0xb6>
     4a8:	b5 cf       	rjmp	.-150    	; 0x414 <uart_getchar+0x20>
     4aa:	34 c0       	rjmp	.+104    	; 0x514 <uart_getchar+0x120>
	  case 'c' & 0x1f:
	    return -1;

	  case '\b':
	  case '\x7f':
	    if (cp > b)
     4ac:	e1 e0       	ldi	r30, 0x01	; 1
     4ae:	ca 39       	cpi	r28, 0x9A	; 154
     4b0:	de 07       	cpc	r29, r30
     4b2:	09 f0       	breq	.+2      	; 0x4b6 <uart_getchar+0xc2>
     4b4:	08 f4       	brcc	.+2      	; 0x4b8 <uart_getchar+0xc4>
     4b6:	ae cf       	rjmp	.-164    	; 0x414 <uart_getchar+0x20>
	      {
		uart_putchar('\b', stream);
     4b8:	b8 01       	movw	r22, r16
     4ba:	88 e0       	ldi	r24, 0x08	; 8
     4bc:	0e 94 de 01 	call	0x3bc	; 0x3bc <uart_putchar>
		uart_putchar(' ', stream);
     4c0:	b8 01       	movw	r22, r16
     4c2:	80 e2       	ldi	r24, 0x20	; 32
     4c4:	0e 94 de 01 	call	0x3bc	; 0x3bc <uart_putchar>
		uart_putchar('\b', stream);
     4c8:	b8 01       	movw	r22, r16
     4ca:	88 e0       	ldi	r24, 0x08	; 8
     4cc:	0e 94 de 01 	call	0x3bc	; 0x3bc <uart_putchar>
		cp--;
     4d0:	21 97       	sbiw	r28, 0x01	; 1
     4d2:	a0 cf       	rjmp	.-192    	; 0x414 <uart_getchar+0x20>
	      }
	    break;

	  case 'r' & 0x1f:
	    uart_putchar('\r', stream);
     4d4:	b8 01       	movw	r22, r16
     4d6:	8d e0       	ldi	r24, 0x0D	; 13
     4d8:	0e 94 de 01 	call	0x3bc	; 0x3bc <uart_putchar>
	    for (cp2 = b; cp2 < cp; cp2++)
     4dc:	8a e9       	ldi	r24, 0x9A	; 154
     4de:	e8 2e       	mov	r14, r24
     4e0:	81 e0       	ldi	r24, 0x01	; 1
     4e2:	f8 2e       	mov	r15, r24
     4e4:	06 c0       	rjmp	.+12     	; 0x4f2 <uart_getchar+0xfe>
	      uart_putchar(*cp2, stream);
     4e6:	b8 01       	movw	r22, r16
     4e8:	f7 01       	movw	r30, r14
     4ea:	81 91       	ld	r24, Z+
     4ec:	7f 01       	movw	r14, r30
     4ee:	0e 94 de 01 	call	0x3bc	; 0x3bc <uart_putchar>
	      }
	    break;

	  case 'r' & 0x1f:
	    uart_putchar('\r', stream);
	    for (cp2 = b; cp2 < cp; cp2++)
     4f2:	ec 16       	cp	r14, r28
     4f4:	fd 06       	cpc	r15, r29
     4f6:	b8 f3       	brcs	.-18     	; 0x4e6 <uart_getchar+0xf2>
     4f8:	8d cf       	rjmp	.-230    	; 0x414 <uart_getchar+0x20>
	    break;

	  case 'u' & 0x1f:
	    while (cp > b)
	      {
		uart_putchar('\b', stream);
     4fa:	b8 01       	movw	r22, r16
     4fc:	88 e0       	ldi	r24, 0x08	; 8
     4fe:	0e 94 de 01 	call	0x3bc	; 0x3bc <uart_putchar>
		uart_putchar(' ', stream);
     502:	b8 01       	movw	r22, r16
     504:	80 e2       	ldi	r24, 0x20	; 32
     506:	0e 94 de 01 	call	0x3bc	; 0x3bc <uart_putchar>
		uart_putchar('\b', stream);
     50a:	b8 01       	movw	r22, r16
     50c:	88 e0       	ldi	r24, 0x08	; 8
     50e:	0e 94 de 01 	call	0x3bc	; 0x3bc <uart_putchar>
		cp--;
     512:	21 97       	sbiw	r28, 0x01	; 1
	    for (cp2 = b; cp2 < cp; cp2++)
	      uart_putchar(*cp2, stream);
	    break;

	  case 'u' & 0x1f:
	    while (cp > b)
     514:	f1 e0       	ldi	r31, 0x01	; 1
     516:	ca 39       	cpi	r28, 0x9A	; 154
     518:	df 07       	cpc	r29, r31
     51a:	09 f0       	breq	.+2      	; 0x51e <uart_getchar+0x12a>
     51c:	70 f7       	brcc	.-36     	; 0x4fa <uart_getchar+0x106>
     51e:	7a cf       	rjmp	.-268    	; 0x414 <uart_getchar+0x20>
	    break;

	  case 'w' & 0x1f:
	    while (cp > b && cp[-1] != ' ')
	      {
		uart_putchar('\b', stream);
     520:	b8 01       	movw	r22, r16
     522:	88 e0       	ldi	r24, 0x08	; 8
     524:	0e 94 de 01 	call	0x3bc	; 0x3bc <uart_putchar>
		uart_putchar(' ', stream);
     528:	b8 01       	movw	r22, r16
     52a:	80 e2       	ldi	r24, 0x20	; 32
     52c:	0e 94 de 01 	call	0x3bc	; 0x3bc <uart_putchar>
		uart_putchar('\b', stream);
     530:	b8 01       	movw	r22, r16
     532:	88 e0       	ldi	r24, 0x08	; 8
     534:	0e 94 de 01 	call	0x3bc	; 0x3bc <uart_putchar>
		cp--;
     538:	e7 01       	movw	r28, r14
		cp--;
	      }
	    break;

	  case 'w' & 0x1f:
	    while (cp > b && cp[-1] != ' ')
     53a:	81 e0       	ldi	r24, 0x01	; 1
     53c:	ca 39       	cpi	r28, 0x9A	; 154
     53e:	d8 07       	cpc	r29, r24
     540:	09 f0       	breq	.+2      	; 0x544 <uart_getchar+0x150>
     542:	08 f4       	brcc	.+2      	; 0x546 <uart_getchar+0x152>
     544:	67 cf       	rjmp	.-306    	; 0x414 <uart_getchar+0x20>
     546:	fe 01       	movw	r30, r28
     548:	82 91       	ld	r24, -Z
     54a:	7f 01       	movw	r14, r30
     54c:	80 32       	cpi	r24, 0x20	; 32
     54e:	41 f7       	brne	.-48     	; 0x520 <uart_getchar+0x12c>
     550:	61 cf       	rjmp	.-318    	; 0x414 <uart_getchar+0x20>
	      }
	    break;
	  }
      }

  c = *rxp++;
     552:	e0 91 98 01 	lds	r30, 0x0198
     556:	f0 91 99 01 	lds	r31, 0x0199
     55a:	20 81       	ld	r18, Z
  if (c == '\n')
     55c:	2a 30       	cpi	r18, 0x0A	; 10
     55e:	31 f0       	breq	.+12     	; 0x56c <uart_getchar+0x178>
	      }
	    break;
	  }
      }

  c = *rxp++;
     560:	31 96       	adiw	r30, 0x01	; 1
     562:	f0 93 99 01 	sts	0x0199, r31
     566:	e0 93 98 01 	sts	0x0198, r30
     56a:	04 c0       	rjmp	.+8      	; 0x574 <uart_getchar+0x180>
  if (c == '\n')
    rxp = 0;
     56c:	10 92 99 01 	sts	0x0199, r1
     570:	10 92 98 01 	sts	0x0198, r1

  return c;
     574:	30 e0       	ldi	r19, 0x00	; 0
     576:	05 c0       	rjmp	.+10     	; 0x582 <uart_getchar+0x18e>
  if (rxp == 0)
    for (cp = b;;)
      {
	loop_until_bit_is_set(UCSR0A, RXC0);
	if (UCSR0A & _BV(FE0))
	  return _FDEV_EOF;
     578:	2e ef       	ldi	r18, 0xFE	; 254
     57a:	3f ef       	ldi	r19, 0xFF	; 255
     57c:	02 c0       	rjmp	.+4      	; 0x582 <uart_getchar+0x18e>
	  }

	switch (c)
	  {
	  case 'c' & 0x1f:
	    return -1;
     57e:	2f ef       	ldi	r18, 0xFF	; 255
     580:	3f ef       	ldi	r19, 0xFF	; 255
  c = *rxp++;
  if (c == '\n')
    rxp = 0;

  return c;
}
     582:	c9 01       	movw	r24, r18
     584:	df 91       	pop	r29
     586:	cf 91       	pop	r28
     588:	1f 91       	pop	r17
     58a:	0f 91       	pop	r16
     58c:	ff 90       	pop	r15
     58e:	ef 90       	pop	r14
     590:	08 95       	ret

00000592 <__vector_18>:
volatile unsigned long accumulator ;
volatile unsigned char changed;


volatile unsigned long increment;
ISR( TIMER0_OVF_vect){
     592:	1f 92       	push	r1
     594:	0f 92       	push	r0
     596:	0f b6       	in	r0, 0x3f	; 63
     598:	0f 92       	push	r0
     59a:	11 24       	eor	r1, r1
     59c:	0b b6       	in	r0, 0x3b	; 59
     59e:	0f 92       	push	r0
     5a0:	2f 93       	push	r18
     5a2:	3f 93       	push	r19
     5a4:	4f 93       	push	r20
     5a6:	5f 93       	push	r21
     5a8:	6f 93       	push	r22
     5aa:	7f 93       	push	r23
     5ac:	8f 93       	push	r24
     5ae:	9f 93       	push	r25
     5b0:	af 93       	push	r26
     5b2:	bf 93       	push	r27
     5b4:	cf 93       	push	r28
     5b6:	df 93       	push	r29
     5b8:	ef 93       	push	r30
     5ba:	ff 93       	push	r31
	//accumulator = accumulator + increment ;
	//highbyte = (char)(accumulator >> 24) ;
	
	// output the wavefrom sample
	//OCR0A = 128 + ((sineTable[highbyte] * rampTable[rampCount])>>7) ;
	changed = TRUE;
     5bc:	81 e0       	ldi	r24, 0x01	; 1
     5be:	80 93 0e 04 	sts	0x040E, r24


	OCR0A = 128 + 
	   ( (
	   	   (sineTable[(accumulator_a >> 24)] + sineTable[(accumulator_b >> 24)]) * rampTable[rampCount]
     5c2:	40 91 06 04 	lds	r20, 0x0406
     5c6:	50 91 07 04 	lds	r21, 0x0407
     5ca:	60 91 08 04 	lds	r22, 0x0408
     5ce:	70 91 09 04 	lds	r23, 0x0409
     5d2:	80 91 11 04 	lds	r24, 0x0411
     5d6:	90 91 12 04 	lds	r25, 0x0412
     5da:	a0 91 13 04 	lds	r26, 0x0413
     5de:	b0 91 14 04 	lds	r27, 0x0414
     5e2:	e0 91 0f 04 	lds	r30, 0x040F
     5e6:	f0 91 10 04 	lds	r31, 0x0410
     5ea:	47 2f       	mov	r20, r23
     5ec:	55 27       	eor	r21, r21
     5ee:	66 27       	eor	r22, r22
     5f0:	77 27       	eor	r23, r23
     5f2:	ea 01       	movw	r28, r20
     5f4:	ca 5f       	subi	r28, 0xFA	; 250
     5f6:	dc 4f       	sbci	r29, 0xFC	; 252
     5f8:	28 81       	ld	r18, Y
     5fa:	8b 2f       	mov	r24, r27
     5fc:	99 27       	eor	r25, r25
     5fe:	aa 27       	eor	r26, r26
     600:	bb 27       	eor	r27, r27
     602:	dc 01       	movw	r26, r24
     604:	aa 5f       	subi	r26, 0xFA	; 250
     606:	bc 4f       	sbci	r27, 0xFC	; 252
     608:	8c 91       	ld	r24, X
     60a:	99 27       	eor	r25, r25
     60c:	87 fd       	sbrc	r24, 7
     60e:	90 95       	com	r25
     610:	82 0f       	add	r24, r18
     612:	91 1d       	adc	r25, r1
     614:	27 fd       	sbrc	r18, 7
     616:	9a 95       	dec	r25
     618:	e3 50       	subi	r30, 0x03	; 3
     61a:	fe 4f       	sbci	r31, 0xFE	; 254
     61c:	40 81       	ld	r20, Z
     61e:	48 9f       	mul	r20, r24
     620:	90 01       	movw	r18, r0
     622:	49 9f       	mul	r20, r25
     624:	30 0d       	add	r19, r0
     626:	11 24       	eor	r1, r1
	// output the wavefrom sample
	//OCR0A = 128 + ((sineTable[highbyte] * rampTable[rampCount])>>7) ;
	changed = TRUE;


	OCR0A = 128 + 
     628:	83 2f       	mov	r24, r19
     62a:	80 58       	subi	r24, 0x80	; 128
     62c:	87 bd       	out	0x27, r24	; 39
	   ( (
	   	   (sineTable[(accumulator_a >> 24)] + sineTable[(accumulator_b >> 24)]) * rampTable[rampCount]
	   	 ) >> 8
	   );
	accumulator_a += increment_a;
     62e:	80 91 06 04 	lds	r24, 0x0406
     632:	90 91 07 04 	lds	r25, 0x0407
     636:	a0 91 08 04 	lds	r26, 0x0408
     63a:	b0 91 09 04 	lds	r27, 0x0409
     63e:	40 91 f9 01 	lds	r20, 0x01F9
     642:	50 91 fa 01 	lds	r21, 0x01FA
     646:	60 91 fb 01 	lds	r22, 0x01FB
     64a:	70 91 fc 01 	lds	r23, 0x01FC
     64e:	84 0f       	add	r24, r20
     650:	95 1f       	adc	r25, r21
     652:	a6 1f       	adc	r26, r22
     654:	b7 1f       	adc	r27, r23
     656:	80 93 06 04 	sts	0x0406, r24
     65a:	90 93 07 04 	sts	0x0407, r25
     65e:	a0 93 08 04 	sts	0x0408, r26
     662:	b0 93 09 04 	sts	0x0409, r27
	accumulator_b += increment_b;
     666:	80 91 11 04 	lds	r24, 0x0411
     66a:	90 91 12 04 	lds	r25, 0x0412
     66e:	a0 91 13 04 	lds	r26, 0x0413
     672:	b0 91 14 04 	lds	r27, 0x0414
     676:	40 91 1a 04 	lds	r20, 0x041A
     67a:	50 91 1b 04 	lds	r21, 0x041B
     67e:	60 91 1c 04 	lds	r22, 0x041C
     682:	70 91 1d 04 	lds	r23, 0x041D
     686:	84 0f       	add	r24, r20
     688:	95 1f       	adc	r25, r21
     68a:	a6 1f       	adc	r26, r22
     68c:	b7 1f       	adc	r27, r23
     68e:	80 93 11 04 	sts	0x0411, r24
     692:	90 93 12 04 	sts	0x0412, r25
     696:	a0 93 13 04 	sts	0x0413, r26
     69a:	b0 93 14 04 	sts	0x0414, r27
	//generates a 1 ms timebase
	// Used for keeping track of time.
	if( count <= 0){
     69e:	80 91 f6 01 	lds	r24, 0x01F6
     6a2:	81 11       	cpse	r24, r1
     6a4:	0c c0       	rjmp	.+24     	; 0x6be <__vector_18+0x12c>
		count = COUNTMS;
     6a6:	8e e3       	ldi	r24, 0x3E	; 62
     6a8:	80 93 f6 01 	sts	0x01F6, r24
		time1++;
     6ac:	80 91 ef 01 	lds	r24, 0x01EF
     6b0:	90 91 f0 01 	lds	r25, 0x01F0
     6b4:	01 96       	adiw	r24, 0x01	; 1
     6b6:	90 93 f0 01 	sts	0x01F0, r25
     6ba:	80 93 ef 01 	sts	0x01EF, r24
		if( is_timed_playing && dds_duration > 0){
			dds_duration--;
		}
		*/
	}
	count--;	
     6be:	80 91 f6 01 	lds	r24, 0x01F6
     6c2:	81 50       	subi	r24, 0x01	; 1
     6c4:	80 93 f6 01 	sts	0x01F6, r24
}
     6c8:	ff 91       	pop	r31
     6ca:	ef 91       	pop	r30
     6cc:	df 91       	pop	r29
     6ce:	cf 91       	pop	r28
     6d0:	bf 91       	pop	r27
     6d2:	af 91       	pop	r26
     6d4:	9f 91       	pop	r25
     6d6:	8f 91       	pop	r24
     6d8:	7f 91       	pop	r23
     6da:	6f 91       	pop	r22
     6dc:	5f 91       	pop	r21
     6de:	4f 91       	pop	r20
     6e0:	3f 91       	pop	r19
     6e2:	2f 91       	pop	r18
     6e4:	0f 90       	pop	r0
     6e6:	0b be       	out	0x3b, r0	; 59
     6e8:	0f 90       	pop	r0
     6ea:	0f be       	out	0x3f, r0	; 63
     6ec:	0f 90       	pop	r0
     6ee:	1f 90       	pop	r1
     6f0:	18 95       	reti

000006f2 <init_dtmf>:


void init_dtmf(){
     6f2:	ef 92       	push	r14
     6f4:	ff 92       	push	r15
     6f6:	0f 93       	push	r16
     6f8:	1f 93       	push	r17
     6fa:	cf 93       	push	r28
     6fc:	df 93       	push	r29
	DDRB = 0;
     6fe:	14 b8       	out	0x04, r1	; 4
	DDRB |= OUTPUT_PIN;
     700:	23 9a       	sbi	0x04, 3	; 4
     702:	56 e0       	ldi	r21, 0x06	; 6
     704:	e5 2e       	mov	r14, r21
     706:	53 e0       	ldi	r21, 0x03	; 3
     708:	f5 2e       	mov	r15, r21
     70a:	0d ef       	ldi	r16, 0xFD	; 253
     70c:	11 e0       	ldi	r17, 0x01	; 1
	int i;
	for (i=0; i<256; i++){
     70e:	c0 e0       	ldi	r28, 0x00	; 0
     710:	d0 e0       	ldi	r29, 0x00	; 0
		sineTable[i] = (char)(127.0 * sin(6.283*((float)i)/256.0)) ;
     712:	be 01       	movw	r22, r28
     714:	88 27       	eor	r24, r24
     716:	77 fd       	sbrc	r23, 7
     718:	80 95       	com	r24
     71a:	98 2f       	mov	r25, r24
     71c:	0e 94 a1 07 	call	0xf42	; 0xf42 <__floatsisf>
     720:	26 e5       	ldi	r18, 0x56	; 86
     722:	3e e0       	ldi	r19, 0x0E	; 14
     724:	49 ec       	ldi	r20, 0xC9	; 201
     726:	50 e4       	ldi	r21, 0x40	; 64
     728:	0e 94 8d 06 	call	0xd1a	; 0xd1a <__mulsf3>
     72c:	20 e0       	ldi	r18, 0x00	; 0
     72e:	30 e0       	ldi	r19, 0x00	; 0
     730:	40 e8       	ldi	r20, 0x80	; 128
     732:	5b e3       	ldi	r21, 0x3B	; 59
     734:	0e 94 8d 06 	call	0xd1a	; 0xd1a <__mulsf3>
     738:	0e 94 98 0a 	call	0x1530	; 0x1530 <sin>
     73c:	20 e0       	ldi	r18, 0x00	; 0
     73e:	30 e0       	ldi	r19, 0x00	; 0
     740:	4e ef       	ldi	r20, 0xFE	; 254
     742:	52 e4       	ldi	r21, 0x42	; 66
     744:	0e 94 8d 06 	call	0xd1a	; 0xd1a <__mulsf3>
     748:	0e 94 a8 04 	call	0x950	; 0x950 <__fixunssfsi>
     74c:	f7 01       	movw	r30, r14
     74e:	61 93       	st	Z+, r22
     750:	7f 01       	movw	r14, r30
		// the following table needs 
		// rampTable[0]=0 and rampTable[255]=127
		rampTable[i] = i>>1 ;
     752:	ce 01       	movw	r24, r28
     754:	95 95       	asr	r25
     756:	87 95       	ror	r24
     758:	f8 01       	movw	r30, r16
     75a:	81 93       	st	Z+, r24
     75c:	8f 01       	movw	r16, r30

void init_dtmf(){
	DDRB = 0;
	DDRB |= OUTPUT_PIN;
	int i;
	for (i=0; i<256; i++){
     75e:	21 96       	adiw	r28, 0x01	; 1
     760:	c1 15       	cp	r28, r1
     762:	f1 e0       	ldi	r31, 0x01	; 1
     764:	df 07       	cpc	r29, r31
     766:	a9 f6       	brne	.-86     	; 0x712 <init_dtmf+0x20>
		sineTable[i] = (char)(127.0 * sin(6.283*((float)i)/256.0)) ;
		// the following table needs 
		// rampTable[0]=0 and rampTable[255]=127
		rampTable[i] = i>>1 ;
	}
	time = 0;
     768:	10 92 f2 01 	sts	0x01F2, r1
     76c:	10 92 f1 01 	sts	0x01F1, r1

	// TCCR0B = 0;
	// //set divider to 1, run T0 at 16 MHz 
	// TCCR0B |= T0_CS00;
	TCCR0B = 1;
     770:	81 e0       	ldi	r24, 0x01	; 1
     772:	85 bd       	out	0x25, r24	; 37
	TIMSK0 = 0;
     774:	10 92 6e 00 	sts	0x006E, r1
	TIMSK0 |= TIMER0_OVERFLOW_INTERRUPT_ENABLE;
     778:	80 91 6e 00 	lds	r24, 0x006E
     77c:	81 60       	ori	r24, 0x01	; 1
     77e:	80 93 6e 00 	sts	0x006E, r24
	//turn on fast PWM and OC0A - output 
	TCCR0A = 0;
     782:	14 bc       	out	0x24, r1	; 36
	TCCR0A = (1<<COM0A0) | (1<<COM0A1) | (1<<WGM00) | (1<<WGM01) ; 
     784:	83 ec       	ldi	r24, 0xC3	; 195
     786:	84 bd       	out	0x24, r24	; 36

	//TCCR0A |= WAVE_GEN_M00 + WAVE_GEN_M01 + COMPARE_MATCH_OUTPUT_A0 + COMPARE_MATCH_OUTPUT_A1; 
	OCR0A = 128;
     788:	80 e8       	ldi	r24, 0x80	; 128
     78a:	87 bd       	out	0x27, r24	; 39
	//increment = INCREMENT_941;
	//increment_a = INCREMENT_941;
	//increment_b = INCREMENT_941;
	sei();
     78c:	78 94       	sei
}
     78e:	df 91       	pop	r29
     790:	cf 91       	pop	r28
     792:	1f 91       	pop	r17
     794:	0f 91       	pop	r16
     796:	ff 90       	pop	r15
     798:	ef 90       	pop	r14
     79a:	08 95       	ret

0000079c <play>:

//plays fA and fB for a duration of duration ms
void play(int fA, int fB){
	//if( !is_playing ){
		//is_playing = TRUE;
		switch( fA){
     79c:	89 3b       	cpi	r24, 0xB9	; 185
     79e:	24 e0       	ldi	r18, 0x04	; 4
     7a0:	92 07       	cpc	r25, r18
     7a2:	89 f0       	breq	.+34     	; 0x7c6 <play+0x2a>
     7a4:	44 f4       	brge	.+16     	; 0x7b6 <play+0x1a>
     7a6:	89 3b       	cpi	r24, 0xB9	; 185
     7a8:	22 e0       	ldi	r18, 0x02	; 2
     7aa:	92 07       	cpc	r25, r18
     7ac:	19 f1       	breq	.+70     	; 0x7f4 <play+0x58>
     7ae:	8d 3a       	cpi	r24, 0xAD	; 173
     7b0:	93 40       	sbci	r25, 0x03	; 3
     7b2:	51 f5       	brne	.+84     	; 0x808 <play+0x6c>
     7b4:	24 c0       	rjmp	.+72     	; 0x7fe <play+0x62>
     7b6:	88 33       	cpi	r24, 0x38	; 56
     7b8:	25 e0       	ldi	r18, 0x05	; 5
     7ba:	92 07       	cpc	r25, r18
     7bc:	49 f0       	breq	.+18     	; 0x7d0 <play+0x34>
     7be:	85 3c       	cpi	r24, 0xC5	; 197
     7c0:	95 40       	sbci	r25, 0x05	; 5
     7c2:	11 f5       	brne	.+68     	; 0x808 <play+0x6c>
     7c4:	12 c0       	rjmp	.+36     	; 0x7ea <play+0x4e>
			case 1209: increment_a = INCREMENT_1209; break;
     7c6:	87 e3       	ldi	r24, 0x37	; 55
     7c8:	98 eb       	ldi	r25, 0xB8	; 184
     7ca:	a3 ef       	ldi	r26, 0xF3	; 243
     7cc:	b4 e0       	ldi	r27, 0x04	; 4
     7ce:	04 c0       	rjmp	.+8      	; 0x7d8 <play+0x3c>
			case 1336: increment_a = INCREMENT_1336; break;
     7d0:	88 e4       	ldi	r24, 0x48	; 72
     7d2:	93 ee       	ldi	r25, 0xE3	; 227
     7d4:	a8 e7       	ldi	r26, 0x78	; 120
     7d6:	b5 e0       	ldi	r27, 0x05	; 5
     7d8:	80 93 f9 01 	sts	0x01F9, r24
     7dc:	90 93 fa 01 	sts	0x01FA, r25
     7e0:	a0 93 fb 01 	sts	0x01FB, r26
     7e4:	b0 93 fc 01 	sts	0x01FC, r27
     7e8:	17 c0       	rjmp	.+46     	; 0x818 <play+0x7c>
			case 1477: increment_a = INCREMENT_1477; break;
     7ea:	8b e6       	ldi	r24, 0x6B	; 107
     7ec:	9c eb       	ldi	r25, 0xBC	; 188
     7ee:	ac e0       	ldi	r26, 0x0C	; 12
     7f0:	b6 e0       	ldi	r27, 0x06	; 6
     7f2:	f2 cf       	rjmp	.-28     	; 0x7d8 <play+0x3c>
			case 697:  increment_a = INCREMENT_697; break;
     7f4:	87 e3       	ldi	r24, 0x37	; 55
     7f6:	9a ed       	ldi	r25, 0xDA	; 218
     7f8:	aa ed       	ldi	r26, 0xDA	; 218
     7fa:	b2 e0       	ldi	r27, 0x02	; 2
     7fc:	ed cf       	rjmp	.-38     	; 0x7d8 <play+0x3c>
			case 941: increment_a = INCREMENT_941; break;
     7fe:	83 e0       	ldi	r24, 0x03	; 3
     800:	94 eb       	ldi	r25, 0xB4	; 180
     802:	aa ed       	ldi	r26, 0xDA	; 218
     804:	b3 e0       	ldi	r27, 0x03	; 3
     806:	e8 cf       	rjmp	.-48     	; 0x7d8 <play+0x3c>
			default: increment_a = 0; break;
     808:	10 92 f9 01 	sts	0x01F9, r1
     80c:	10 92 fa 01 	sts	0x01FA, r1
     810:	10 92 fb 01 	sts	0x01FB, r1
     814:	10 92 fc 01 	sts	0x01FC, r1
		}

		switch ( fB) {
     818:	64 35       	cpi	r22, 0x54	; 84
     81a:	83 e0       	ldi	r24, 0x03	; 3
     81c:	78 07       	cpc	r23, r24
     81e:	d9 f0       	breq	.+54     	; 0x856 <play+0xba>
     820:	44 f4       	brge	.+16     	; 0x832 <play+0x96>
     822:	69 3b       	cpi	r22, 0xB9	; 185
     824:	82 e0       	ldi	r24, 0x02	; 2
     826:	78 07       	cpc	r23, r24
     828:	61 f0       	breq	.+24     	; 0x842 <play+0xa6>
     82a:	62 30       	cpi	r22, 0x02	; 2
     82c:	73 40       	sbci	r23, 0x03	; 3
     82e:	91 f5       	brne	.+100    	; 0x894 <play+0xf8>
     830:	0d c0       	rjmp	.+26     	; 0x84c <play+0xb0>
     832:	6d 3a       	cpi	r22, 0xAD	; 173
     834:	83 e0       	ldi	r24, 0x03	; 3
     836:	78 07       	cpc	r23, r24
     838:	99 f0       	breq	.+38     	; 0x860 <play+0xc4>
     83a:	69 3b       	cpi	r22, 0xB9	; 185
     83c:	74 40       	sbci	r23, 0x04	; 4
     83e:	51 f5       	brne	.+84     	; 0x894 <play+0xf8>
     840:	1c c0       	rjmp	.+56     	; 0x87a <play+0xde>
			case 697: increment_b = INCREMENT_697; break;
     842:	87 e3       	ldi	r24, 0x37	; 55
     844:	9a ed       	ldi	r25, 0xDA	; 218
     846:	aa ed       	ldi	r26, 0xDA	; 218
     848:	b2 e0       	ldi	r27, 0x02	; 2
     84a:	0e c0       	rjmp	.+28     	; 0x868 <play+0xcc>
			case 770: increment_b = INCREMENT_770; break;
     84c:	8e ed       	ldi	r24, 0xDE	; 222
     84e:	95 e6       	ldi	r25, 0x65	; 101
     850:	a7 e2       	ldi	r26, 0x27	; 39
     852:	b3 e0       	ldi	r27, 0x03	; 3
     854:	09 c0       	rjmp	.+18     	; 0x868 <play+0xcc>
			case 852: increment_b = INCREMENT_852; break;
     856:	8c e6       	ldi	r24, 0x6C	; 108
     858:	91 e6       	ldi	r25, 0x61	; 97
     85a:	ad e7       	ldi	r26, 0x7D	; 125
     85c:	b3 e0       	ldi	r27, 0x03	; 3
     85e:	04 c0       	rjmp	.+8      	; 0x868 <play+0xcc>
			case 941: increment_b = INCREMENT_941; break;
     860:	83 e0       	ldi	r24, 0x03	; 3
     862:	94 eb       	ldi	r25, 0xB4	; 180
     864:	aa ed       	ldi	r26, 0xDA	; 218
     866:	b3 e0       	ldi	r27, 0x03	; 3
     868:	80 93 1a 04 	sts	0x041A, r24
     86c:	90 93 1b 04 	sts	0x041B, r25
     870:	a0 93 1c 04 	sts	0x041C, r26
     874:	b0 93 1d 04 	sts	0x041D, r27
     878:	08 95       	ret
			case 1209: increment_a = INCREMENT_1209; break;
     87a:	87 e3       	ldi	r24, 0x37	; 55
     87c:	98 eb       	ldi	r25, 0xB8	; 184
     87e:	a3 ef       	ldi	r26, 0xF3	; 243
     880:	b4 e0       	ldi	r27, 0x04	; 4
     882:	80 93 f9 01 	sts	0x01F9, r24
     886:	90 93 fa 01 	sts	0x01FA, r25
     88a:	a0 93 fb 01 	sts	0x01FB, r26
     88e:	b0 93 fc 01 	sts	0x01FC, r27
     892:	08 95       	ret
			default: increment_b = 0; break;
     894:	10 92 1a 04 	sts	0x041A, r1
     898:	10 92 1b 04 	sts	0x041B, r1
     89c:	10 92 1c 04 	sts	0x041C, r1
     8a0:	10 92 1d 04 	sts	0x041D, r1
     8a4:	08 95       	ret

000008a6 <timed_play>:
		//OCR0A = 128;	
	//}
}

void timed_play(int fA, int fB, int duration){
	dds_duration = duration;
     8a6:	50 93 ee 01 	sts	0x01EE, r21
     8aa:	40 93 ed 01 	sts	0x01ED, r20
	play(fA, fB);
     8ae:	0e 94 ce 03 	call	0x79c	; 0x79c <play>
	is_playing=TRUE;
     8b2:	81 e0       	ldi	r24, 0x01	; 1
     8b4:	80 93 f8 01 	sts	0x01F8, r24
     8b8:	08 95       	ret

000008ba <stop_playing>:
}

void stop_playing(){
	is_playing = FALSE;
     8ba:	10 92 f8 01 	sts	0x01F8, r1
	rampCount = 0;
     8be:	10 92 10 04 	sts	0x0410, r1
     8c2:	10 92 0f 04 	sts	0x040F, r1
	increment_a = increment_b = 0;
     8c6:	10 92 1a 04 	sts	0x041A, r1
     8ca:	10 92 1b 04 	sts	0x041B, r1
     8ce:	10 92 1c 04 	sts	0x041C, r1
     8d2:	10 92 1d 04 	sts	0x041D, r1
     8d6:	10 92 f9 01 	sts	0x01F9, r1
     8da:	10 92 fa 01 	sts	0x01FA, r1
     8de:	10 92 fb 01 	sts	0x01FB, r1
     8e2:	10 92 fc 01 	sts	0x01FC, r1
	accumulator_a = accumulator_b = 0;
     8e6:	10 92 11 04 	sts	0x0411, r1
     8ea:	10 92 12 04 	sts	0x0412, r1
     8ee:	10 92 13 04 	sts	0x0413, r1
     8f2:	10 92 14 04 	sts	0x0414, r1
     8f6:	10 92 06 04 	sts	0x0406, r1
     8fa:	10 92 07 04 	sts	0x0407, r1
     8fe:	10 92 08 04 	sts	0x0408, r1
     902:	10 92 09 04 	sts	0x0409, r1
     906:	08 95       	ret

00000908 <update_status_variables>:
}


void update_status_variables(){
	if(changed == TRUE){
     908:	80 91 0e 04 	lds	r24, 0x040E
     90c:	81 30       	cpi	r24, 0x01	; 1
     90e:	f9 f4       	brne	.+62     	; 0x94e <update_status_variables+0x46>
		changed = FALSE;
     910:	10 92 0e 04 	sts	0x040E, r1

		if (PushState == Pushed && rampCount < 255) {
     914:	80 91 f7 01 	lds	r24, 0x01F7
     918:	83 30       	cpi	r24, 0x03	; 3
     91a:	41 f4       	brne	.+16     	; 0x92c <update_status_variables+0x24>
     91c:	80 91 0f 04 	lds	r24, 0x040F
     920:	90 91 10 04 	lds	r25, 0x0410
     924:	8f 3f       	cpi	r24, 0xFF	; 255
     926:	91 05       	cpc	r25, r1
     928:	90 f4       	brcc	.+36     	; 0x94e <update_status_variables+0x46>
     92a:	08 c0       	rjmp	.+16     	; 0x93c <update_status_variables+0x34>
			rampCount++;
		}
		if (PushState == NoPush && rampCount > 0 ) {
     92c:	81 30       	cpi	r24, 0x01	; 1
     92e:	79 f4       	brne	.+30     	; 0x94e <update_status_variables+0x46>
     930:	80 91 0f 04 	lds	r24, 0x040F
     934:	90 91 10 04 	lds	r25, 0x0410
     938:	89 2b       	or	r24, r25
     93a:	49 f0       	breq	.+18     	; 0x94e <update_status_variables+0x46>
			rampCount++;
     93c:	80 91 0f 04 	lds	r24, 0x040F
     940:	90 91 10 04 	lds	r25, 0x0410
     944:	01 96       	adiw	r24, 0x01	; 1
     946:	90 93 10 04 	sts	0x0410, r25
     94a:	80 93 0f 04 	sts	0x040F, r24
     94e:	08 95       	ret

00000950 <__fixunssfsi>:
     950:	cf 92       	push	r12
     952:	df 92       	push	r13
     954:	ef 92       	push	r14
     956:	ff 92       	push	r15
     958:	0f 93       	push	r16
     95a:	1f 93       	push	r17
     95c:	6b 01       	movw	r12, r22
     95e:	7c 01       	movw	r14, r24
     960:	20 e0       	ldi	r18, 0x00	; 0
     962:	30 e0       	ldi	r19, 0x00	; 0
     964:	40 e0       	ldi	r20, 0x00	; 0
     966:	5f e4       	ldi	r21, 0x4F	; 79
     968:	0e 94 72 07 	call	0xee4	; 0xee4 <__gesf2>
     96c:	87 fd       	sbrc	r24, 7
     96e:	0e c0       	rjmp	.+28     	; 0x98c <__fixunssfsi+0x3c>
     970:	20 e0       	ldi	r18, 0x00	; 0
     972:	30 e0       	ldi	r19, 0x00	; 0
     974:	40 e0       	ldi	r20, 0x00	; 0
     976:	5f e4       	ldi	r21, 0x4F	; 79
     978:	c7 01       	movw	r24, r14
     97a:	b6 01       	movw	r22, r12
     97c:	0e 94 5d 06 	call	0xcba	; 0xcba <__subsf3>
     980:	0e 94 fd 07 	call	0xffa	; 0xffa <__fixsfsi>
     984:	8b 01       	movw	r16, r22
     986:	9c 01       	movw	r18, r24
     988:	30 58       	subi	r19, 0x80	; 128
     98a:	06 c0       	rjmp	.+12     	; 0x998 <__fixunssfsi+0x48>
     98c:	c7 01       	movw	r24, r14
     98e:	b6 01       	movw	r22, r12
     990:	0e 94 fd 07 	call	0xffa	; 0xffa <__fixsfsi>
     994:	8b 01       	movw	r16, r22
     996:	9c 01       	movw	r18, r24
     998:	b8 01       	movw	r22, r16
     99a:	c9 01       	movw	r24, r18
     99c:	1f 91       	pop	r17
     99e:	0f 91       	pop	r16
     9a0:	ff 90       	pop	r15
     9a2:	ef 90       	pop	r14
     9a4:	df 90       	pop	r13
     9a6:	cf 90       	pop	r12
     9a8:	08 95       	ret

000009aa <_fpadd_parts>:
     9aa:	a4 e0       	ldi	r26, 0x04	; 4
     9ac:	b0 e0       	ldi	r27, 0x00	; 0
     9ae:	eb ed       	ldi	r30, 0xDB	; 219
     9b0:	f4 e0       	ldi	r31, 0x04	; 4
     9b2:	0c 94 28 0a 	jmp	0x1450	; 0x1450 <__prologue_saves__+0x4>
     9b6:	7c 01       	movw	r14, r24
     9b8:	6a 01       	movw	r12, r20
     9ba:	fc 01       	movw	r30, r24
     9bc:	80 81       	ld	r24, Z
     9be:	82 30       	cpi	r24, 0x02	; 2
     9c0:	08 f4       	brcc	.+2      	; 0x9c4 <_fpadd_parts+0x1a>
     9c2:	4a c1       	rjmp	.+660    	; 0xc58 <_fpadd_parts+0x2ae>
     9c4:	fb 01       	movw	r30, r22
     9c6:	90 81       	ld	r25, Z
     9c8:	92 30       	cpi	r25, 0x02	; 2
     9ca:	08 f4       	brcc	.+2      	; 0x9ce <_fpadd_parts+0x24>
     9cc:	42 c1       	rjmp	.+644    	; 0xc52 <_fpadd_parts+0x2a8>
     9ce:	84 30       	cpi	r24, 0x04	; 4
     9d0:	79 f4       	brne	.+30     	; 0x9f0 <_fpadd_parts+0x46>
     9d2:	94 30       	cpi	r25, 0x04	; 4
     9d4:	09 f0       	breq	.+2      	; 0x9d8 <_fpadd_parts+0x2e>
     9d6:	40 c1       	rjmp	.+640    	; 0xc58 <_fpadd_parts+0x2ae>
     9d8:	f7 01       	movw	r30, r14
     9da:	91 81       	ldd	r25, Z+1	; 0x01
     9dc:	fb 01       	movw	r30, r22
     9de:	81 81       	ldd	r24, Z+1	; 0x01
     9e0:	98 17       	cp	r25, r24
     9e2:	09 f4       	brne	.+2      	; 0x9e6 <_fpadd_parts+0x3c>
     9e4:	39 c1       	rjmp	.+626    	; 0xc58 <_fpadd_parts+0x2ae>
     9e6:	ae e4       	ldi	r26, 0x4E	; 78
     9e8:	ea 2e       	mov	r14, r26
     9ea:	a1 e0       	ldi	r26, 0x01	; 1
     9ec:	fa 2e       	mov	r15, r26
     9ee:	34 c1       	rjmp	.+616    	; 0xc58 <_fpadd_parts+0x2ae>
     9f0:	94 30       	cpi	r25, 0x04	; 4
     9f2:	09 f4       	brne	.+2      	; 0x9f6 <_fpadd_parts+0x4c>
     9f4:	2e c1       	rjmp	.+604    	; 0xc52 <_fpadd_parts+0x2a8>
     9f6:	92 30       	cpi	r25, 0x02	; 2
     9f8:	91 f4       	brne	.+36     	; 0xa1e <_fpadd_parts+0x74>
     9fa:	82 30       	cpi	r24, 0x02	; 2
     9fc:	09 f0       	breq	.+2      	; 0xa00 <_fpadd_parts+0x56>
     9fe:	2c c1       	rjmp	.+600    	; 0xc58 <_fpadd_parts+0x2ae>
     a00:	88 e0       	ldi	r24, 0x08	; 8
     a02:	f7 01       	movw	r30, r14
     a04:	da 01       	movw	r26, r20
     a06:	01 90       	ld	r0, Z+
     a08:	0d 92       	st	X+, r0
     a0a:	8a 95       	dec	r24
     a0c:	e1 f7       	brne	.-8      	; 0xa06 <_fpadd_parts+0x5c>
     a0e:	fb 01       	movw	r30, r22
     a10:	81 81       	ldd	r24, Z+1	; 0x01
     a12:	f7 01       	movw	r30, r14
     a14:	91 81       	ldd	r25, Z+1	; 0x01
     a16:	89 23       	and	r24, r25
     a18:	fa 01       	movw	r30, r20
     a1a:	81 83       	std	Z+1, r24	; 0x01
     a1c:	1c c1       	rjmp	.+568    	; 0xc56 <_fpadd_parts+0x2ac>
     a1e:	82 30       	cpi	r24, 0x02	; 2
     a20:	09 f4       	brne	.+2      	; 0xa24 <_fpadd_parts+0x7a>
     a22:	17 c1       	rjmp	.+558    	; 0xc52 <_fpadd_parts+0x2a8>
     a24:	f7 01       	movw	r30, r14
     a26:	82 81       	ldd	r24, Z+2	; 0x02
     a28:	93 81       	ldd	r25, Z+3	; 0x03
     a2a:	fb 01       	movw	r30, r22
     a2c:	a2 81       	ldd	r26, Z+2	; 0x02
     a2e:	b3 81       	ldd	r27, Z+3	; 0x03
     a30:	f7 01       	movw	r30, r14
     a32:	04 81       	ldd	r16, Z+4	; 0x04
     a34:	15 81       	ldd	r17, Z+5	; 0x05
     a36:	26 81       	ldd	r18, Z+6	; 0x06
     a38:	37 81       	ldd	r19, Z+7	; 0x07
     a3a:	fb 01       	movw	r30, r22
     a3c:	84 80       	ldd	r8, Z+4	; 0x04
     a3e:	95 80       	ldd	r9, Z+5	; 0x05
     a40:	a6 80       	ldd	r10, Z+6	; 0x06
     a42:	b7 80       	ldd	r11, Z+7	; 0x07
     a44:	fc 01       	movw	r30, r24
     a46:	ea 1b       	sub	r30, r26
     a48:	fb 0b       	sbc	r31, r27
     a4a:	af 01       	movw	r20, r30
     a4c:	f7 ff       	sbrs	r31, 7
     a4e:	04 c0       	rjmp	.+8      	; 0xa58 <_fpadd_parts+0xae>
     a50:	44 27       	eor	r20, r20
     a52:	55 27       	eor	r21, r21
     a54:	4e 1b       	sub	r20, r30
     a56:	5f 0b       	sbc	r21, r31
     a58:	40 32       	cpi	r20, 0x20	; 32
     a5a:	51 05       	cpc	r21, r1
     a5c:	0c f0       	brlt	.+2      	; 0xa60 <_fpadd_parts+0xb6>
     a5e:	74 c0       	rjmp	.+232    	; 0xb48 <_fpadd_parts+0x19e>
     a60:	1e 16       	cp	r1, r30
     a62:	1f 06       	cpc	r1, r31
     a64:	b4 f5       	brge	.+108    	; 0xad2 <_fpadd_parts+0x128>
     a66:	24 01       	movw	r4, r8
     a68:	35 01       	movw	r6, r10
     a6a:	04 2e       	mov	r0, r20
     a6c:	04 c0       	rjmp	.+8      	; 0xa76 <_fpadd_parts+0xcc>
     a6e:	76 94       	lsr	r7
     a70:	67 94       	ror	r6
     a72:	57 94       	ror	r5
     a74:	47 94       	ror	r4
     a76:	0a 94       	dec	r0
     a78:	d2 f7       	brpl	.-12     	; 0xa6e <_fpadd_parts+0xc4>
     a7a:	49 82       	std	Y+1, r4	; 0x01
     a7c:	5a 82       	std	Y+2, r5	; 0x02
     a7e:	6b 82       	std	Y+3, r6	; 0x03
     a80:	7c 82       	std	Y+4, r7	; 0x04
     a82:	41 2c       	mov	r4, r1
     a84:	51 2c       	mov	r5, r1
     a86:	32 01       	movw	r6, r4
     a88:	43 94       	inc	r4
     a8a:	04 c0       	rjmp	.+8      	; 0xa94 <_fpadd_parts+0xea>
     a8c:	44 0c       	add	r4, r4
     a8e:	55 1c       	adc	r5, r5
     a90:	66 1c       	adc	r6, r6
     a92:	77 1c       	adc	r7, r7
     a94:	4a 95       	dec	r20
     a96:	d2 f7       	brpl	.-12     	; 0xa8c <_fpadd_parts+0xe2>
     a98:	41 e0       	ldi	r20, 0x01	; 1
     a9a:	44 1a       	sub	r4, r20
     a9c:	51 08       	sbc	r5, r1
     a9e:	61 08       	sbc	r6, r1
     aa0:	71 08       	sbc	r7, r1
     aa2:	48 20       	and	r4, r8
     aa4:	59 20       	and	r5, r9
     aa6:	6a 20       	and	r6, r10
     aa8:	7b 20       	and	r7, r11
     aaa:	81 2c       	mov	r8, r1
     aac:	91 2c       	mov	r9, r1
     aae:	54 01       	movw	r10, r8
     ab0:	83 94       	inc	r8
     ab2:	45 28       	or	r4, r5
     ab4:	46 28       	or	r4, r6
     ab6:	47 28       	or	r4, r7
     ab8:	19 f4       	brne	.+6      	; 0xac0 <_fpadd_parts+0x116>
     aba:	81 2c       	mov	r8, r1
     abc:	91 2c       	mov	r9, r1
     abe:	54 01       	movw	r10, r8
     ac0:	49 80       	ldd	r4, Y+1	; 0x01
     ac2:	5a 80       	ldd	r5, Y+2	; 0x02
     ac4:	6b 80       	ldd	r6, Y+3	; 0x03
     ac6:	7c 80       	ldd	r7, Y+4	; 0x04
     ac8:	84 28       	or	r8, r4
     aca:	95 28       	or	r9, r5
     acc:	a6 28       	or	r10, r6
     ace:	b7 28       	or	r11, r7
     ad0:	46 c0       	rjmp	.+140    	; 0xb5e <_fpadd_parts+0x1b4>
     ad2:	ef 2b       	or	r30, r31
     ad4:	09 f4       	brne	.+2      	; 0xad8 <_fpadd_parts+0x12e>
     ad6:	43 c0       	rjmp	.+134    	; 0xb5e <_fpadd_parts+0x1b4>
     ad8:	84 0f       	add	r24, r20
     ada:	95 1f       	adc	r25, r21
     adc:	28 01       	movw	r4, r16
     ade:	39 01       	movw	r6, r18
     ae0:	04 2e       	mov	r0, r20
     ae2:	04 c0       	rjmp	.+8      	; 0xaec <_fpadd_parts+0x142>
     ae4:	76 94       	lsr	r7
     ae6:	67 94       	ror	r6
     ae8:	57 94       	ror	r5
     aea:	47 94       	ror	r4
     aec:	0a 94       	dec	r0
     aee:	d2 f7       	brpl	.-12     	; 0xae4 <_fpadd_parts+0x13a>
     af0:	49 82       	std	Y+1, r4	; 0x01
     af2:	5a 82       	std	Y+2, r5	; 0x02
     af4:	6b 82       	std	Y+3, r6	; 0x03
     af6:	7c 82       	std	Y+4, r7	; 0x04
     af8:	41 2c       	mov	r4, r1
     afa:	51 2c       	mov	r5, r1
     afc:	32 01       	movw	r6, r4
     afe:	43 94       	inc	r4
     b00:	04 c0       	rjmp	.+8      	; 0xb0a <_fpadd_parts+0x160>
     b02:	44 0c       	add	r4, r4
     b04:	55 1c       	adc	r5, r5
     b06:	66 1c       	adc	r6, r6
     b08:	77 1c       	adc	r7, r7
     b0a:	4a 95       	dec	r20
     b0c:	d2 f7       	brpl	.-12     	; 0xb02 <_fpadd_parts+0x158>
     b0e:	41 e0       	ldi	r20, 0x01	; 1
     b10:	44 1a       	sub	r4, r20
     b12:	51 08       	sbc	r5, r1
     b14:	61 08       	sbc	r6, r1
     b16:	71 08       	sbc	r7, r1
     b18:	40 22       	and	r4, r16
     b1a:	51 22       	and	r5, r17
     b1c:	62 22       	and	r6, r18
     b1e:	73 22       	and	r7, r19
     b20:	01 e0       	ldi	r16, 0x01	; 1
     b22:	10 e0       	ldi	r17, 0x00	; 0
     b24:	20 e0       	ldi	r18, 0x00	; 0
     b26:	30 e0       	ldi	r19, 0x00	; 0
     b28:	45 28       	or	r4, r5
     b2a:	46 28       	or	r4, r6
     b2c:	47 28       	or	r4, r7
     b2e:	19 f4       	brne	.+6      	; 0xb36 <_fpadd_parts+0x18c>
     b30:	00 e0       	ldi	r16, 0x00	; 0
     b32:	10 e0       	ldi	r17, 0x00	; 0
     b34:	98 01       	movw	r18, r16
     b36:	49 80       	ldd	r4, Y+1	; 0x01
     b38:	5a 80       	ldd	r5, Y+2	; 0x02
     b3a:	6b 80       	ldd	r6, Y+3	; 0x03
     b3c:	7c 80       	ldd	r7, Y+4	; 0x04
     b3e:	04 29       	or	r16, r4
     b40:	15 29       	or	r17, r5
     b42:	26 29       	or	r18, r6
     b44:	37 29       	or	r19, r7
     b46:	0b c0       	rjmp	.+22     	; 0xb5e <_fpadd_parts+0x1b4>
     b48:	a8 17       	cp	r26, r24
     b4a:	b9 07       	cpc	r27, r25
     b4c:	24 f4       	brge	.+8      	; 0xb56 <_fpadd_parts+0x1ac>
     b4e:	81 2c       	mov	r8, r1
     b50:	91 2c       	mov	r9, r1
     b52:	54 01       	movw	r10, r8
     b54:	04 c0       	rjmp	.+8      	; 0xb5e <_fpadd_parts+0x1b4>
     b56:	cd 01       	movw	r24, r26
     b58:	00 e0       	ldi	r16, 0x00	; 0
     b5a:	10 e0       	ldi	r17, 0x00	; 0
     b5c:	98 01       	movw	r18, r16
     b5e:	f7 01       	movw	r30, r14
     b60:	41 81       	ldd	r20, Z+1	; 0x01
     b62:	fb 01       	movw	r30, r22
     b64:	51 81       	ldd	r21, Z+1	; 0x01
     b66:	45 17       	cp	r20, r21
     b68:	09 f4       	brne	.+2      	; 0xb6c <_fpadd_parts+0x1c2>
     b6a:	46 c0       	rjmp	.+140    	; 0xbf8 <_fpadd_parts+0x24e>
     b6c:	44 23       	and	r20, r20
     b6e:	49 f0       	breq	.+18     	; 0xb82 <_fpadd_parts+0x1d8>
     b70:	24 01       	movw	r4, r8
     b72:	35 01       	movw	r6, r10
     b74:	40 1a       	sub	r4, r16
     b76:	51 0a       	sbc	r5, r17
     b78:	62 0a       	sbc	r6, r18
     b7a:	73 0a       	sbc	r7, r19
     b7c:	93 01       	movw	r18, r6
     b7e:	82 01       	movw	r16, r4
     b80:	04 c0       	rjmp	.+8      	; 0xb8a <_fpadd_parts+0x1e0>
     b82:	08 19       	sub	r16, r8
     b84:	19 09       	sbc	r17, r9
     b86:	2a 09       	sbc	r18, r10
     b88:	3b 09       	sbc	r19, r11
     b8a:	37 fd       	sbrc	r19, 7
     b8c:	05 c0       	rjmp	.+10     	; 0xb98 <_fpadd_parts+0x1ee>
     b8e:	f6 01       	movw	r30, r12
     b90:	11 82       	std	Z+1, r1	; 0x01
     b92:	93 83       	std	Z+3, r25	; 0x03
     b94:	82 83       	std	Z+2, r24	; 0x02
     b96:	0c c0       	rjmp	.+24     	; 0xbb0 <_fpadd_parts+0x206>
     b98:	41 e0       	ldi	r20, 0x01	; 1
     b9a:	f6 01       	movw	r30, r12
     b9c:	41 83       	std	Z+1, r20	; 0x01
     b9e:	93 83       	std	Z+3, r25	; 0x03
     ba0:	82 83       	std	Z+2, r24	; 0x02
     ba2:	30 95       	com	r19
     ba4:	20 95       	com	r18
     ba6:	10 95       	com	r17
     ba8:	01 95       	neg	r16
     baa:	1f 4f       	sbci	r17, 0xFF	; 255
     bac:	2f 4f       	sbci	r18, 0xFF	; 255
     bae:	3f 4f       	sbci	r19, 0xFF	; 255
     bb0:	04 83       	std	Z+4, r16	; 0x04
     bb2:	15 83       	std	Z+5, r17	; 0x05
     bb4:	26 83       	std	Z+6, r18	; 0x06
     bb6:	37 83       	std	Z+7, r19	; 0x07
     bb8:	0e c0       	rjmp	.+28     	; 0xbd6 <_fpadd_parts+0x22c>
     bba:	88 0f       	add	r24, r24
     bbc:	99 1f       	adc	r25, r25
     bbe:	aa 1f       	adc	r26, r26
     bc0:	bb 1f       	adc	r27, r27
     bc2:	f6 01       	movw	r30, r12
     bc4:	84 83       	std	Z+4, r24	; 0x04
     bc6:	95 83       	std	Z+5, r25	; 0x05
     bc8:	a6 83       	std	Z+6, r26	; 0x06
     bca:	b7 83       	std	Z+7, r27	; 0x07
     bcc:	82 81       	ldd	r24, Z+2	; 0x02
     bce:	93 81       	ldd	r25, Z+3	; 0x03
     bd0:	01 97       	sbiw	r24, 0x01	; 1
     bd2:	93 83       	std	Z+3, r25	; 0x03
     bd4:	82 83       	std	Z+2, r24	; 0x02
     bd6:	f6 01       	movw	r30, r12
     bd8:	84 81       	ldd	r24, Z+4	; 0x04
     bda:	95 81       	ldd	r25, Z+5	; 0x05
     bdc:	a6 81       	ldd	r26, Z+6	; 0x06
     bde:	b7 81       	ldd	r27, Z+7	; 0x07
     be0:	ac 01       	movw	r20, r24
     be2:	bd 01       	movw	r22, r26
     be4:	41 50       	subi	r20, 0x01	; 1
     be6:	51 09       	sbc	r21, r1
     be8:	61 09       	sbc	r22, r1
     bea:	71 09       	sbc	r23, r1
     bec:	4f 3f       	cpi	r20, 0xFF	; 255
     bee:	5f 4f       	sbci	r21, 0xFF	; 255
     bf0:	6f 4f       	sbci	r22, 0xFF	; 255
     bf2:	7f 43       	sbci	r23, 0x3F	; 63
     bf4:	10 f3       	brcs	.-60     	; 0xbba <_fpadd_parts+0x210>
     bf6:	0c c0       	rjmp	.+24     	; 0xc10 <_fpadd_parts+0x266>
     bf8:	f6 01       	movw	r30, r12
     bfa:	41 83       	std	Z+1, r20	; 0x01
     bfc:	93 83       	std	Z+3, r25	; 0x03
     bfe:	82 83       	std	Z+2, r24	; 0x02
     c00:	08 0d       	add	r16, r8
     c02:	19 1d       	adc	r17, r9
     c04:	2a 1d       	adc	r18, r10
     c06:	3b 1d       	adc	r19, r11
     c08:	04 83       	std	Z+4, r16	; 0x04
     c0a:	15 83       	std	Z+5, r17	; 0x05
     c0c:	26 83       	std	Z+6, r18	; 0x06
     c0e:	37 83       	std	Z+7, r19	; 0x07
     c10:	83 e0       	ldi	r24, 0x03	; 3
     c12:	f6 01       	movw	r30, r12
     c14:	80 83       	st	Z, r24
     c16:	44 81       	ldd	r20, Z+4	; 0x04
     c18:	55 81       	ldd	r21, Z+5	; 0x05
     c1a:	66 81       	ldd	r22, Z+6	; 0x06
     c1c:	77 81       	ldd	r23, Z+7	; 0x07
     c1e:	77 ff       	sbrs	r23, 7
     c20:	1a c0       	rjmp	.+52     	; 0xc56 <_fpadd_parts+0x2ac>
     c22:	db 01       	movw	r26, r22
     c24:	ca 01       	movw	r24, r20
     c26:	81 70       	andi	r24, 0x01	; 1
     c28:	99 27       	eor	r25, r25
     c2a:	aa 27       	eor	r26, r26
     c2c:	bb 27       	eor	r27, r27
     c2e:	76 95       	lsr	r23
     c30:	67 95       	ror	r22
     c32:	57 95       	ror	r21
     c34:	47 95       	ror	r20
     c36:	84 2b       	or	r24, r20
     c38:	95 2b       	or	r25, r21
     c3a:	a6 2b       	or	r26, r22
     c3c:	b7 2b       	or	r27, r23
     c3e:	84 83       	std	Z+4, r24	; 0x04
     c40:	95 83       	std	Z+5, r25	; 0x05
     c42:	a6 83       	std	Z+6, r26	; 0x06
     c44:	b7 83       	std	Z+7, r27	; 0x07
     c46:	82 81       	ldd	r24, Z+2	; 0x02
     c48:	93 81       	ldd	r25, Z+3	; 0x03
     c4a:	01 96       	adiw	r24, 0x01	; 1
     c4c:	93 83       	std	Z+3, r25	; 0x03
     c4e:	82 83       	std	Z+2, r24	; 0x02
     c50:	02 c0       	rjmp	.+4      	; 0xc56 <_fpadd_parts+0x2ac>
     c52:	7b 01       	movw	r14, r22
     c54:	01 c0       	rjmp	.+2      	; 0xc58 <_fpadd_parts+0x2ae>
     c56:	76 01       	movw	r14, r12
     c58:	c7 01       	movw	r24, r14
     c5a:	24 96       	adiw	r28, 0x04	; 4
     c5c:	e0 e1       	ldi	r30, 0x10	; 16
     c5e:	0c 94 44 0a 	jmp	0x1488	; 0x1488 <__epilogue_restores__+0x4>

00000c62 <__addsf3>:
     c62:	a0 e2       	ldi	r26, 0x20	; 32
     c64:	b0 e0       	ldi	r27, 0x00	; 0
     c66:	e7 e3       	ldi	r30, 0x37	; 55
     c68:	f6 e0       	ldi	r31, 0x06	; 6
     c6a:	0c 94 36 0a 	jmp	0x146c	; 0x146c <__prologue_saves__+0x20>
     c6e:	6d 8f       	std	Y+29, r22	; 0x1d
     c70:	7e 8f       	std	Y+30, r23	; 0x1e
     c72:	8f 8f       	std	Y+31, r24	; 0x1f
     c74:	98 a3       	std	Y+32, r25	; 0x20
     c76:	29 8f       	std	Y+25, r18	; 0x19
     c78:	3a 8f       	std	Y+26, r19	; 0x1a
     c7a:	4b 8f       	std	Y+27, r20	; 0x1b
     c7c:	5c 8f       	std	Y+28, r21	; 0x1c
     c7e:	be 01       	movw	r22, r28
     c80:	6f 5e       	subi	r22, 0xEF	; 239
     c82:	7f 4f       	sbci	r23, 0xFF	; 255
     c84:	ce 01       	movw	r24, r28
     c86:	4d 96       	adiw	r24, 0x1d	; 29
     c88:	0e 94 16 09 	call	0x122c	; 0x122c <__unpack_f>
     c8c:	be 01       	movw	r22, r28
     c8e:	67 5f       	subi	r22, 0xF7	; 247
     c90:	7f 4f       	sbci	r23, 0xFF	; 255
     c92:	ce 01       	movw	r24, r28
     c94:	49 96       	adiw	r24, 0x19	; 25
     c96:	0e 94 16 09 	call	0x122c	; 0x122c <__unpack_f>
     c9a:	ae 01       	movw	r20, r28
     c9c:	4f 5f       	subi	r20, 0xFF	; 255
     c9e:	5f 4f       	sbci	r21, 0xFF	; 255
     ca0:	be 01       	movw	r22, r28
     ca2:	67 5f       	subi	r22, 0xF7	; 247
     ca4:	7f 4f       	sbci	r23, 0xFF	; 255
     ca6:	ce 01       	movw	r24, r28
     ca8:	41 96       	adiw	r24, 0x11	; 17
     caa:	0e 94 d5 04 	call	0x9aa	; 0x9aa <_fpadd_parts>
     cae:	0e 94 4c 08 	call	0x1098	; 0x1098 <__pack_f>
     cb2:	a0 96       	adiw	r28, 0x20	; 32
     cb4:	e2 e0       	ldi	r30, 0x02	; 2
     cb6:	0c 94 52 0a 	jmp	0x14a4	; 0x14a4 <__epilogue_restores__+0x20>

00000cba <__subsf3>:
     cba:	a0 e2       	ldi	r26, 0x20	; 32
     cbc:	b0 e0       	ldi	r27, 0x00	; 0
     cbe:	e3 e6       	ldi	r30, 0x63	; 99
     cc0:	f6 e0       	ldi	r31, 0x06	; 6
     cc2:	0c 94 36 0a 	jmp	0x146c	; 0x146c <__prologue_saves__+0x20>
     cc6:	6d 8f       	std	Y+29, r22	; 0x1d
     cc8:	7e 8f       	std	Y+30, r23	; 0x1e
     cca:	8f 8f       	std	Y+31, r24	; 0x1f
     ccc:	98 a3       	std	Y+32, r25	; 0x20
     cce:	29 8f       	std	Y+25, r18	; 0x19
     cd0:	3a 8f       	std	Y+26, r19	; 0x1a
     cd2:	4b 8f       	std	Y+27, r20	; 0x1b
     cd4:	5c 8f       	std	Y+28, r21	; 0x1c
     cd6:	be 01       	movw	r22, r28
     cd8:	6f 5e       	subi	r22, 0xEF	; 239
     cda:	7f 4f       	sbci	r23, 0xFF	; 255
     cdc:	ce 01       	movw	r24, r28
     cde:	4d 96       	adiw	r24, 0x1d	; 29
     ce0:	0e 94 16 09 	call	0x122c	; 0x122c <__unpack_f>
     ce4:	be 01       	movw	r22, r28
     ce6:	67 5f       	subi	r22, 0xF7	; 247
     ce8:	7f 4f       	sbci	r23, 0xFF	; 255
     cea:	ce 01       	movw	r24, r28
     cec:	49 96       	adiw	r24, 0x19	; 25
     cee:	0e 94 16 09 	call	0x122c	; 0x122c <__unpack_f>
     cf2:	8a 85       	ldd	r24, Y+10	; 0x0a
     cf4:	91 e0       	ldi	r25, 0x01	; 1
     cf6:	89 27       	eor	r24, r25
     cf8:	8a 87       	std	Y+10, r24	; 0x0a
     cfa:	ae 01       	movw	r20, r28
     cfc:	4f 5f       	subi	r20, 0xFF	; 255
     cfe:	5f 4f       	sbci	r21, 0xFF	; 255
     d00:	be 01       	movw	r22, r28
     d02:	67 5f       	subi	r22, 0xF7	; 247
     d04:	7f 4f       	sbci	r23, 0xFF	; 255
     d06:	ce 01       	movw	r24, r28
     d08:	41 96       	adiw	r24, 0x11	; 17
     d0a:	0e 94 d5 04 	call	0x9aa	; 0x9aa <_fpadd_parts>
     d0e:	0e 94 4c 08 	call	0x1098	; 0x1098 <__pack_f>
     d12:	a0 96       	adiw	r28, 0x20	; 32
     d14:	e2 e0       	ldi	r30, 0x02	; 2
     d16:	0c 94 52 0a 	jmp	0x14a4	; 0x14a4 <__epilogue_restores__+0x20>

00000d1a <__mulsf3>:
     d1a:	a0 e2       	ldi	r26, 0x20	; 32
     d1c:	b0 e0       	ldi	r27, 0x00	; 0
     d1e:	e3 e9       	ldi	r30, 0x93	; 147
     d20:	f6 e0       	ldi	r31, 0x06	; 6
     d22:	0c 94 28 0a 	jmp	0x1450	; 0x1450 <__prologue_saves__+0x4>
     d26:	6d 8f       	std	Y+29, r22	; 0x1d
     d28:	7e 8f       	std	Y+30, r23	; 0x1e
     d2a:	8f 8f       	std	Y+31, r24	; 0x1f
     d2c:	98 a3       	std	Y+32, r25	; 0x20
     d2e:	29 8f       	std	Y+25, r18	; 0x19
     d30:	3a 8f       	std	Y+26, r19	; 0x1a
     d32:	4b 8f       	std	Y+27, r20	; 0x1b
     d34:	5c 8f       	std	Y+28, r21	; 0x1c
     d36:	be 01       	movw	r22, r28
     d38:	6f 5e       	subi	r22, 0xEF	; 239
     d3a:	7f 4f       	sbci	r23, 0xFF	; 255
     d3c:	ce 01       	movw	r24, r28
     d3e:	4d 96       	adiw	r24, 0x1d	; 29
     d40:	0e 94 16 09 	call	0x122c	; 0x122c <__unpack_f>
     d44:	be 01       	movw	r22, r28
     d46:	67 5f       	subi	r22, 0xF7	; 247
     d48:	7f 4f       	sbci	r23, 0xFF	; 255
     d4a:	ce 01       	movw	r24, r28
     d4c:	49 96       	adiw	r24, 0x19	; 25
     d4e:	0e 94 16 09 	call	0x122c	; 0x122c <__unpack_f>
     d52:	99 89       	ldd	r25, Y+17	; 0x11
     d54:	92 30       	cpi	r25, 0x02	; 2
     d56:	08 f4       	brcc	.+2      	; 0xd5a <__mulsf3+0x40>
     d58:	12 c0       	rjmp	.+36     	; 0xd7e <__mulsf3+0x64>
     d5a:	89 85       	ldd	r24, Y+9	; 0x09
     d5c:	82 30       	cpi	r24, 0x02	; 2
     d5e:	08 f4       	brcc	.+2      	; 0xd62 <__mulsf3+0x48>
     d60:	1a c0       	rjmp	.+52     	; 0xd96 <__mulsf3+0x7c>
     d62:	94 30       	cpi	r25, 0x04	; 4
     d64:	21 f4       	brne	.+8      	; 0xd6e <__mulsf3+0x54>
     d66:	82 30       	cpi	r24, 0x02	; 2
     d68:	09 f4       	brne	.+2      	; 0xd6c <__mulsf3+0x52>
     d6a:	b4 c0       	rjmp	.+360    	; 0xed4 <__mulsf3+0x1ba>
     d6c:	08 c0       	rjmp	.+16     	; 0xd7e <__mulsf3+0x64>
     d6e:	84 30       	cpi	r24, 0x04	; 4
     d70:	21 f4       	brne	.+8      	; 0xd7a <__mulsf3+0x60>
     d72:	92 30       	cpi	r25, 0x02	; 2
     d74:	09 f4       	brne	.+2      	; 0xd78 <__mulsf3+0x5e>
     d76:	ae c0       	rjmp	.+348    	; 0xed4 <__mulsf3+0x1ba>
     d78:	0e c0       	rjmp	.+28     	; 0xd96 <__mulsf3+0x7c>
     d7a:	92 30       	cpi	r25, 0x02	; 2
     d7c:	51 f4       	brne	.+20     	; 0xd92 <__mulsf3+0x78>
     d7e:	81 e0       	ldi	r24, 0x01	; 1
     d80:	2a 89       	ldd	r18, Y+18	; 0x12
     d82:	9a 85       	ldd	r25, Y+10	; 0x0a
     d84:	29 13       	cpse	r18, r25
     d86:	01 c0       	rjmp	.+2      	; 0xd8a <__mulsf3+0x70>
     d88:	80 e0       	ldi	r24, 0x00	; 0
     d8a:	8a 8b       	std	Y+18, r24	; 0x12
     d8c:	ce 01       	movw	r24, r28
     d8e:	41 96       	adiw	r24, 0x11	; 17
     d90:	a3 c0       	rjmp	.+326    	; 0xed8 <__mulsf3+0x1be>
     d92:	82 30       	cpi	r24, 0x02	; 2
     d94:	51 f4       	brne	.+20     	; 0xdaa <__mulsf3+0x90>
     d96:	81 e0       	ldi	r24, 0x01	; 1
     d98:	2a 89       	ldd	r18, Y+18	; 0x12
     d9a:	9a 85       	ldd	r25, Y+10	; 0x0a
     d9c:	29 13       	cpse	r18, r25
     d9e:	01 c0       	rjmp	.+2      	; 0xda2 <__mulsf3+0x88>
     da0:	80 e0       	ldi	r24, 0x00	; 0
     da2:	8a 87       	std	Y+10, r24	; 0x0a
     da4:	ce 01       	movw	r24, r28
     da6:	09 96       	adiw	r24, 0x09	; 9
     da8:	97 c0       	rjmp	.+302    	; 0xed8 <__mulsf3+0x1be>
     daa:	8d 88       	ldd	r8, Y+21	; 0x15
     dac:	9e 88       	ldd	r9, Y+22	; 0x16
     dae:	af 88       	ldd	r10, Y+23	; 0x17
     db0:	b8 8c       	ldd	r11, Y+24	; 0x18
     db2:	0d 85       	ldd	r16, Y+13	; 0x0d
     db4:	1e 85       	ldd	r17, Y+14	; 0x0e
     db6:	2f 85       	ldd	r18, Y+15	; 0x0f
     db8:	38 89       	ldd	r19, Y+16	; 0x10
     dba:	e0 e2       	ldi	r30, 0x20	; 32
     dbc:	f0 e0       	ldi	r31, 0x00	; 0
     dbe:	80 e0       	ldi	r24, 0x00	; 0
     dc0:	90 e0       	ldi	r25, 0x00	; 0
     dc2:	dc 01       	movw	r26, r24
     dc4:	c1 2c       	mov	r12, r1
     dc6:	d1 2c       	mov	r13, r1
     dc8:	76 01       	movw	r14, r12
     dca:	40 e0       	ldi	r20, 0x00	; 0
     dcc:	50 e0       	ldi	r21, 0x00	; 0
     dce:	ba 01       	movw	r22, r20
     dd0:	80 fe       	sbrs	r8, 0
     dd2:	18 c0       	rjmp	.+48     	; 0xe04 <__mulsf3+0xea>
     dd4:	40 0f       	add	r20, r16
     dd6:	51 1f       	adc	r21, r17
     dd8:	62 1f       	adc	r22, r18
     dda:	73 1f       	adc	r23, r19
     ddc:	8c 0d       	add	r24, r12
     dde:	9d 1d       	adc	r25, r13
     de0:	ae 1d       	adc	r26, r14
     de2:	bf 1d       	adc	r27, r15
     de4:	41 2c       	mov	r4, r1
     de6:	51 2c       	mov	r5, r1
     de8:	32 01       	movw	r6, r4
     dea:	43 94       	inc	r4
     dec:	40 17       	cp	r20, r16
     dee:	51 07       	cpc	r21, r17
     df0:	62 07       	cpc	r22, r18
     df2:	73 07       	cpc	r23, r19
     df4:	18 f0       	brcs	.+6      	; 0xdfc <__mulsf3+0xe2>
     df6:	41 2c       	mov	r4, r1
     df8:	51 2c       	mov	r5, r1
     dfa:	32 01       	movw	r6, r4
     dfc:	84 0d       	add	r24, r4
     dfe:	95 1d       	adc	r25, r5
     e00:	a6 1d       	adc	r26, r6
     e02:	b7 1d       	adc	r27, r7
     e04:	cc 0c       	add	r12, r12
     e06:	dd 1c       	adc	r13, r13
     e08:	ee 1c       	adc	r14, r14
     e0a:	ff 1c       	adc	r15, r15
     e0c:	37 ff       	sbrs	r19, 7
     e0e:	02 c0       	rjmp	.+4      	; 0xe14 <__mulsf3+0xfa>
     e10:	68 94       	set
     e12:	c0 f8       	bld	r12, 0
     e14:	00 0f       	add	r16, r16
     e16:	11 1f       	adc	r17, r17
     e18:	22 1f       	adc	r18, r18
     e1a:	33 1f       	adc	r19, r19
     e1c:	b6 94       	lsr	r11
     e1e:	a7 94       	ror	r10
     e20:	97 94       	ror	r9
     e22:	87 94       	ror	r8
     e24:	31 97       	sbiw	r30, 0x01	; 1
     e26:	a1 f6       	brne	.-88     	; 0xdd0 <__mulsf3+0xb6>
     e28:	2b 89       	ldd	r18, Y+19	; 0x13
     e2a:	3c 89       	ldd	r19, Y+20	; 0x14
     e2c:	eb 85       	ldd	r30, Y+11	; 0x0b
     e2e:	fc 85       	ldd	r31, Y+12	; 0x0c
     e30:	2e 0f       	add	r18, r30
     e32:	3f 1f       	adc	r19, r31
     e34:	2e 5f       	subi	r18, 0xFE	; 254
     e36:	3f 4f       	sbci	r19, 0xFF	; 255
     e38:	3c 83       	std	Y+4, r19	; 0x04
     e3a:	2b 83       	std	Y+3, r18	; 0x03
     e3c:	21 e0       	ldi	r18, 0x01	; 1
     e3e:	ea 89       	ldd	r30, Y+18	; 0x12
     e40:	3a 85       	ldd	r19, Y+10	; 0x0a
     e42:	e3 13       	cpse	r30, r19
     e44:	01 c0       	rjmp	.+2      	; 0xe48 <__mulsf3+0x12e>
     e46:	20 e0       	ldi	r18, 0x00	; 0
     e48:	2a 83       	std	Y+2, r18	; 0x02
     e4a:	eb 81       	ldd	r30, Y+3	; 0x03
     e4c:	fc 81       	ldd	r31, Y+4	; 0x04
     e4e:	0c c0       	rjmp	.+24     	; 0xe68 <__mulsf3+0x14e>
     e50:	80 ff       	sbrs	r24, 0
     e52:	05 c0       	rjmp	.+10     	; 0xe5e <__mulsf3+0x144>
     e54:	76 95       	lsr	r23
     e56:	67 95       	ror	r22
     e58:	57 95       	ror	r21
     e5a:	47 95       	ror	r20
     e5c:	70 68       	ori	r23, 0x80	; 128
     e5e:	b6 95       	lsr	r27
     e60:	a7 95       	ror	r26
     e62:	97 95       	ror	r25
     e64:	87 95       	ror	r24
     e66:	31 96       	adiw	r30, 0x01	; 1
     e68:	b7 fd       	sbrc	r27, 7
     e6a:	f2 cf       	rjmp	.-28     	; 0xe50 <__mulsf3+0x136>
     e6c:	9f 01       	movw	r18, r30
     e6e:	0c c0       	rjmp	.+24     	; 0xe88 <__mulsf3+0x16e>
     e70:	88 0f       	add	r24, r24
     e72:	99 1f       	adc	r25, r25
     e74:	aa 1f       	adc	r26, r26
     e76:	bb 1f       	adc	r27, r27
     e78:	77 fd       	sbrc	r23, 7
     e7a:	81 60       	ori	r24, 0x01	; 1
     e7c:	44 0f       	add	r20, r20
     e7e:	55 1f       	adc	r21, r21
     e80:	66 1f       	adc	r22, r22
     e82:	77 1f       	adc	r23, r23
     e84:	21 50       	subi	r18, 0x01	; 1
     e86:	31 09       	sbc	r19, r1
     e88:	00 97       	sbiw	r24, 0x00	; 0
     e8a:	a1 05       	cpc	r26, r1
     e8c:	e0 e4       	ldi	r30, 0x40	; 64
     e8e:	be 07       	cpc	r27, r30
     e90:	78 f3       	brcs	.-34     	; 0xe70 <__mulsf3+0x156>
     e92:	2b 83       	std	Y+3, r18	; 0x03
     e94:	3c 83       	std	Y+4, r19	; 0x04
     e96:	8c 01       	movw	r16, r24
     e98:	9d 01       	movw	r18, r26
     e9a:	0f 77       	andi	r16, 0x7F	; 127
     e9c:	11 27       	eor	r17, r17
     e9e:	22 27       	eor	r18, r18
     ea0:	33 27       	eor	r19, r19
     ea2:	00 34       	cpi	r16, 0x40	; 64
     ea4:	11 05       	cpc	r17, r1
     ea6:	21 05       	cpc	r18, r1
     ea8:	31 05       	cpc	r19, r1
     eaa:	59 f4       	brne	.+22     	; 0xec2 <__mulsf3+0x1a8>
     eac:	87 fd       	sbrc	r24, 7
     eae:	09 c0       	rjmp	.+18     	; 0xec2 <__mulsf3+0x1a8>
     eb0:	45 2b       	or	r20, r21
     eb2:	46 2b       	or	r20, r22
     eb4:	47 2b       	or	r20, r23
     eb6:	29 f0       	breq	.+10     	; 0xec2 <__mulsf3+0x1a8>
     eb8:	80 5c       	subi	r24, 0xC0	; 192
     eba:	9f 4f       	sbci	r25, 0xFF	; 255
     ebc:	af 4f       	sbci	r26, 0xFF	; 255
     ebe:	bf 4f       	sbci	r27, 0xFF	; 255
     ec0:	80 78       	andi	r24, 0x80	; 128
     ec2:	8d 83       	std	Y+5, r24	; 0x05
     ec4:	9e 83       	std	Y+6, r25	; 0x06
     ec6:	af 83       	std	Y+7, r26	; 0x07
     ec8:	b8 87       	std	Y+8, r27	; 0x08
     eca:	83 e0       	ldi	r24, 0x03	; 3
     ecc:	89 83       	std	Y+1, r24	; 0x01
     ece:	ce 01       	movw	r24, r28
     ed0:	01 96       	adiw	r24, 0x01	; 1
     ed2:	02 c0       	rjmp	.+4      	; 0xed8 <__mulsf3+0x1be>
     ed4:	8e e4       	ldi	r24, 0x4E	; 78
     ed6:	91 e0       	ldi	r25, 0x01	; 1
     ed8:	0e 94 4c 08 	call	0x1098	; 0x1098 <__pack_f>
     edc:	a0 96       	adiw	r28, 0x20	; 32
     ede:	e0 e1       	ldi	r30, 0x10	; 16
     ee0:	0c 94 44 0a 	jmp	0x1488	; 0x1488 <__epilogue_restores__+0x4>

00000ee4 <__gesf2>:
     ee4:	a8 e1       	ldi	r26, 0x18	; 24
     ee6:	b0 e0       	ldi	r27, 0x00	; 0
     ee8:	e8 e7       	ldi	r30, 0x78	; 120
     eea:	f7 e0       	ldi	r31, 0x07	; 7
     eec:	0c 94 36 0a 	jmp	0x146c	; 0x146c <__prologue_saves__+0x20>
     ef0:	6d 8b       	std	Y+21, r22	; 0x15
     ef2:	7e 8b       	std	Y+22, r23	; 0x16
     ef4:	8f 8b       	std	Y+23, r24	; 0x17
     ef6:	98 8f       	std	Y+24, r25	; 0x18
     ef8:	29 8b       	std	Y+17, r18	; 0x11
     efa:	3a 8b       	std	Y+18, r19	; 0x12
     efc:	4b 8b       	std	Y+19, r20	; 0x13
     efe:	5c 8b       	std	Y+20, r21	; 0x14
     f00:	be 01       	movw	r22, r28
     f02:	67 5f       	subi	r22, 0xF7	; 247
     f04:	7f 4f       	sbci	r23, 0xFF	; 255
     f06:	ce 01       	movw	r24, r28
     f08:	45 96       	adiw	r24, 0x15	; 21
     f0a:	0e 94 16 09 	call	0x122c	; 0x122c <__unpack_f>
     f0e:	be 01       	movw	r22, r28
     f10:	6f 5f       	subi	r22, 0xFF	; 255
     f12:	7f 4f       	sbci	r23, 0xFF	; 255
     f14:	ce 01       	movw	r24, r28
     f16:	41 96       	adiw	r24, 0x11	; 17
     f18:	0e 94 16 09 	call	0x122c	; 0x122c <__unpack_f>
     f1c:	89 85       	ldd	r24, Y+9	; 0x09
     f1e:	82 30       	cpi	r24, 0x02	; 2
     f20:	58 f0       	brcs	.+22     	; 0xf38 <__gesf2+0x54>
     f22:	89 81       	ldd	r24, Y+1	; 0x01
     f24:	82 30       	cpi	r24, 0x02	; 2
     f26:	40 f0       	brcs	.+16     	; 0xf38 <__gesf2+0x54>
     f28:	be 01       	movw	r22, r28
     f2a:	6f 5f       	subi	r22, 0xFF	; 255
     f2c:	7f 4f       	sbci	r23, 0xFF	; 255
     f2e:	ce 01       	movw	r24, r28
     f30:	09 96       	adiw	r24, 0x09	; 9
     f32:	0e 94 85 09 	call	0x130a	; 0x130a <__fpcmp_parts_f>
     f36:	01 c0       	rjmp	.+2      	; 0xf3a <__gesf2+0x56>
     f38:	8f ef       	ldi	r24, 0xFF	; 255
     f3a:	68 96       	adiw	r28, 0x18	; 24
     f3c:	e2 e0       	ldi	r30, 0x02	; 2
     f3e:	0c 94 52 0a 	jmp	0x14a4	; 0x14a4 <__epilogue_restores__+0x20>

00000f42 <__floatsisf>:
     f42:	a8 e0       	ldi	r26, 0x08	; 8
     f44:	b0 e0       	ldi	r27, 0x00	; 0
     f46:	e7 ea       	ldi	r30, 0xA7	; 167
     f48:	f7 e0       	ldi	r31, 0x07	; 7
     f4a:	0c 94 34 0a 	jmp	0x1468	; 0x1468 <__prologue_saves__+0x1c>
     f4e:	23 e0       	ldi	r18, 0x03	; 3
     f50:	29 83       	std	Y+1, r18	; 0x01
     f52:	8b 01       	movw	r16, r22
     f54:	9c 01       	movw	r18, r24
     f56:	00 27       	eor	r16, r16
     f58:	37 fd       	sbrc	r19, 7
     f5a:	03 95       	inc	r16
     f5c:	11 27       	eor	r17, r17
     f5e:	22 27       	eor	r18, r18
     f60:	33 27       	eor	r19, r19
     f62:	40 2f       	mov	r20, r16
     f64:	0a 83       	std	Y+2, r16	; 0x02
     f66:	61 15       	cp	r22, r1
     f68:	71 05       	cpc	r23, r1
     f6a:	81 05       	cpc	r24, r1
     f6c:	91 05       	cpc	r25, r1
     f6e:	19 f4       	brne	.+6      	; 0xf76 <__floatsisf+0x34>
     f70:	82 e0       	ldi	r24, 0x02	; 2
     f72:	89 83       	std	Y+1, r24	; 0x01
     f74:	35 c0       	rjmp	.+106    	; 0xfe0 <__floatsisf+0x9e>
     f76:	2e e1       	ldi	r18, 0x1E	; 30
     f78:	30 e0       	ldi	r19, 0x00	; 0
     f7a:	3c 83       	std	Y+4, r19	; 0x04
     f7c:	2b 83       	std	Y+3, r18	; 0x03
     f7e:	44 23       	and	r20, r20
     f80:	71 f0       	breq	.+28     	; 0xf9e <__floatsisf+0x5c>
     f82:	61 15       	cp	r22, r1
     f84:	71 05       	cpc	r23, r1
     f86:	81 05       	cpc	r24, r1
     f88:	20 e8       	ldi	r18, 0x80	; 128
     f8a:	92 07       	cpc	r25, r18
     f8c:	71 f1       	breq	.+92     	; 0xfea <__floatsisf+0xa8>
     f8e:	00 27       	eor	r16, r16
     f90:	11 27       	eor	r17, r17
     f92:	98 01       	movw	r18, r16
     f94:	06 1b       	sub	r16, r22
     f96:	17 0b       	sbc	r17, r23
     f98:	28 0b       	sbc	r18, r24
     f9a:	39 0b       	sbc	r19, r25
     f9c:	02 c0       	rjmp	.+4      	; 0xfa2 <__floatsisf+0x60>
     f9e:	8b 01       	movw	r16, r22
     fa0:	9c 01       	movw	r18, r24
     fa2:	c9 01       	movw	r24, r18
     fa4:	b8 01       	movw	r22, r16
     fa6:	0e 94 0b 0a 	call	0x1416	; 0x1416 <__clzsi2>
     faa:	01 97       	sbiw	r24, 0x01	; 1
     fac:	18 16       	cp	r1, r24
     fae:	19 06       	cpc	r1, r25
     fb0:	2c f0       	brlt	.+10     	; 0xfbc <__floatsisf+0x7a>
     fb2:	0d 83       	std	Y+5, r16	; 0x05
     fb4:	1e 83       	std	Y+6, r17	; 0x06
     fb6:	2f 83       	std	Y+7, r18	; 0x07
     fb8:	38 87       	std	Y+8, r19	; 0x08
     fba:	12 c0       	rjmp	.+36     	; 0xfe0 <__floatsisf+0x9e>
     fbc:	08 2e       	mov	r0, r24
     fbe:	04 c0       	rjmp	.+8      	; 0xfc8 <__floatsisf+0x86>
     fc0:	00 0f       	add	r16, r16
     fc2:	11 1f       	adc	r17, r17
     fc4:	22 1f       	adc	r18, r18
     fc6:	33 1f       	adc	r19, r19
     fc8:	0a 94       	dec	r0
     fca:	d2 f7       	brpl	.-12     	; 0xfc0 <__floatsisf+0x7e>
     fcc:	0d 83       	std	Y+5, r16	; 0x05
     fce:	1e 83       	std	Y+6, r17	; 0x06
     fd0:	2f 83       	std	Y+7, r18	; 0x07
     fd2:	38 87       	std	Y+8, r19	; 0x08
     fd4:	2e e1       	ldi	r18, 0x1E	; 30
     fd6:	30 e0       	ldi	r19, 0x00	; 0
     fd8:	28 1b       	sub	r18, r24
     fda:	39 0b       	sbc	r19, r25
     fdc:	3c 83       	std	Y+4, r19	; 0x04
     fde:	2b 83       	std	Y+3, r18	; 0x03
     fe0:	ce 01       	movw	r24, r28
     fe2:	01 96       	adiw	r24, 0x01	; 1
     fe4:	0e 94 4c 08 	call	0x1098	; 0x1098 <__pack_f>
     fe8:	04 c0       	rjmp	.+8      	; 0xff2 <__floatsisf+0xb0>
     fea:	60 e0       	ldi	r22, 0x00	; 0
     fec:	70 e0       	ldi	r23, 0x00	; 0
     fee:	80 e0       	ldi	r24, 0x00	; 0
     ff0:	9f ec       	ldi	r25, 0xCF	; 207
     ff2:	28 96       	adiw	r28, 0x08	; 8
     ff4:	e4 e0       	ldi	r30, 0x04	; 4
     ff6:	0c 94 50 0a 	jmp	0x14a0	; 0x14a0 <__epilogue_restores__+0x1c>

00000ffa <__fixsfsi>:
     ffa:	ac e0       	ldi	r26, 0x0C	; 12
     ffc:	b0 e0       	ldi	r27, 0x00	; 0
     ffe:	e3 e0       	ldi	r30, 0x03	; 3
    1000:	f8 e0       	ldi	r31, 0x08	; 8
    1002:	0c 94 34 0a 	jmp	0x1468	; 0x1468 <__prologue_saves__+0x1c>
    1006:	69 87       	std	Y+9, r22	; 0x09
    1008:	7a 87       	std	Y+10, r23	; 0x0a
    100a:	8b 87       	std	Y+11, r24	; 0x0b
    100c:	9c 87       	std	Y+12, r25	; 0x0c
    100e:	be 01       	movw	r22, r28
    1010:	6f 5f       	subi	r22, 0xFF	; 255
    1012:	7f 4f       	sbci	r23, 0xFF	; 255
    1014:	ce 01       	movw	r24, r28
    1016:	09 96       	adiw	r24, 0x09	; 9
    1018:	0e 94 16 09 	call	0x122c	; 0x122c <__unpack_f>
    101c:	89 81       	ldd	r24, Y+1	; 0x01
    101e:	82 30       	cpi	r24, 0x02	; 2
    1020:	91 f1       	breq	.+100    	; 0x1086 <__fixsfsi+0x8c>
    1022:	82 30       	cpi	r24, 0x02	; 2
    1024:	80 f1       	brcs	.+96     	; 0x1086 <__fixsfsi+0x8c>
    1026:	84 30       	cpi	r24, 0x04	; 4
    1028:	41 f4       	brne	.+16     	; 0x103a <__fixsfsi+0x40>
    102a:	8a 81       	ldd	r24, Y+2	; 0x02
    102c:	88 23       	and	r24, r24
    102e:	31 f1       	breq	.+76     	; 0x107c <__fixsfsi+0x82>
    1030:	00 e0       	ldi	r16, 0x00	; 0
    1032:	10 e0       	ldi	r17, 0x00	; 0
    1034:	20 e0       	ldi	r18, 0x00	; 0
    1036:	30 e8       	ldi	r19, 0x80	; 128
    1038:	29 c0       	rjmp	.+82     	; 0x108c <__fixsfsi+0x92>
    103a:	2b 81       	ldd	r18, Y+3	; 0x03
    103c:	3c 81       	ldd	r19, Y+4	; 0x04
    103e:	37 fd       	sbrc	r19, 7
    1040:	22 c0       	rjmp	.+68     	; 0x1086 <__fixsfsi+0x8c>
    1042:	2f 31       	cpi	r18, 0x1F	; 31
    1044:	31 05       	cpc	r19, r1
    1046:	8c f7       	brge	.-30     	; 0x102a <__fixsfsi+0x30>
    1048:	8e e1       	ldi	r24, 0x1E	; 30
    104a:	90 e0       	ldi	r25, 0x00	; 0
    104c:	82 1b       	sub	r24, r18
    104e:	93 0b       	sbc	r25, r19
    1050:	0d 81       	ldd	r16, Y+5	; 0x05
    1052:	1e 81       	ldd	r17, Y+6	; 0x06
    1054:	2f 81       	ldd	r18, Y+7	; 0x07
    1056:	38 85       	ldd	r19, Y+8	; 0x08
    1058:	04 c0       	rjmp	.+8      	; 0x1062 <__fixsfsi+0x68>
    105a:	36 95       	lsr	r19
    105c:	27 95       	ror	r18
    105e:	17 95       	ror	r17
    1060:	07 95       	ror	r16
    1062:	8a 95       	dec	r24
    1064:	d2 f7       	brpl	.-12     	; 0x105a <__fixsfsi+0x60>
    1066:	8a 81       	ldd	r24, Y+2	; 0x02
    1068:	88 23       	and	r24, r24
    106a:	81 f0       	breq	.+32     	; 0x108c <__fixsfsi+0x92>
    106c:	30 95       	com	r19
    106e:	20 95       	com	r18
    1070:	10 95       	com	r17
    1072:	01 95       	neg	r16
    1074:	1f 4f       	sbci	r17, 0xFF	; 255
    1076:	2f 4f       	sbci	r18, 0xFF	; 255
    1078:	3f 4f       	sbci	r19, 0xFF	; 255
    107a:	08 c0       	rjmp	.+16     	; 0x108c <__fixsfsi+0x92>
    107c:	0f ef       	ldi	r16, 0xFF	; 255
    107e:	1f ef       	ldi	r17, 0xFF	; 255
    1080:	2f ef       	ldi	r18, 0xFF	; 255
    1082:	3f e7       	ldi	r19, 0x7F	; 127
    1084:	03 c0       	rjmp	.+6      	; 0x108c <__fixsfsi+0x92>
    1086:	00 e0       	ldi	r16, 0x00	; 0
    1088:	10 e0       	ldi	r17, 0x00	; 0
    108a:	98 01       	movw	r18, r16
    108c:	b8 01       	movw	r22, r16
    108e:	c9 01       	movw	r24, r18
    1090:	2c 96       	adiw	r28, 0x0c	; 12
    1092:	e4 e0       	ldi	r30, 0x04	; 4
    1094:	0c 94 50 0a 	jmp	0x14a0	; 0x14a0 <__epilogue_restores__+0x1c>

00001098 <__pack_f>:
    1098:	0f 93       	push	r16
    109a:	1f 93       	push	r17
    109c:	cf 93       	push	r28
    109e:	df 93       	push	r29
    10a0:	dc 01       	movw	r26, r24
    10a2:	14 96       	adiw	r26, 0x04	; 4
    10a4:	4d 91       	ld	r20, X+
    10a6:	5d 91       	ld	r21, X+
    10a8:	6d 91       	ld	r22, X+
    10aa:	7c 91       	ld	r23, X
    10ac:	17 97       	sbiw	r26, 0x07	; 7
    10ae:	11 96       	adiw	r26, 0x01	; 1
    10b0:	ec 91       	ld	r30, X
    10b2:	11 97       	sbiw	r26, 0x01	; 1
    10b4:	8c 91       	ld	r24, X
    10b6:	82 30       	cpi	r24, 0x02	; 2
    10b8:	20 f4       	brcc	.+8      	; 0x10c2 <__pack_f+0x2a>
    10ba:	60 61       	ori	r22, 0x10	; 16
    10bc:	8f ef       	ldi	r24, 0xFF	; 255
    10be:	90 e0       	ldi	r25, 0x00	; 0
    10c0:	a6 c0       	rjmp	.+332    	; 0x120e <__pack_f+0x176>
    10c2:	84 30       	cpi	r24, 0x04	; 4
    10c4:	09 f4       	brne	.+2      	; 0x10c8 <__pack_f+0x30>
    10c6:	9e c0       	rjmp	.+316    	; 0x1204 <__pack_f+0x16c>
    10c8:	82 30       	cpi	r24, 0x02	; 2
    10ca:	09 f4       	brne	.+2      	; 0x10ce <__pack_f+0x36>
    10cc:	95 c0       	rjmp	.+298    	; 0x11f8 <__pack_f+0x160>
    10ce:	41 15       	cp	r20, r1
    10d0:	51 05       	cpc	r21, r1
    10d2:	61 05       	cpc	r22, r1
    10d4:	71 05       	cpc	r23, r1
    10d6:	09 f4       	brne	.+2      	; 0x10da <__pack_f+0x42>
    10d8:	92 c0       	rjmp	.+292    	; 0x11fe <__pack_f+0x166>
    10da:	12 96       	adiw	r26, 0x02	; 2
    10dc:	2d 91       	ld	r18, X+
    10de:	3c 91       	ld	r19, X
    10e0:	13 97       	sbiw	r26, 0x03	; 3
    10e2:	22 38       	cpi	r18, 0x82	; 130
    10e4:	8f ef       	ldi	r24, 0xFF	; 255
    10e6:	38 07       	cpc	r19, r24
    10e8:	0c f0       	brlt	.+2      	; 0x10ec <__pack_f+0x54>
    10ea:	58 c0       	rjmp	.+176    	; 0x119c <__pack_f+0x104>
    10ec:	c2 e8       	ldi	r28, 0x82	; 130
    10ee:	df ef       	ldi	r29, 0xFF	; 255
    10f0:	c2 1b       	sub	r28, r18
    10f2:	d3 0b       	sbc	r29, r19
    10f4:	ca 31       	cpi	r28, 0x1A	; 26
    10f6:	d1 05       	cpc	r29, r1
    10f8:	6c f5       	brge	.+90     	; 0x1154 <__pack_f+0xbc>
    10fa:	8a 01       	movw	r16, r20
    10fc:	9b 01       	movw	r18, r22
    10fe:	0c 2e       	mov	r0, r28
    1100:	04 c0       	rjmp	.+8      	; 0x110a <__pack_f+0x72>
    1102:	36 95       	lsr	r19
    1104:	27 95       	ror	r18
    1106:	17 95       	ror	r17
    1108:	07 95       	ror	r16
    110a:	0a 94       	dec	r0
    110c:	d2 f7       	brpl	.-12     	; 0x1102 <__pack_f+0x6a>
    110e:	81 e0       	ldi	r24, 0x01	; 1
    1110:	90 e0       	ldi	r25, 0x00	; 0
    1112:	a0 e0       	ldi	r26, 0x00	; 0
    1114:	b0 e0       	ldi	r27, 0x00	; 0
    1116:	0c 2e       	mov	r0, r28
    1118:	04 c0       	rjmp	.+8      	; 0x1122 <__pack_f+0x8a>
    111a:	88 0f       	add	r24, r24
    111c:	99 1f       	adc	r25, r25
    111e:	aa 1f       	adc	r26, r26
    1120:	bb 1f       	adc	r27, r27
    1122:	0a 94       	dec	r0
    1124:	d2 f7       	brpl	.-12     	; 0x111a <__pack_f+0x82>
    1126:	01 97       	sbiw	r24, 0x01	; 1
    1128:	a1 09       	sbc	r26, r1
    112a:	b1 09       	sbc	r27, r1
    112c:	84 23       	and	r24, r20
    112e:	95 23       	and	r25, r21
    1130:	a6 23       	and	r26, r22
    1132:	b7 23       	and	r27, r23
    1134:	41 e0       	ldi	r20, 0x01	; 1
    1136:	50 e0       	ldi	r21, 0x00	; 0
    1138:	60 e0       	ldi	r22, 0x00	; 0
    113a:	70 e0       	ldi	r23, 0x00	; 0
    113c:	89 2b       	or	r24, r25
    113e:	8a 2b       	or	r24, r26
    1140:	8b 2b       	or	r24, r27
    1142:	19 f4       	brne	.+6      	; 0x114a <__pack_f+0xb2>
    1144:	40 e0       	ldi	r20, 0x00	; 0
    1146:	50 e0       	ldi	r21, 0x00	; 0
    1148:	ba 01       	movw	r22, r20
    114a:	40 2b       	or	r20, r16
    114c:	51 2b       	or	r21, r17
    114e:	62 2b       	or	r22, r18
    1150:	73 2b       	or	r23, r19
    1152:	03 c0       	rjmp	.+6      	; 0x115a <__pack_f+0xc2>
    1154:	40 e0       	ldi	r20, 0x00	; 0
    1156:	50 e0       	ldi	r21, 0x00	; 0
    1158:	ba 01       	movw	r22, r20
    115a:	db 01       	movw	r26, r22
    115c:	ca 01       	movw	r24, r20
    115e:	8f 77       	andi	r24, 0x7F	; 127
    1160:	99 27       	eor	r25, r25
    1162:	aa 27       	eor	r26, r26
    1164:	bb 27       	eor	r27, r27
    1166:	80 34       	cpi	r24, 0x40	; 64
    1168:	91 05       	cpc	r25, r1
    116a:	a1 05       	cpc	r26, r1
    116c:	b1 05       	cpc	r27, r1
    116e:	39 f4       	brne	.+14     	; 0x117e <__pack_f+0xe6>
    1170:	47 ff       	sbrs	r20, 7
    1172:	09 c0       	rjmp	.+18     	; 0x1186 <__pack_f+0xee>
    1174:	40 5c       	subi	r20, 0xC0	; 192
    1176:	5f 4f       	sbci	r21, 0xFF	; 255
    1178:	6f 4f       	sbci	r22, 0xFF	; 255
    117a:	7f 4f       	sbci	r23, 0xFF	; 255
    117c:	04 c0       	rjmp	.+8      	; 0x1186 <__pack_f+0xee>
    117e:	41 5c       	subi	r20, 0xC1	; 193
    1180:	5f 4f       	sbci	r21, 0xFF	; 255
    1182:	6f 4f       	sbci	r22, 0xFF	; 255
    1184:	7f 4f       	sbci	r23, 0xFF	; 255
    1186:	81 e0       	ldi	r24, 0x01	; 1
    1188:	90 e0       	ldi	r25, 0x00	; 0
    118a:	41 15       	cp	r20, r1
    118c:	51 05       	cpc	r21, r1
    118e:	61 05       	cpc	r22, r1
    1190:	20 e4       	ldi	r18, 0x40	; 64
    1192:	72 07       	cpc	r23, r18
    1194:	48 f5       	brcc	.+82     	; 0x11e8 <__pack_f+0x150>
    1196:	80 e0       	ldi	r24, 0x00	; 0
    1198:	90 e0       	ldi	r25, 0x00	; 0
    119a:	26 c0       	rjmp	.+76     	; 0x11e8 <__pack_f+0x150>
    119c:	20 38       	cpi	r18, 0x80	; 128
    119e:	31 05       	cpc	r19, r1
    11a0:	8c f5       	brge	.+98     	; 0x1204 <__pack_f+0x16c>
    11a2:	db 01       	movw	r26, r22
    11a4:	ca 01       	movw	r24, r20
    11a6:	8f 77       	andi	r24, 0x7F	; 127
    11a8:	99 27       	eor	r25, r25
    11aa:	aa 27       	eor	r26, r26
    11ac:	bb 27       	eor	r27, r27
    11ae:	80 34       	cpi	r24, 0x40	; 64
    11b0:	91 05       	cpc	r25, r1
    11b2:	a1 05       	cpc	r26, r1
    11b4:	b1 05       	cpc	r27, r1
    11b6:	39 f4       	brne	.+14     	; 0x11c6 <__pack_f+0x12e>
    11b8:	47 ff       	sbrs	r20, 7
    11ba:	09 c0       	rjmp	.+18     	; 0x11ce <__pack_f+0x136>
    11bc:	40 5c       	subi	r20, 0xC0	; 192
    11be:	5f 4f       	sbci	r21, 0xFF	; 255
    11c0:	6f 4f       	sbci	r22, 0xFF	; 255
    11c2:	7f 4f       	sbci	r23, 0xFF	; 255
    11c4:	04 c0       	rjmp	.+8      	; 0x11ce <__pack_f+0x136>
    11c6:	41 5c       	subi	r20, 0xC1	; 193
    11c8:	5f 4f       	sbci	r21, 0xFF	; 255
    11ca:	6f 4f       	sbci	r22, 0xFF	; 255
    11cc:	7f 4f       	sbci	r23, 0xFF	; 255
    11ce:	77 fd       	sbrc	r23, 7
    11d0:	04 c0       	rjmp	.+8      	; 0x11da <__pack_f+0x142>
    11d2:	c9 01       	movw	r24, r18
    11d4:	81 58       	subi	r24, 0x81	; 129
    11d6:	9f 4f       	sbci	r25, 0xFF	; 255
    11d8:	07 c0       	rjmp	.+14     	; 0x11e8 <__pack_f+0x150>
    11da:	76 95       	lsr	r23
    11dc:	67 95       	ror	r22
    11de:	57 95       	ror	r21
    11e0:	47 95       	ror	r20
    11e2:	c9 01       	movw	r24, r18
    11e4:	80 58       	subi	r24, 0x80	; 128
    11e6:	9f 4f       	sbci	r25, 0xFF	; 255
    11e8:	97 e0       	ldi	r25, 0x07	; 7
    11ea:	76 95       	lsr	r23
    11ec:	67 95       	ror	r22
    11ee:	57 95       	ror	r21
    11f0:	47 95       	ror	r20
    11f2:	9a 95       	dec	r25
    11f4:	d1 f7       	brne	.-12     	; 0x11ea <__pack_f+0x152>
    11f6:	0b c0       	rjmp	.+22     	; 0x120e <__pack_f+0x176>
    11f8:	80 e0       	ldi	r24, 0x00	; 0
    11fa:	90 e0       	ldi	r25, 0x00	; 0
    11fc:	05 c0       	rjmp	.+10     	; 0x1208 <__pack_f+0x170>
    11fe:	80 e0       	ldi	r24, 0x00	; 0
    1200:	90 e0       	ldi	r25, 0x00	; 0
    1202:	05 c0       	rjmp	.+10     	; 0x120e <__pack_f+0x176>
    1204:	8f ef       	ldi	r24, 0xFF	; 255
    1206:	90 e0       	ldi	r25, 0x00	; 0
    1208:	40 e0       	ldi	r20, 0x00	; 0
    120a:	50 e0       	ldi	r21, 0x00	; 0
    120c:	ba 01       	movw	r22, r20
    120e:	98 2f       	mov	r25, r24
    1210:	96 95       	lsr	r25
    1212:	e0 fb       	bst	r30, 0
    1214:	97 f9       	bld	r25, 7
    1216:	36 2f       	mov	r19, r22
    1218:	80 fb       	bst	r24, 0
    121a:	37 f9       	bld	r19, 7
    121c:	64 2f       	mov	r22, r20
    121e:	75 2f       	mov	r23, r21
    1220:	83 2f       	mov	r24, r19
    1222:	df 91       	pop	r29
    1224:	cf 91       	pop	r28
    1226:	1f 91       	pop	r17
    1228:	0f 91       	pop	r16
    122a:	08 95       	ret

0000122c <__unpack_f>:
    122c:	cf 92       	push	r12
    122e:	df 92       	push	r13
    1230:	ef 92       	push	r14
    1232:	dc 01       	movw	r26, r24
    1234:	fb 01       	movw	r30, r22
    1236:	cc 90       	ld	r12, X
    1238:	11 96       	adiw	r26, 0x01	; 1
    123a:	dc 90       	ld	r13, X
    123c:	11 97       	sbiw	r26, 0x01	; 1
    123e:	12 96       	adiw	r26, 0x02	; 2
    1240:	8c 91       	ld	r24, X
    1242:	12 97       	sbiw	r26, 0x02	; 2
    1244:	3f e7       	ldi	r19, 0x7F	; 127
    1246:	e3 2e       	mov	r14, r19
    1248:	e8 22       	and	r14, r24
    124a:	6e 2d       	mov	r22, r14
    124c:	a6 01       	movw	r20, r12
    124e:	70 e0       	ldi	r23, 0x00	; 0
    1250:	98 2f       	mov	r25, r24
    1252:	99 1f       	adc	r25, r25
    1254:	99 27       	eor	r25, r25
    1256:	99 1f       	adc	r25, r25
    1258:	13 96       	adiw	r26, 0x03	; 3
    125a:	2c 91       	ld	r18, X
    125c:	82 2f       	mov	r24, r18
    125e:	88 0f       	add	r24, r24
    1260:	89 2b       	or	r24, r25
    1262:	90 e0       	ldi	r25, 0x00	; 0
    1264:	27 fb       	bst	r18, 7
    1266:	22 27       	eor	r18, r18
    1268:	20 f9       	bld	r18, 0
    126a:	21 83       	std	Z+1, r18	; 0x01
    126c:	00 97       	sbiw	r24, 0x00	; 0
    126e:	29 f5       	brne	.+74     	; 0x12ba <__unpack_f+0x8e>
    1270:	41 15       	cp	r20, r1
    1272:	51 05       	cpc	r21, r1
    1274:	61 05       	cpc	r22, r1
    1276:	71 05       	cpc	r23, r1
    1278:	11 f4       	brne	.+4      	; 0x127e <__unpack_f+0x52>
    127a:	82 e0       	ldi	r24, 0x02	; 2
    127c:	27 c0       	rjmp	.+78     	; 0x12cc <__unpack_f+0xa0>
    127e:	82 e8       	ldi	r24, 0x82	; 130
    1280:	9f ef       	ldi	r25, 0xFF	; 255
    1282:	93 83       	std	Z+3, r25	; 0x03
    1284:	82 83       	std	Z+2, r24	; 0x02
    1286:	27 e0       	ldi	r18, 0x07	; 7
    1288:	44 0f       	add	r20, r20
    128a:	55 1f       	adc	r21, r21
    128c:	66 1f       	adc	r22, r22
    128e:	77 1f       	adc	r23, r23
    1290:	2a 95       	dec	r18
    1292:	d1 f7       	brne	.-12     	; 0x1288 <__unpack_f+0x5c>
    1294:	83 e0       	ldi	r24, 0x03	; 3
    1296:	80 83       	st	Z, r24
    1298:	09 c0       	rjmp	.+18     	; 0x12ac <__unpack_f+0x80>
    129a:	44 0f       	add	r20, r20
    129c:	55 1f       	adc	r21, r21
    129e:	66 1f       	adc	r22, r22
    12a0:	77 1f       	adc	r23, r23
    12a2:	82 81       	ldd	r24, Z+2	; 0x02
    12a4:	93 81       	ldd	r25, Z+3	; 0x03
    12a6:	01 97       	sbiw	r24, 0x01	; 1
    12a8:	93 83       	std	Z+3, r25	; 0x03
    12aa:	82 83       	std	Z+2, r24	; 0x02
    12ac:	41 15       	cp	r20, r1
    12ae:	51 05       	cpc	r21, r1
    12b0:	61 05       	cpc	r22, r1
    12b2:	80 e4       	ldi	r24, 0x40	; 64
    12b4:	78 07       	cpc	r23, r24
    12b6:	88 f3       	brcs	.-30     	; 0x129a <__unpack_f+0x6e>
    12b8:	20 c0       	rjmp	.+64     	; 0x12fa <__unpack_f+0xce>
    12ba:	8f 3f       	cpi	r24, 0xFF	; 255
    12bc:	91 05       	cpc	r25, r1
    12be:	79 f4       	brne	.+30     	; 0x12de <__unpack_f+0xb2>
    12c0:	41 15       	cp	r20, r1
    12c2:	51 05       	cpc	r21, r1
    12c4:	61 05       	cpc	r22, r1
    12c6:	71 05       	cpc	r23, r1
    12c8:	19 f4       	brne	.+6      	; 0x12d0 <__unpack_f+0xa4>
    12ca:	84 e0       	ldi	r24, 0x04	; 4
    12cc:	80 83       	st	Z, r24
    12ce:	19 c0       	rjmp	.+50     	; 0x1302 <__unpack_f+0xd6>
    12d0:	e4 fe       	sbrs	r14, 4
    12d2:	03 c0       	rjmp	.+6      	; 0x12da <__unpack_f+0xae>
    12d4:	81 e0       	ldi	r24, 0x01	; 1
    12d6:	80 83       	st	Z, r24
    12d8:	10 c0       	rjmp	.+32     	; 0x12fa <__unpack_f+0xce>
    12da:	10 82       	st	Z, r1
    12dc:	0e c0       	rjmp	.+28     	; 0x12fa <__unpack_f+0xce>
    12de:	8f 57       	subi	r24, 0x7F	; 127
    12e0:	91 09       	sbc	r25, r1
    12e2:	93 83       	std	Z+3, r25	; 0x03
    12e4:	82 83       	std	Z+2, r24	; 0x02
    12e6:	83 e0       	ldi	r24, 0x03	; 3
    12e8:	80 83       	st	Z, r24
    12ea:	87 e0       	ldi	r24, 0x07	; 7
    12ec:	44 0f       	add	r20, r20
    12ee:	55 1f       	adc	r21, r21
    12f0:	66 1f       	adc	r22, r22
    12f2:	77 1f       	adc	r23, r23
    12f4:	8a 95       	dec	r24
    12f6:	d1 f7       	brne	.-12     	; 0x12ec <__unpack_f+0xc0>
    12f8:	70 64       	ori	r23, 0x40	; 64
    12fa:	44 83       	std	Z+4, r20	; 0x04
    12fc:	55 83       	std	Z+5, r21	; 0x05
    12fe:	66 83       	std	Z+6, r22	; 0x06
    1300:	77 83       	std	Z+7, r23	; 0x07
    1302:	ef 90       	pop	r14
    1304:	df 90       	pop	r13
    1306:	cf 90       	pop	r12
    1308:	08 95       	ret

0000130a <__fpcmp_parts_f>:
    130a:	cf 93       	push	r28
    130c:	fc 01       	movw	r30, r24
    130e:	db 01       	movw	r26, r22
    1310:	90 81       	ld	r25, Z
    1312:	92 30       	cpi	r25, 0x02	; 2
    1314:	08 f4       	brcc	.+2      	; 0x1318 <__fpcmp_parts_f+0xe>
    1316:	52 c0       	rjmp	.+164    	; 0x13bc <__fpcmp_parts_f+0xb2>
    1318:	8c 91       	ld	r24, X
    131a:	82 30       	cpi	r24, 0x02	; 2
    131c:	08 f4       	brcc	.+2      	; 0x1320 <__fpcmp_parts_f+0x16>
    131e:	4e c0       	rjmp	.+156    	; 0x13bc <__fpcmp_parts_f+0xb2>
    1320:	94 30       	cpi	r25, 0x04	; 4
    1322:	71 f4       	brne	.+28     	; 0x1340 <__fpcmp_parts_f+0x36>
    1324:	84 30       	cpi	r24, 0x04	; 4
    1326:	39 f4       	brne	.+14     	; 0x1336 <__fpcmp_parts_f+0x2c>
    1328:	11 96       	adiw	r26, 0x01	; 1
    132a:	2c 91       	ld	r18, X
    132c:	30 e0       	ldi	r19, 0x00	; 0
    132e:	81 81       	ldd	r24, Z+1	; 0x01
    1330:	28 1b       	sub	r18, r24
    1332:	31 09       	sbc	r19, r1
    1334:	48 c0       	rjmp	.+144    	; 0x13c6 <__fpcmp_parts_f+0xbc>
    1336:	81 81       	ldd	r24, Z+1	; 0x01
    1338:	88 23       	and	r24, r24
    133a:	09 f4       	brne	.+2      	; 0x133e <__fpcmp_parts_f+0x34>
    133c:	3f c0       	rjmp	.+126    	; 0x13bc <__fpcmp_parts_f+0xb2>
    133e:	3b c0       	rjmp	.+118    	; 0x13b6 <__fpcmp_parts_f+0xac>
    1340:	84 30       	cpi	r24, 0x04	; 4
    1342:	29 f4       	brne	.+10     	; 0x134e <__fpcmp_parts_f+0x44>
    1344:	11 96       	adiw	r26, 0x01	; 1
    1346:	8c 91       	ld	r24, X
    1348:	81 11       	cpse	r24, r1
    134a:	38 c0       	rjmp	.+112    	; 0x13bc <__fpcmp_parts_f+0xb2>
    134c:	34 c0       	rjmp	.+104    	; 0x13b6 <__fpcmp_parts_f+0xac>
    134e:	92 30       	cpi	r25, 0x02	; 2
    1350:	19 f4       	brne	.+6      	; 0x1358 <__fpcmp_parts_f+0x4e>
    1352:	82 30       	cpi	r24, 0x02	; 2
    1354:	b9 f7       	brne	.-18     	; 0x1344 <__fpcmp_parts_f+0x3a>
    1356:	35 c0       	rjmp	.+106    	; 0x13c2 <__fpcmp_parts_f+0xb8>
    1358:	82 30       	cpi	r24, 0x02	; 2
    135a:	69 f3       	breq	.-38     	; 0x1336 <__fpcmp_parts_f+0x2c>
    135c:	c1 81       	ldd	r28, Z+1	; 0x01
    135e:	11 96       	adiw	r26, 0x01	; 1
    1360:	8c 91       	ld	r24, X
    1362:	11 97       	sbiw	r26, 0x01	; 1
    1364:	c8 13       	cpse	r28, r24
    1366:	1d c0       	rjmp	.+58     	; 0x13a2 <__fpcmp_parts_f+0x98>
    1368:	22 81       	ldd	r18, Z+2	; 0x02
    136a:	33 81       	ldd	r19, Z+3	; 0x03
    136c:	12 96       	adiw	r26, 0x02	; 2
    136e:	8d 91       	ld	r24, X+
    1370:	9c 91       	ld	r25, X
    1372:	13 97       	sbiw	r26, 0x03	; 3
    1374:	82 17       	cp	r24, r18
    1376:	93 07       	cpc	r25, r19
    1378:	0c f4       	brge	.+2      	; 0x137c <__fpcmp_parts_f+0x72>
    137a:	13 c0       	rjmp	.+38     	; 0x13a2 <__fpcmp_parts_f+0x98>
    137c:	28 17       	cp	r18, r24
    137e:	39 07       	cpc	r19, r25
    1380:	0c f4       	brge	.+2      	; 0x1384 <__fpcmp_parts_f+0x7a>
    1382:	17 c0       	rjmp	.+46     	; 0x13b2 <__fpcmp_parts_f+0xa8>
    1384:	44 81       	ldd	r20, Z+4	; 0x04
    1386:	55 81       	ldd	r21, Z+5	; 0x05
    1388:	66 81       	ldd	r22, Z+6	; 0x06
    138a:	77 81       	ldd	r23, Z+7	; 0x07
    138c:	14 96       	adiw	r26, 0x04	; 4
    138e:	8d 91       	ld	r24, X+
    1390:	9d 91       	ld	r25, X+
    1392:	0d 90       	ld	r0, X+
    1394:	bc 91       	ld	r27, X
    1396:	a0 2d       	mov	r26, r0
    1398:	84 17       	cp	r24, r20
    139a:	95 07       	cpc	r25, r21
    139c:	a6 07       	cpc	r26, r22
    139e:	b7 07       	cpc	r27, r23
    13a0:	18 f4       	brcc	.+6      	; 0x13a8 <__fpcmp_parts_f+0x9e>
    13a2:	c1 11       	cpse	r28, r1
    13a4:	08 c0       	rjmp	.+16     	; 0x13b6 <__fpcmp_parts_f+0xac>
    13a6:	0a c0       	rjmp	.+20     	; 0x13bc <__fpcmp_parts_f+0xb2>
    13a8:	48 17       	cp	r20, r24
    13aa:	59 07       	cpc	r21, r25
    13ac:	6a 07       	cpc	r22, r26
    13ae:	7b 07       	cpc	r23, r27
    13b0:	40 f4       	brcc	.+16     	; 0x13c2 <__fpcmp_parts_f+0xb8>
    13b2:	c1 11       	cpse	r28, r1
    13b4:	03 c0       	rjmp	.+6      	; 0x13bc <__fpcmp_parts_f+0xb2>
    13b6:	2f ef       	ldi	r18, 0xFF	; 255
    13b8:	3f ef       	ldi	r19, 0xFF	; 255
    13ba:	05 c0       	rjmp	.+10     	; 0x13c6 <__fpcmp_parts_f+0xbc>
    13bc:	21 e0       	ldi	r18, 0x01	; 1
    13be:	30 e0       	ldi	r19, 0x00	; 0
    13c0:	02 c0       	rjmp	.+4      	; 0x13c6 <__fpcmp_parts_f+0xbc>
    13c2:	20 e0       	ldi	r18, 0x00	; 0
    13c4:	30 e0       	ldi	r19, 0x00	; 0
    13c6:	c9 01       	movw	r24, r18
    13c8:	cf 91       	pop	r28
    13ca:	08 95       	ret

000013cc <main>:
}

int main(void) {
  // Init port B to show keyboard result
  DDRB = 0xff;
    13cc:	8f ef       	ldi	r24, 0xFF	; 255
    13ce:	84 b9       	out	0x04, r24	; 4
  // and turn out the LEDs
  PORTB = 0xff;   
    13d0:	85 b9       	out	0x05, r24	; 5
  
  // init the UART
  uart_init();
    13d2:	0e 94 d7 01 	call	0x3ae	; 0x3ae <uart_init>
  stdout = stdin = stderr = &uart_str;
    13d6:	80 e0       	ldi	r24, 0x00	; 0
    13d8:	91 e0       	ldi	r25, 0x01	; 1
    13da:	90 93 26 04 	sts	0x0426, r25
    13de:	80 93 25 04 	sts	0x0425, r24
    13e2:	90 93 22 04 	sts	0x0422, r25
    13e6:	80 93 21 04 	sts	0x0421, r24
    13ea:	90 93 24 04 	sts	0x0424, r25
    13ee:	80 93 23 04 	sts	0x0423, r24
  fprintf(stdout, "Starting...\n\r");
    13f2:	bc 01       	movw	r22, r24
    13f4:	8a e6       	ldi	r24, 0x6A	; 106
    13f6:	91 e0       	ldi	r25, 0x01	; 1
    13f8:	0e 94 6d 0a 	call	0x14da	; 0x14da <fputs>
  initialize();
    13fc:	0e 94 bd 01 	call	0x37a	; 0x37a <initialize>

  //play(1336, 852);
	
  //endless loop to read keyboard
  while(1) {
	update_status_variables();
    1400:	0e 94 84 04 	call	0x908	; 0x908 <update_status_variables>
	//Used for debouncing
    if (time1>=t1) {
    1404:	80 91 ef 01 	lds	r24, 0x01EF
    1408:	90 91 f0 01 	lds	r25, 0x01F0
    140c:	44 97       	sbiw	r24, 0x14	; 20
    140e:	c0 f3       	brcs	.-16     	; 0x1400 <main+0x34>
		task1();
    1410:	0e 94 76 00 	call	0xec	; 0xec <task1>
    1414:	f5 cf       	rjmp	.-22     	; 0x1400 <main+0x34>

00001416 <__clzsi2>:
    1416:	0e 94 14 0a 	call	0x1428	; 0x1428 <__clzhi2>
    141a:	84 ff       	sbrs	r24, 4
    141c:	08 95       	ret
    141e:	cb 01       	movw	r24, r22
    1420:	0e 94 14 0a 	call	0x1428	; 0x1428 <__clzhi2>
    1424:	80 5f       	subi	r24, 0xF0	; 240
    1426:	08 95       	ret

00001428 <__clzhi2>:
    1428:	aa 27       	eor	r26, r26
    142a:	99 23       	and	r25, r25
    142c:	29 f4       	brne	.+10     	; 0x1438 <__clzhi2+0x10>
    142e:	a8 5f       	subi	r26, 0xF8	; 248
    1430:	98 2b       	or	r25, r24
    1432:	11 f4       	brne	.+4      	; 0x1438 <__clzhi2+0x10>
    1434:	80 e1       	ldi	r24, 0x10	; 16
    1436:	08 95       	ret
    1438:	90 31       	cpi	r25, 0x10	; 16
    143a:	18 f4       	brcc	.+6      	; 0x1442 <__clzhi2+0x1a>
    143c:	ad 5f       	subi	r26, 0xFD	; 253
    143e:	92 95       	swap	r25
    1440:	a3 95       	inc	r26
    1442:	99 0f       	add	r25, r25
    1444:	e8 f7       	brcc	.-6      	; 0x1440 <__clzhi2+0x18>
    1446:	8a 2f       	mov	r24, r26
    1448:	99 27       	eor	r25, r25
    144a:	08 95       	ret

0000144c <__prologue_saves__>:
    144c:	2f 92       	push	r2
    144e:	3f 92       	push	r3
    1450:	4f 92       	push	r4
    1452:	5f 92       	push	r5
    1454:	6f 92       	push	r6
    1456:	7f 92       	push	r7
    1458:	8f 92       	push	r8
    145a:	9f 92       	push	r9
    145c:	af 92       	push	r10
    145e:	bf 92       	push	r11
    1460:	cf 92       	push	r12
    1462:	df 92       	push	r13
    1464:	ef 92       	push	r14
    1466:	ff 92       	push	r15
    1468:	0f 93       	push	r16
    146a:	1f 93       	push	r17
    146c:	cf 93       	push	r28
    146e:	df 93       	push	r29
    1470:	cd b7       	in	r28, 0x3d	; 61
    1472:	de b7       	in	r29, 0x3e	; 62
    1474:	ca 1b       	sub	r28, r26
    1476:	db 0b       	sbc	r29, r27
    1478:	0f b6       	in	r0, 0x3f	; 63
    147a:	f8 94       	cli
    147c:	de bf       	out	0x3e, r29	; 62
    147e:	0f be       	out	0x3f, r0	; 63
    1480:	cd bf       	out	0x3d, r28	; 61
    1482:	09 94       	ijmp

00001484 <__epilogue_restores__>:
    1484:	2a 88       	ldd	r2, Y+18	; 0x12
    1486:	39 88       	ldd	r3, Y+17	; 0x11
    1488:	48 88       	ldd	r4, Y+16	; 0x10
    148a:	5f 84       	ldd	r5, Y+15	; 0x0f
    148c:	6e 84       	ldd	r6, Y+14	; 0x0e
    148e:	7d 84       	ldd	r7, Y+13	; 0x0d
    1490:	8c 84       	ldd	r8, Y+12	; 0x0c
    1492:	9b 84       	ldd	r9, Y+11	; 0x0b
    1494:	aa 84       	ldd	r10, Y+10	; 0x0a
    1496:	b9 84       	ldd	r11, Y+9	; 0x09
    1498:	c8 84       	ldd	r12, Y+8	; 0x08
    149a:	df 80       	ldd	r13, Y+7	; 0x07
    149c:	ee 80       	ldd	r14, Y+6	; 0x06
    149e:	fd 80       	ldd	r15, Y+5	; 0x05
    14a0:	0c 81       	ldd	r16, Y+4	; 0x04
    14a2:	1b 81       	ldd	r17, Y+3	; 0x03
    14a4:	aa 81       	ldd	r26, Y+2	; 0x02
    14a6:	b9 81       	ldd	r27, Y+1	; 0x01
    14a8:	ce 0f       	add	r28, r30
    14aa:	d1 1d       	adc	r29, r1
    14ac:	0f b6       	in	r0, 0x3f	; 63
    14ae:	f8 94       	cli
    14b0:	de bf       	out	0x3e, r29	; 62
    14b2:	0f be       	out	0x3f, r0	; 63
    14b4:	cd bf       	out	0x3d, r28	; 61
    14b6:	ed 01       	movw	r28, r26
    14b8:	08 95       	ret

000014ba <fprintf>:
    14ba:	cf 93       	push	r28
    14bc:	df 93       	push	r29
    14be:	cd b7       	in	r28, 0x3d	; 61
    14c0:	de b7       	in	r29, 0x3e	; 62
    14c2:	ce 01       	movw	r24, r28
    14c4:	09 96       	adiw	r24, 0x09	; 9
    14c6:	ac 01       	movw	r20, r24
    14c8:	6f 81       	ldd	r22, Y+7	; 0x07
    14ca:	78 85       	ldd	r23, Y+8	; 0x08
    14cc:	8d 81       	ldd	r24, Y+5	; 0x05
    14ce:	9e 81       	ldd	r25, Y+6	; 0x06
    14d0:	0e 94 9e 0a 	call	0x153c	; 0x153c <vfprintf>
    14d4:	df 91       	pop	r29
    14d6:	cf 91       	pop	r28
    14d8:	08 95       	ret

000014da <fputs>:
    14da:	ef 92       	push	r14
    14dc:	ff 92       	push	r15
    14de:	0f 93       	push	r16
    14e0:	1f 93       	push	r17
    14e2:	cf 93       	push	r28
    14e4:	df 93       	push	r29
    14e6:	7c 01       	movw	r14, r24
    14e8:	8b 01       	movw	r16, r22
    14ea:	db 01       	movw	r26, r22
    14ec:	13 96       	adiw	r26, 0x03	; 3
    14ee:	8c 91       	ld	r24, X
    14f0:	81 ff       	sbrs	r24, 1
    14f2:	14 c0       	rjmp	.+40     	; 0x151c <fputs+0x42>
    14f4:	c0 e0       	ldi	r28, 0x00	; 0
    14f6:	d0 e0       	ldi	r29, 0x00	; 0
    14f8:	0b c0       	rjmp	.+22     	; 0x1510 <fputs+0x36>
    14fa:	d8 01       	movw	r26, r16
    14fc:	18 96       	adiw	r26, 0x08	; 8
    14fe:	ed 91       	ld	r30, X+
    1500:	fc 91       	ld	r31, X
    1502:	19 97       	sbiw	r26, 0x09	; 9
    1504:	b8 01       	movw	r22, r16
    1506:	09 95       	icall
    1508:	89 2b       	or	r24, r25
    150a:	11 f0       	breq	.+4      	; 0x1510 <fputs+0x36>
    150c:	cf ef       	ldi	r28, 0xFF	; 255
    150e:	df ef       	ldi	r29, 0xFF	; 255
    1510:	f7 01       	movw	r30, r14
    1512:	81 91       	ld	r24, Z+
    1514:	7f 01       	movw	r14, r30
    1516:	81 11       	cpse	r24, r1
    1518:	f0 cf       	rjmp	.-32     	; 0x14fa <fputs+0x20>
    151a:	02 c0       	rjmp	.+4      	; 0x1520 <fputs+0x46>
    151c:	cf ef       	ldi	r28, 0xFF	; 255
    151e:	df ef       	ldi	r29, 0xFF	; 255
    1520:	ce 01       	movw	r24, r28
    1522:	df 91       	pop	r29
    1524:	cf 91       	pop	r28
    1526:	1f 91       	pop	r17
    1528:	0f 91       	pop	r16
    152a:	ff 90       	pop	r15
    152c:	ef 90       	pop	r14
    152e:	08 95       	ret

00001530 <sin>:
    1530:	9f 93       	push	r25
    1532:	aa d2       	rcall	.+1364   	; 0x1a88 <__fp_rempio2>
    1534:	0f 90       	pop	r0
    1536:	07 fc       	sbrc	r0, 7
    1538:	ee 5f       	subi	r30, 0xFE	; 254
    153a:	cd c2       	rjmp	.+1434   	; 0x1ad6 <__fp_sinus>

0000153c <vfprintf>:
    153c:	2f 92       	push	r2
    153e:	3f 92       	push	r3
    1540:	4f 92       	push	r4
    1542:	5f 92       	push	r5
    1544:	6f 92       	push	r6
    1546:	7f 92       	push	r7
    1548:	8f 92       	push	r8
    154a:	9f 92       	push	r9
    154c:	af 92       	push	r10
    154e:	bf 92       	push	r11
    1550:	cf 92       	push	r12
    1552:	df 92       	push	r13
    1554:	ef 92       	push	r14
    1556:	ff 92       	push	r15
    1558:	0f 93       	push	r16
    155a:	1f 93       	push	r17
    155c:	cf 93       	push	r28
    155e:	df 93       	push	r29
    1560:	cd b7       	in	r28, 0x3d	; 61
    1562:	de b7       	in	r29, 0x3e	; 62
    1564:	2c 97       	sbiw	r28, 0x0c	; 12
    1566:	0f b6       	in	r0, 0x3f	; 63
    1568:	f8 94       	cli
    156a:	de bf       	out	0x3e, r29	; 62
    156c:	0f be       	out	0x3f, r0	; 63
    156e:	cd bf       	out	0x3d, r28	; 61
    1570:	7c 01       	movw	r14, r24
    1572:	6b 01       	movw	r12, r22
    1574:	8a 01       	movw	r16, r20
    1576:	fc 01       	movw	r30, r24
    1578:	17 82       	std	Z+7, r1	; 0x07
    157a:	16 82       	std	Z+6, r1	; 0x06
    157c:	83 81       	ldd	r24, Z+3	; 0x03
    157e:	81 ff       	sbrs	r24, 1
    1580:	c6 c1       	rjmp	.+908    	; 0x190e <vfprintf+0x3d2>
    1582:	88 24       	eor	r8, r8
    1584:	83 94       	inc	r8
    1586:	91 2c       	mov	r9, r1
    1588:	8c 0e       	add	r8, r28
    158a:	9d 1e       	adc	r9, r29
    158c:	f7 01       	movw	r30, r14
    158e:	93 81       	ldd	r25, Z+3	; 0x03
    1590:	f6 01       	movw	r30, r12
    1592:	93 fd       	sbrc	r25, 3
    1594:	85 91       	lpm	r24, Z+
    1596:	93 ff       	sbrs	r25, 3
    1598:	81 91       	ld	r24, Z+
    159a:	6f 01       	movw	r12, r30
    159c:	88 23       	and	r24, r24
    159e:	09 f4       	brne	.+2      	; 0x15a2 <vfprintf+0x66>
    15a0:	b2 c1       	rjmp	.+868    	; 0x1906 <vfprintf+0x3ca>
    15a2:	85 32       	cpi	r24, 0x25	; 37
    15a4:	39 f4       	brne	.+14     	; 0x15b4 <vfprintf+0x78>
    15a6:	93 fd       	sbrc	r25, 3
    15a8:	85 91       	lpm	r24, Z+
    15aa:	93 ff       	sbrs	r25, 3
    15ac:	81 91       	ld	r24, Z+
    15ae:	6f 01       	movw	r12, r30
    15b0:	85 32       	cpi	r24, 0x25	; 37
    15b2:	29 f4       	brne	.+10     	; 0x15be <vfprintf+0x82>
    15b4:	b7 01       	movw	r22, r14
    15b6:	90 e0       	ldi	r25, 0x00	; 0
    15b8:	0e 94 b9 0c 	call	0x1972	; 0x1972 <fputc>
    15bc:	e7 cf       	rjmp	.-50     	; 0x158c <vfprintf+0x50>
    15be:	51 2c       	mov	r5, r1
    15c0:	31 2c       	mov	r3, r1
    15c2:	20 e0       	ldi	r18, 0x00	; 0
    15c4:	20 32       	cpi	r18, 0x20	; 32
    15c6:	a8 f4       	brcc	.+42     	; 0x15f2 <vfprintf+0xb6>
    15c8:	8b 32       	cpi	r24, 0x2B	; 43
    15ca:	61 f0       	breq	.+24     	; 0x15e4 <vfprintf+0xa8>
    15cc:	28 f4       	brcc	.+10     	; 0x15d8 <vfprintf+0x9c>
    15ce:	80 32       	cpi	r24, 0x20	; 32
    15d0:	51 f0       	breq	.+20     	; 0x15e6 <vfprintf+0xaa>
    15d2:	83 32       	cpi	r24, 0x23	; 35
    15d4:	71 f4       	brne	.+28     	; 0x15f2 <vfprintf+0xb6>
    15d6:	0b c0       	rjmp	.+22     	; 0x15ee <vfprintf+0xb2>
    15d8:	8d 32       	cpi	r24, 0x2D	; 45
    15da:	39 f0       	breq	.+14     	; 0x15ea <vfprintf+0xae>
    15dc:	80 33       	cpi	r24, 0x30	; 48
    15de:	49 f4       	brne	.+18     	; 0x15f2 <vfprintf+0xb6>
    15e0:	21 60       	ori	r18, 0x01	; 1
    15e2:	28 c0       	rjmp	.+80     	; 0x1634 <vfprintf+0xf8>
    15e4:	22 60       	ori	r18, 0x02	; 2
    15e6:	24 60       	ori	r18, 0x04	; 4
    15e8:	25 c0       	rjmp	.+74     	; 0x1634 <vfprintf+0xf8>
    15ea:	28 60       	ori	r18, 0x08	; 8
    15ec:	23 c0       	rjmp	.+70     	; 0x1634 <vfprintf+0xf8>
    15ee:	20 61       	ori	r18, 0x10	; 16
    15f0:	21 c0       	rjmp	.+66     	; 0x1634 <vfprintf+0xf8>
    15f2:	27 fd       	sbrc	r18, 7
    15f4:	27 c0       	rjmp	.+78     	; 0x1644 <vfprintf+0x108>
    15f6:	38 2f       	mov	r19, r24
    15f8:	30 53       	subi	r19, 0x30	; 48
    15fa:	3a 30       	cpi	r19, 0x0A	; 10
    15fc:	78 f4       	brcc	.+30     	; 0x161c <vfprintf+0xe0>
    15fe:	26 ff       	sbrs	r18, 6
    1600:	06 c0       	rjmp	.+12     	; 0x160e <vfprintf+0xd2>
    1602:	fa e0       	ldi	r31, 0x0A	; 10
    1604:	5f 9e       	mul	r5, r31
    1606:	30 0d       	add	r19, r0
    1608:	11 24       	eor	r1, r1
    160a:	53 2e       	mov	r5, r19
    160c:	13 c0       	rjmp	.+38     	; 0x1634 <vfprintf+0xf8>
    160e:	8a e0       	ldi	r24, 0x0A	; 10
    1610:	38 9e       	mul	r3, r24
    1612:	30 0d       	add	r19, r0
    1614:	11 24       	eor	r1, r1
    1616:	33 2e       	mov	r3, r19
    1618:	20 62       	ori	r18, 0x20	; 32
    161a:	0c c0       	rjmp	.+24     	; 0x1634 <vfprintf+0xf8>
    161c:	8e 32       	cpi	r24, 0x2E	; 46
    161e:	21 f4       	brne	.+8      	; 0x1628 <vfprintf+0xec>
    1620:	26 fd       	sbrc	r18, 6
    1622:	71 c1       	rjmp	.+738    	; 0x1906 <vfprintf+0x3ca>
    1624:	20 64       	ori	r18, 0x40	; 64
    1626:	06 c0       	rjmp	.+12     	; 0x1634 <vfprintf+0xf8>
    1628:	8c 36       	cpi	r24, 0x6C	; 108
    162a:	11 f4       	brne	.+4      	; 0x1630 <vfprintf+0xf4>
    162c:	20 68       	ori	r18, 0x80	; 128
    162e:	02 c0       	rjmp	.+4      	; 0x1634 <vfprintf+0xf8>
    1630:	88 36       	cpi	r24, 0x68	; 104
    1632:	41 f4       	brne	.+16     	; 0x1644 <vfprintf+0x108>
    1634:	f6 01       	movw	r30, r12
    1636:	93 fd       	sbrc	r25, 3
    1638:	85 91       	lpm	r24, Z+
    163a:	93 ff       	sbrs	r25, 3
    163c:	81 91       	ld	r24, Z+
    163e:	6f 01       	movw	r12, r30
    1640:	81 11       	cpse	r24, r1
    1642:	c0 cf       	rjmp	.-128    	; 0x15c4 <vfprintf+0x88>
    1644:	98 2f       	mov	r25, r24
    1646:	95 54       	subi	r25, 0x45	; 69
    1648:	93 30       	cpi	r25, 0x03	; 3
    164a:	18 f0       	brcs	.+6      	; 0x1652 <vfprintf+0x116>
    164c:	90 52       	subi	r25, 0x20	; 32
    164e:	93 30       	cpi	r25, 0x03	; 3
    1650:	28 f4       	brcc	.+10     	; 0x165c <vfprintf+0x120>
    1652:	0c 5f       	subi	r16, 0xFC	; 252
    1654:	1f 4f       	sbci	r17, 0xFF	; 255
    1656:	ff e3       	ldi	r31, 0x3F	; 63
    1658:	f9 83       	std	Y+1, r31	; 0x01
    165a:	0d c0       	rjmp	.+26     	; 0x1676 <vfprintf+0x13a>
    165c:	83 36       	cpi	r24, 0x63	; 99
    165e:	31 f0       	breq	.+12     	; 0x166c <vfprintf+0x130>
    1660:	83 37       	cpi	r24, 0x73	; 115
    1662:	71 f0       	breq	.+28     	; 0x1680 <vfprintf+0x144>
    1664:	83 35       	cpi	r24, 0x53	; 83
    1666:	09 f0       	breq	.+2      	; 0x166a <vfprintf+0x12e>
    1668:	5e c0       	rjmp	.+188    	; 0x1726 <vfprintf+0x1ea>
    166a:	23 c0       	rjmp	.+70     	; 0x16b2 <vfprintf+0x176>
    166c:	f8 01       	movw	r30, r16
    166e:	80 81       	ld	r24, Z
    1670:	89 83       	std	Y+1, r24	; 0x01
    1672:	0e 5f       	subi	r16, 0xFE	; 254
    1674:	1f 4f       	sbci	r17, 0xFF	; 255
    1676:	44 24       	eor	r4, r4
    1678:	43 94       	inc	r4
    167a:	51 2c       	mov	r5, r1
    167c:	54 01       	movw	r10, r8
    167e:	15 c0       	rjmp	.+42     	; 0x16aa <vfprintf+0x16e>
    1680:	38 01       	movw	r6, r16
    1682:	f2 e0       	ldi	r31, 0x02	; 2
    1684:	6f 0e       	add	r6, r31
    1686:	71 1c       	adc	r7, r1
    1688:	f8 01       	movw	r30, r16
    168a:	a0 80       	ld	r10, Z
    168c:	b1 80       	ldd	r11, Z+1	; 0x01
    168e:	26 ff       	sbrs	r18, 6
    1690:	03 c0       	rjmp	.+6      	; 0x1698 <vfprintf+0x15c>
    1692:	65 2d       	mov	r22, r5
    1694:	70 e0       	ldi	r23, 0x00	; 0
    1696:	02 c0       	rjmp	.+4      	; 0x169c <vfprintf+0x160>
    1698:	6f ef       	ldi	r22, 0xFF	; 255
    169a:	7f ef       	ldi	r23, 0xFF	; 255
    169c:	c5 01       	movw	r24, r10
    169e:	2c 87       	std	Y+12, r18	; 0x0c
    16a0:	0e 94 ae 0c 	call	0x195c	; 0x195c <strnlen>
    16a4:	2c 01       	movw	r4, r24
    16a6:	83 01       	movw	r16, r6
    16a8:	2c 85       	ldd	r18, Y+12	; 0x0c
    16aa:	6f e7       	ldi	r22, 0x7F	; 127
    16ac:	26 2e       	mov	r2, r22
    16ae:	22 22       	and	r2, r18
    16b0:	18 c0       	rjmp	.+48     	; 0x16e2 <vfprintf+0x1a6>
    16b2:	38 01       	movw	r6, r16
    16b4:	f2 e0       	ldi	r31, 0x02	; 2
    16b6:	6f 0e       	add	r6, r31
    16b8:	71 1c       	adc	r7, r1
    16ba:	f8 01       	movw	r30, r16
    16bc:	a0 80       	ld	r10, Z
    16be:	b1 80       	ldd	r11, Z+1	; 0x01
    16c0:	26 ff       	sbrs	r18, 6
    16c2:	03 c0       	rjmp	.+6      	; 0x16ca <vfprintf+0x18e>
    16c4:	65 2d       	mov	r22, r5
    16c6:	70 e0       	ldi	r23, 0x00	; 0
    16c8:	02 c0       	rjmp	.+4      	; 0x16ce <vfprintf+0x192>
    16ca:	6f ef       	ldi	r22, 0xFF	; 255
    16cc:	7f ef       	ldi	r23, 0xFF	; 255
    16ce:	c5 01       	movw	r24, r10
    16d0:	2c 87       	std	Y+12, r18	; 0x0c
    16d2:	0e 94 a3 0c 	call	0x1946	; 0x1946 <strnlen_P>
    16d6:	2c 01       	movw	r4, r24
    16d8:	2c 85       	ldd	r18, Y+12	; 0x0c
    16da:	50 e8       	ldi	r21, 0x80	; 128
    16dc:	25 2e       	mov	r2, r21
    16de:	22 2a       	or	r2, r18
    16e0:	83 01       	movw	r16, r6
    16e2:	23 fc       	sbrc	r2, 3
    16e4:	1c c0       	rjmp	.+56     	; 0x171e <vfprintf+0x1e2>
    16e6:	06 c0       	rjmp	.+12     	; 0x16f4 <vfprintf+0x1b8>
    16e8:	b7 01       	movw	r22, r14
    16ea:	80 e2       	ldi	r24, 0x20	; 32
    16ec:	90 e0       	ldi	r25, 0x00	; 0
    16ee:	0e 94 b9 0c 	call	0x1972	; 0x1972 <fputc>
    16f2:	3a 94       	dec	r3
    16f4:	83 2d       	mov	r24, r3
    16f6:	90 e0       	ldi	r25, 0x00	; 0
    16f8:	48 16       	cp	r4, r24
    16fa:	59 06       	cpc	r5, r25
    16fc:	a8 f3       	brcs	.-22     	; 0x16e8 <vfprintf+0x1ac>
    16fe:	0f c0       	rjmp	.+30     	; 0x171e <vfprintf+0x1e2>
    1700:	f5 01       	movw	r30, r10
    1702:	27 fc       	sbrc	r2, 7
    1704:	85 91       	lpm	r24, Z+
    1706:	27 fe       	sbrs	r2, 7
    1708:	81 91       	ld	r24, Z+
    170a:	5f 01       	movw	r10, r30
    170c:	b7 01       	movw	r22, r14
    170e:	90 e0       	ldi	r25, 0x00	; 0
    1710:	0e 94 b9 0c 	call	0x1972	; 0x1972 <fputc>
    1714:	31 10       	cpse	r3, r1
    1716:	3a 94       	dec	r3
    1718:	f1 e0       	ldi	r31, 0x01	; 1
    171a:	4f 1a       	sub	r4, r31
    171c:	51 08       	sbc	r5, r1
    171e:	41 14       	cp	r4, r1
    1720:	51 04       	cpc	r5, r1
    1722:	71 f7       	brne	.-36     	; 0x1700 <vfprintf+0x1c4>
    1724:	ed c0       	rjmp	.+474    	; 0x1900 <vfprintf+0x3c4>
    1726:	84 36       	cpi	r24, 0x64	; 100
    1728:	11 f0       	breq	.+4      	; 0x172e <vfprintf+0x1f2>
    172a:	89 36       	cpi	r24, 0x69	; 105
    172c:	41 f5       	brne	.+80     	; 0x177e <vfprintf+0x242>
    172e:	f8 01       	movw	r30, r16
    1730:	27 ff       	sbrs	r18, 7
    1732:	07 c0       	rjmp	.+14     	; 0x1742 <vfprintf+0x206>
    1734:	60 81       	ld	r22, Z
    1736:	71 81       	ldd	r23, Z+1	; 0x01
    1738:	82 81       	ldd	r24, Z+2	; 0x02
    173a:	93 81       	ldd	r25, Z+3	; 0x03
    173c:	0c 5f       	subi	r16, 0xFC	; 252
    173e:	1f 4f       	sbci	r17, 0xFF	; 255
    1740:	08 c0       	rjmp	.+16     	; 0x1752 <vfprintf+0x216>
    1742:	60 81       	ld	r22, Z
    1744:	71 81       	ldd	r23, Z+1	; 0x01
    1746:	88 27       	eor	r24, r24
    1748:	77 fd       	sbrc	r23, 7
    174a:	80 95       	com	r24
    174c:	98 2f       	mov	r25, r24
    174e:	0e 5f       	subi	r16, 0xFE	; 254
    1750:	1f 4f       	sbci	r17, 0xFF	; 255
    1752:	4f e6       	ldi	r20, 0x6F	; 111
    1754:	b4 2e       	mov	r11, r20
    1756:	b2 22       	and	r11, r18
    1758:	97 ff       	sbrs	r25, 7
    175a:	09 c0       	rjmp	.+18     	; 0x176e <vfprintf+0x232>
    175c:	90 95       	com	r25
    175e:	80 95       	com	r24
    1760:	70 95       	com	r23
    1762:	61 95       	neg	r22
    1764:	7f 4f       	sbci	r23, 0xFF	; 255
    1766:	8f 4f       	sbci	r24, 0xFF	; 255
    1768:	9f 4f       	sbci	r25, 0xFF	; 255
    176a:	f0 e8       	ldi	r31, 0x80	; 128
    176c:	bf 2a       	or	r11, r31
    176e:	2a e0       	ldi	r18, 0x0A	; 10
    1770:	30 e0       	ldi	r19, 0x00	; 0
    1772:	a4 01       	movw	r20, r8
    1774:	0e 94 e5 0c 	call	0x19ca	; 0x19ca <__ultoa_invert>
    1778:	a8 2e       	mov	r10, r24
    177a:	a8 18       	sub	r10, r8
    177c:	43 c0       	rjmp	.+134    	; 0x1804 <vfprintf+0x2c8>
    177e:	85 37       	cpi	r24, 0x75	; 117
    1780:	31 f4       	brne	.+12     	; 0x178e <vfprintf+0x252>
    1782:	3f ee       	ldi	r19, 0xEF	; 239
    1784:	b3 2e       	mov	r11, r19
    1786:	b2 22       	and	r11, r18
    1788:	2a e0       	ldi	r18, 0x0A	; 10
    178a:	30 e0       	ldi	r19, 0x00	; 0
    178c:	24 c0       	rjmp	.+72     	; 0x17d6 <vfprintf+0x29a>
    178e:	99 ef       	ldi	r25, 0xF9	; 249
    1790:	b9 2e       	mov	r11, r25
    1792:	b2 22       	and	r11, r18
    1794:	8f 36       	cpi	r24, 0x6F	; 111
    1796:	b9 f0       	breq	.+46     	; 0x17c6 <vfprintf+0x28a>
    1798:	20 f4       	brcc	.+8      	; 0x17a2 <vfprintf+0x266>
    179a:	88 35       	cpi	r24, 0x58	; 88
    179c:	09 f0       	breq	.+2      	; 0x17a0 <vfprintf+0x264>
    179e:	b3 c0       	rjmp	.+358    	; 0x1906 <vfprintf+0x3ca>
    17a0:	0d c0       	rjmp	.+26     	; 0x17bc <vfprintf+0x280>
    17a2:	80 37       	cpi	r24, 0x70	; 112
    17a4:	21 f0       	breq	.+8      	; 0x17ae <vfprintf+0x272>
    17a6:	88 37       	cpi	r24, 0x78	; 120
    17a8:	09 f0       	breq	.+2      	; 0x17ac <vfprintf+0x270>
    17aa:	ad c0       	rjmp	.+346    	; 0x1906 <vfprintf+0x3ca>
    17ac:	02 c0       	rjmp	.+4      	; 0x17b2 <vfprintf+0x276>
    17ae:	20 e1       	ldi	r18, 0x10	; 16
    17b0:	b2 2a       	or	r11, r18
    17b2:	b4 fe       	sbrs	r11, 4
    17b4:	0b c0       	rjmp	.+22     	; 0x17cc <vfprintf+0x290>
    17b6:	84 e0       	ldi	r24, 0x04	; 4
    17b8:	b8 2a       	or	r11, r24
    17ba:	08 c0       	rjmp	.+16     	; 0x17cc <vfprintf+0x290>
    17bc:	24 ff       	sbrs	r18, 4
    17be:	09 c0       	rjmp	.+18     	; 0x17d2 <vfprintf+0x296>
    17c0:	e6 e0       	ldi	r30, 0x06	; 6
    17c2:	be 2a       	or	r11, r30
    17c4:	06 c0       	rjmp	.+12     	; 0x17d2 <vfprintf+0x296>
    17c6:	28 e0       	ldi	r18, 0x08	; 8
    17c8:	30 e0       	ldi	r19, 0x00	; 0
    17ca:	05 c0       	rjmp	.+10     	; 0x17d6 <vfprintf+0x29a>
    17cc:	20 e1       	ldi	r18, 0x10	; 16
    17ce:	30 e0       	ldi	r19, 0x00	; 0
    17d0:	02 c0       	rjmp	.+4      	; 0x17d6 <vfprintf+0x29a>
    17d2:	20 e1       	ldi	r18, 0x10	; 16
    17d4:	32 e0       	ldi	r19, 0x02	; 2
    17d6:	f8 01       	movw	r30, r16
    17d8:	b7 fe       	sbrs	r11, 7
    17da:	07 c0       	rjmp	.+14     	; 0x17ea <vfprintf+0x2ae>
    17dc:	60 81       	ld	r22, Z
    17de:	71 81       	ldd	r23, Z+1	; 0x01
    17e0:	82 81       	ldd	r24, Z+2	; 0x02
    17e2:	93 81       	ldd	r25, Z+3	; 0x03
    17e4:	0c 5f       	subi	r16, 0xFC	; 252
    17e6:	1f 4f       	sbci	r17, 0xFF	; 255
    17e8:	06 c0       	rjmp	.+12     	; 0x17f6 <vfprintf+0x2ba>
    17ea:	60 81       	ld	r22, Z
    17ec:	71 81       	ldd	r23, Z+1	; 0x01
    17ee:	80 e0       	ldi	r24, 0x00	; 0
    17f0:	90 e0       	ldi	r25, 0x00	; 0
    17f2:	0e 5f       	subi	r16, 0xFE	; 254
    17f4:	1f 4f       	sbci	r17, 0xFF	; 255
    17f6:	a4 01       	movw	r20, r8
    17f8:	0e 94 e5 0c 	call	0x19ca	; 0x19ca <__ultoa_invert>
    17fc:	a8 2e       	mov	r10, r24
    17fe:	a8 18       	sub	r10, r8
    1800:	ff e7       	ldi	r31, 0x7F	; 127
    1802:	bf 22       	and	r11, r31
    1804:	b6 fe       	sbrs	r11, 6
    1806:	0b c0       	rjmp	.+22     	; 0x181e <vfprintf+0x2e2>
    1808:	2b 2d       	mov	r18, r11
    180a:	2e 7f       	andi	r18, 0xFE	; 254
    180c:	a5 14       	cp	r10, r5
    180e:	50 f4       	brcc	.+20     	; 0x1824 <vfprintf+0x2e8>
    1810:	b4 fe       	sbrs	r11, 4
    1812:	0a c0       	rjmp	.+20     	; 0x1828 <vfprintf+0x2ec>
    1814:	b2 fc       	sbrc	r11, 2
    1816:	08 c0       	rjmp	.+16     	; 0x1828 <vfprintf+0x2ec>
    1818:	2b 2d       	mov	r18, r11
    181a:	2e 7e       	andi	r18, 0xEE	; 238
    181c:	05 c0       	rjmp	.+10     	; 0x1828 <vfprintf+0x2ec>
    181e:	7a 2c       	mov	r7, r10
    1820:	2b 2d       	mov	r18, r11
    1822:	03 c0       	rjmp	.+6      	; 0x182a <vfprintf+0x2ee>
    1824:	7a 2c       	mov	r7, r10
    1826:	01 c0       	rjmp	.+2      	; 0x182a <vfprintf+0x2ee>
    1828:	75 2c       	mov	r7, r5
    182a:	24 ff       	sbrs	r18, 4
    182c:	0d c0       	rjmp	.+26     	; 0x1848 <vfprintf+0x30c>
    182e:	fe 01       	movw	r30, r28
    1830:	ea 0d       	add	r30, r10
    1832:	f1 1d       	adc	r31, r1
    1834:	80 81       	ld	r24, Z
    1836:	80 33       	cpi	r24, 0x30	; 48
    1838:	11 f4       	brne	.+4      	; 0x183e <vfprintf+0x302>
    183a:	29 7e       	andi	r18, 0xE9	; 233
    183c:	09 c0       	rjmp	.+18     	; 0x1850 <vfprintf+0x314>
    183e:	22 ff       	sbrs	r18, 2
    1840:	06 c0       	rjmp	.+12     	; 0x184e <vfprintf+0x312>
    1842:	73 94       	inc	r7
    1844:	73 94       	inc	r7
    1846:	04 c0       	rjmp	.+8      	; 0x1850 <vfprintf+0x314>
    1848:	82 2f       	mov	r24, r18
    184a:	86 78       	andi	r24, 0x86	; 134
    184c:	09 f0       	breq	.+2      	; 0x1850 <vfprintf+0x314>
    184e:	73 94       	inc	r7
    1850:	23 fd       	sbrc	r18, 3
    1852:	14 c0       	rjmp	.+40     	; 0x187c <vfprintf+0x340>
    1854:	20 ff       	sbrs	r18, 0
    1856:	0f c0       	rjmp	.+30     	; 0x1876 <vfprintf+0x33a>
    1858:	5a 2c       	mov	r5, r10
    185a:	73 14       	cp	r7, r3
    185c:	60 f4       	brcc	.+24     	; 0x1876 <vfprintf+0x33a>
    185e:	53 0c       	add	r5, r3
    1860:	57 18       	sub	r5, r7
    1862:	73 2c       	mov	r7, r3
    1864:	08 c0       	rjmp	.+16     	; 0x1876 <vfprintf+0x33a>
    1866:	b7 01       	movw	r22, r14
    1868:	80 e2       	ldi	r24, 0x20	; 32
    186a:	90 e0       	ldi	r25, 0x00	; 0
    186c:	2c 87       	std	Y+12, r18	; 0x0c
    186e:	0e 94 b9 0c 	call	0x1972	; 0x1972 <fputc>
    1872:	73 94       	inc	r7
    1874:	2c 85       	ldd	r18, Y+12	; 0x0c
    1876:	73 14       	cp	r7, r3
    1878:	b0 f3       	brcs	.-20     	; 0x1866 <vfprintf+0x32a>
    187a:	04 c0       	rjmp	.+8      	; 0x1884 <vfprintf+0x348>
    187c:	73 14       	cp	r7, r3
    187e:	10 f4       	brcc	.+4      	; 0x1884 <vfprintf+0x348>
    1880:	37 18       	sub	r3, r7
    1882:	01 c0       	rjmp	.+2      	; 0x1886 <vfprintf+0x34a>
    1884:	31 2c       	mov	r3, r1
    1886:	24 ff       	sbrs	r18, 4
    1888:	12 c0       	rjmp	.+36     	; 0x18ae <vfprintf+0x372>
    188a:	b7 01       	movw	r22, r14
    188c:	80 e3       	ldi	r24, 0x30	; 48
    188e:	90 e0       	ldi	r25, 0x00	; 0
    1890:	2c 87       	std	Y+12, r18	; 0x0c
    1892:	0e 94 b9 0c 	call	0x1972	; 0x1972 <fputc>
    1896:	2c 85       	ldd	r18, Y+12	; 0x0c
    1898:	22 ff       	sbrs	r18, 2
    189a:	1e c0       	rjmp	.+60     	; 0x18d8 <vfprintf+0x39c>
    189c:	21 ff       	sbrs	r18, 1
    189e:	03 c0       	rjmp	.+6      	; 0x18a6 <vfprintf+0x36a>
    18a0:	88 e5       	ldi	r24, 0x58	; 88
    18a2:	90 e0       	ldi	r25, 0x00	; 0
    18a4:	02 c0       	rjmp	.+4      	; 0x18aa <vfprintf+0x36e>
    18a6:	88 e7       	ldi	r24, 0x78	; 120
    18a8:	90 e0       	ldi	r25, 0x00	; 0
    18aa:	b7 01       	movw	r22, r14
    18ac:	0c c0       	rjmp	.+24     	; 0x18c6 <vfprintf+0x38a>
    18ae:	82 2f       	mov	r24, r18
    18b0:	86 78       	andi	r24, 0x86	; 134
    18b2:	91 f0       	breq	.+36     	; 0x18d8 <vfprintf+0x39c>
    18b4:	21 fd       	sbrc	r18, 1
    18b6:	02 c0       	rjmp	.+4      	; 0x18bc <vfprintf+0x380>
    18b8:	80 e2       	ldi	r24, 0x20	; 32
    18ba:	01 c0       	rjmp	.+2      	; 0x18be <vfprintf+0x382>
    18bc:	8b e2       	ldi	r24, 0x2B	; 43
    18be:	27 fd       	sbrc	r18, 7
    18c0:	8d e2       	ldi	r24, 0x2D	; 45
    18c2:	b7 01       	movw	r22, r14
    18c4:	90 e0       	ldi	r25, 0x00	; 0
    18c6:	0e 94 b9 0c 	call	0x1972	; 0x1972 <fputc>
    18ca:	06 c0       	rjmp	.+12     	; 0x18d8 <vfprintf+0x39c>
    18cc:	b7 01       	movw	r22, r14
    18ce:	80 e3       	ldi	r24, 0x30	; 48
    18d0:	90 e0       	ldi	r25, 0x00	; 0
    18d2:	0e 94 b9 0c 	call	0x1972	; 0x1972 <fputc>
    18d6:	5a 94       	dec	r5
    18d8:	a5 14       	cp	r10, r5
    18da:	c0 f3       	brcs	.-16     	; 0x18cc <vfprintf+0x390>
    18dc:	aa 94       	dec	r10
    18de:	f4 01       	movw	r30, r8
    18e0:	ea 0d       	add	r30, r10
    18e2:	f1 1d       	adc	r31, r1
    18e4:	b7 01       	movw	r22, r14
    18e6:	80 81       	ld	r24, Z
    18e8:	90 e0       	ldi	r25, 0x00	; 0
    18ea:	0e 94 b9 0c 	call	0x1972	; 0x1972 <fputc>
    18ee:	a1 10       	cpse	r10, r1
    18f0:	f5 cf       	rjmp	.-22     	; 0x18dc <vfprintf+0x3a0>
    18f2:	06 c0       	rjmp	.+12     	; 0x1900 <vfprintf+0x3c4>
    18f4:	b7 01       	movw	r22, r14
    18f6:	80 e2       	ldi	r24, 0x20	; 32
    18f8:	90 e0       	ldi	r25, 0x00	; 0
    18fa:	0e 94 b9 0c 	call	0x1972	; 0x1972 <fputc>
    18fe:	3a 94       	dec	r3
    1900:	31 10       	cpse	r3, r1
    1902:	f8 cf       	rjmp	.-16     	; 0x18f4 <vfprintf+0x3b8>
    1904:	43 ce       	rjmp	.-890    	; 0x158c <vfprintf+0x50>
    1906:	f7 01       	movw	r30, r14
    1908:	26 81       	ldd	r18, Z+6	; 0x06
    190a:	37 81       	ldd	r19, Z+7	; 0x07
    190c:	02 c0       	rjmp	.+4      	; 0x1912 <vfprintf+0x3d6>
    190e:	2f ef       	ldi	r18, 0xFF	; 255
    1910:	3f ef       	ldi	r19, 0xFF	; 255
    1912:	c9 01       	movw	r24, r18
    1914:	2c 96       	adiw	r28, 0x0c	; 12
    1916:	0f b6       	in	r0, 0x3f	; 63
    1918:	f8 94       	cli
    191a:	de bf       	out	0x3e, r29	; 62
    191c:	0f be       	out	0x3f, r0	; 63
    191e:	cd bf       	out	0x3d, r28	; 61
    1920:	df 91       	pop	r29
    1922:	cf 91       	pop	r28
    1924:	1f 91       	pop	r17
    1926:	0f 91       	pop	r16
    1928:	ff 90       	pop	r15
    192a:	ef 90       	pop	r14
    192c:	df 90       	pop	r13
    192e:	cf 90       	pop	r12
    1930:	bf 90       	pop	r11
    1932:	af 90       	pop	r10
    1934:	9f 90       	pop	r9
    1936:	8f 90       	pop	r8
    1938:	7f 90       	pop	r7
    193a:	6f 90       	pop	r6
    193c:	5f 90       	pop	r5
    193e:	4f 90       	pop	r4
    1940:	3f 90       	pop	r3
    1942:	2f 90       	pop	r2
    1944:	08 95       	ret

00001946 <strnlen_P>:
    1946:	fc 01       	movw	r30, r24
    1948:	05 90       	lpm	r0, Z+
    194a:	61 50       	subi	r22, 0x01	; 1
    194c:	70 40       	sbci	r23, 0x00	; 0
    194e:	01 10       	cpse	r0, r1
    1950:	d8 f7       	brcc	.-10     	; 0x1948 <strnlen_P+0x2>
    1952:	80 95       	com	r24
    1954:	90 95       	com	r25
    1956:	8e 0f       	add	r24, r30
    1958:	9f 1f       	adc	r25, r31
    195a:	08 95       	ret

0000195c <strnlen>:
    195c:	fc 01       	movw	r30, r24
    195e:	61 50       	subi	r22, 0x01	; 1
    1960:	70 40       	sbci	r23, 0x00	; 0
    1962:	01 90       	ld	r0, Z+
    1964:	01 10       	cpse	r0, r1
    1966:	d8 f7       	brcc	.-10     	; 0x195e <strnlen+0x2>
    1968:	80 95       	com	r24
    196a:	90 95       	com	r25
    196c:	8e 0f       	add	r24, r30
    196e:	9f 1f       	adc	r25, r31
    1970:	08 95       	ret

00001972 <fputc>:
    1972:	0f 93       	push	r16
    1974:	1f 93       	push	r17
    1976:	cf 93       	push	r28
    1978:	df 93       	push	r29
    197a:	8c 01       	movw	r16, r24
    197c:	eb 01       	movw	r28, r22
    197e:	8b 81       	ldd	r24, Y+3	; 0x03
    1980:	81 fd       	sbrc	r24, 1
    1982:	03 c0       	rjmp	.+6      	; 0x198a <fputc+0x18>
    1984:	0f ef       	ldi	r16, 0xFF	; 255
    1986:	1f ef       	ldi	r17, 0xFF	; 255
    1988:	1a c0       	rjmp	.+52     	; 0x19be <fputc+0x4c>
    198a:	82 ff       	sbrs	r24, 2
    198c:	0d c0       	rjmp	.+26     	; 0x19a8 <fputc+0x36>
    198e:	2e 81       	ldd	r18, Y+6	; 0x06
    1990:	3f 81       	ldd	r19, Y+7	; 0x07
    1992:	8c 81       	ldd	r24, Y+4	; 0x04
    1994:	9d 81       	ldd	r25, Y+5	; 0x05
    1996:	28 17       	cp	r18, r24
    1998:	39 07       	cpc	r19, r25
    199a:	64 f4       	brge	.+24     	; 0x19b4 <fputc+0x42>
    199c:	e8 81       	ld	r30, Y
    199e:	f9 81       	ldd	r31, Y+1	; 0x01
    19a0:	01 93       	st	Z+, r16
    19a2:	f9 83       	std	Y+1, r31	; 0x01
    19a4:	e8 83       	st	Y, r30
    19a6:	06 c0       	rjmp	.+12     	; 0x19b4 <fputc+0x42>
    19a8:	e8 85       	ldd	r30, Y+8	; 0x08
    19aa:	f9 85       	ldd	r31, Y+9	; 0x09
    19ac:	80 2f       	mov	r24, r16
    19ae:	09 95       	icall
    19b0:	89 2b       	or	r24, r25
    19b2:	41 f7       	brne	.-48     	; 0x1984 <fputc+0x12>
    19b4:	8e 81       	ldd	r24, Y+6	; 0x06
    19b6:	9f 81       	ldd	r25, Y+7	; 0x07
    19b8:	01 96       	adiw	r24, 0x01	; 1
    19ba:	9f 83       	std	Y+7, r25	; 0x07
    19bc:	8e 83       	std	Y+6, r24	; 0x06
    19be:	c8 01       	movw	r24, r16
    19c0:	df 91       	pop	r29
    19c2:	cf 91       	pop	r28
    19c4:	1f 91       	pop	r17
    19c6:	0f 91       	pop	r16
    19c8:	08 95       	ret

000019ca <__ultoa_invert>:
    19ca:	fa 01       	movw	r30, r20
    19cc:	aa 27       	eor	r26, r26
    19ce:	28 30       	cpi	r18, 0x08	; 8
    19d0:	51 f1       	breq	.+84     	; 0x1a26 <__ultoa_invert+0x5c>
    19d2:	20 31       	cpi	r18, 0x10	; 16
    19d4:	81 f1       	breq	.+96     	; 0x1a36 <__ultoa_invert+0x6c>
    19d6:	e8 94       	clt
    19d8:	6f 93       	push	r22
    19da:	6e 7f       	andi	r22, 0xFE	; 254
    19dc:	6e 5f       	subi	r22, 0xFE	; 254
    19de:	7f 4f       	sbci	r23, 0xFF	; 255
    19e0:	8f 4f       	sbci	r24, 0xFF	; 255
    19e2:	9f 4f       	sbci	r25, 0xFF	; 255
    19e4:	af 4f       	sbci	r26, 0xFF	; 255
    19e6:	b1 e0       	ldi	r27, 0x01	; 1
    19e8:	3e d0       	rcall	.+124    	; 0x1a66 <__ultoa_invert+0x9c>
    19ea:	b4 e0       	ldi	r27, 0x04	; 4
    19ec:	3c d0       	rcall	.+120    	; 0x1a66 <__ultoa_invert+0x9c>
    19ee:	67 0f       	add	r22, r23
    19f0:	78 1f       	adc	r23, r24
    19f2:	89 1f       	adc	r24, r25
    19f4:	9a 1f       	adc	r25, r26
    19f6:	a1 1d       	adc	r26, r1
    19f8:	68 0f       	add	r22, r24
    19fa:	79 1f       	adc	r23, r25
    19fc:	8a 1f       	adc	r24, r26
    19fe:	91 1d       	adc	r25, r1
    1a00:	a1 1d       	adc	r26, r1
    1a02:	6a 0f       	add	r22, r26
    1a04:	71 1d       	adc	r23, r1
    1a06:	81 1d       	adc	r24, r1
    1a08:	91 1d       	adc	r25, r1
    1a0a:	a1 1d       	adc	r26, r1
    1a0c:	20 d0       	rcall	.+64     	; 0x1a4e <__ultoa_invert+0x84>
    1a0e:	09 f4       	brne	.+2      	; 0x1a12 <__ultoa_invert+0x48>
    1a10:	68 94       	set
    1a12:	3f 91       	pop	r19
    1a14:	2a e0       	ldi	r18, 0x0A	; 10
    1a16:	26 9f       	mul	r18, r22
    1a18:	11 24       	eor	r1, r1
    1a1a:	30 19       	sub	r19, r0
    1a1c:	30 5d       	subi	r19, 0xD0	; 208
    1a1e:	31 93       	st	Z+, r19
    1a20:	de f6       	brtc	.-74     	; 0x19d8 <__ultoa_invert+0xe>
    1a22:	cf 01       	movw	r24, r30
    1a24:	08 95       	ret
    1a26:	46 2f       	mov	r20, r22
    1a28:	47 70       	andi	r20, 0x07	; 7
    1a2a:	40 5d       	subi	r20, 0xD0	; 208
    1a2c:	41 93       	st	Z+, r20
    1a2e:	b3 e0       	ldi	r27, 0x03	; 3
    1a30:	0f d0       	rcall	.+30     	; 0x1a50 <__ultoa_invert+0x86>
    1a32:	c9 f7       	brne	.-14     	; 0x1a26 <__ultoa_invert+0x5c>
    1a34:	f6 cf       	rjmp	.-20     	; 0x1a22 <__ultoa_invert+0x58>
    1a36:	46 2f       	mov	r20, r22
    1a38:	4f 70       	andi	r20, 0x0F	; 15
    1a3a:	40 5d       	subi	r20, 0xD0	; 208
    1a3c:	4a 33       	cpi	r20, 0x3A	; 58
    1a3e:	18 f0       	brcs	.+6      	; 0x1a46 <__ultoa_invert+0x7c>
    1a40:	49 5d       	subi	r20, 0xD9	; 217
    1a42:	31 fd       	sbrc	r19, 1
    1a44:	40 52       	subi	r20, 0x20	; 32
    1a46:	41 93       	st	Z+, r20
    1a48:	02 d0       	rcall	.+4      	; 0x1a4e <__ultoa_invert+0x84>
    1a4a:	a9 f7       	brne	.-22     	; 0x1a36 <__ultoa_invert+0x6c>
    1a4c:	ea cf       	rjmp	.-44     	; 0x1a22 <__ultoa_invert+0x58>
    1a4e:	b4 e0       	ldi	r27, 0x04	; 4
    1a50:	a6 95       	lsr	r26
    1a52:	97 95       	ror	r25
    1a54:	87 95       	ror	r24
    1a56:	77 95       	ror	r23
    1a58:	67 95       	ror	r22
    1a5a:	ba 95       	dec	r27
    1a5c:	c9 f7       	brne	.-14     	; 0x1a50 <__ultoa_invert+0x86>
    1a5e:	00 97       	sbiw	r24, 0x00	; 0
    1a60:	61 05       	cpc	r22, r1
    1a62:	71 05       	cpc	r23, r1
    1a64:	08 95       	ret
    1a66:	9b 01       	movw	r18, r22
    1a68:	ac 01       	movw	r20, r24
    1a6a:	0a 2e       	mov	r0, r26
    1a6c:	06 94       	lsr	r0
    1a6e:	57 95       	ror	r21
    1a70:	47 95       	ror	r20
    1a72:	37 95       	ror	r19
    1a74:	27 95       	ror	r18
    1a76:	ba 95       	dec	r27
    1a78:	c9 f7       	brne	.-14     	; 0x1a6c <__ultoa_invert+0xa2>
    1a7a:	62 0f       	add	r22, r18
    1a7c:	73 1f       	adc	r23, r19
    1a7e:	84 1f       	adc	r24, r20
    1a80:	95 1f       	adc	r25, r21
    1a82:	a0 1d       	adc	r26, r0
    1a84:	08 95       	ret
    1a86:	ce c0       	rjmp	.+412    	; 0x1c24 <__fp_nan>

00001a88 <__fp_rempio2>:
    1a88:	3f d0       	rcall	.+126    	; 0x1b08 <__fp_splitA>
    1a8a:	e8 f3       	brcs	.-6      	; 0x1a86 <__ultoa_invert+0xbc>
    1a8c:	e8 94       	clt
    1a8e:	e0 e0       	ldi	r30, 0x00	; 0
    1a90:	bb 27       	eor	r27, r27
    1a92:	9f 57       	subi	r25, 0x7F	; 127
    1a94:	f0 f0       	brcs	.+60     	; 0x1ad2 <__fp_rempio2+0x4a>
    1a96:	2a ed       	ldi	r18, 0xDA	; 218
    1a98:	3f e0       	ldi	r19, 0x0F	; 15
    1a9a:	49 ec       	ldi	r20, 0xC9	; 201
    1a9c:	06 c0       	rjmp	.+12     	; 0x1aaa <__fp_rempio2+0x22>
    1a9e:	ee 0f       	add	r30, r30
    1aa0:	bb 0f       	add	r27, r27
    1aa2:	66 1f       	adc	r22, r22
    1aa4:	77 1f       	adc	r23, r23
    1aa6:	88 1f       	adc	r24, r24
    1aa8:	28 f0       	brcs	.+10     	; 0x1ab4 <__fp_rempio2+0x2c>
    1aaa:	b2 3a       	cpi	r27, 0xA2	; 162
    1aac:	62 07       	cpc	r22, r18
    1aae:	73 07       	cpc	r23, r19
    1ab0:	84 07       	cpc	r24, r20
    1ab2:	28 f0       	brcs	.+10     	; 0x1abe <__fp_rempio2+0x36>
    1ab4:	b2 5a       	subi	r27, 0xA2	; 162
    1ab6:	62 0b       	sbc	r22, r18
    1ab8:	73 0b       	sbc	r23, r19
    1aba:	84 0b       	sbc	r24, r20
    1abc:	e3 95       	inc	r30
    1abe:	9a 95       	dec	r25
    1ac0:	72 f7       	brpl	.-36     	; 0x1a9e <__fp_rempio2+0x16>
    1ac2:	80 38       	cpi	r24, 0x80	; 128
    1ac4:	30 f4       	brcc	.+12     	; 0x1ad2 <__fp_rempio2+0x4a>
    1ac6:	9a 95       	dec	r25
    1ac8:	bb 0f       	add	r27, r27
    1aca:	66 1f       	adc	r22, r22
    1acc:	77 1f       	adc	r23, r23
    1ace:	88 1f       	adc	r24, r24
    1ad0:	d2 f7       	brpl	.-12     	; 0x1ac6 <__fp_rempio2+0x3e>
    1ad2:	90 48       	sbci	r25, 0x80	; 128
    1ad4:	9b c0       	rjmp	.+310    	; 0x1c0c <__fp_mpack_finite>

00001ad6 <__fp_sinus>:
    1ad6:	ef 93       	push	r30
    1ad8:	e0 ff       	sbrs	r30, 0
    1ada:	06 c0       	rjmp	.+12     	; 0x1ae8 <__fp_sinus+0x12>
    1adc:	a2 ea       	ldi	r26, 0xA2	; 162
    1ade:	2a ed       	ldi	r18, 0xDA	; 218
    1ae0:	3f e0       	ldi	r19, 0x0F	; 15
    1ae2:	49 ec       	ldi	r20, 0xC9	; 201
    1ae4:	5f eb       	ldi	r21, 0xBF	; 191
    1ae6:	37 d0       	rcall	.+110    	; 0x1b56 <__addsf3x>
    1ae8:	bf d0       	rcall	.+382    	; 0x1c68 <__fp_round>
    1aea:	0f 90       	pop	r0
    1aec:	03 94       	inc	r0
    1aee:	01 fc       	sbrc	r0, 1
    1af0:	90 58       	subi	r25, 0x80	; 128
    1af2:	ec e8       	ldi	r30, 0x8C	; 140
    1af4:	f0 e0       	ldi	r31, 0x00	; 0
    1af6:	99 c0       	rjmp	.+306    	; 0x1c2a <__fp_powsodd>

00001af8 <__fp_split3>:
    1af8:	57 fd       	sbrc	r21, 7
    1afa:	90 58       	subi	r25, 0x80	; 128
    1afc:	44 0f       	add	r20, r20
    1afe:	55 1f       	adc	r21, r21
    1b00:	59 f0       	breq	.+22     	; 0x1b18 <__fp_splitA+0x10>
    1b02:	5f 3f       	cpi	r21, 0xFF	; 255
    1b04:	71 f0       	breq	.+28     	; 0x1b22 <__fp_splitA+0x1a>
    1b06:	47 95       	ror	r20

00001b08 <__fp_splitA>:
    1b08:	88 0f       	add	r24, r24
    1b0a:	97 fb       	bst	r25, 7
    1b0c:	99 1f       	adc	r25, r25
    1b0e:	61 f0       	breq	.+24     	; 0x1b28 <__fp_splitA+0x20>
    1b10:	9f 3f       	cpi	r25, 0xFF	; 255
    1b12:	79 f0       	breq	.+30     	; 0x1b32 <__fp_splitA+0x2a>
    1b14:	87 95       	ror	r24
    1b16:	08 95       	ret
    1b18:	12 16       	cp	r1, r18
    1b1a:	13 06       	cpc	r1, r19
    1b1c:	14 06       	cpc	r1, r20
    1b1e:	55 1f       	adc	r21, r21
    1b20:	f2 cf       	rjmp	.-28     	; 0x1b06 <__fp_split3+0xe>
    1b22:	46 95       	lsr	r20
    1b24:	f1 df       	rcall	.-30     	; 0x1b08 <__fp_splitA>
    1b26:	08 c0       	rjmp	.+16     	; 0x1b38 <__fp_splitA+0x30>
    1b28:	16 16       	cp	r1, r22
    1b2a:	17 06       	cpc	r1, r23
    1b2c:	18 06       	cpc	r1, r24
    1b2e:	99 1f       	adc	r25, r25
    1b30:	f1 cf       	rjmp	.-30     	; 0x1b14 <__fp_splitA+0xc>
    1b32:	86 95       	lsr	r24
    1b34:	71 05       	cpc	r23, r1
    1b36:	61 05       	cpc	r22, r1
    1b38:	08 94       	sec
    1b3a:	08 95       	ret
    1b3c:	87 d0       	rcall	.+270    	; 0x1c4c <__fp_pscA>
    1b3e:	30 f0       	brcs	.+12     	; 0x1b4c <__fp_splitA+0x44>
    1b40:	8c d0       	rcall	.+280    	; 0x1c5a <__fp_pscB>
    1b42:	20 f0       	brcs	.+8      	; 0x1b4c <__fp_splitA+0x44>
    1b44:	31 f4       	brne	.+12     	; 0x1b52 <__fp_splitA+0x4a>
    1b46:	9f 3f       	cpi	r25, 0xFF	; 255
    1b48:	11 f4       	brne	.+4      	; 0x1b4e <__fp_splitA+0x46>
    1b4a:	1e f4       	brtc	.+6      	; 0x1b52 <__fp_splitA+0x4a>
    1b4c:	6b c0       	rjmp	.+214    	; 0x1c24 <__fp_nan>
    1b4e:	0e f4       	brtc	.+2      	; 0x1b52 <__fp_splitA+0x4a>
    1b50:	e0 95       	com	r30
    1b52:	e7 fb       	bst	r30, 7
    1b54:	53 c0       	rjmp	.+166    	; 0x1bfc <__fp_inf>

00001b56 <__addsf3x>:
    1b56:	e9 2f       	mov	r30, r25
    1b58:	cf df       	rcall	.-98     	; 0x1af8 <__fp_split3>
    1b5a:	80 f3       	brcs	.-32     	; 0x1b3c <__fp_splitA+0x34>
    1b5c:	ba 17       	cp	r27, r26
    1b5e:	62 07       	cpc	r22, r18
    1b60:	73 07       	cpc	r23, r19
    1b62:	84 07       	cpc	r24, r20
    1b64:	95 07       	cpc	r25, r21
    1b66:	18 f0       	brcs	.+6      	; 0x1b6e <__addsf3x+0x18>
    1b68:	71 f4       	brne	.+28     	; 0x1b86 <__addsf3x+0x30>
    1b6a:	9e f5       	brtc	.+102    	; 0x1bd2 <__addsf3x+0x7c>
    1b6c:	8e c0       	rjmp	.+284    	; 0x1c8a <__fp_zero>
    1b6e:	0e f4       	brtc	.+2      	; 0x1b72 <__addsf3x+0x1c>
    1b70:	e0 95       	com	r30
    1b72:	0b 2e       	mov	r0, r27
    1b74:	ba 2f       	mov	r27, r26
    1b76:	a0 2d       	mov	r26, r0
    1b78:	0b 01       	movw	r0, r22
    1b7a:	b9 01       	movw	r22, r18
    1b7c:	90 01       	movw	r18, r0
    1b7e:	0c 01       	movw	r0, r24
    1b80:	ca 01       	movw	r24, r20
    1b82:	a0 01       	movw	r20, r0
    1b84:	11 24       	eor	r1, r1
    1b86:	ff 27       	eor	r31, r31
    1b88:	59 1b       	sub	r21, r25
    1b8a:	99 f0       	breq	.+38     	; 0x1bb2 <__addsf3x+0x5c>
    1b8c:	59 3f       	cpi	r21, 0xF9	; 249
    1b8e:	50 f4       	brcc	.+20     	; 0x1ba4 <__addsf3x+0x4e>
    1b90:	50 3e       	cpi	r21, 0xE0	; 224
    1b92:	68 f1       	brcs	.+90     	; 0x1bee <__addsf3x+0x98>
    1b94:	1a 16       	cp	r1, r26
    1b96:	f0 40       	sbci	r31, 0x00	; 0
    1b98:	a2 2f       	mov	r26, r18
    1b9a:	23 2f       	mov	r18, r19
    1b9c:	34 2f       	mov	r19, r20
    1b9e:	44 27       	eor	r20, r20
    1ba0:	58 5f       	subi	r21, 0xF8	; 248
    1ba2:	f3 cf       	rjmp	.-26     	; 0x1b8a <__addsf3x+0x34>
    1ba4:	46 95       	lsr	r20
    1ba6:	37 95       	ror	r19
    1ba8:	27 95       	ror	r18
    1baa:	a7 95       	ror	r26
    1bac:	f0 40       	sbci	r31, 0x00	; 0
    1bae:	53 95       	inc	r21
    1bb0:	c9 f7       	brne	.-14     	; 0x1ba4 <__addsf3x+0x4e>
    1bb2:	7e f4       	brtc	.+30     	; 0x1bd2 <__addsf3x+0x7c>
    1bb4:	1f 16       	cp	r1, r31
    1bb6:	ba 0b       	sbc	r27, r26
    1bb8:	62 0b       	sbc	r22, r18
    1bba:	73 0b       	sbc	r23, r19
    1bbc:	84 0b       	sbc	r24, r20
    1bbe:	ba f0       	brmi	.+46     	; 0x1bee <__addsf3x+0x98>
    1bc0:	91 50       	subi	r25, 0x01	; 1
    1bc2:	a1 f0       	breq	.+40     	; 0x1bec <__addsf3x+0x96>
    1bc4:	ff 0f       	add	r31, r31
    1bc6:	bb 1f       	adc	r27, r27
    1bc8:	66 1f       	adc	r22, r22
    1bca:	77 1f       	adc	r23, r23
    1bcc:	88 1f       	adc	r24, r24
    1bce:	c2 f7       	brpl	.-16     	; 0x1bc0 <__addsf3x+0x6a>
    1bd0:	0e c0       	rjmp	.+28     	; 0x1bee <__addsf3x+0x98>
    1bd2:	ba 0f       	add	r27, r26
    1bd4:	62 1f       	adc	r22, r18
    1bd6:	73 1f       	adc	r23, r19
    1bd8:	84 1f       	adc	r24, r20
    1bda:	48 f4       	brcc	.+18     	; 0x1bee <__addsf3x+0x98>
    1bdc:	87 95       	ror	r24
    1bde:	77 95       	ror	r23
    1be0:	67 95       	ror	r22
    1be2:	b7 95       	ror	r27
    1be4:	f7 95       	ror	r31
    1be6:	9e 3f       	cpi	r25, 0xFE	; 254
    1be8:	08 f0       	brcs	.+2      	; 0x1bec <__addsf3x+0x96>
    1bea:	b3 cf       	rjmp	.-154    	; 0x1b52 <__fp_splitA+0x4a>
    1bec:	93 95       	inc	r25
    1bee:	88 0f       	add	r24, r24
    1bf0:	08 f0       	brcs	.+2      	; 0x1bf4 <__addsf3x+0x9e>
    1bf2:	99 27       	eor	r25, r25
    1bf4:	ee 0f       	add	r30, r30
    1bf6:	97 95       	ror	r25
    1bf8:	87 95       	ror	r24
    1bfa:	08 95       	ret

00001bfc <__fp_inf>:
    1bfc:	97 f9       	bld	r25, 7
    1bfe:	9f 67       	ori	r25, 0x7F	; 127
    1c00:	80 e8       	ldi	r24, 0x80	; 128
    1c02:	70 e0       	ldi	r23, 0x00	; 0
    1c04:	60 e0       	ldi	r22, 0x00	; 0
    1c06:	08 95       	ret

00001c08 <__fp_mpack>:
    1c08:	9f 3f       	cpi	r25, 0xFF	; 255
    1c0a:	31 f0       	breq	.+12     	; 0x1c18 <__fp_mpack_finite+0xc>

00001c0c <__fp_mpack_finite>:
    1c0c:	91 50       	subi	r25, 0x01	; 1
    1c0e:	20 f4       	brcc	.+8      	; 0x1c18 <__fp_mpack_finite+0xc>
    1c10:	87 95       	ror	r24
    1c12:	77 95       	ror	r23
    1c14:	67 95       	ror	r22
    1c16:	b7 95       	ror	r27
    1c18:	88 0f       	add	r24, r24
    1c1a:	91 1d       	adc	r25, r1
    1c1c:	96 95       	lsr	r25
    1c1e:	87 95       	ror	r24
    1c20:	97 f9       	bld	r25, 7
    1c22:	08 95       	ret

00001c24 <__fp_nan>:
    1c24:	9f ef       	ldi	r25, 0xFF	; 255
    1c26:	80 ec       	ldi	r24, 0xC0	; 192
    1c28:	08 95       	ret

00001c2a <__fp_powsodd>:
    1c2a:	9f 93       	push	r25
    1c2c:	8f 93       	push	r24
    1c2e:	7f 93       	push	r23
    1c30:	6f 93       	push	r22
    1c32:	ff 93       	push	r31
    1c34:	ef 93       	push	r30
    1c36:	9b 01       	movw	r18, r22
    1c38:	ac 01       	movw	r20, r24
    1c3a:	6f d8       	rcall	.-3874   	; 0xd1a <__mulsf3>
    1c3c:	ef 91       	pop	r30
    1c3e:	ff 91       	pop	r31
    1c40:	2b d0       	rcall	.+86     	; 0x1c98 <__fp_powser>
    1c42:	2f 91       	pop	r18
    1c44:	3f 91       	pop	r19
    1c46:	4f 91       	pop	r20
    1c48:	5f 91       	pop	r21
    1c4a:	67 c8       	rjmp	.-3890   	; 0xd1a <__mulsf3>

00001c4c <__fp_pscA>:
    1c4c:	00 24       	eor	r0, r0
    1c4e:	0a 94       	dec	r0
    1c50:	16 16       	cp	r1, r22
    1c52:	17 06       	cpc	r1, r23
    1c54:	18 06       	cpc	r1, r24
    1c56:	09 06       	cpc	r0, r25
    1c58:	08 95       	ret

00001c5a <__fp_pscB>:
    1c5a:	00 24       	eor	r0, r0
    1c5c:	0a 94       	dec	r0
    1c5e:	12 16       	cp	r1, r18
    1c60:	13 06       	cpc	r1, r19
    1c62:	14 06       	cpc	r1, r20
    1c64:	05 06       	cpc	r0, r21
    1c66:	08 95       	ret

00001c68 <__fp_round>:
    1c68:	09 2e       	mov	r0, r25
    1c6a:	03 94       	inc	r0
    1c6c:	00 0c       	add	r0, r0
    1c6e:	11 f4       	brne	.+4      	; 0x1c74 <__fp_round+0xc>
    1c70:	88 23       	and	r24, r24
    1c72:	52 f0       	brmi	.+20     	; 0x1c88 <__fp_round+0x20>
    1c74:	bb 0f       	add	r27, r27
    1c76:	40 f4       	brcc	.+16     	; 0x1c88 <__fp_round+0x20>
    1c78:	bf 2b       	or	r27, r31
    1c7a:	11 f4       	brne	.+4      	; 0x1c80 <__fp_round+0x18>
    1c7c:	60 ff       	sbrs	r22, 0
    1c7e:	04 c0       	rjmp	.+8      	; 0x1c88 <__fp_round+0x20>
    1c80:	6f 5f       	subi	r22, 0xFF	; 255
    1c82:	7f 4f       	sbci	r23, 0xFF	; 255
    1c84:	8f 4f       	sbci	r24, 0xFF	; 255
    1c86:	9f 4f       	sbci	r25, 0xFF	; 255
    1c88:	08 95       	ret

00001c8a <__fp_zero>:
    1c8a:	e8 94       	clt

00001c8c <__fp_szero>:
    1c8c:	bb 27       	eor	r27, r27
    1c8e:	66 27       	eor	r22, r22
    1c90:	77 27       	eor	r23, r23
    1c92:	cb 01       	movw	r24, r22
    1c94:	97 f9       	bld	r25, 7
    1c96:	08 95       	ret

00001c98 <__fp_powser>:
    1c98:	df 93       	push	r29
    1c9a:	cf 93       	push	r28
    1c9c:	1f 93       	push	r17
    1c9e:	0f 93       	push	r16
    1ca0:	ff 92       	push	r15
    1ca2:	ef 92       	push	r14
    1ca4:	df 92       	push	r13
    1ca6:	7b 01       	movw	r14, r22
    1ca8:	8c 01       	movw	r16, r24
    1caa:	68 94       	set
    1cac:	05 c0       	rjmp	.+10     	; 0x1cb8 <__fp_powser+0x20>
    1cae:	da 2e       	mov	r13, r26
    1cb0:	ef 01       	movw	r28, r30
    1cb2:	21 d0       	rcall	.+66     	; 0x1cf6 <__mulsf3x>
    1cb4:	fe 01       	movw	r30, r28
    1cb6:	e8 94       	clt
    1cb8:	a5 91       	lpm	r26, Z+
    1cba:	25 91       	lpm	r18, Z+
    1cbc:	35 91       	lpm	r19, Z+
    1cbe:	45 91       	lpm	r20, Z+
    1cc0:	55 91       	lpm	r21, Z+
    1cc2:	ae f3       	brts	.-22     	; 0x1cae <__fp_powser+0x16>
    1cc4:	ef 01       	movw	r28, r30
    1cc6:	47 df       	rcall	.-370    	; 0x1b56 <__addsf3x>
    1cc8:	fe 01       	movw	r30, r28
    1cca:	97 01       	movw	r18, r14
    1ccc:	a8 01       	movw	r20, r16
    1cce:	da 94       	dec	r13
    1cd0:	79 f7       	brne	.-34     	; 0x1cb0 <__fp_powser+0x18>
    1cd2:	df 90       	pop	r13
    1cd4:	ef 90       	pop	r14
    1cd6:	ff 90       	pop	r15
    1cd8:	0f 91       	pop	r16
    1cda:	1f 91       	pop	r17
    1cdc:	cf 91       	pop	r28
    1cde:	df 91       	pop	r29
    1ce0:	08 95       	ret
    1ce2:	b4 df       	rcall	.-152    	; 0x1c4c <__fp_pscA>
    1ce4:	28 f0       	brcs	.+10     	; 0x1cf0 <__fp_powser+0x58>
    1ce6:	b9 df       	rcall	.-142    	; 0x1c5a <__fp_pscB>
    1ce8:	18 f0       	brcs	.+6      	; 0x1cf0 <__fp_powser+0x58>
    1cea:	95 23       	and	r25, r21
    1cec:	09 f0       	breq	.+2      	; 0x1cf0 <__fp_powser+0x58>
    1cee:	86 cf       	rjmp	.-244    	; 0x1bfc <__fp_inf>
    1cf0:	99 cf       	rjmp	.-206    	; 0x1c24 <__fp_nan>
    1cf2:	11 24       	eor	r1, r1
    1cf4:	cb cf       	rjmp	.-106    	; 0x1c8c <__fp_szero>

00001cf6 <__mulsf3x>:
    1cf6:	00 df       	rcall	.-512    	; 0x1af8 <__fp_split3>
    1cf8:	a0 f3       	brcs	.-24     	; 0x1ce2 <__fp_powser+0x4a>

00001cfa <__mulsf3_pse>:
    1cfa:	95 9f       	mul	r25, r21
    1cfc:	d1 f3       	breq	.-12     	; 0x1cf2 <__fp_powser+0x5a>
    1cfe:	95 0f       	add	r25, r21
    1d00:	50 e0       	ldi	r21, 0x00	; 0
    1d02:	55 1f       	adc	r21, r21
    1d04:	62 9f       	mul	r22, r18
    1d06:	f0 01       	movw	r30, r0
    1d08:	72 9f       	mul	r23, r18
    1d0a:	bb 27       	eor	r27, r27
    1d0c:	f0 0d       	add	r31, r0
    1d0e:	b1 1d       	adc	r27, r1
    1d10:	63 9f       	mul	r22, r19
    1d12:	aa 27       	eor	r26, r26
    1d14:	f0 0d       	add	r31, r0
    1d16:	b1 1d       	adc	r27, r1
    1d18:	aa 1f       	adc	r26, r26
    1d1a:	64 9f       	mul	r22, r20
    1d1c:	66 27       	eor	r22, r22
    1d1e:	b0 0d       	add	r27, r0
    1d20:	a1 1d       	adc	r26, r1
    1d22:	66 1f       	adc	r22, r22
    1d24:	82 9f       	mul	r24, r18
    1d26:	22 27       	eor	r18, r18
    1d28:	b0 0d       	add	r27, r0
    1d2a:	a1 1d       	adc	r26, r1
    1d2c:	62 1f       	adc	r22, r18
    1d2e:	73 9f       	mul	r23, r19
    1d30:	b0 0d       	add	r27, r0
    1d32:	a1 1d       	adc	r26, r1
    1d34:	62 1f       	adc	r22, r18
    1d36:	83 9f       	mul	r24, r19
    1d38:	a0 0d       	add	r26, r0
    1d3a:	61 1d       	adc	r22, r1
    1d3c:	22 1f       	adc	r18, r18
    1d3e:	74 9f       	mul	r23, r20
    1d40:	33 27       	eor	r19, r19
    1d42:	a0 0d       	add	r26, r0
    1d44:	61 1d       	adc	r22, r1
    1d46:	23 1f       	adc	r18, r19
    1d48:	84 9f       	mul	r24, r20
    1d4a:	60 0d       	add	r22, r0
    1d4c:	21 1d       	adc	r18, r1
    1d4e:	82 2f       	mov	r24, r18
    1d50:	76 2f       	mov	r23, r22
    1d52:	6a 2f       	mov	r22, r26
    1d54:	11 24       	eor	r1, r1
    1d56:	9f 57       	subi	r25, 0x7F	; 127
    1d58:	50 40       	sbci	r21, 0x00	; 0
    1d5a:	8a f0       	brmi	.+34     	; 0x1d7e <__mulsf3_pse+0x84>
    1d5c:	e1 f0       	breq	.+56     	; 0x1d96 <__mulsf3_pse+0x9c>
    1d5e:	88 23       	and	r24, r24
    1d60:	4a f0       	brmi	.+18     	; 0x1d74 <__mulsf3_pse+0x7a>
    1d62:	ee 0f       	add	r30, r30
    1d64:	ff 1f       	adc	r31, r31
    1d66:	bb 1f       	adc	r27, r27
    1d68:	66 1f       	adc	r22, r22
    1d6a:	77 1f       	adc	r23, r23
    1d6c:	88 1f       	adc	r24, r24
    1d6e:	91 50       	subi	r25, 0x01	; 1
    1d70:	50 40       	sbci	r21, 0x00	; 0
    1d72:	a9 f7       	brne	.-22     	; 0x1d5e <__mulsf3_pse+0x64>
    1d74:	9e 3f       	cpi	r25, 0xFE	; 254
    1d76:	51 05       	cpc	r21, r1
    1d78:	70 f0       	brcs	.+28     	; 0x1d96 <__mulsf3_pse+0x9c>
    1d7a:	40 cf       	rjmp	.-384    	; 0x1bfc <__fp_inf>
    1d7c:	87 cf       	rjmp	.-242    	; 0x1c8c <__fp_szero>
    1d7e:	5f 3f       	cpi	r21, 0xFF	; 255
    1d80:	ec f3       	brlt	.-6      	; 0x1d7c <__mulsf3_pse+0x82>
    1d82:	98 3e       	cpi	r25, 0xE8	; 232
    1d84:	dc f3       	brlt	.-10     	; 0x1d7c <__mulsf3_pse+0x82>
    1d86:	86 95       	lsr	r24
    1d88:	77 95       	ror	r23
    1d8a:	67 95       	ror	r22
    1d8c:	b7 95       	ror	r27
    1d8e:	f7 95       	ror	r31
    1d90:	e7 95       	ror	r30
    1d92:	9f 5f       	subi	r25, 0xFF	; 255
    1d94:	c1 f7       	brne	.-16     	; 0x1d86 <__mulsf3_pse+0x8c>
    1d96:	fe 2b       	or	r31, r30
    1d98:	88 0f       	add	r24, r24
    1d9a:	91 1d       	adc	r25, r1
    1d9c:	96 95       	lsr	r25
    1d9e:	87 95       	ror	r24
    1da0:	97 f9       	bld	r25, 7
    1da2:	08 95       	ret

00001da4 <_exit>:
    1da4:	f8 94       	cli

00001da6 <__stop_program>:
    1da6:	ff cf       	rjmp	.-2      	; 0x1da6 <__stop_program>
