
Lab2_DTMF.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000072  00800100  00001d9c  00001e30  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001d9c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000002a6  00800172  00800172  00001ea2  2**0
                  ALLOC
  3 .stab         000022a4  00000000  00000000  00001ea4  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000008d1  00000000  00000000  00004148  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000002f  00000000  00000000  00004a19  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 00000238  00000000  00000000  00004a48  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   000033ef  00000000  00000000  00004c80  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00001979  00000000  00000000  0000806f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000013cd  00000000  00000000  000099e8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000520  00000000  00000000  0000adb8  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000875  00000000  00000000  0000b2d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000019d2  00000000  00000000  0000bb4d  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000088  00000000  00000000  0000d51f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 55 00 	jmp	0xaa	; 0xaa <__ctors_end>
       4:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
       8:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
       c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      10:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      14:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      18:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      1c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      20:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      24:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      28:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      2c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      30:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      34:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      38:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      3c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      40:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      44:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      48:	0c 94 91 02 	jmp	0x522	; 0x522 <__vector_18>
      4c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      50:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      54:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      58:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      5c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      60:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      64:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      68:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      6c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      70:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      74:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      78:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      7c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      80:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      84:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      88:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      8c:	05 a8       	ldd	r0, Z+53	; 0x35
      8e:	4c cd       	rjmp	.-1384   	; 0xfffffb28 <__eeprom_end+0xff7efb28>
      90:	b2 d4       	rcall	.+2404   	; 0x9f6 <_fpadd_parts+0x84>
      92:	4e b9       	out	0x0e, r20	; 14
      94:	38 36       	cpi	r19, 0x68	; 104
      96:	a9 02       	muls	r26, r25
      98:	0c 50       	subi	r16, 0x0C	; 12
      9a:	b9 91       	ld	r27, Y+
      9c:	86 88       	ldd	r8, Z+22	; 0x16
      9e:	08 3c       	cpi	r16, 0xC8	; 200
      a0:	a6 aa       	std	Z+54, r10	; 0x36
      a2:	aa 2a       	or	r10, r26
      a4:	be 00       	.word	0x00be	; ????
      a6:	00 00       	nop
      a8:	80 3f       	cpi	r24, 0xF0	; 240

000000aa <__ctors_end>:
      aa:	11 24       	eor	r1, r1
      ac:	1f be       	out	0x3f, r1	; 63
      ae:	cf ef       	ldi	r28, 0xFF	; 255
      b0:	d0 e4       	ldi	r29, 0x40	; 64
      b2:	de bf       	out	0x3e, r29	; 62
      b4:	cd bf       	out	0x3d, r28	; 61

000000b6 <__do_copy_data>:
      b6:	11 e0       	ldi	r17, 0x01	; 1
      b8:	a0 e0       	ldi	r26, 0x00	; 0
      ba:	b1 e0       	ldi	r27, 0x01	; 1
      bc:	ec e9       	ldi	r30, 0x9C	; 156
      be:	fd e1       	ldi	r31, 0x1D	; 29
      c0:	00 e0       	ldi	r16, 0x00	; 0
      c2:	0b bf       	out	0x3b, r16	; 59
      c4:	02 c0       	rjmp	.+4      	; 0xca <__do_copy_data+0x14>
      c6:	07 90       	elpm	r0, Z+
      c8:	0d 92       	st	X+, r0
      ca:	a2 37       	cpi	r26, 0x72	; 114
      cc:	b1 07       	cpc	r27, r17
      ce:	d9 f7       	brne	.-10     	; 0xc6 <__do_copy_data+0x10>

000000d0 <__do_clear_bss>:
      d0:	24 e0       	ldi	r18, 0x04	; 4
      d2:	a2 e7       	ldi	r26, 0x72	; 114
      d4:	b1 e0       	ldi	r27, 0x01	; 1
      d6:	01 c0       	rjmp	.+2      	; 0xda <.do_clear_bss_start>

000000d8 <.do_clear_bss_loop>:
      d8:	1d 92       	st	X+, r1

000000da <.do_clear_bss_start>:
      da:	a8 31       	cpi	r26, 0x18	; 24
      dc:	b2 07       	cpc	r27, r18
      de:	e1 f7       	brne	.-8      	; 0xd8 <.do_clear_bss_loop>
      e0:	0e 94 ca 09 	call	0x1394	; 0x1394 <main>
      e4:	0c 94 cc 0e 	jmp	0x1d98	; 0x1d98 <_exit>

000000e8 <__bad_interrupt>:
      e8:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ec <task1>:
FILE uart_str = FDEV_SETUP_STREAM(uart_putchar, uart_getchar, _FDEV_SETUP_RW);

//******************************* 
//Task 1  
void task1(void) {
	time1=0;  //reset the task timer
      ec:	10 92 e1 01 	sts	0x01E1, r1
      f0:	10 92 e0 01 	sts	0x01E0, r1

	//get lower nibble
	PORTDIR = 0x0f;
      f4:	8f e0       	ldi	r24, 0x0F	; 15
      f6:	81 b9       	out	0x01, r24	; 1
	PORTDATA = 0xf0; 
      f8:	90 ef       	ldi	r25, 0xF0	; 240
      fa:	92 b9       	out	0x02, r25	; 2
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
      fc:	2a e1       	ldi	r18, 0x1A	; 26
      fe:	2a 95       	dec	r18
     100:	f1 f7       	brne	.-4      	; 0xfe <task1+0x12>
     102:	00 c0       	rjmp	.+0      	; 0x104 <task1+0x18>
	_delay_us(5);
	key = PORTIN;
     104:	20 b1       	in	r18, 0x00	; 0
     106:	20 93 e4 01 	sts	0x01E4, r18
  
	//get upper nibble
	PORTDIR = 0xf0;
     10a:	91 b9       	out	0x01, r25	; 1
	PORTDATA = 0x0f; 
     10c:	82 b9       	out	0x02, r24	; 2
     10e:	8a e1       	ldi	r24, 0x1A	; 26
     110:	8a 95       	dec	r24
     112:	f1 f7       	brne	.-4      	; 0x110 <task1+0x24>
     114:	00 c0       	rjmp	.+0      	; 0x116 <task1+0x2a>
	_delay_us(5);
	key = key | PORTIN;
     116:	90 b1       	in	r25, 0x00	; 0
     118:	80 91 e4 01 	lds	r24, 0x01E4
     11c:	98 2b       	or	r25, r24
     11e:	90 93 e4 01 	sts	0x01E4, r25
  
	//find matching keycode in keytbl
	if (key != 0xff) {
     122:	9f 3f       	cpi	r25, 0xFF	; 255
     124:	a9 f0       	breq	.+42     	; 0x150 <task1+0x64>
	  for (butnum=0; butnum<maxkeys; butnum++) {   
     126:	80 e0       	ldi	r24, 0x00	; 0
     128:	0a c0       	rjmp	.+20     	; 0x13e <task1+0x52>
     12a:	28 2f       	mov	r18, r24
     12c:	2f 5f       	subi	r18, 0xFF	; 255
	  	if (keytbl[butnum]==key)  break;   
     12e:	e8 2f       	mov	r30, r24
     130:	f0 e0       	ldi	r31, 0x00	; 0
     132:	e2 5c       	subi	r30, 0xC2	; 194
     134:	fe 4f       	sbci	r31, 0xFE	; 254
     136:	30 81       	ld	r19, Z
     138:	39 17       	cp	r19, r25
     13a:	31 f0       	breq	.+12     	; 0x148 <task1+0x5c>
     13c:	82 2f       	mov	r24, r18
	_delay_us(5);
	key = key | PORTIN;
  
	//find matching keycode in keytbl
	if (key != 0xff) {
	  for (butnum=0; butnum<maxkeys; butnum++) {   
     13e:	8c 30       	cpi	r24, 0x0C	; 12
     140:	a0 f3       	brcs	.-24     	; 0x12a <task1+0x3e>
	  	if (keytbl[butnum]==key)  break;   
	  }

	  if (butnum==maxkeys) butnum=0;
     142:	8c 30       	cpi	r24, 0x0C	; 12
     144:	09 f4       	brne	.+2      	; 0x148 <task1+0x5c>
     146:	04 c0       	rjmp	.+8      	; 0x150 <task1+0x64>
	  else butnum++;	   //adjust by one to make range 1-16
     148:	8f 5f       	subi	r24, 0xFF	; 255
     14a:	80 93 dc 01 	sts	0x01DC, r24
     14e:	02 c0       	rjmp	.+4      	; 0x154 <task1+0x68>
	}
	else butnum=0;
     150:	10 92 dc 01 	sts	0x01DC, r1
	
	// Switching in the finite state machine.
	switch (PushState) {
     154:	80 91 e8 01 	lds	r24, 0x01E8
     158:	82 30       	cpi	r24, 0x02	; 2
     15a:	91 f0       	breq	.+36     	; 0x180 <task1+0x94>
     15c:	20 f4       	brcc	.+8      	; 0x166 <task1+0x7a>
     15e:	81 30       	cpi	r24, 0x01	; 1
     160:	09 f0       	breq	.+2      	; 0x164 <task1+0x78>
     162:	66 c0       	rjmp	.+204    	; 0x230 <task1+0x144>
     164:	06 c0       	rjmp	.+12     	; 0x172 <task1+0x86>
     166:	83 30       	cpi	r24, 0x03	; 3
     168:	d1 f0       	breq	.+52     	; 0x19e <task1+0xb2>
     16a:	84 30       	cpi	r24, 0x04	; 4
     16c:	09 f0       	breq	.+2      	; 0x170 <task1+0x84>
     16e:	60 c0       	rjmp	.+192    	; 0x230 <task1+0x144>
     170:	52 c0       	rjmp	.+164    	; 0x216 <task1+0x12a>
     case NoPush: 
        if (butnum != 0) {
     172:	80 91 dc 01 	lds	r24, 0x01DC
     176:	88 23       	and	r24, r24
     178:	09 f4       	brne	.+2      	; 0x17c <task1+0x90>
     17a:	5a c0       	rjmp	.+180    	; 0x230 <task1+0x144>
			PushState=MaybePush;
     17c:	82 e0       	ldi	r24, 0x02	; 2
     17e:	50 c0       	rjmp	.+160    	; 0x220 <task1+0x134>
		}
        else PushState=NoPush;
        break;
     case MaybePush:
        if (butnum != 0) {
     180:	80 91 dc 01 	lds	r24, 0x01DC
     184:	88 23       	and	r24, r24
     186:	49 f0       	breq	.+18     	; 0x19a <task1+0xae>
           	PushState=Pushed; 
     188:	83 e0       	ldi	r24, 0x03	; 3
     18a:	80 93 e8 01 	sts	0x01E8, r24
			PushFlag=1;
     18e:	81 e0       	ldi	r24, 0x01	; 1
     190:	80 93 dd 01 	sts	0x01DD, r24
			//Test mode override
			if (~PINB & 0x01) {
     194:	18 99       	sbic	0x03, 0	; 3
     196:	4c c0       	rjmp	.+152    	; 0x230 <task1+0x144>
     198:	49 c0       	rjmp	.+146    	; 0x22c <task1+0x140>
		 		PushFlag=0;			
		   	}  
        }
        else PushState=NoPush;
     19a:	81 e0       	ldi	r24, 0x01	; 1
     19c:	41 c0       	rjmp	.+130    	; 0x220 <task1+0x134>
        break;
     case Pushed:  
        if (butnum != 0) {
     19e:	80 91 dc 01 	lds	r24, 0x01DC
     1a2:	88 23       	and	r24, r24
     1a4:	b1 f1       	breq	.+108    	; 0x212 <task1+0x126>
			PushState=Pushed;
			//Test mode override
			if (~PINB & 0x01) {
     1a6:	18 99       	sbic	0x03, 0	; 3
     1a8:	43 c0       	rjmp	.+134    	; 0x230 <task1+0x144>
		 		switch (butnum) {
     1aa:	84 30       	cpi	r24, 0x04	; 4
     1ac:	e1 f0       	breq	.+56     	; 0x1e6 <task1+0xfa>
     1ae:	30 f4       	brcc	.+12     	; 0x1bc <task1+0xd0>
     1b0:	82 30       	cpi	r24, 0x02	; 2
     1b2:	79 f0       	breq	.+30     	; 0x1d2 <task1+0xe6>
     1b4:	98 f4       	brcc	.+38     	; 0x1dc <task1+0xf0>
     1b6:	81 30       	cpi	r24, 0x01	; 1
     1b8:	d9 f5       	brne	.+118    	; 0x230 <task1+0x144>
     1ba:	06 c0       	rjmp	.+12     	; 0x1c8 <task1+0xdc>
     1bc:	86 30       	cpi	r24, 0x06	; 6
     1be:	e9 f0       	breq	.+58     	; 0x1fa <task1+0x10e>
     1c0:	b8 f0       	brcs	.+46     	; 0x1f0 <task1+0x104>
     1c2:	87 30       	cpi	r24, 0x07	; 7
     1c4:	a9 f5       	brne	.+106    	; 0x230 <task1+0x144>
     1c6:	1e c0       	rjmp	.+60     	; 0x204 <task1+0x118>
					case 1: 
						play(697, 0);
     1c8:	60 e0       	ldi	r22, 0x00	; 0
     1ca:	70 e0       	ldi	r23, 0x00	; 0
     1cc:	89 eb       	ldi	r24, 0xB9	; 185
     1ce:	92 e0       	ldi	r25, 0x02	; 2
     1d0:	1d c0       	rjmp	.+58     	; 0x20c <task1+0x120>
						break;
					case 2: 
						play(770, 0);
     1d2:	60 e0       	ldi	r22, 0x00	; 0
     1d4:	70 e0       	ldi	r23, 0x00	; 0
     1d6:	82 e0       	ldi	r24, 0x02	; 2
     1d8:	93 e0       	ldi	r25, 0x03	; 3
     1da:	18 c0       	rjmp	.+48     	; 0x20c <task1+0x120>
						break;
					case 3: 
						play(852, 0);
     1dc:	60 e0       	ldi	r22, 0x00	; 0
     1de:	70 e0       	ldi	r23, 0x00	; 0
     1e0:	84 e5       	ldi	r24, 0x54	; 84
     1e2:	93 e0       	ldi	r25, 0x03	; 3
     1e4:	13 c0       	rjmp	.+38     	; 0x20c <task1+0x120>
						break;
					case 4: 
						play(941, 0);
     1e6:	60 e0       	ldi	r22, 0x00	; 0
     1e8:	70 e0       	ldi	r23, 0x00	; 0
     1ea:	8d ea       	ldi	r24, 0xAD	; 173
     1ec:	93 e0       	ldi	r25, 0x03	; 3
     1ee:	0e c0       	rjmp	.+28     	; 0x20c <task1+0x120>
						break;
					case 5:
						play(1209, 0);
     1f0:	60 e0       	ldi	r22, 0x00	; 0
     1f2:	70 e0       	ldi	r23, 0x00	; 0
     1f4:	89 eb       	ldi	r24, 0xB9	; 185
     1f6:	94 e0       	ldi	r25, 0x04	; 4
     1f8:	09 c0       	rjmp	.+18     	; 0x20c <task1+0x120>
						break;
					case 6:
						play(1336, 0);
     1fa:	60 e0       	ldi	r22, 0x00	; 0
     1fc:	70 e0       	ldi	r23, 0x00	; 0
     1fe:	88 e3       	ldi	r24, 0x38	; 56
     200:	95 e0       	ldi	r25, 0x05	; 5
     202:	04 c0       	rjmp	.+8      	; 0x20c <task1+0x120>
						break;
					case 7: 
						play(1477, 0);
     204:	60 e0       	ldi	r22, 0x00	; 0
     206:	70 e0       	ldi	r23, 0x00	; 0
     208:	85 ec       	ldi	r24, 0xC5	; 197
     20a:	95 e0       	ldi	r25, 0x05	; 5
     20c:	0e 94 86 03 	call	0x70c	; 0x70c <play>
						break;
     210:	0f c0       	rjmp	.+30     	; 0x230 <task1+0x144>
					default:
						break;
				}	
		   	}  
		}
        else PushState=MaybeNoPush;    
     212:	84 e0       	ldi	r24, 0x04	; 4
     214:	05 c0       	rjmp	.+10     	; 0x220 <task1+0x134>
        break;
     case MaybeNoPush:
        if (butnum != 0) PushState=Pushed; 
     216:	80 91 dc 01 	lds	r24, 0x01DC
     21a:	88 23       	and	r24, r24
     21c:	21 f0       	breq	.+8      	; 0x226 <task1+0x13a>
     21e:	83 e0       	ldi	r24, 0x03	; 3
     220:	80 93 e8 01 	sts	0x01E8, r24
     224:	05 c0       	rjmp	.+10     	; 0x230 <task1+0x144>
        else {
           PushState=NoPush;
     226:	81 e0       	ldi	r24, 0x01	; 1
     228:	80 93 e8 01 	sts	0x01E8, r24
           PushFlag=0;
     22c:	10 92 dd 01 	sts	0x01DD, r1
	if (PushState == NoPush) {
		//fprintf(stdout, "Depressed...\n\r");
		//stop_playing();
	}	

	if (PushFlag) {
     230:	80 91 dd 01 	lds	r24, 0x01DD
     234:	88 23       	and	r24, r24
     236:	09 f4       	brne	.+2      	; 0x23a <task1+0x14e>
     238:	67 c0       	rjmp	.+206    	; 0x308 <task1+0x21c>
		PushFlag = 0;
     23a:	10 92 dd 01 	sts	0x01DD, r1
		// The * button was pressed. Clear all memory.
		if (butnum == 10) {
     23e:	80 91 dc 01 	lds	r24, 0x01DC
     242:	8a 30       	cpi	r24, 0x0A	; 10
     244:	09 f5       	brne	.+66     	; 0x288 <task1+0x19c>
			fprintf(stdout, "%u\n\r", butnum);
     246:	1f 92       	push	r1
     248:	8f 93       	push	r24
     24a:	86 e5       	ldi	r24, 0x56	; 86
     24c:	91 e0       	ldi	r25, 0x01	; 1
     24e:	9f 93       	push	r25
     250:	8f 93       	push	r24
     252:	80 91 15 04 	lds	r24, 0x0415
     256:	8f 93       	push	r24
     258:	80 91 14 04 	lds	r24, 0x0414
     25c:	8f 93       	push	r24
     25e:	0e 94 57 0a 	call	0x14ae	; 0x14ae <fprintf>
     262:	e2 e7       	ldi	r30, 0x72	; 114
     264:	f1 e0       	ldi	r31, 0x01	; 1
// putchar and getchar are in uart.c
FILE uart_str = FDEV_SETUP_STREAM(uart_putchar, uart_getchar, _FDEV_SETUP_RW);

//******************************* 
//Task 1  
void task1(void) {
     266:	0f 90       	pop	r0
     268:	0f 90       	pop	r0
     26a:	0f 90       	pop	r0
     26c:	0f 90       	pop	r0
     26e:	0f 90       	pop	r0
     270:	0f 90       	pop	r0
		PushFlag = 0;
		// The * button was pressed. Clear all memory.
		if (butnum == 10) {
			fprintf(stdout, "%u\n\r", butnum);
			for (int i = 0; i < 12; i++) {
				mem[i] = 0;
     272:	11 92       	st	Z+, r1
     274:	11 92       	st	Z+, r1
	if (PushFlag) {
		PushFlag = 0;
		// The * button was pressed. Clear all memory.
		if (butnum == 10) {
			fprintf(stdout, "%u\n\r", butnum);
			for (int i = 0; i < 12; i++) {
     276:	21 e0       	ldi	r18, 0x01	; 1
     278:	ea 38       	cpi	r30, 0x8A	; 138
     27a:	f2 07       	cpc	r31, r18
     27c:	d1 f7       	brne	.-12     	; 0x272 <task1+0x186>
				mem[i] = 0;
			}
			mem_index = 0;
     27e:	10 92 e6 01 	sts	0x01E6, r1
     282:	10 92 e5 01 	sts	0x01E5, r1
     286:	08 95       	ret
		}
		// The # button was pressed. Play all sounds in memory.
		else if (butnum == 12) {
     288:	8c 30       	cpi	r24, 0x0C	; 12
     28a:	a9 f4       	brne	.+42     	; 0x2b6 <task1+0x1ca>
			fprintf(stdout, "%u\n\r", butnum);
     28c:	1f 92       	push	r1
     28e:	8f 93       	push	r24
     290:	86 e5       	ldi	r24, 0x56	; 86
     292:	91 e0       	ldi	r25, 0x01	; 1
     294:	9f 93       	push	r25
     296:	8f 93       	push	r24
     298:	80 91 15 04 	lds	r24, 0x0415
     29c:	8f 93       	push	r24
     29e:	80 91 14 04 	lds	r24, 0x0414
     2a2:	8f 93       	push	r24
     2a4:	0e 94 57 0a 	call	0x14ae	; 0x14ae <fprintf>
     2a8:	0f 90       	pop	r0
     2aa:	0f 90       	pop	r0
     2ac:	0f 90       	pop	r0
     2ae:	0f 90       	pop	r0
     2b0:	0f 90       	pop	r0
     2b2:	0f 90       	pop	r0
     2b4:	08 95       	ret
				}
			}
		}
		// A normal button press. 
		else {
			fprintf(stdout, "%u\n\r", butnum);
     2b6:	1f 92       	push	r1
     2b8:	8f 93       	push	r24
     2ba:	86 e5       	ldi	r24, 0x56	; 86
     2bc:	91 e0       	ldi	r25, 0x01	; 1
     2be:	9f 93       	push	r25
     2c0:	8f 93       	push	r24
     2c2:	80 91 15 04 	lds	r24, 0x0415
     2c6:	8f 93       	push	r24
     2c8:	80 91 14 04 	lds	r24, 0x0414
     2cc:	8f 93       	push	r24
     2ce:	0e 94 57 0a 	call	0x14ae	; 0x14ae <fprintf>
			if (mem_index < 12) {
     2d2:	80 91 e5 01 	lds	r24, 0x01E5
     2d6:	90 91 e6 01 	lds	r25, 0x01E6
     2da:	0f 90       	pop	r0
     2dc:	0f 90       	pop	r0
     2de:	0f 90       	pop	r0
     2e0:	0f 90       	pop	r0
     2e2:	0f 90       	pop	r0
     2e4:	0f 90       	pop	r0
     2e6:	8c 30       	cpi	r24, 0x0C	; 12
     2e8:	91 05       	cpc	r25, r1
     2ea:	70 f4       	brcc	.+28     	; 0x308 <task1+0x21c>
				mem[mem_index] = butnum;
     2ec:	fc 01       	movw	r30, r24
     2ee:	ee 0f       	add	r30, r30
     2f0:	ff 1f       	adc	r31, r31
     2f2:	ee 58       	subi	r30, 0x8E	; 142
     2f4:	fe 4f       	sbci	r31, 0xFE	; 254
     2f6:	20 91 dc 01 	lds	r18, 0x01DC
     2fa:	20 83       	st	Z, r18
     2fc:	11 82       	std	Z+1, r1	; 0x01
				mem_index++;
     2fe:	01 96       	adiw	r24, 0x01	; 1
     300:	90 93 e6 01 	sts	0x01E6, r25
     304:	80 93 e5 01 	sts	0x01E5, r24
     308:	08 95       	ret

0000030a <initialize>:
} 
 
//Initialization used for the timer interrupts for debouncing
void initialize(void) {
	//set up timer 0 for 1 mSec timebase 
	OCR0A = 249;  		//set the compare re to 250 time ticks
     30a:	89 ef       	ldi	r24, 0xF9	; 249
     30c:	87 bd       	out	0x27, r24	; 39
	TIMSK0= (1<<OCIE0A);	//turn on timer 0 cmp match ISR 
     30e:	82 e0       	ldi	r24, 0x02	; 2
     310:	80 93 6e 00 	sts	0x006E, r24
	//set prescalar to divide by 64 
	TCCR0B= 3; //0b00000011;	
     314:	93 e0       	ldi	r25, 0x03	; 3
     316:	95 bd       	out	0x25, r25	; 37
	// turn on clear-on-match
	TCCR0A= (1<<WGM01) ;
     318:	84 bd       	out	0x24, r24	; 36

	//init the task timers
	time1=0;  
     31a:	10 92 e1 01 	sts	0x01E1, r1
     31e:	10 92 e0 01 	sts	0x01E0, r1
	// PORT B is an input
	DDRB = 0x00;
     322:	14 b8       	out	0x04, r1	; 4
	//for no button push
	PushFlag = 0;
     324:	10 92 dd 01 	sts	0x01DD, r1
	//init the state machine
	PushState = NoPush;
     328:	81 e0       	ldi	r24, 0x01	; 1
     32a:	80 93 e8 01 	sts	0x01E8, r24

	mem_index = 0;
     32e:	10 92 e6 01 	sts	0x01E6, r1
     332:	10 92 e5 01 	sts	0x01E5, r1

	init_dtmf();
     336:	0e 94 31 03 	call	0x662	; 0x662 <init_dtmf>
	//crank up the ISRs
	sei() ;
     33a:	78 94       	sei
     33c:	08 95       	ret

0000033e <uart_init>:
{
#if F_CPU < 2000000UL && defined(U2X)
  UCSR0A = _BV(U2X);             /* improve baud rate error by using 2x clk */
  UBRR0L = (F_CPU / (8UL * UART_BAUD)) - 1;
#else
  UBRR0L = (F_CPU / (16UL * UART_BAUD)) - 1;
     33e:	87 e6       	ldi	r24, 0x67	; 103
     340:	80 93 c4 00 	sts	0x00C4, r24
#endif
  UCSR0B = _BV(TXEN0) | _BV(RXEN0); /* tx/rx enable */
     344:	88 e1       	ldi	r24, 0x18	; 24
     346:	80 93 c1 00 	sts	0x00C1, r24
     34a:	08 95       	ret

0000034c <uart_putchar>:
 * Send character c down the UART Tx, wait until tx holding register
 * is empty.
 */
int
uart_putchar(char c, FILE *stream)
{
     34c:	cf 93       	push	r28
     34e:	c8 2f       	mov	r28, r24

  if (c == '\a')
     350:	87 30       	cpi	r24, 0x07	; 7
     352:	49 f4       	brne	.+18     	; 0x366 <uart_putchar+0x1a>
    {
      fputs("*ring*\n", stderr);
     354:	60 91 16 04 	lds	r22, 0x0416
     358:	70 91 17 04 	lds	r23, 0x0417
     35c:	89 e6       	ldi	r24, 0x69	; 105
     35e:	91 e0       	ldi	r25, 0x01	; 1
     360:	0e 94 67 0a 	call	0x14ce	; 0x14ce <fputs>
     364:	0b c0       	rjmp	.+22     	; 0x37c <uart_putchar+0x30>
      return 0;
    }

  if (c == '\n')
     366:	8a 30       	cpi	r24, 0x0A	; 10
     368:	19 f4       	brne	.+6      	; 0x370 <uart_putchar+0x24>
    uart_putchar('\r', stream);
     36a:	8d e0       	ldi	r24, 0x0D	; 13
     36c:	0e 94 a6 01 	call	0x34c	; 0x34c <uart_putchar>
  loop_until_bit_is_set(UCSR0A, UDRE0);
     370:	80 91 c0 00 	lds	r24, 0x00C0
     374:	85 ff       	sbrs	r24, 5
     376:	fc cf       	rjmp	.-8      	; 0x370 <uart_putchar+0x24>
  UDR0 = c;
     378:	c0 93 c6 00 	sts	0x00C6, r28

  return 0;
}
     37c:	80 e0       	ldi	r24, 0x00	; 0
     37e:	90 e0       	ldi	r25, 0x00	; 0
     380:	cf 91       	pop	r28
     382:	08 95       	ret

00000384 <uart_getchar>:
 * Successive calls to uart_getchar() will be satisfied from the
 * internal buffer until that buffer is emptied again.
 */
int
uart_getchar(FILE *stream)
{
     384:	ef 92       	push	r14
     386:	ff 92       	push	r15
     388:	0f 93       	push	r16
     38a:	1f 93       	push	r17
     38c:	cf 93       	push	r28
     38e:	df 93       	push	r29
     390:	8c 01       	movw	r16, r24
  uint8_t c;
  char *cp, *cp2;
  static char b[RX_BUFSIZE];
  static char *rxp;

  if (rxp == 0)
     392:	80 91 8a 01 	lds	r24, 0x018A
     396:	90 91 8b 01 	lds	r25, 0x018B
     39a:	89 2b       	or	r24, r25
     39c:	09 f0       	breq	.+2      	; 0x3a0 <uart_getchar+0x1c>
     39e:	a1 c0       	rjmp	.+322    	; 0x4e2 <uart_getchar+0x15e>
     3a0:	cc e8       	ldi	r28, 0x8C	; 140
     3a2:	d1 e0       	ldi	r29, 0x01	; 1
    for (cp = b;;)
      {
	loop_until_bit_is_set(UCSR0A, RXC0);
     3a4:	80 91 c0 00 	lds	r24, 0x00C0
     3a8:	87 ff       	sbrs	r24, 7
     3aa:	fc cf       	rjmp	.-8      	; 0x3a4 <uart_getchar+0x20>
	if (UCSR0A & _BV(FE0))
     3ac:	80 91 c0 00 	lds	r24, 0x00C0
     3b0:	84 fd       	sbrc	r24, 4
     3b2:	aa c0       	rjmp	.+340    	; 0x508 <uart_getchar+0x184>
	  return _FDEV_EOF;
	if (UCSR0A & _BV(DOR0))
     3b4:	80 91 c0 00 	lds	r24, 0x00C0
     3b8:	83 fd       	sbrc	r24, 3
     3ba:	a9 c0       	rjmp	.+338    	; 0x50e <uart_getchar+0x18a>
	  return _FDEV_ERR;
	c = UDR0;
     3bc:	80 91 c6 00 	lds	r24, 0x00C6
	/* behaviour similar to Unix stty ICRNL */
	if (c == '\r')
     3c0:	8d 30       	cpi	r24, 0x0D	; 13
     3c2:	61 f4       	brne	.+24     	; 0x3dc <uart_getchar+0x58>
	  c = '\n';
	if (c == '\n')
	  {
	    *cp = c;
     3c4:	8a e0       	ldi	r24, 0x0A	; 10
     3c6:	88 83       	st	Y, r24
	    uart_putchar(c, stream);
     3c8:	b8 01       	movw	r22, r16
     3ca:	0e 94 a6 01 	call	0x34c	; 0x34c <uart_putchar>
	    rxp = b;
     3ce:	8c e8       	ldi	r24, 0x8C	; 140
     3d0:	91 e0       	ldi	r25, 0x01	; 1
     3d2:	90 93 8b 01 	sts	0x018B, r25
     3d6:	80 93 8a 01 	sts	0x018A, r24
	    break;
     3da:	83 c0       	rjmp	.+262    	; 0x4e2 <uart_getchar+0x15e>
	  return _FDEV_ERR;
	c = UDR0;
	/* behaviour similar to Unix stty ICRNL */
	if (c == '\r')
	  c = '\n';
	if (c == '\n')
     3dc:	8a 30       	cpi	r24, 0x0A	; 10
     3de:	91 f3       	breq	.-28     	; 0x3c4 <uart_getchar+0x40>
	    *cp = c;
	    uart_putchar(c, stream);
	    rxp = b;
	    break;
	  }
	else if (c == '\t')
     3e0:	89 30       	cpi	r24, 0x09	; 9
     3e2:	09 f4       	brne	.+2      	; 0x3e6 <uart_getchar+0x62>
	  c = ' ';
     3e4:	80 e2       	ldi	r24, 0x20	; 32

	if ((c >= (uint8_t)' ' && c <= (uint8_t)'\x7e') ||
     3e6:	98 2f       	mov	r25, r24
     3e8:	90 52       	subi	r25, 0x20	; 32
     3ea:	9f 35       	cpi	r25, 0x5F	; 95
     3ec:	10 f0       	brcs	.+4      	; 0x3f2 <uart_getchar+0x6e>
     3ee:	80 3a       	cpi	r24, 0xA0	; 160
     3f0:	90 f0       	brcs	.+36     	; 0x416 <uart_getchar+0x92>
	    c >= (uint8_t)'\xa0')
	  {
	    if (cp == b + RX_BUFSIZE - 1)
     3f2:	91 e0       	ldi	r25, 0x01	; 1
     3f4:	cb 3d       	cpi	r28, 0xDB	; 219
     3f6:	d9 07       	cpc	r29, r25
     3f8:	49 f4       	brne	.+18     	; 0x40c <uart_getchar+0x88>
uart_putchar(char c, FILE *stream)
{

  if (c == '\a')
    {
      fputs("*ring*\n", stderr);
     3fa:	60 91 16 04 	lds	r22, 0x0416
     3fe:	70 91 17 04 	lds	r23, 0x0417
     402:	89 e6       	ldi	r24, 0x69	; 105
     404:	91 e0       	ldi	r25, 0x01	; 1
     406:	0e 94 67 0a 	call	0x14ce	; 0x14ce <fputs>
     40a:	cc cf       	rjmp	.-104    	; 0x3a4 <uart_getchar+0x20>
	  {
	    if (cp == b + RX_BUFSIZE - 1)
	      uart_putchar('\a', stream);
	    else
	      {
		*cp++ = c;
     40c:	89 93       	st	Y+, r24
		uart_putchar(c, stream);
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 a6 01 	call	0x34c	; 0x34c <uart_putchar>
     414:	c7 cf       	rjmp	.-114    	; 0x3a4 <uart_getchar+0x20>
	      }
	    continue;
	  }

	switch (c)
     416:	82 31       	cpi	r24, 0x12	; 18
     418:	29 f1       	breq	.+74     	; 0x464 <uart_getchar+0xe0>
     41a:	38 f4       	brcc	.+14     	; 0x42a <uart_getchar+0xa6>
     41c:	83 30       	cpi	r24, 0x03	; 3
     41e:	09 f4       	brne	.+2      	; 0x422 <uart_getchar+0x9e>
     420:	76 c0       	rjmp	.+236    	; 0x50e <uart_getchar+0x18a>
     422:	88 30       	cpi	r24, 0x08	; 8
     424:	09 f0       	breq	.+2      	; 0x428 <uart_getchar+0xa4>
     426:	be cf       	rjmp	.-132    	; 0x3a4 <uart_getchar+0x20>
     428:	09 c0       	rjmp	.+18     	; 0x43c <uart_getchar+0xb8>
     42a:	87 31       	cpi	r24, 0x17	; 23
     42c:	09 f4       	brne	.+2      	; 0x430 <uart_getchar+0xac>
     42e:	4d c0       	rjmp	.+154    	; 0x4ca <uart_getchar+0x146>
     430:	8f 37       	cpi	r24, 0x7F	; 127
     432:	21 f0       	breq	.+8      	; 0x43c <uart_getchar+0xb8>
     434:	85 31       	cpi	r24, 0x15	; 21
     436:	09 f0       	breq	.+2      	; 0x43a <uart_getchar+0xb6>
     438:	b5 cf       	rjmp	.-150    	; 0x3a4 <uart_getchar+0x20>
     43a:	34 c0       	rjmp	.+104    	; 0x4a4 <uart_getchar+0x120>
	  case 'c' & 0x1f:
	    return -1;

	  case '\b':
	  case '\x7f':
	    if (cp > b)
     43c:	e1 e0       	ldi	r30, 0x01	; 1
     43e:	cc 38       	cpi	r28, 0x8C	; 140
     440:	de 07       	cpc	r29, r30
     442:	09 f0       	breq	.+2      	; 0x446 <uart_getchar+0xc2>
     444:	08 f4       	brcc	.+2      	; 0x448 <uart_getchar+0xc4>
     446:	ae cf       	rjmp	.-164    	; 0x3a4 <uart_getchar+0x20>
	      {
		uart_putchar('\b', stream);
     448:	b8 01       	movw	r22, r16
     44a:	88 e0       	ldi	r24, 0x08	; 8
     44c:	0e 94 a6 01 	call	0x34c	; 0x34c <uart_putchar>
		uart_putchar(' ', stream);
     450:	b8 01       	movw	r22, r16
     452:	80 e2       	ldi	r24, 0x20	; 32
     454:	0e 94 a6 01 	call	0x34c	; 0x34c <uart_putchar>
		uart_putchar('\b', stream);
     458:	b8 01       	movw	r22, r16
     45a:	88 e0       	ldi	r24, 0x08	; 8
     45c:	0e 94 a6 01 	call	0x34c	; 0x34c <uart_putchar>
		cp--;
     460:	21 97       	sbiw	r28, 0x01	; 1
     462:	a0 cf       	rjmp	.-192    	; 0x3a4 <uart_getchar+0x20>
	      }
	    break;

	  case 'r' & 0x1f:
	    uart_putchar('\r', stream);
     464:	b8 01       	movw	r22, r16
     466:	8d e0       	ldi	r24, 0x0D	; 13
     468:	0e 94 a6 01 	call	0x34c	; 0x34c <uart_putchar>
	    for (cp2 = b; cp2 < cp; cp2++)
     46c:	8c e8       	ldi	r24, 0x8C	; 140
     46e:	e8 2e       	mov	r14, r24
     470:	81 e0       	ldi	r24, 0x01	; 1
     472:	f8 2e       	mov	r15, r24
     474:	06 c0       	rjmp	.+12     	; 0x482 <uart_getchar+0xfe>
	      uart_putchar(*cp2, stream);
     476:	b8 01       	movw	r22, r16
     478:	f7 01       	movw	r30, r14
     47a:	81 91       	ld	r24, Z+
     47c:	7f 01       	movw	r14, r30
     47e:	0e 94 a6 01 	call	0x34c	; 0x34c <uart_putchar>
	      }
	    break;

	  case 'r' & 0x1f:
	    uart_putchar('\r', stream);
	    for (cp2 = b; cp2 < cp; cp2++)
     482:	ec 16       	cp	r14, r28
     484:	fd 06       	cpc	r15, r29
     486:	b8 f3       	brcs	.-18     	; 0x476 <uart_getchar+0xf2>
     488:	8d cf       	rjmp	.-230    	; 0x3a4 <uart_getchar+0x20>
	    break;

	  case 'u' & 0x1f:
	    while (cp > b)
	      {
		uart_putchar('\b', stream);
     48a:	b8 01       	movw	r22, r16
     48c:	88 e0       	ldi	r24, 0x08	; 8
     48e:	0e 94 a6 01 	call	0x34c	; 0x34c <uart_putchar>
		uart_putchar(' ', stream);
     492:	b8 01       	movw	r22, r16
     494:	80 e2       	ldi	r24, 0x20	; 32
     496:	0e 94 a6 01 	call	0x34c	; 0x34c <uart_putchar>
		uart_putchar('\b', stream);
     49a:	b8 01       	movw	r22, r16
     49c:	88 e0       	ldi	r24, 0x08	; 8
     49e:	0e 94 a6 01 	call	0x34c	; 0x34c <uart_putchar>
		cp--;
     4a2:	21 97       	sbiw	r28, 0x01	; 1
	    for (cp2 = b; cp2 < cp; cp2++)
	      uart_putchar(*cp2, stream);
	    break;

	  case 'u' & 0x1f:
	    while (cp > b)
     4a4:	f1 e0       	ldi	r31, 0x01	; 1
     4a6:	cc 38       	cpi	r28, 0x8C	; 140
     4a8:	df 07       	cpc	r29, r31
     4aa:	09 f0       	breq	.+2      	; 0x4ae <uart_getchar+0x12a>
     4ac:	70 f7       	brcc	.-36     	; 0x48a <uart_getchar+0x106>
     4ae:	7a cf       	rjmp	.-268    	; 0x3a4 <uart_getchar+0x20>
	    break;

	  case 'w' & 0x1f:
	    while (cp > b && cp[-1] != ' ')
	      {
		uart_putchar('\b', stream);
     4b0:	b8 01       	movw	r22, r16
     4b2:	88 e0       	ldi	r24, 0x08	; 8
     4b4:	0e 94 a6 01 	call	0x34c	; 0x34c <uart_putchar>
		uart_putchar(' ', stream);
     4b8:	b8 01       	movw	r22, r16
     4ba:	80 e2       	ldi	r24, 0x20	; 32
     4bc:	0e 94 a6 01 	call	0x34c	; 0x34c <uart_putchar>
		uart_putchar('\b', stream);
     4c0:	b8 01       	movw	r22, r16
     4c2:	88 e0       	ldi	r24, 0x08	; 8
     4c4:	0e 94 a6 01 	call	0x34c	; 0x34c <uart_putchar>
		cp--;
     4c8:	e7 01       	movw	r28, r14
		cp--;
	      }
	    break;

	  case 'w' & 0x1f:
	    while (cp > b && cp[-1] != ' ')
     4ca:	81 e0       	ldi	r24, 0x01	; 1
     4cc:	cc 38       	cpi	r28, 0x8C	; 140
     4ce:	d8 07       	cpc	r29, r24
     4d0:	09 f0       	breq	.+2      	; 0x4d4 <uart_getchar+0x150>
     4d2:	08 f4       	brcc	.+2      	; 0x4d6 <uart_getchar+0x152>
     4d4:	67 cf       	rjmp	.-306    	; 0x3a4 <uart_getchar+0x20>
     4d6:	fe 01       	movw	r30, r28
     4d8:	82 91       	ld	r24, -Z
     4da:	7f 01       	movw	r14, r30
     4dc:	80 32       	cpi	r24, 0x20	; 32
     4de:	41 f7       	brne	.-48     	; 0x4b0 <uart_getchar+0x12c>
     4e0:	61 cf       	rjmp	.-318    	; 0x3a4 <uart_getchar+0x20>
	      }
	    break;
	  }
      }

  c = *rxp++;
     4e2:	e0 91 8a 01 	lds	r30, 0x018A
     4e6:	f0 91 8b 01 	lds	r31, 0x018B
     4ea:	20 81       	ld	r18, Z
  if (c == '\n')
     4ec:	2a 30       	cpi	r18, 0x0A	; 10
     4ee:	31 f0       	breq	.+12     	; 0x4fc <uart_getchar+0x178>
	      }
	    break;
	  }
      }

  c = *rxp++;
     4f0:	31 96       	adiw	r30, 0x01	; 1
     4f2:	f0 93 8b 01 	sts	0x018B, r31
     4f6:	e0 93 8a 01 	sts	0x018A, r30
     4fa:	04 c0       	rjmp	.+8      	; 0x504 <uart_getchar+0x180>
  if (c == '\n')
    rxp = 0;
     4fc:	10 92 8b 01 	sts	0x018B, r1
     500:	10 92 8a 01 	sts	0x018A, r1

  return c;
     504:	30 e0       	ldi	r19, 0x00	; 0
     506:	05 c0       	rjmp	.+10     	; 0x512 <uart_getchar+0x18e>
  if (rxp == 0)
    for (cp = b;;)
      {
	loop_until_bit_is_set(UCSR0A, RXC0);
	if (UCSR0A & _BV(FE0))
	  return _FDEV_EOF;
     508:	2e ef       	ldi	r18, 0xFE	; 254
     50a:	3f ef       	ldi	r19, 0xFF	; 255
     50c:	02 c0       	rjmp	.+4      	; 0x512 <uart_getchar+0x18e>
	  }

	switch (c)
	  {
	  case 'c' & 0x1f:
	    return -1;
     50e:	2f ef       	ldi	r18, 0xFF	; 255
     510:	3f ef       	ldi	r19, 0xFF	; 255
  c = *rxp++;
  if (c == '\n')
    rxp = 0;

  return c;
}
     512:	c9 01       	movw	r24, r18
     514:	df 91       	pop	r29
     516:	cf 91       	pop	r28
     518:	1f 91       	pop	r17
     51a:	0f 91       	pop	r16
     51c:	ff 90       	pop	r15
     51e:	ef 90       	pop	r14
     520:	08 95       	ret

00000522 <__vector_18>:
volatile unsigned long accumulator ;
volatile unsigned char changed;


volatile unsigned long increment;
ISR( TIMER0_OVF_vect){
     522:	1f 92       	push	r1
     524:	0f 92       	push	r0
     526:	0f b6       	in	r0, 0x3f	; 63
     528:	0f 92       	push	r0
     52a:	11 24       	eor	r1, r1
     52c:	0b b6       	in	r0, 0x3b	; 59
     52e:	0f 92       	push	r0
     530:	2f 93       	push	r18
     532:	3f 93       	push	r19
     534:	4f 93       	push	r20
     536:	5f 93       	push	r21
     538:	6f 93       	push	r22
     53a:	7f 93       	push	r23
     53c:	8f 93       	push	r24
     53e:	9f 93       	push	r25
     540:	af 93       	push	r26
     542:	bf 93       	push	r27
     544:	cf 93       	push	r28
     546:	df 93       	push	r29
     548:	ef 93       	push	r30
     54a:	ff 93       	push	r31
	//accumulator = accumulator + increment ;
	//highbyte = (char)(accumulator >> 24) ;
	
	// output the wavefrom sample
	//OCR0A = 128 + ((sineTable[highbyte] * rampTable[rampCount])>>7) ;
	changed = TRUE;
     54c:	81 e0       	ldi	r24, 0x01	; 1
     54e:	80 93 ff 03 	sts	0x03FF, r24


	OCR0A = 128 + 
	   ( (
	   	   (sineTable[(accumulator_a >> 24)] + sineTable[(accumulator_b >> 24)]) * rampTable[rampCount]
     552:	40 91 f7 03 	lds	r20, 0x03F7
     556:	50 91 f8 03 	lds	r21, 0x03F8
     55a:	60 91 f9 03 	lds	r22, 0x03F9
     55e:	70 91 fa 03 	lds	r23, 0x03FA
     562:	80 91 02 04 	lds	r24, 0x0402
     566:	90 91 03 04 	lds	r25, 0x0403
     56a:	a0 91 04 04 	lds	r26, 0x0404
     56e:	b0 91 05 04 	lds	r27, 0x0405
     572:	e0 91 00 04 	lds	r30, 0x0400
     576:	f0 91 01 04 	lds	r31, 0x0401
     57a:	47 2f       	mov	r20, r23
     57c:	55 27       	eor	r21, r21
     57e:	66 27       	eor	r22, r22
     580:	77 27       	eor	r23, r23
     582:	ea 01       	movw	r28, r20
     584:	c9 50       	subi	r28, 0x09	; 9
     586:	dd 4f       	sbci	r29, 0xFD	; 253
     588:	28 81       	ld	r18, Y
     58a:	8b 2f       	mov	r24, r27
     58c:	99 27       	eor	r25, r25
     58e:	aa 27       	eor	r26, r26
     590:	bb 27       	eor	r27, r27
     592:	dc 01       	movw	r26, r24
     594:	a9 50       	subi	r26, 0x09	; 9
     596:	bd 4f       	sbci	r27, 0xFD	; 253
     598:	8c 91       	ld	r24, X
     59a:	99 27       	eor	r25, r25
     59c:	87 fd       	sbrc	r24, 7
     59e:	90 95       	com	r25
     5a0:	82 0f       	add	r24, r18
     5a2:	91 1d       	adc	r25, r1
     5a4:	27 fd       	sbrc	r18, 7
     5a6:	9a 95       	dec	r25
     5a8:	e2 51       	subi	r30, 0x12	; 18
     5aa:	fe 4f       	sbci	r31, 0xFE	; 254
     5ac:	40 81       	ld	r20, Z
     5ae:	48 9f       	mul	r20, r24
     5b0:	90 01       	movw	r18, r0
     5b2:	49 9f       	mul	r20, r25
     5b4:	30 0d       	add	r19, r0
     5b6:	11 24       	eor	r1, r1
	// output the wavefrom sample
	//OCR0A = 128 + ((sineTable[highbyte] * rampTable[rampCount])>>7) ;
	changed = TRUE;


	OCR0A = 128 + 
     5b8:	83 2f       	mov	r24, r19
     5ba:	80 58       	subi	r24, 0x80	; 128
     5bc:	87 bd       	out	0x27, r24	; 39
	   ( (
	   	   (sineTable[(accumulator_a >> 24)] + sineTable[(accumulator_b >> 24)]) * rampTable[rampCount]
	   	 ) >> 8
	   );
	accumulator_a += increment_a;
     5be:	80 91 f7 03 	lds	r24, 0x03F7
     5c2:	90 91 f8 03 	lds	r25, 0x03F8
     5c6:	a0 91 f9 03 	lds	r26, 0x03F9
     5ca:	b0 91 fa 03 	lds	r27, 0x03FA
     5ce:	40 91 ea 01 	lds	r20, 0x01EA
     5d2:	50 91 eb 01 	lds	r21, 0x01EB
     5d6:	60 91 ec 01 	lds	r22, 0x01EC
     5da:	70 91 ed 01 	lds	r23, 0x01ED
     5de:	84 0f       	add	r24, r20
     5e0:	95 1f       	adc	r25, r21
     5e2:	a6 1f       	adc	r26, r22
     5e4:	b7 1f       	adc	r27, r23
     5e6:	80 93 f7 03 	sts	0x03F7, r24
     5ea:	90 93 f8 03 	sts	0x03F8, r25
     5ee:	a0 93 f9 03 	sts	0x03F9, r26
     5f2:	b0 93 fa 03 	sts	0x03FA, r27
	accumulator_b += increment_b;
     5f6:	80 91 02 04 	lds	r24, 0x0402
     5fa:	90 91 03 04 	lds	r25, 0x0403
     5fe:	a0 91 04 04 	lds	r26, 0x0404
     602:	b0 91 05 04 	lds	r27, 0x0405
     606:	40 91 0b 04 	lds	r20, 0x040B
     60a:	50 91 0c 04 	lds	r21, 0x040C
     60e:	60 91 0d 04 	lds	r22, 0x040D
     612:	70 91 0e 04 	lds	r23, 0x040E
     616:	84 0f       	add	r24, r20
     618:	95 1f       	adc	r25, r21
     61a:	a6 1f       	adc	r26, r22
     61c:	b7 1f       	adc	r27, r23
     61e:	80 93 02 04 	sts	0x0402, r24
     622:	90 93 03 04 	sts	0x0403, r25
     626:	a0 93 04 04 	sts	0x0404, r26
     62a:	b0 93 05 04 	sts	0x0405, r27
	//generates a 1 ms timebase
	count--;	
     62e:	80 91 e7 01 	lds	r24, 0x01E7
     632:	81 50       	subi	r24, 0x01	; 1
     634:	80 93 e7 01 	sts	0x01E7, r24
}
     638:	ff 91       	pop	r31
     63a:	ef 91       	pop	r30
     63c:	df 91       	pop	r29
     63e:	cf 91       	pop	r28
     640:	bf 91       	pop	r27
     642:	af 91       	pop	r26
     644:	9f 91       	pop	r25
     646:	8f 91       	pop	r24
     648:	7f 91       	pop	r23
     64a:	6f 91       	pop	r22
     64c:	5f 91       	pop	r21
     64e:	4f 91       	pop	r20
     650:	3f 91       	pop	r19
     652:	2f 91       	pop	r18
     654:	0f 90       	pop	r0
     656:	0b be       	out	0x3b, r0	; 59
     658:	0f 90       	pop	r0
     65a:	0f be       	out	0x3f, r0	; 63
     65c:	0f 90       	pop	r0
     65e:	1f 90       	pop	r1
     660:	18 95       	reti

00000662 <init_dtmf>:


void init_dtmf(){
     662:	ef 92       	push	r14
     664:	ff 92       	push	r15
     666:	0f 93       	push	r16
     668:	1f 93       	push	r17
     66a:	cf 93       	push	r28
     66c:	df 93       	push	r29
	DDRB = 0;
     66e:	14 b8       	out	0x04, r1	; 4
	DDRB |= OUTPUT_PIN;
     670:	23 9a       	sbi	0x04, 3	; 4
     672:	57 ef       	ldi	r21, 0xF7	; 247
     674:	e5 2e       	mov	r14, r21
     676:	52 e0       	ldi	r21, 0x02	; 2
     678:	f5 2e       	mov	r15, r21
     67a:	0e ee       	ldi	r16, 0xEE	; 238
     67c:	11 e0       	ldi	r17, 0x01	; 1
	int i;
	for (i=0; i<256; i++){
     67e:	c0 e0       	ldi	r28, 0x00	; 0
     680:	d0 e0       	ldi	r29, 0x00	; 0
		sineTable[i] = (char)(127.0 * sin(6.283*((float)i)/256.0)) ;
     682:	be 01       	movw	r22, r28
     684:	88 27       	eor	r24, r24
     686:	77 fd       	sbrc	r23, 7
     688:	80 95       	com	r24
     68a:	98 2f       	mov	r25, r24
     68c:	0e 94 85 07 	call	0xf0a	; 0xf0a <__floatsisf>
     690:	26 e5       	ldi	r18, 0x56	; 86
     692:	3e e0       	ldi	r19, 0x0E	; 14
     694:	49 ec       	ldi	r20, 0xC9	; 201
     696:	50 e4       	ldi	r21, 0x40	; 64
     698:	0e 94 71 06 	call	0xce2	; 0xce2 <__mulsf3>
     69c:	20 e0       	ldi	r18, 0x00	; 0
     69e:	30 e0       	ldi	r19, 0x00	; 0
     6a0:	40 e8       	ldi	r20, 0x80	; 128
     6a2:	5b e3       	ldi	r21, 0x3B	; 59
     6a4:	0e 94 71 06 	call	0xce2	; 0xce2 <__mulsf3>
     6a8:	0e 94 92 0a 	call	0x1524	; 0x1524 <sin>
     6ac:	20 e0       	ldi	r18, 0x00	; 0
     6ae:	30 e0       	ldi	r19, 0x00	; 0
     6b0:	4e ef       	ldi	r20, 0xFE	; 254
     6b2:	52 e4       	ldi	r21, 0x42	; 66
     6b4:	0e 94 71 06 	call	0xce2	; 0xce2 <__mulsf3>
     6b8:	0e 94 8c 04 	call	0x918	; 0x918 <__fixunssfsi>
     6bc:	f7 01       	movw	r30, r14
     6be:	61 93       	st	Z+, r22
     6c0:	7f 01       	movw	r14, r30
		// the following table needs 
		// rampTable[0]=0 and rampTable[255]=127
		rampTable[i] = i>>1 ;
     6c2:	ce 01       	movw	r24, r28
     6c4:	95 95       	asr	r25
     6c6:	87 95       	ror	r24
     6c8:	f8 01       	movw	r30, r16
     6ca:	81 93       	st	Z+, r24
     6cc:	8f 01       	movw	r16, r30

void init_dtmf(){
	DDRB = 0;
	DDRB |= OUTPUT_PIN;
	int i;
	for (i=0; i<256; i++){
     6ce:	21 96       	adiw	r28, 0x01	; 1
     6d0:	c1 15       	cp	r28, r1
     6d2:	f1 e0       	ldi	r31, 0x01	; 1
     6d4:	df 07       	cpc	r29, r31
     6d6:	a9 f6       	brne	.-86     	; 0x682 <init_dtmf+0x20>
		sineTable[i] = (char)(127.0 * sin(6.283*((float)i)/256.0)) ;
		// the following table needs 
		// rampTable[0]=0 and rampTable[255]=127
		rampTable[i] = i>>1 ;
	}
	time = 0;
     6d8:	10 92 e3 01 	sts	0x01E3, r1
     6dc:	10 92 e2 01 	sts	0x01E2, r1

	// TCCR0B = 0;
	// //set divider to 1, run T0 at 16 MHz 
	// TCCR0B |= T0_CS00;
	TCCR0B = 1;
     6e0:	81 e0       	ldi	r24, 0x01	; 1
     6e2:	85 bd       	out	0x25, r24	; 37
	TIMSK0 = 0;
     6e4:	10 92 6e 00 	sts	0x006E, r1
	TIMSK0 |= TIMER0_OVERFLOW_INTERRUPT_ENABLE;
     6e8:	80 91 6e 00 	lds	r24, 0x006E
     6ec:	81 60       	ori	r24, 0x01	; 1
     6ee:	80 93 6e 00 	sts	0x006E, r24
	//turn on fast PWM and OC0A - output 
	TCCR0A = 0;
     6f2:	14 bc       	out	0x24, r1	; 36
	TCCR0A = (1<<COM0A0) | (1<<COM0A1) | (1<<WGM00) | (1<<WGM01) ; 
     6f4:	83 ec       	ldi	r24, 0xC3	; 195
     6f6:	84 bd       	out	0x24, r24	; 36

	//TCCR0A |= WAVE_GEN_M00 + WAVE_GEN_M01 + COMPARE_MATCH_OUTPUT_A0 + COMPARE_MATCH_OUTPUT_A1; 
	OCR0A = 128;
     6f8:	80 e8       	ldi	r24, 0x80	; 128
     6fa:	87 bd       	out	0x27, r24	; 39
	//increment = INCREMENT_941;
	//increment_a = INCREMENT_941;
	//increment_b = INCREMENT_941;
	sei();
     6fc:	78 94       	sei
}
     6fe:	df 91       	pop	r29
     700:	cf 91       	pop	r28
     702:	1f 91       	pop	r17
     704:	0f 91       	pop	r16
     706:	ff 90       	pop	r15
     708:	ef 90       	pop	r14
     70a:	08 95       	ret

0000070c <play>:

//plays fA and fB for a duration of duration ms
void play(int fA, int fB){
	//if( !is_playing ){
		//is_playing = TRUE;
		switch( fA){
     70c:	89 3b       	cpi	r24, 0xB9	; 185
     70e:	24 e0       	ldi	r18, 0x04	; 4
     710:	92 07       	cpc	r25, r18
     712:	89 f0       	breq	.+34     	; 0x736 <play+0x2a>
     714:	44 f4       	brge	.+16     	; 0x726 <play+0x1a>
     716:	89 3b       	cpi	r24, 0xB9	; 185
     718:	22 e0       	ldi	r18, 0x02	; 2
     71a:	92 07       	cpc	r25, r18
     71c:	19 f1       	breq	.+70     	; 0x764 <play+0x58>
     71e:	8d 3a       	cpi	r24, 0xAD	; 173
     720:	93 40       	sbci	r25, 0x03	; 3
     722:	51 f5       	brne	.+84     	; 0x778 <play+0x6c>
     724:	24 c0       	rjmp	.+72     	; 0x76e <play+0x62>
     726:	88 33       	cpi	r24, 0x38	; 56
     728:	25 e0       	ldi	r18, 0x05	; 5
     72a:	92 07       	cpc	r25, r18
     72c:	49 f0       	breq	.+18     	; 0x740 <play+0x34>
     72e:	85 3c       	cpi	r24, 0xC5	; 197
     730:	95 40       	sbci	r25, 0x05	; 5
     732:	11 f5       	brne	.+68     	; 0x778 <play+0x6c>
     734:	12 c0       	rjmp	.+36     	; 0x75a <play+0x4e>
			case 1209: increment_a = INCREMENT_1209; break;
     736:	87 e3       	ldi	r24, 0x37	; 55
     738:	98 eb       	ldi	r25, 0xB8	; 184
     73a:	a3 ef       	ldi	r26, 0xF3	; 243
     73c:	b4 e0       	ldi	r27, 0x04	; 4
     73e:	04 c0       	rjmp	.+8      	; 0x748 <play+0x3c>
			case 1336: increment_a = INCREMENT_1336; break;
     740:	88 e4       	ldi	r24, 0x48	; 72
     742:	93 ee       	ldi	r25, 0xE3	; 227
     744:	a8 e7       	ldi	r26, 0x78	; 120
     746:	b5 e0       	ldi	r27, 0x05	; 5
     748:	80 93 ea 01 	sts	0x01EA, r24
     74c:	90 93 eb 01 	sts	0x01EB, r25
     750:	a0 93 ec 01 	sts	0x01EC, r26
     754:	b0 93 ed 01 	sts	0x01ED, r27
     758:	17 c0       	rjmp	.+46     	; 0x788 <play+0x7c>
			case 1477: increment_a = INCREMENT_1477; break;
     75a:	8b e6       	ldi	r24, 0x6B	; 107
     75c:	9c eb       	ldi	r25, 0xBC	; 188
     75e:	ac e0       	ldi	r26, 0x0C	; 12
     760:	b6 e0       	ldi	r27, 0x06	; 6
     762:	f2 cf       	rjmp	.-28     	; 0x748 <play+0x3c>
			case 697:  increment_a = INCREMENT_697; break;
     764:	87 e3       	ldi	r24, 0x37	; 55
     766:	9a ed       	ldi	r25, 0xDA	; 218
     768:	aa ed       	ldi	r26, 0xDA	; 218
     76a:	b2 e0       	ldi	r27, 0x02	; 2
     76c:	ed cf       	rjmp	.-38     	; 0x748 <play+0x3c>
			case 941: increment_a = INCREMENT_941; break;
     76e:	83 e0       	ldi	r24, 0x03	; 3
     770:	94 eb       	ldi	r25, 0xB4	; 180
     772:	aa ed       	ldi	r26, 0xDA	; 218
     774:	b3 e0       	ldi	r27, 0x03	; 3
     776:	e8 cf       	rjmp	.-48     	; 0x748 <play+0x3c>
			default: increment_a = 0; break;
     778:	10 92 ea 01 	sts	0x01EA, r1
     77c:	10 92 eb 01 	sts	0x01EB, r1
     780:	10 92 ec 01 	sts	0x01EC, r1
     784:	10 92 ed 01 	sts	0x01ED, r1
		}

		switch ( fB) {
     788:	69 33       	cpi	r22, 0x39	; 57
     78a:	83 e0       	ldi	r24, 0x03	; 3
     78c:	78 07       	cpc	r23, r24
     78e:	d9 f0       	breq	.+54     	; 0x7c6 <play+0xba>
     790:	44 f4       	brge	.+16     	; 0x7a2 <play+0x96>
     792:	69 3b       	cpi	r22, 0xB9	; 185
     794:	82 e0       	ldi	r24, 0x02	; 2
     796:	78 07       	cpc	r23, r24
     798:	61 f0       	breq	.+24     	; 0x7b2 <play+0xa6>
     79a:	62 30       	cpi	r22, 0x02	; 2
     79c:	73 40       	sbci	r23, 0x03	; 3
     79e:	91 f5       	brne	.+100    	; 0x804 <play+0xf8>
     7a0:	0d c0       	rjmp	.+26     	; 0x7bc <play+0xb0>
     7a2:	6d 3a       	cpi	r22, 0xAD	; 173
     7a4:	83 e0       	ldi	r24, 0x03	; 3
     7a6:	78 07       	cpc	r23, r24
     7a8:	99 f0       	breq	.+38     	; 0x7d0 <play+0xc4>
     7aa:	69 3b       	cpi	r22, 0xB9	; 185
     7ac:	74 40       	sbci	r23, 0x04	; 4
     7ae:	51 f5       	brne	.+84     	; 0x804 <play+0xf8>
     7b0:	1c c0       	rjmp	.+56     	; 0x7ea <play+0xde>
			case 697: increment_b = INCREMENT_697; break;
     7b2:	87 e3       	ldi	r24, 0x37	; 55
     7b4:	9a ed       	ldi	r25, 0xDA	; 218
     7b6:	aa ed       	ldi	r26, 0xDA	; 218
     7b8:	b2 e0       	ldi	r27, 0x02	; 2
     7ba:	0e c0       	rjmp	.+28     	; 0x7d8 <play+0xcc>
			case 770: increment_b = INCREMENT_770; break;
     7bc:	8e ed       	ldi	r24, 0xDE	; 222
     7be:	95 e6       	ldi	r25, 0x65	; 101
     7c0:	a7 e2       	ldi	r26, 0x27	; 39
     7c2:	b3 e0       	ldi	r27, 0x03	; 3
     7c4:	09 c0       	rjmp	.+18     	; 0x7d8 <play+0xcc>
			case 825: increment_b = INCREMENT_825; break;
     7c6:	87 eb       	ldi	r24, 0xB7	; 183
     7c8:	91 e1       	ldi	r25, 0x11	; 17
     7ca:	a1 e6       	ldi	r26, 0x61	; 97
     7cc:	b3 e0       	ldi	r27, 0x03	; 3
     7ce:	04 c0       	rjmp	.+8      	; 0x7d8 <play+0xcc>
			case 941: increment_b = INCREMENT_941; break;
     7d0:	83 e0       	ldi	r24, 0x03	; 3
     7d2:	94 eb       	ldi	r25, 0xB4	; 180
     7d4:	aa ed       	ldi	r26, 0xDA	; 218
     7d6:	b3 e0       	ldi	r27, 0x03	; 3
     7d8:	80 93 0b 04 	sts	0x040B, r24
     7dc:	90 93 0c 04 	sts	0x040C, r25
     7e0:	a0 93 0d 04 	sts	0x040D, r26
     7e4:	b0 93 0e 04 	sts	0x040E, r27
     7e8:	08 95       	ret
			case 1209: increment_a = INCREMENT_1209; break;
     7ea:	87 e3       	ldi	r24, 0x37	; 55
     7ec:	98 eb       	ldi	r25, 0xB8	; 184
     7ee:	a3 ef       	ldi	r26, 0xF3	; 243
     7f0:	b4 e0       	ldi	r27, 0x04	; 4
     7f2:	80 93 ea 01 	sts	0x01EA, r24
     7f6:	90 93 eb 01 	sts	0x01EB, r25
     7fa:	a0 93 ec 01 	sts	0x01EC, r26
     7fe:	b0 93 ed 01 	sts	0x01ED, r27
     802:	08 95       	ret
			default: increment_b = 0; break;
     804:	10 92 0b 04 	sts	0x040B, r1
     808:	10 92 0c 04 	sts	0x040C, r1
     80c:	10 92 0d 04 	sts	0x040D, r1
     810:	10 92 0e 04 	sts	0x040E, r1
     814:	08 95       	ret

00000816 <stop_playing>:


}

void stop_playing(){
	is_playing = FALSE;
     816:	10 92 e9 01 	sts	0x01E9, r1
	sample = 0;
     81a:	10 92 11 04 	sts	0x0411, r1
     81e:	10 92 10 04 	sts	0x0410, r1
	rampCount = 0;
     822:	10 92 01 04 	sts	0x0401, r1
     826:	10 92 00 04 	sts	0x0400, r1
	increment_a = increment_b = 0;
     82a:	10 92 0b 04 	sts	0x040B, r1
     82e:	10 92 0c 04 	sts	0x040C, r1
     832:	10 92 0d 04 	sts	0x040D, r1
     836:	10 92 0e 04 	sts	0x040E, r1
     83a:	10 92 ea 01 	sts	0x01EA, r1
     83e:	10 92 eb 01 	sts	0x01EB, r1
     842:	10 92 ec 01 	sts	0x01EC, r1
     846:	10 92 ed 01 	sts	0x01ED, r1
	accumulator_a = accumulator_b = 0;
     84a:	10 92 02 04 	sts	0x0402, r1
     84e:	10 92 03 04 	sts	0x0403, r1
     852:	10 92 04 04 	sts	0x0404, r1
     856:	10 92 05 04 	sts	0x0405, r1
     85a:	10 92 f7 03 	sts	0x03F7, r1
     85e:	10 92 f8 03 	sts	0x03F8, r1
     862:	10 92 f9 03 	sts	0x03F9, r1
     866:	10 92 fa 03 	sts	0x03FA, r1
     86a:	08 95       	ret

0000086c <update_status_variables>:
}

void update_status_variables(){
	if(changed == TRUE){
     86c:	80 91 ff 03 	lds	r24, 0x03FF
     870:	81 30       	cpi	r24, 0x01	; 1
     872:	09 f0       	breq	.+2      	; 0x876 <update_status_variables+0xa>
     874:	50 c0       	rjmp	.+160    	; 0x916 <update_status_variables+0xaa>
		changed = FALSE;
     876:	10 92 ff 03 	sts	0x03FF, r1

		sample++;
     87a:	80 91 10 04 	lds	r24, 0x0410
     87e:	90 91 11 04 	lds	r25, 0x0411
     882:	01 96       	adiw	r24, 0x01	; 1
     884:	90 93 11 04 	sts	0x0411, r25
     888:	80 93 10 04 	sts	0x0410, r24
		//ramping up
		if( sample <= RAMPUPEND )
     88c:	80 91 10 04 	lds	r24, 0x0410
     890:	90 91 11 04 	lds	r25, 0x0411
     894:	8b 3f       	cpi	r24, 0xFB	; 251
     896:	91 05       	cpc	r25, r1
     898:	30 f4       	brcc	.+12     	; 0x8a6 <update_status_variables+0x3a>
			rampCount++;
     89a:	80 91 00 04 	lds	r24, 0x0400
     89e:	90 91 01 04 	lds	r25, 0x0401
     8a2:	01 96       	adiw	r24, 0x01	; 1
     8a4:	24 c0       	rjmp	.+72     	; 0x8ee <update_status_variables+0x82>
		//holdsteady the max value 
		else if( sample > RAMPUPEND && sample <= RAMPDOWNSTART)
     8a6:	80 91 10 04 	lds	r24, 0x0410
     8aa:	90 91 11 04 	lds	r25, 0x0411
     8ae:	8b 3f       	cpi	r24, 0xFB	; 251
     8b0:	91 05       	cpc	r25, r1
     8b2:	50 f0       	brcs	.+20     	; 0x8c8 <update_status_variables+0x5c>
     8b4:	80 91 10 04 	lds	r24, 0x0410
     8b8:	90 91 11 04 	lds	r25, 0x0411
     8bc:	82 37       	cpi	r24, 0x72	; 114
     8be:	92 40       	sbci	r25, 0x02	; 2
     8c0:	18 f4       	brcc	.+6      	; 0x8c8 <update_status_variables+0x5c>
			rampCount = 255;
     8c2:	8f ef       	ldi	r24, 0xFF	; 255
     8c4:	90 e0       	ldi	r25, 0x00	; 0
     8c6:	13 c0       	rjmp	.+38     	; 0x8ee <update_status_variables+0x82>
		//begin rampdown
		else if( sample > RAMPDOWNSTART && sample <= RAMPDOWNEND)
     8c8:	80 91 10 04 	lds	r24, 0x0410
     8cc:	90 91 11 04 	lds	r25, 0x0411
     8d0:	82 37       	cpi	r24, 0x72	; 114
     8d2:	92 40       	sbci	r25, 0x02	; 2
     8d4:	88 f0       	brcs	.+34     	; 0x8f8 <update_status_variables+0x8c>
     8d6:	80 91 10 04 	lds	r24, 0x0410
     8da:	90 91 11 04 	lds	r25, 0x0411
     8de:	8c 36       	cpi	r24, 0x6C	; 108
     8e0:	93 40       	sbci	r25, 0x03	; 3
     8e2:	50 f4       	brcc	.+20     	; 0x8f8 <update_status_variables+0x8c>
			rampCount--;
     8e4:	80 91 00 04 	lds	r24, 0x0400
     8e8:	90 91 01 04 	lds	r25, 0x0401
     8ec:	01 97       	sbiw	r24, 0x01	; 1
     8ee:	90 93 01 04 	sts	0x0401, r25
     8f2:	80 93 00 04 	sts	0x0400, r24
     8f6:	08 95       	ret
		//finished ramping
		else if(sample > RAMPDOWNEND){
     8f8:	80 91 10 04 	lds	r24, 0x0410
     8fc:	90 91 11 04 	lds	r25, 0x0411
     900:	8c 36       	cpi	r24, 0x6C	; 108
     902:	93 40       	sbci	r25, 0x03	; 3
     904:	40 f0       	brcs	.+16     	; 0x916 <update_status_variables+0xaa>
			rampCount = 0;
     906:	10 92 01 04 	sts	0x0401, r1
     90a:	10 92 00 04 	sts	0x0400, r1
			sample = 0;     
     90e:	10 92 11 04 	sts	0x0411, r1
     912:	10 92 10 04 	sts	0x0410, r1
     916:	08 95       	ret

00000918 <__fixunssfsi>:
     918:	cf 92       	push	r12
     91a:	df 92       	push	r13
     91c:	ef 92       	push	r14
     91e:	ff 92       	push	r15
     920:	0f 93       	push	r16
     922:	1f 93       	push	r17
     924:	6b 01       	movw	r12, r22
     926:	7c 01       	movw	r14, r24
     928:	20 e0       	ldi	r18, 0x00	; 0
     92a:	30 e0       	ldi	r19, 0x00	; 0
     92c:	40 e0       	ldi	r20, 0x00	; 0
     92e:	5f e4       	ldi	r21, 0x4F	; 79
     930:	0e 94 56 07 	call	0xeac	; 0xeac <__gesf2>
     934:	87 fd       	sbrc	r24, 7
     936:	0e c0       	rjmp	.+28     	; 0x954 <__fixunssfsi+0x3c>
     938:	20 e0       	ldi	r18, 0x00	; 0
     93a:	30 e0       	ldi	r19, 0x00	; 0
     93c:	40 e0       	ldi	r20, 0x00	; 0
     93e:	5f e4       	ldi	r21, 0x4F	; 79
     940:	c7 01       	movw	r24, r14
     942:	b6 01       	movw	r22, r12
     944:	0e 94 41 06 	call	0xc82	; 0xc82 <__subsf3>
     948:	0e 94 e1 07 	call	0xfc2	; 0xfc2 <__fixsfsi>
     94c:	8b 01       	movw	r16, r22
     94e:	9c 01       	movw	r18, r24
     950:	30 58       	subi	r19, 0x80	; 128
     952:	06 c0       	rjmp	.+12     	; 0x960 <__fixunssfsi+0x48>
     954:	c7 01       	movw	r24, r14
     956:	b6 01       	movw	r22, r12
     958:	0e 94 e1 07 	call	0xfc2	; 0xfc2 <__fixsfsi>
     95c:	8b 01       	movw	r16, r22
     95e:	9c 01       	movw	r18, r24
     960:	b8 01       	movw	r22, r16
     962:	c9 01       	movw	r24, r18
     964:	1f 91       	pop	r17
     966:	0f 91       	pop	r16
     968:	ff 90       	pop	r15
     96a:	ef 90       	pop	r14
     96c:	df 90       	pop	r13
     96e:	cf 90       	pop	r12
     970:	08 95       	ret

00000972 <_fpadd_parts>:
     972:	a4 e0       	ldi	r26, 0x04	; 4
     974:	b0 e0       	ldi	r27, 0x00	; 0
     976:	ef eb       	ldi	r30, 0xBF	; 191
     978:	f4 e0       	ldi	r31, 0x04	; 4
     97a:	0c 94 22 0a 	jmp	0x1444	; 0x1444 <__prologue_saves__+0x4>
     97e:	7c 01       	movw	r14, r24
     980:	6a 01       	movw	r12, r20
     982:	fc 01       	movw	r30, r24
     984:	80 81       	ld	r24, Z
     986:	82 30       	cpi	r24, 0x02	; 2
     988:	08 f4       	brcc	.+2      	; 0x98c <_fpadd_parts+0x1a>
     98a:	4a c1       	rjmp	.+660    	; 0xc20 <_fpadd_parts+0x2ae>
     98c:	fb 01       	movw	r30, r22
     98e:	90 81       	ld	r25, Z
     990:	92 30       	cpi	r25, 0x02	; 2
     992:	08 f4       	brcc	.+2      	; 0x996 <_fpadd_parts+0x24>
     994:	42 c1       	rjmp	.+644    	; 0xc1a <_fpadd_parts+0x2a8>
     996:	84 30       	cpi	r24, 0x04	; 4
     998:	79 f4       	brne	.+30     	; 0x9b8 <_fpadd_parts+0x46>
     99a:	94 30       	cpi	r25, 0x04	; 4
     99c:	09 f0       	breq	.+2      	; 0x9a0 <_fpadd_parts+0x2e>
     99e:	40 c1       	rjmp	.+640    	; 0xc20 <_fpadd_parts+0x2ae>
     9a0:	f7 01       	movw	r30, r14
     9a2:	91 81       	ldd	r25, Z+1	; 0x01
     9a4:	fb 01       	movw	r30, r22
     9a6:	81 81       	ldd	r24, Z+1	; 0x01
     9a8:	98 17       	cp	r25, r24
     9aa:	09 f4       	brne	.+2      	; 0x9ae <_fpadd_parts+0x3c>
     9ac:	39 c1       	rjmp	.+626    	; 0xc20 <_fpadd_parts+0x2ae>
     9ae:	ae e4       	ldi	r26, 0x4E	; 78
     9b0:	ea 2e       	mov	r14, r26
     9b2:	a1 e0       	ldi	r26, 0x01	; 1
     9b4:	fa 2e       	mov	r15, r26
     9b6:	34 c1       	rjmp	.+616    	; 0xc20 <_fpadd_parts+0x2ae>
     9b8:	94 30       	cpi	r25, 0x04	; 4
     9ba:	09 f4       	brne	.+2      	; 0x9be <_fpadd_parts+0x4c>
     9bc:	2e c1       	rjmp	.+604    	; 0xc1a <_fpadd_parts+0x2a8>
     9be:	92 30       	cpi	r25, 0x02	; 2
     9c0:	91 f4       	brne	.+36     	; 0x9e6 <_fpadd_parts+0x74>
     9c2:	82 30       	cpi	r24, 0x02	; 2
     9c4:	09 f0       	breq	.+2      	; 0x9c8 <_fpadd_parts+0x56>
     9c6:	2c c1       	rjmp	.+600    	; 0xc20 <_fpadd_parts+0x2ae>
     9c8:	88 e0       	ldi	r24, 0x08	; 8
     9ca:	f7 01       	movw	r30, r14
     9cc:	da 01       	movw	r26, r20
     9ce:	01 90       	ld	r0, Z+
     9d0:	0d 92       	st	X+, r0
     9d2:	8a 95       	dec	r24
     9d4:	e1 f7       	brne	.-8      	; 0x9ce <_fpadd_parts+0x5c>
     9d6:	fb 01       	movw	r30, r22
     9d8:	81 81       	ldd	r24, Z+1	; 0x01
     9da:	f7 01       	movw	r30, r14
     9dc:	91 81       	ldd	r25, Z+1	; 0x01
     9de:	89 23       	and	r24, r25
     9e0:	fa 01       	movw	r30, r20
     9e2:	81 83       	std	Z+1, r24	; 0x01
     9e4:	1c c1       	rjmp	.+568    	; 0xc1e <_fpadd_parts+0x2ac>
     9e6:	82 30       	cpi	r24, 0x02	; 2
     9e8:	09 f4       	brne	.+2      	; 0x9ec <_fpadd_parts+0x7a>
     9ea:	17 c1       	rjmp	.+558    	; 0xc1a <_fpadd_parts+0x2a8>
     9ec:	f7 01       	movw	r30, r14
     9ee:	82 81       	ldd	r24, Z+2	; 0x02
     9f0:	93 81       	ldd	r25, Z+3	; 0x03
     9f2:	fb 01       	movw	r30, r22
     9f4:	a2 81       	ldd	r26, Z+2	; 0x02
     9f6:	b3 81       	ldd	r27, Z+3	; 0x03
     9f8:	f7 01       	movw	r30, r14
     9fa:	04 81       	ldd	r16, Z+4	; 0x04
     9fc:	15 81       	ldd	r17, Z+5	; 0x05
     9fe:	26 81       	ldd	r18, Z+6	; 0x06
     a00:	37 81       	ldd	r19, Z+7	; 0x07
     a02:	fb 01       	movw	r30, r22
     a04:	84 80       	ldd	r8, Z+4	; 0x04
     a06:	95 80       	ldd	r9, Z+5	; 0x05
     a08:	a6 80       	ldd	r10, Z+6	; 0x06
     a0a:	b7 80       	ldd	r11, Z+7	; 0x07
     a0c:	fc 01       	movw	r30, r24
     a0e:	ea 1b       	sub	r30, r26
     a10:	fb 0b       	sbc	r31, r27
     a12:	af 01       	movw	r20, r30
     a14:	f7 ff       	sbrs	r31, 7
     a16:	04 c0       	rjmp	.+8      	; 0xa20 <_fpadd_parts+0xae>
     a18:	44 27       	eor	r20, r20
     a1a:	55 27       	eor	r21, r21
     a1c:	4e 1b       	sub	r20, r30
     a1e:	5f 0b       	sbc	r21, r31
     a20:	40 32       	cpi	r20, 0x20	; 32
     a22:	51 05       	cpc	r21, r1
     a24:	0c f0       	brlt	.+2      	; 0xa28 <_fpadd_parts+0xb6>
     a26:	74 c0       	rjmp	.+232    	; 0xb10 <_fpadd_parts+0x19e>
     a28:	1e 16       	cp	r1, r30
     a2a:	1f 06       	cpc	r1, r31
     a2c:	b4 f5       	brge	.+108    	; 0xa9a <_fpadd_parts+0x128>
     a2e:	24 01       	movw	r4, r8
     a30:	35 01       	movw	r6, r10
     a32:	04 2e       	mov	r0, r20
     a34:	04 c0       	rjmp	.+8      	; 0xa3e <_fpadd_parts+0xcc>
     a36:	76 94       	lsr	r7
     a38:	67 94       	ror	r6
     a3a:	57 94       	ror	r5
     a3c:	47 94       	ror	r4
     a3e:	0a 94       	dec	r0
     a40:	d2 f7       	brpl	.-12     	; 0xa36 <_fpadd_parts+0xc4>
     a42:	49 82       	std	Y+1, r4	; 0x01
     a44:	5a 82       	std	Y+2, r5	; 0x02
     a46:	6b 82       	std	Y+3, r6	; 0x03
     a48:	7c 82       	std	Y+4, r7	; 0x04
     a4a:	41 2c       	mov	r4, r1
     a4c:	51 2c       	mov	r5, r1
     a4e:	32 01       	movw	r6, r4
     a50:	43 94       	inc	r4
     a52:	04 c0       	rjmp	.+8      	; 0xa5c <_fpadd_parts+0xea>
     a54:	44 0c       	add	r4, r4
     a56:	55 1c       	adc	r5, r5
     a58:	66 1c       	adc	r6, r6
     a5a:	77 1c       	adc	r7, r7
     a5c:	4a 95       	dec	r20
     a5e:	d2 f7       	brpl	.-12     	; 0xa54 <_fpadd_parts+0xe2>
     a60:	41 e0       	ldi	r20, 0x01	; 1
     a62:	44 1a       	sub	r4, r20
     a64:	51 08       	sbc	r5, r1
     a66:	61 08       	sbc	r6, r1
     a68:	71 08       	sbc	r7, r1
     a6a:	48 20       	and	r4, r8
     a6c:	59 20       	and	r5, r9
     a6e:	6a 20       	and	r6, r10
     a70:	7b 20       	and	r7, r11
     a72:	81 2c       	mov	r8, r1
     a74:	91 2c       	mov	r9, r1
     a76:	54 01       	movw	r10, r8
     a78:	83 94       	inc	r8
     a7a:	45 28       	or	r4, r5
     a7c:	46 28       	or	r4, r6
     a7e:	47 28       	or	r4, r7
     a80:	19 f4       	brne	.+6      	; 0xa88 <_fpadd_parts+0x116>
     a82:	81 2c       	mov	r8, r1
     a84:	91 2c       	mov	r9, r1
     a86:	54 01       	movw	r10, r8
     a88:	49 80       	ldd	r4, Y+1	; 0x01
     a8a:	5a 80       	ldd	r5, Y+2	; 0x02
     a8c:	6b 80       	ldd	r6, Y+3	; 0x03
     a8e:	7c 80       	ldd	r7, Y+4	; 0x04
     a90:	84 28       	or	r8, r4
     a92:	95 28       	or	r9, r5
     a94:	a6 28       	or	r10, r6
     a96:	b7 28       	or	r11, r7
     a98:	46 c0       	rjmp	.+140    	; 0xb26 <_fpadd_parts+0x1b4>
     a9a:	ef 2b       	or	r30, r31
     a9c:	09 f4       	brne	.+2      	; 0xaa0 <_fpadd_parts+0x12e>
     a9e:	43 c0       	rjmp	.+134    	; 0xb26 <_fpadd_parts+0x1b4>
     aa0:	84 0f       	add	r24, r20
     aa2:	95 1f       	adc	r25, r21
     aa4:	28 01       	movw	r4, r16
     aa6:	39 01       	movw	r6, r18
     aa8:	04 2e       	mov	r0, r20
     aaa:	04 c0       	rjmp	.+8      	; 0xab4 <_fpadd_parts+0x142>
     aac:	76 94       	lsr	r7
     aae:	67 94       	ror	r6
     ab0:	57 94       	ror	r5
     ab2:	47 94       	ror	r4
     ab4:	0a 94       	dec	r0
     ab6:	d2 f7       	brpl	.-12     	; 0xaac <_fpadd_parts+0x13a>
     ab8:	49 82       	std	Y+1, r4	; 0x01
     aba:	5a 82       	std	Y+2, r5	; 0x02
     abc:	6b 82       	std	Y+3, r6	; 0x03
     abe:	7c 82       	std	Y+4, r7	; 0x04
     ac0:	41 2c       	mov	r4, r1
     ac2:	51 2c       	mov	r5, r1
     ac4:	32 01       	movw	r6, r4
     ac6:	43 94       	inc	r4
     ac8:	04 c0       	rjmp	.+8      	; 0xad2 <_fpadd_parts+0x160>
     aca:	44 0c       	add	r4, r4
     acc:	55 1c       	adc	r5, r5
     ace:	66 1c       	adc	r6, r6
     ad0:	77 1c       	adc	r7, r7
     ad2:	4a 95       	dec	r20
     ad4:	d2 f7       	brpl	.-12     	; 0xaca <_fpadd_parts+0x158>
     ad6:	41 e0       	ldi	r20, 0x01	; 1
     ad8:	44 1a       	sub	r4, r20
     ada:	51 08       	sbc	r5, r1
     adc:	61 08       	sbc	r6, r1
     ade:	71 08       	sbc	r7, r1
     ae0:	40 22       	and	r4, r16
     ae2:	51 22       	and	r5, r17
     ae4:	62 22       	and	r6, r18
     ae6:	73 22       	and	r7, r19
     ae8:	01 e0       	ldi	r16, 0x01	; 1
     aea:	10 e0       	ldi	r17, 0x00	; 0
     aec:	20 e0       	ldi	r18, 0x00	; 0
     aee:	30 e0       	ldi	r19, 0x00	; 0
     af0:	45 28       	or	r4, r5
     af2:	46 28       	or	r4, r6
     af4:	47 28       	or	r4, r7
     af6:	19 f4       	brne	.+6      	; 0xafe <_fpadd_parts+0x18c>
     af8:	00 e0       	ldi	r16, 0x00	; 0
     afa:	10 e0       	ldi	r17, 0x00	; 0
     afc:	98 01       	movw	r18, r16
     afe:	49 80       	ldd	r4, Y+1	; 0x01
     b00:	5a 80       	ldd	r5, Y+2	; 0x02
     b02:	6b 80       	ldd	r6, Y+3	; 0x03
     b04:	7c 80       	ldd	r7, Y+4	; 0x04
     b06:	04 29       	or	r16, r4
     b08:	15 29       	or	r17, r5
     b0a:	26 29       	or	r18, r6
     b0c:	37 29       	or	r19, r7
     b0e:	0b c0       	rjmp	.+22     	; 0xb26 <_fpadd_parts+0x1b4>
     b10:	a8 17       	cp	r26, r24
     b12:	b9 07       	cpc	r27, r25
     b14:	24 f4       	brge	.+8      	; 0xb1e <_fpadd_parts+0x1ac>
     b16:	81 2c       	mov	r8, r1
     b18:	91 2c       	mov	r9, r1
     b1a:	54 01       	movw	r10, r8
     b1c:	04 c0       	rjmp	.+8      	; 0xb26 <_fpadd_parts+0x1b4>
     b1e:	cd 01       	movw	r24, r26
     b20:	00 e0       	ldi	r16, 0x00	; 0
     b22:	10 e0       	ldi	r17, 0x00	; 0
     b24:	98 01       	movw	r18, r16
     b26:	f7 01       	movw	r30, r14
     b28:	41 81       	ldd	r20, Z+1	; 0x01
     b2a:	fb 01       	movw	r30, r22
     b2c:	51 81       	ldd	r21, Z+1	; 0x01
     b2e:	45 17       	cp	r20, r21
     b30:	09 f4       	brne	.+2      	; 0xb34 <_fpadd_parts+0x1c2>
     b32:	46 c0       	rjmp	.+140    	; 0xbc0 <_fpadd_parts+0x24e>
     b34:	44 23       	and	r20, r20
     b36:	49 f0       	breq	.+18     	; 0xb4a <_fpadd_parts+0x1d8>
     b38:	24 01       	movw	r4, r8
     b3a:	35 01       	movw	r6, r10
     b3c:	40 1a       	sub	r4, r16
     b3e:	51 0a       	sbc	r5, r17
     b40:	62 0a       	sbc	r6, r18
     b42:	73 0a       	sbc	r7, r19
     b44:	93 01       	movw	r18, r6
     b46:	82 01       	movw	r16, r4
     b48:	04 c0       	rjmp	.+8      	; 0xb52 <_fpadd_parts+0x1e0>
     b4a:	08 19       	sub	r16, r8
     b4c:	19 09       	sbc	r17, r9
     b4e:	2a 09       	sbc	r18, r10
     b50:	3b 09       	sbc	r19, r11
     b52:	37 fd       	sbrc	r19, 7
     b54:	05 c0       	rjmp	.+10     	; 0xb60 <_fpadd_parts+0x1ee>
     b56:	f6 01       	movw	r30, r12
     b58:	11 82       	std	Z+1, r1	; 0x01
     b5a:	93 83       	std	Z+3, r25	; 0x03
     b5c:	82 83       	std	Z+2, r24	; 0x02
     b5e:	0c c0       	rjmp	.+24     	; 0xb78 <_fpadd_parts+0x206>
     b60:	41 e0       	ldi	r20, 0x01	; 1
     b62:	f6 01       	movw	r30, r12
     b64:	41 83       	std	Z+1, r20	; 0x01
     b66:	93 83       	std	Z+3, r25	; 0x03
     b68:	82 83       	std	Z+2, r24	; 0x02
     b6a:	30 95       	com	r19
     b6c:	20 95       	com	r18
     b6e:	10 95       	com	r17
     b70:	01 95       	neg	r16
     b72:	1f 4f       	sbci	r17, 0xFF	; 255
     b74:	2f 4f       	sbci	r18, 0xFF	; 255
     b76:	3f 4f       	sbci	r19, 0xFF	; 255
     b78:	04 83       	std	Z+4, r16	; 0x04
     b7a:	15 83       	std	Z+5, r17	; 0x05
     b7c:	26 83       	std	Z+6, r18	; 0x06
     b7e:	37 83       	std	Z+7, r19	; 0x07
     b80:	0e c0       	rjmp	.+28     	; 0xb9e <_fpadd_parts+0x22c>
     b82:	88 0f       	add	r24, r24
     b84:	99 1f       	adc	r25, r25
     b86:	aa 1f       	adc	r26, r26
     b88:	bb 1f       	adc	r27, r27
     b8a:	f6 01       	movw	r30, r12
     b8c:	84 83       	std	Z+4, r24	; 0x04
     b8e:	95 83       	std	Z+5, r25	; 0x05
     b90:	a6 83       	std	Z+6, r26	; 0x06
     b92:	b7 83       	std	Z+7, r27	; 0x07
     b94:	82 81       	ldd	r24, Z+2	; 0x02
     b96:	93 81       	ldd	r25, Z+3	; 0x03
     b98:	01 97       	sbiw	r24, 0x01	; 1
     b9a:	93 83       	std	Z+3, r25	; 0x03
     b9c:	82 83       	std	Z+2, r24	; 0x02
     b9e:	f6 01       	movw	r30, r12
     ba0:	84 81       	ldd	r24, Z+4	; 0x04
     ba2:	95 81       	ldd	r25, Z+5	; 0x05
     ba4:	a6 81       	ldd	r26, Z+6	; 0x06
     ba6:	b7 81       	ldd	r27, Z+7	; 0x07
     ba8:	ac 01       	movw	r20, r24
     baa:	bd 01       	movw	r22, r26
     bac:	41 50       	subi	r20, 0x01	; 1
     bae:	51 09       	sbc	r21, r1
     bb0:	61 09       	sbc	r22, r1
     bb2:	71 09       	sbc	r23, r1
     bb4:	4f 3f       	cpi	r20, 0xFF	; 255
     bb6:	5f 4f       	sbci	r21, 0xFF	; 255
     bb8:	6f 4f       	sbci	r22, 0xFF	; 255
     bba:	7f 43       	sbci	r23, 0x3F	; 63
     bbc:	10 f3       	brcs	.-60     	; 0xb82 <_fpadd_parts+0x210>
     bbe:	0c c0       	rjmp	.+24     	; 0xbd8 <_fpadd_parts+0x266>
     bc0:	f6 01       	movw	r30, r12
     bc2:	41 83       	std	Z+1, r20	; 0x01
     bc4:	93 83       	std	Z+3, r25	; 0x03
     bc6:	82 83       	std	Z+2, r24	; 0x02
     bc8:	08 0d       	add	r16, r8
     bca:	19 1d       	adc	r17, r9
     bcc:	2a 1d       	adc	r18, r10
     bce:	3b 1d       	adc	r19, r11
     bd0:	04 83       	std	Z+4, r16	; 0x04
     bd2:	15 83       	std	Z+5, r17	; 0x05
     bd4:	26 83       	std	Z+6, r18	; 0x06
     bd6:	37 83       	std	Z+7, r19	; 0x07
     bd8:	83 e0       	ldi	r24, 0x03	; 3
     bda:	f6 01       	movw	r30, r12
     bdc:	80 83       	st	Z, r24
     bde:	44 81       	ldd	r20, Z+4	; 0x04
     be0:	55 81       	ldd	r21, Z+5	; 0x05
     be2:	66 81       	ldd	r22, Z+6	; 0x06
     be4:	77 81       	ldd	r23, Z+7	; 0x07
     be6:	77 ff       	sbrs	r23, 7
     be8:	1a c0       	rjmp	.+52     	; 0xc1e <_fpadd_parts+0x2ac>
     bea:	db 01       	movw	r26, r22
     bec:	ca 01       	movw	r24, r20
     bee:	81 70       	andi	r24, 0x01	; 1
     bf0:	99 27       	eor	r25, r25
     bf2:	aa 27       	eor	r26, r26
     bf4:	bb 27       	eor	r27, r27
     bf6:	76 95       	lsr	r23
     bf8:	67 95       	ror	r22
     bfa:	57 95       	ror	r21
     bfc:	47 95       	ror	r20
     bfe:	84 2b       	or	r24, r20
     c00:	95 2b       	or	r25, r21
     c02:	a6 2b       	or	r26, r22
     c04:	b7 2b       	or	r27, r23
     c06:	84 83       	std	Z+4, r24	; 0x04
     c08:	95 83       	std	Z+5, r25	; 0x05
     c0a:	a6 83       	std	Z+6, r26	; 0x06
     c0c:	b7 83       	std	Z+7, r27	; 0x07
     c0e:	82 81       	ldd	r24, Z+2	; 0x02
     c10:	93 81       	ldd	r25, Z+3	; 0x03
     c12:	01 96       	adiw	r24, 0x01	; 1
     c14:	93 83       	std	Z+3, r25	; 0x03
     c16:	82 83       	std	Z+2, r24	; 0x02
     c18:	02 c0       	rjmp	.+4      	; 0xc1e <_fpadd_parts+0x2ac>
     c1a:	7b 01       	movw	r14, r22
     c1c:	01 c0       	rjmp	.+2      	; 0xc20 <_fpadd_parts+0x2ae>
     c1e:	76 01       	movw	r14, r12
     c20:	c7 01       	movw	r24, r14
     c22:	24 96       	adiw	r28, 0x04	; 4
     c24:	e0 e1       	ldi	r30, 0x10	; 16
     c26:	0c 94 3e 0a 	jmp	0x147c	; 0x147c <__epilogue_restores__+0x4>

00000c2a <__addsf3>:
     c2a:	a0 e2       	ldi	r26, 0x20	; 32
     c2c:	b0 e0       	ldi	r27, 0x00	; 0
     c2e:	eb e1       	ldi	r30, 0x1B	; 27
     c30:	f6 e0       	ldi	r31, 0x06	; 6
     c32:	0c 94 30 0a 	jmp	0x1460	; 0x1460 <__prologue_saves__+0x20>
     c36:	6d 8f       	std	Y+29, r22	; 0x1d
     c38:	7e 8f       	std	Y+30, r23	; 0x1e
     c3a:	8f 8f       	std	Y+31, r24	; 0x1f
     c3c:	98 a3       	std	Y+32, r25	; 0x20
     c3e:	29 8f       	std	Y+25, r18	; 0x19
     c40:	3a 8f       	std	Y+26, r19	; 0x1a
     c42:	4b 8f       	std	Y+27, r20	; 0x1b
     c44:	5c 8f       	std	Y+28, r21	; 0x1c
     c46:	be 01       	movw	r22, r28
     c48:	6f 5e       	subi	r22, 0xEF	; 239
     c4a:	7f 4f       	sbci	r23, 0xFF	; 255
     c4c:	ce 01       	movw	r24, r28
     c4e:	4d 96       	adiw	r24, 0x1d	; 29
     c50:	0e 94 fa 08 	call	0x11f4	; 0x11f4 <__unpack_f>
     c54:	be 01       	movw	r22, r28
     c56:	67 5f       	subi	r22, 0xF7	; 247
     c58:	7f 4f       	sbci	r23, 0xFF	; 255
     c5a:	ce 01       	movw	r24, r28
     c5c:	49 96       	adiw	r24, 0x19	; 25
     c5e:	0e 94 fa 08 	call	0x11f4	; 0x11f4 <__unpack_f>
     c62:	ae 01       	movw	r20, r28
     c64:	4f 5f       	subi	r20, 0xFF	; 255
     c66:	5f 4f       	sbci	r21, 0xFF	; 255
     c68:	be 01       	movw	r22, r28
     c6a:	67 5f       	subi	r22, 0xF7	; 247
     c6c:	7f 4f       	sbci	r23, 0xFF	; 255
     c6e:	ce 01       	movw	r24, r28
     c70:	41 96       	adiw	r24, 0x11	; 17
     c72:	0e 94 b9 04 	call	0x972	; 0x972 <_fpadd_parts>
     c76:	0e 94 30 08 	call	0x1060	; 0x1060 <__pack_f>
     c7a:	a0 96       	adiw	r28, 0x20	; 32
     c7c:	e2 e0       	ldi	r30, 0x02	; 2
     c7e:	0c 94 4c 0a 	jmp	0x1498	; 0x1498 <__epilogue_restores__+0x20>

00000c82 <__subsf3>:
     c82:	a0 e2       	ldi	r26, 0x20	; 32
     c84:	b0 e0       	ldi	r27, 0x00	; 0
     c86:	e7 e4       	ldi	r30, 0x47	; 71
     c88:	f6 e0       	ldi	r31, 0x06	; 6
     c8a:	0c 94 30 0a 	jmp	0x1460	; 0x1460 <__prologue_saves__+0x20>
     c8e:	6d 8f       	std	Y+29, r22	; 0x1d
     c90:	7e 8f       	std	Y+30, r23	; 0x1e
     c92:	8f 8f       	std	Y+31, r24	; 0x1f
     c94:	98 a3       	std	Y+32, r25	; 0x20
     c96:	29 8f       	std	Y+25, r18	; 0x19
     c98:	3a 8f       	std	Y+26, r19	; 0x1a
     c9a:	4b 8f       	std	Y+27, r20	; 0x1b
     c9c:	5c 8f       	std	Y+28, r21	; 0x1c
     c9e:	be 01       	movw	r22, r28
     ca0:	6f 5e       	subi	r22, 0xEF	; 239
     ca2:	7f 4f       	sbci	r23, 0xFF	; 255
     ca4:	ce 01       	movw	r24, r28
     ca6:	4d 96       	adiw	r24, 0x1d	; 29
     ca8:	0e 94 fa 08 	call	0x11f4	; 0x11f4 <__unpack_f>
     cac:	be 01       	movw	r22, r28
     cae:	67 5f       	subi	r22, 0xF7	; 247
     cb0:	7f 4f       	sbci	r23, 0xFF	; 255
     cb2:	ce 01       	movw	r24, r28
     cb4:	49 96       	adiw	r24, 0x19	; 25
     cb6:	0e 94 fa 08 	call	0x11f4	; 0x11f4 <__unpack_f>
     cba:	8a 85       	ldd	r24, Y+10	; 0x0a
     cbc:	91 e0       	ldi	r25, 0x01	; 1
     cbe:	89 27       	eor	r24, r25
     cc0:	8a 87       	std	Y+10, r24	; 0x0a
     cc2:	ae 01       	movw	r20, r28
     cc4:	4f 5f       	subi	r20, 0xFF	; 255
     cc6:	5f 4f       	sbci	r21, 0xFF	; 255
     cc8:	be 01       	movw	r22, r28
     cca:	67 5f       	subi	r22, 0xF7	; 247
     ccc:	7f 4f       	sbci	r23, 0xFF	; 255
     cce:	ce 01       	movw	r24, r28
     cd0:	41 96       	adiw	r24, 0x11	; 17
     cd2:	0e 94 b9 04 	call	0x972	; 0x972 <_fpadd_parts>
     cd6:	0e 94 30 08 	call	0x1060	; 0x1060 <__pack_f>
     cda:	a0 96       	adiw	r28, 0x20	; 32
     cdc:	e2 e0       	ldi	r30, 0x02	; 2
     cde:	0c 94 4c 0a 	jmp	0x1498	; 0x1498 <__epilogue_restores__+0x20>

00000ce2 <__mulsf3>:
     ce2:	a0 e2       	ldi	r26, 0x20	; 32
     ce4:	b0 e0       	ldi	r27, 0x00	; 0
     ce6:	e7 e7       	ldi	r30, 0x77	; 119
     ce8:	f6 e0       	ldi	r31, 0x06	; 6
     cea:	0c 94 22 0a 	jmp	0x1444	; 0x1444 <__prologue_saves__+0x4>
     cee:	6d 8f       	std	Y+29, r22	; 0x1d
     cf0:	7e 8f       	std	Y+30, r23	; 0x1e
     cf2:	8f 8f       	std	Y+31, r24	; 0x1f
     cf4:	98 a3       	std	Y+32, r25	; 0x20
     cf6:	29 8f       	std	Y+25, r18	; 0x19
     cf8:	3a 8f       	std	Y+26, r19	; 0x1a
     cfa:	4b 8f       	std	Y+27, r20	; 0x1b
     cfc:	5c 8f       	std	Y+28, r21	; 0x1c
     cfe:	be 01       	movw	r22, r28
     d00:	6f 5e       	subi	r22, 0xEF	; 239
     d02:	7f 4f       	sbci	r23, 0xFF	; 255
     d04:	ce 01       	movw	r24, r28
     d06:	4d 96       	adiw	r24, 0x1d	; 29
     d08:	0e 94 fa 08 	call	0x11f4	; 0x11f4 <__unpack_f>
     d0c:	be 01       	movw	r22, r28
     d0e:	67 5f       	subi	r22, 0xF7	; 247
     d10:	7f 4f       	sbci	r23, 0xFF	; 255
     d12:	ce 01       	movw	r24, r28
     d14:	49 96       	adiw	r24, 0x19	; 25
     d16:	0e 94 fa 08 	call	0x11f4	; 0x11f4 <__unpack_f>
     d1a:	99 89       	ldd	r25, Y+17	; 0x11
     d1c:	92 30       	cpi	r25, 0x02	; 2
     d1e:	08 f4       	brcc	.+2      	; 0xd22 <__mulsf3+0x40>
     d20:	12 c0       	rjmp	.+36     	; 0xd46 <__mulsf3+0x64>
     d22:	89 85       	ldd	r24, Y+9	; 0x09
     d24:	82 30       	cpi	r24, 0x02	; 2
     d26:	08 f4       	brcc	.+2      	; 0xd2a <__mulsf3+0x48>
     d28:	1a c0       	rjmp	.+52     	; 0xd5e <__mulsf3+0x7c>
     d2a:	94 30       	cpi	r25, 0x04	; 4
     d2c:	21 f4       	brne	.+8      	; 0xd36 <__mulsf3+0x54>
     d2e:	82 30       	cpi	r24, 0x02	; 2
     d30:	09 f4       	brne	.+2      	; 0xd34 <__mulsf3+0x52>
     d32:	b4 c0       	rjmp	.+360    	; 0xe9c <__mulsf3+0x1ba>
     d34:	08 c0       	rjmp	.+16     	; 0xd46 <__mulsf3+0x64>
     d36:	84 30       	cpi	r24, 0x04	; 4
     d38:	21 f4       	brne	.+8      	; 0xd42 <__mulsf3+0x60>
     d3a:	92 30       	cpi	r25, 0x02	; 2
     d3c:	09 f4       	brne	.+2      	; 0xd40 <__mulsf3+0x5e>
     d3e:	ae c0       	rjmp	.+348    	; 0xe9c <__mulsf3+0x1ba>
     d40:	0e c0       	rjmp	.+28     	; 0xd5e <__mulsf3+0x7c>
     d42:	92 30       	cpi	r25, 0x02	; 2
     d44:	51 f4       	brne	.+20     	; 0xd5a <__mulsf3+0x78>
     d46:	81 e0       	ldi	r24, 0x01	; 1
     d48:	2a 89       	ldd	r18, Y+18	; 0x12
     d4a:	9a 85       	ldd	r25, Y+10	; 0x0a
     d4c:	29 13       	cpse	r18, r25
     d4e:	01 c0       	rjmp	.+2      	; 0xd52 <__mulsf3+0x70>
     d50:	80 e0       	ldi	r24, 0x00	; 0
     d52:	8a 8b       	std	Y+18, r24	; 0x12
     d54:	ce 01       	movw	r24, r28
     d56:	41 96       	adiw	r24, 0x11	; 17
     d58:	a3 c0       	rjmp	.+326    	; 0xea0 <__mulsf3+0x1be>
     d5a:	82 30       	cpi	r24, 0x02	; 2
     d5c:	51 f4       	brne	.+20     	; 0xd72 <__mulsf3+0x90>
     d5e:	81 e0       	ldi	r24, 0x01	; 1
     d60:	2a 89       	ldd	r18, Y+18	; 0x12
     d62:	9a 85       	ldd	r25, Y+10	; 0x0a
     d64:	29 13       	cpse	r18, r25
     d66:	01 c0       	rjmp	.+2      	; 0xd6a <__mulsf3+0x88>
     d68:	80 e0       	ldi	r24, 0x00	; 0
     d6a:	8a 87       	std	Y+10, r24	; 0x0a
     d6c:	ce 01       	movw	r24, r28
     d6e:	09 96       	adiw	r24, 0x09	; 9
     d70:	97 c0       	rjmp	.+302    	; 0xea0 <__mulsf3+0x1be>
     d72:	8d 88       	ldd	r8, Y+21	; 0x15
     d74:	9e 88       	ldd	r9, Y+22	; 0x16
     d76:	af 88       	ldd	r10, Y+23	; 0x17
     d78:	b8 8c       	ldd	r11, Y+24	; 0x18
     d7a:	0d 85       	ldd	r16, Y+13	; 0x0d
     d7c:	1e 85       	ldd	r17, Y+14	; 0x0e
     d7e:	2f 85       	ldd	r18, Y+15	; 0x0f
     d80:	38 89       	ldd	r19, Y+16	; 0x10
     d82:	e0 e2       	ldi	r30, 0x20	; 32
     d84:	f0 e0       	ldi	r31, 0x00	; 0
     d86:	80 e0       	ldi	r24, 0x00	; 0
     d88:	90 e0       	ldi	r25, 0x00	; 0
     d8a:	dc 01       	movw	r26, r24
     d8c:	c1 2c       	mov	r12, r1
     d8e:	d1 2c       	mov	r13, r1
     d90:	76 01       	movw	r14, r12
     d92:	40 e0       	ldi	r20, 0x00	; 0
     d94:	50 e0       	ldi	r21, 0x00	; 0
     d96:	ba 01       	movw	r22, r20
     d98:	80 fe       	sbrs	r8, 0
     d9a:	18 c0       	rjmp	.+48     	; 0xdcc <__mulsf3+0xea>
     d9c:	40 0f       	add	r20, r16
     d9e:	51 1f       	adc	r21, r17
     da0:	62 1f       	adc	r22, r18
     da2:	73 1f       	adc	r23, r19
     da4:	8c 0d       	add	r24, r12
     da6:	9d 1d       	adc	r25, r13
     da8:	ae 1d       	adc	r26, r14
     daa:	bf 1d       	adc	r27, r15
     dac:	41 2c       	mov	r4, r1
     dae:	51 2c       	mov	r5, r1
     db0:	32 01       	movw	r6, r4
     db2:	43 94       	inc	r4
     db4:	40 17       	cp	r20, r16
     db6:	51 07       	cpc	r21, r17
     db8:	62 07       	cpc	r22, r18
     dba:	73 07       	cpc	r23, r19
     dbc:	18 f0       	brcs	.+6      	; 0xdc4 <__mulsf3+0xe2>
     dbe:	41 2c       	mov	r4, r1
     dc0:	51 2c       	mov	r5, r1
     dc2:	32 01       	movw	r6, r4
     dc4:	84 0d       	add	r24, r4
     dc6:	95 1d       	adc	r25, r5
     dc8:	a6 1d       	adc	r26, r6
     dca:	b7 1d       	adc	r27, r7
     dcc:	cc 0c       	add	r12, r12
     dce:	dd 1c       	adc	r13, r13
     dd0:	ee 1c       	adc	r14, r14
     dd2:	ff 1c       	adc	r15, r15
     dd4:	37 ff       	sbrs	r19, 7
     dd6:	02 c0       	rjmp	.+4      	; 0xddc <__mulsf3+0xfa>
     dd8:	68 94       	set
     dda:	c0 f8       	bld	r12, 0
     ddc:	00 0f       	add	r16, r16
     dde:	11 1f       	adc	r17, r17
     de0:	22 1f       	adc	r18, r18
     de2:	33 1f       	adc	r19, r19
     de4:	b6 94       	lsr	r11
     de6:	a7 94       	ror	r10
     de8:	97 94       	ror	r9
     dea:	87 94       	ror	r8
     dec:	31 97       	sbiw	r30, 0x01	; 1
     dee:	a1 f6       	brne	.-88     	; 0xd98 <__mulsf3+0xb6>
     df0:	2b 89       	ldd	r18, Y+19	; 0x13
     df2:	3c 89       	ldd	r19, Y+20	; 0x14
     df4:	eb 85       	ldd	r30, Y+11	; 0x0b
     df6:	fc 85       	ldd	r31, Y+12	; 0x0c
     df8:	2e 0f       	add	r18, r30
     dfa:	3f 1f       	adc	r19, r31
     dfc:	2e 5f       	subi	r18, 0xFE	; 254
     dfe:	3f 4f       	sbci	r19, 0xFF	; 255
     e00:	3c 83       	std	Y+4, r19	; 0x04
     e02:	2b 83       	std	Y+3, r18	; 0x03
     e04:	21 e0       	ldi	r18, 0x01	; 1
     e06:	ea 89       	ldd	r30, Y+18	; 0x12
     e08:	3a 85       	ldd	r19, Y+10	; 0x0a
     e0a:	e3 13       	cpse	r30, r19
     e0c:	01 c0       	rjmp	.+2      	; 0xe10 <__mulsf3+0x12e>
     e0e:	20 e0       	ldi	r18, 0x00	; 0
     e10:	2a 83       	std	Y+2, r18	; 0x02
     e12:	eb 81       	ldd	r30, Y+3	; 0x03
     e14:	fc 81       	ldd	r31, Y+4	; 0x04
     e16:	0c c0       	rjmp	.+24     	; 0xe30 <__mulsf3+0x14e>
     e18:	80 ff       	sbrs	r24, 0
     e1a:	05 c0       	rjmp	.+10     	; 0xe26 <__mulsf3+0x144>
     e1c:	76 95       	lsr	r23
     e1e:	67 95       	ror	r22
     e20:	57 95       	ror	r21
     e22:	47 95       	ror	r20
     e24:	70 68       	ori	r23, 0x80	; 128
     e26:	b6 95       	lsr	r27
     e28:	a7 95       	ror	r26
     e2a:	97 95       	ror	r25
     e2c:	87 95       	ror	r24
     e2e:	31 96       	adiw	r30, 0x01	; 1
     e30:	b7 fd       	sbrc	r27, 7
     e32:	f2 cf       	rjmp	.-28     	; 0xe18 <__mulsf3+0x136>
     e34:	9f 01       	movw	r18, r30
     e36:	0c c0       	rjmp	.+24     	; 0xe50 <__mulsf3+0x16e>
     e38:	88 0f       	add	r24, r24
     e3a:	99 1f       	adc	r25, r25
     e3c:	aa 1f       	adc	r26, r26
     e3e:	bb 1f       	adc	r27, r27
     e40:	77 fd       	sbrc	r23, 7
     e42:	81 60       	ori	r24, 0x01	; 1
     e44:	44 0f       	add	r20, r20
     e46:	55 1f       	adc	r21, r21
     e48:	66 1f       	adc	r22, r22
     e4a:	77 1f       	adc	r23, r23
     e4c:	21 50       	subi	r18, 0x01	; 1
     e4e:	31 09       	sbc	r19, r1
     e50:	00 97       	sbiw	r24, 0x00	; 0
     e52:	a1 05       	cpc	r26, r1
     e54:	e0 e4       	ldi	r30, 0x40	; 64
     e56:	be 07       	cpc	r27, r30
     e58:	78 f3       	brcs	.-34     	; 0xe38 <__mulsf3+0x156>
     e5a:	2b 83       	std	Y+3, r18	; 0x03
     e5c:	3c 83       	std	Y+4, r19	; 0x04
     e5e:	8c 01       	movw	r16, r24
     e60:	9d 01       	movw	r18, r26
     e62:	0f 77       	andi	r16, 0x7F	; 127
     e64:	11 27       	eor	r17, r17
     e66:	22 27       	eor	r18, r18
     e68:	33 27       	eor	r19, r19
     e6a:	00 34       	cpi	r16, 0x40	; 64
     e6c:	11 05       	cpc	r17, r1
     e6e:	21 05       	cpc	r18, r1
     e70:	31 05       	cpc	r19, r1
     e72:	59 f4       	brne	.+22     	; 0xe8a <__mulsf3+0x1a8>
     e74:	87 fd       	sbrc	r24, 7
     e76:	09 c0       	rjmp	.+18     	; 0xe8a <__mulsf3+0x1a8>
     e78:	45 2b       	or	r20, r21
     e7a:	46 2b       	or	r20, r22
     e7c:	47 2b       	or	r20, r23
     e7e:	29 f0       	breq	.+10     	; 0xe8a <__mulsf3+0x1a8>
     e80:	80 5c       	subi	r24, 0xC0	; 192
     e82:	9f 4f       	sbci	r25, 0xFF	; 255
     e84:	af 4f       	sbci	r26, 0xFF	; 255
     e86:	bf 4f       	sbci	r27, 0xFF	; 255
     e88:	80 78       	andi	r24, 0x80	; 128
     e8a:	8d 83       	std	Y+5, r24	; 0x05
     e8c:	9e 83       	std	Y+6, r25	; 0x06
     e8e:	af 83       	std	Y+7, r26	; 0x07
     e90:	b8 87       	std	Y+8, r27	; 0x08
     e92:	83 e0       	ldi	r24, 0x03	; 3
     e94:	89 83       	std	Y+1, r24	; 0x01
     e96:	ce 01       	movw	r24, r28
     e98:	01 96       	adiw	r24, 0x01	; 1
     e9a:	02 c0       	rjmp	.+4      	; 0xea0 <__mulsf3+0x1be>
     e9c:	8e e4       	ldi	r24, 0x4E	; 78
     e9e:	91 e0       	ldi	r25, 0x01	; 1
     ea0:	0e 94 30 08 	call	0x1060	; 0x1060 <__pack_f>
     ea4:	a0 96       	adiw	r28, 0x20	; 32
     ea6:	e0 e1       	ldi	r30, 0x10	; 16
     ea8:	0c 94 3e 0a 	jmp	0x147c	; 0x147c <__epilogue_restores__+0x4>

00000eac <__gesf2>:
     eac:	a8 e1       	ldi	r26, 0x18	; 24
     eae:	b0 e0       	ldi	r27, 0x00	; 0
     eb0:	ec e5       	ldi	r30, 0x5C	; 92
     eb2:	f7 e0       	ldi	r31, 0x07	; 7
     eb4:	0c 94 30 0a 	jmp	0x1460	; 0x1460 <__prologue_saves__+0x20>
     eb8:	6d 8b       	std	Y+21, r22	; 0x15
     eba:	7e 8b       	std	Y+22, r23	; 0x16
     ebc:	8f 8b       	std	Y+23, r24	; 0x17
     ebe:	98 8f       	std	Y+24, r25	; 0x18
     ec0:	29 8b       	std	Y+17, r18	; 0x11
     ec2:	3a 8b       	std	Y+18, r19	; 0x12
     ec4:	4b 8b       	std	Y+19, r20	; 0x13
     ec6:	5c 8b       	std	Y+20, r21	; 0x14
     ec8:	be 01       	movw	r22, r28
     eca:	67 5f       	subi	r22, 0xF7	; 247
     ecc:	7f 4f       	sbci	r23, 0xFF	; 255
     ece:	ce 01       	movw	r24, r28
     ed0:	45 96       	adiw	r24, 0x15	; 21
     ed2:	0e 94 fa 08 	call	0x11f4	; 0x11f4 <__unpack_f>
     ed6:	be 01       	movw	r22, r28
     ed8:	6f 5f       	subi	r22, 0xFF	; 255
     eda:	7f 4f       	sbci	r23, 0xFF	; 255
     edc:	ce 01       	movw	r24, r28
     ede:	41 96       	adiw	r24, 0x11	; 17
     ee0:	0e 94 fa 08 	call	0x11f4	; 0x11f4 <__unpack_f>
     ee4:	89 85       	ldd	r24, Y+9	; 0x09
     ee6:	82 30       	cpi	r24, 0x02	; 2
     ee8:	58 f0       	brcs	.+22     	; 0xf00 <__gesf2+0x54>
     eea:	89 81       	ldd	r24, Y+1	; 0x01
     eec:	82 30       	cpi	r24, 0x02	; 2
     eee:	40 f0       	brcs	.+16     	; 0xf00 <__gesf2+0x54>
     ef0:	be 01       	movw	r22, r28
     ef2:	6f 5f       	subi	r22, 0xFF	; 255
     ef4:	7f 4f       	sbci	r23, 0xFF	; 255
     ef6:	ce 01       	movw	r24, r28
     ef8:	09 96       	adiw	r24, 0x09	; 9
     efa:	0e 94 69 09 	call	0x12d2	; 0x12d2 <__fpcmp_parts_f>
     efe:	01 c0       	rjmp	.+2      	; 0xf02 <__gesf2+0x56>
     f00:	8f ef       	ldi	r24, 0xFF	; 255
     f02:	68 96       	adiw	r28, 0x18	; 24
     f04:	e2 e0       	ldi	r30, 0x02	; 2
     f06:	0c 94 4c 0a 	jmp	0x1498	; 0x1498 <__epilogue_restores__+0x20>

00000f0a <__floatsisf>:
     f0a:	a8 e0       	ldi	r26, 0x08	; 8
     f0c:	b0 e0       	ldi	r27, 0x00	; 0
     f0e:	eb e8       	ldi	r30, 0x8B	; 139
     f10:	f7 e0       	ldi	r31, 0x07	; 7
     f12:	0c 94 2e 0a 	jmp	0x145c	; 0x145c <__prologue_saves__+0x1c>
     f16:	23 e0       	ldi	r18, 0x03	; 3
     f18:	29 83       	std	Y+1, r18	; 0x01
     f1a:	8b 01       	movw	r16, r22
     f1c:	9c 01       	movw	r18, r24
     f1e:	00 27       	eor	r16, r16
     f20:	37 fd       	sbrc	r19, 7
     f22:	03 95       	inc	r16
     f24:	11 27       	eor	r17, r17
     f26:	22 27       	eor	r18, r18
     f28:	33 27       	eor	r19, r19
     f2a:	40 2f       	mov	r20, r16
     f2c:	0a 83       	std	Y+2, r16	; 0x02
     f2e:	61 15       	cp	r22, r1
     f30:	71 05       	cpc	r23, r1
     f32:	81 05       	cpc	r24, r1
     f34:	91 05       	cpc	r25, r1
     f36:	19 f4       	brne	.+6      	; 0xf3e <__floatsisf+0x34>
     f38:	82 e0       	ldi	r24, 0x02	; 2
     f3a:	89 83       	std	Y+1, r24	; 0x01
     f3c:	35 c0       	rjmp	.+106    	; 0xfa8 <__floatsisf+0x9e>
     f3e:	2e e1       	ldi	r18, 0x1E	; 30
     f40:	30 e0       	ldi	r19, 0x00	; 0
     f42:	3c 83       	std	Y+4, r19	; 0x04
     f44:	2b 83       	std	Y+3, r18	; 0x03
     f46:	44 23       	and	r20, r20
     f48:	71 f0       	breq	.+28     	; 0xf66 <__floatsisf+0x5c>
     f4a:	61 15       	cp	r22, r1
     f4c:	71 05       	cpc	r23, r1
     f4e:	81 05       	cpc	r24, r1
     f50:	20 e8       	ldi	r18, 0x80	; 128
     f52:	92 07       	cpc	r25, r18
     f54:	71 f1       	breq	.+92     	; 0xfb2 <__floatsisf+0xa8>
     f56:	00 27       	eor	r16, r16
     f58:	11 27       	eor	r17, r17
     f5a:	98 01       	movw	r18, r16
     f5c:	06 1b       	sub	r16, r22
     f5e:	17 0b       	sbc	r17, r23
     f60:	28 0b       	sbc	r18, r24
     f62:	39 0b       	sbc	r19, r25
     f64:	02 c0       	rjmp	.+4      	; 0xf6a <__floatsisf+0x60>
     f66:	8b 01       	movw	r16, r22
     f68:	9c 01       	movw	r18, r24
     f6a:	c9 01       	movw	r24, r18
     f6c:	b8 01       	movw	r22, r16
     f6e:	0e 94 05 0a 	call	0x140a	; 0x140a <__clzsi2>
     f72:	01 97       	sbiw	r24, 0x01	; 1
     f74:	18 16       	cp	r1, r24
     f76:	19 06       	cpc	r1, r25
     f78:	2c f0       	brlt	.+10     	; 0xf84 <__floatsisf+0x7a>
     f7a:	0d 83       	std	Y+5, r16	; 0x05
     f7c:	1e 83       	std	Y+6, r17	; 0x06
     f7e:	2f 83       	std	Y+7, r18	; 0x07
     f80:	38 87       	std	Y+8, r19	; 0x08
     f82:	12 c0       	rjmp	.+36     	; 0xfa8 <__floatsisf+0x9e>
     f84:	08 2e       	mov	r0, r24
     f86:	04 c0       	rjmp	.+8      	; 0xf90 <__floatsisf+0x86>
     f88:	00 0f       	add	r16, r16
     f8a:	11 1f       	adc	r17, r17
     f8c:	22 1f       	adc	r18, r18
     f8e:	33 1f       	adc	r19, r19
     f90:	0a 94       	dec	r0
     f92:	d2 f7       	brpl	.-12     	; 0xf88 <__floatsisf+0x7e>
     f94:	0d 83       	std	Y+5, r16	; 0x05
     f96:	1e 83       	std	Y+6, r17	; 0x06
     f98:	2f 83       	std	Y+7, r18	; 0x07
     f9a:	38 87       	std	Y+8, r19	; 0x08
     f9c:	2e e1       	ldi	r18, 0x1E	; 30
     f9e:	30 e0       	ldi	r19, 0x00	; 0
     fa0:	28 1b       	sub	r18, r24
     fa2:	39 0b       	sbc	r19, r25
     fa4:	3c 83       	std	Y+4, r19	; 0x04
     fa6:	2b 83       	std	Y+3, r18	; 0x03
     fa8:	ce 01       	movw	r24, r28
     faa:	01 96       	adiw	r24, 0x01	; 1
     fac:	0e 94 30 08 	call	0x1060	; 0x1060 <__pack_f>
     fb0:	04 c0       	rjmp	.+8      	; 0xfba <__floatsisf+0xb0>
     fb2:	60 e0       	ldi	r22, 0x00	; 0
     fb4:	70 e0       	ldi	r23, 0x00	; 0
     fb6:	80 e0       	ldi	r24, 0x00	; 0
     fb8:	9f ec       	ldi	r25, 0xCF	; 207
     fba:	28 96       	adiw	r28, 0x08	; 8
     fbc:	e4 e0       	ldi	r30, 0x04	; 4
     fbe:	0c 94 4a 0a 	jmp	0x1494	; 0x1494 <__epilogue_restores__+0x1c>

00000fc2 <__fixsfsi>:
     fc2:	ac e0       	ldi	r26, 0x0C	; 12
     fc4:	b0 e0       	ldi	r27, 0x00	; 0
     fc6:	e7 ee       	ldi	r30, 0xE7	; 231
     fc8:	f7 e0       	ldi	r31, 0x07	; 7
     fca:	0c 94 2e 0a 	jmp	0x145c	; 0x145c <__prologue_saves__+0x1c>
     fce:	69 87       	std	Y+9, r22	; 0x09
     fd0:	7a 87       	std	Y+10, r23	; 0x0a
     fd2:	8b 87       	std	Y+11, r24	; 0x0b
     fd4:	9c 87       	std	Y+12, r25	; 0x0c
     fd6:	be 01       	movw	r22, r28
     fd8:	6f 5f       	subi	r22, 0xFF	; 255
     fda:	7f 4f       	sbci	r23, 0xFF	; 255
     fdc:	ce 01       	movw	r24, r28
     fde:	09 96       	adiw	r24, 0x09	; 9
     fe0:	0e 94 fa 08 	call	0x11f4	; 0x11f4 <__unpack_f>
     fe4:	89 81       	ldd	r24, Y+1	; 0x01
     fe6:	82 30       	cpi	r24, 0x02	; 2
     fe8:	91 f1       	breq	.+100    	; 0x104e <__fixsfsi+0x8c>
     fea:	82 30       	cpi	r24, 0x02	; 2
     fec:	80 f1       	brcs	.+96     	; 0x104e <__fixsfsi+0x8c>
     fee:	84 30       	cpi	r24, 0x04	; 4
     ff0:	41 f4       	brne	.+16     	; 0x1002 <__fixsfsi+0x40>
     ff2:	8a 81       	ldd	r24, Y+2	; 0x02
     ff4:	88 23       	and	r24, r24
     ff6:	31 f1       	breq	.+76     	; 0x1044 <__fixsfsi+0x82>
     ff8:	00 e0       	ldi	r16, 0x00	; 0
     ffa:	10 e0       	ldi	r17, 0x00	; 0
     ffc:	20 e0       	ldi	r18, 0x00	; 0
     ffe:	30 e8       	ldi	r19, 0x80	; 128
    1000:	29 c0       	rjmp	.+82     	; 0x1054 <__fixsfsi+0x92>
    1002:	2b 81       	ldd	r18, Y+3	; 0x03
    1004:	3c 81       	ldd	r19, Y+4	; 0x04
    1006:	37 fd       	sbrc	r19, 7
    1008:	22 c0       	rjmp	.+68     	; 0x104e <__fixsfsi+0x8c>
    100a:	2f 31       	cpi	r18, 0x1F	; 31
    100c:	31 05       	cpc	r19, r1
    100e:	8c f7       	brge	.-30     	; 0xff2 <__fixsfsi+0x30>
    1010:	8e e1       	ldi	r24, 0x1E	; 30
    1012:	90 e0       	ldi	r25, 0x00	; 0
    1014:	82 1b       	sub	r24, r18
    1016:	93 0b       	sbc	r25, r19
    1018:	0d 81       	ldd	r16, Y+5	; 0x05
    101a:	1e 81       	ldd	r17, Y+6	; 0x06
    101c:	2f 81       	ldd	r18, Y+7	; 0x07
    101e:	38 85       	ldd	r19, Y+8	; 0x08
    1020:	04 c0       	rjmp	.+8      	; 0x102a <__fixsfsi+0x68>
    1022:	36 95       	lsr	r19
    1024:	27 95       	ror	r18
    1026:	17 95       	ror	r17
    1028:	07 95       	ror	r16
    102a:	8a 95       	dec	r24
    102c:	d2 f7       	brpl	.-12     	; 0x1022 <__fixsfsi+0x60>
    102e:	8a 81       	ldd	r24, Y+2	; 0x02
    1030:	88 23       	and	r24, r24
    1032:	81 f0       	breq	.+32     	; 0x1054 <__fixsfsi+0x92>
    1034:	30 95       	com	r19
    1036:	20 95       	com	r18
    1038:	10 95       	com	r17
    103a:	01 95       	neg	r16
    103c:	1f 4f       	sbci	r17, 0xFF	; 255
    103e:	2f 4f       	sbci	r18, 0xFF	; 255
    1040:	3f 4f       	sbci	r19, 0xFF	; 255
    1042:	08 c0       	rjmp	.+16     	; 0x1054 <__fixsfsi+0x92>
    1044:	0f ef       	ldi	r16, 0xFF	; 255
    1046:	1f ef       	ldi	r17, 0xFF	; 255
    1048:	2f ef       	ldi	r18, 0xFF	; 255
    104a:	3f e7       	ldi	r19, 0x7F	; 127
    104c:	03 c0       	rjmp	.+6      	; 0x1054 <__fixsfsi+0x92>
    104e:	00 e0       	ldi	r16, 0x00	; 0
    1050:	10 e0       	ldi	r17, 0x00	; 0
    1052:	98 01       	movw	r18, r16
    1054:	b8 01       	movw	r22, r16
    1056:	c9 01       	movw	r24, r18
    1058:	2c 96       	adiw	r28, 0x0c	; 12
    105a:	e4 e0       	ldi	r30, 0x04	; 4
    105c:	0c 94 4a 0a 	jmp	0x1494	; 0x1494 <__epilogue_restores__+0x1c>

00001060 <__pack_f>:
    1060:	0f 93       	push	r16
    1062:	1f 93       	push	r17
    1064:	cf 93       	push	r28
    1066:	df 93       	push	r29
    1068:	dc 01       	movw	r26, r24
    106a:	14 96       	adiw	r26, 0x04	; 4
    106c:	4d 91       	ld	r20, X+
    106e:	5d 91       	ld	r21, X+
    1070:	6d 91       	ld	r22, X+
    1072:	7c 91       	ld	r23, X
    1074:	17 97       	sbiw	r26, 0x07	; 7
    1076:	11 96       	adiw	r26, 0x01	; 1
    1078:	ec 91       	ld	r30, X
    107a:	11 97       	sbiw	r26, 0x01	; 1
    107c:	8c 91       	ld	r24, X
    107e:	82 30       	cpi	r24, 0x02	; 2
    1080:	20 f4       	brcc	.+8      	; 0x108a <__pack_f+0x2a>
    1082:	60 61       	ori	r22, 0x10	; 16
    1084:	8f ef       	ldi	r24, 0xFF	; 255
    1086:	90 e0       	ldi	r25, 0x00	; 0
    1088:	a6 c0       	rjmp	.+332    	; 0x11d6 <__pack_f+0x176>
    108a:	84 30       	cpi	r24, 0x04	; 4
    108c:	09 f4       	brne	.+2      	; 0x1090 <__pack_f+0x30>
    108e:	9e c0       	rjmp	.+316    	; 0x11cc <__pack_f+0x16c>
    1090:	82 30       	cpi	r24, 0x02	; 2
    1092:	09 f4       	brne	.+2      	; 0x1096 <__pack_f+0x36>
    1094:	95 c0       	rjmp	.+298    	; 0x11c0 <__pack_f+0x160>
    1096:	41 15       	cp	r20, r1
    1098:	51 05       	cpc	r21, r1
    109a:	61 05       	cpc	r22, r1
    109c:	71 05       	cpc	r23, r1
    109e:	09 f4       	brne	.+2      	; 0x10a2 <__pack_f+0x42>
    10a0:	92 c0       	rjmp	.+292    	; 0x11c6 <__pack_f+0x166>
    10a2:	12 96       	adiw	r26, 0x02	; 2
    10a4:	2d 91       	ld	r18, X+
    10a6:	3c 91       	ld	r19, X
    10a8:	13 97       	sbiw	r26, 0x03	; 3
    10aa:	22 38       	cpi	r18, 0x82	; 130
    10ac:	8f ef       	ldi	r24, 0xFF	; 255
    10ae:	38 07       	cpc	r19, r24
    10b0:	0c f0       	brlt	.+2      	; 0x10b4 <__pack_f+0x54>
    10b2:	58 c0       	rjmp	.+176    	; 0x1164 <__pack_f+0x104>
    10b4:	c2 e8       	ldi	r28, 0x82	; 130
    10b6:	df ef       	ldi	r29, 0xFF	; 255
    10b8:	c2 1b       	sub	r28, r18
    10ba:	d3 0b       	sbc	r29, r19
    10bc:	ca 31       	cpi	r28, 0x1A	; 26
    10be:	d1 05       	cpc	r29, r1
    10c0:	6c f5       	brge	.+90     	; 0x111c <__pack_f+0xbc>
    10c2:	8a 01       	movw	r16, r20
    10c4:	9b 01       	movw	r18, r22
    10c6:	0c 2e       	mov	r0, r28
    10c8:	04 c0       	rjmp	.+8      	; 0x10d2 <__pack_f+0x72>
    10ca:	36 95       	lsr	r19
    10cc:	27 95       	ror	r18
    10ce:	17 95       	ror	r17
    10d0:	07 95       	ror	r16
    10d2:	0a 94       	dec	r0
    10d4:	d2 f7       	brpl	.-12     	; 0x10ca <__pack_f+0x6a>
    10d6:	81 e0       	ldi	r24, 0x01	; 1
    10d8:	90 e0       	ldi	r25, 0x00	; 0
    10da:	a0 e0       	ldi	r26, 0x00	; 0
    10dc:	b0 e0       	ldi	r27, 0x00	; 0
    10de:	0c 2e       	mov	r0, r28
    10e0:	04 c0       	rjmp	.+8      	; 0x10ea <__pack_f+0x8a>
    10e2:	88 0f       	add	r24, r24
    10e4:	99 1f       	adc	r25, r25
    10e6:	aa 1f       	adc	r26, r26
    10e8:	bb 1f       	adc	r27, r27
    10ea:	0a 94       	dec	r0
    10ec:	d2 f7       	brpl	.-12     	; 0x10e2 <__pack_f+0x82>
    10ee:	01 97       	sbiw	r24, 0x01	; 1
    10f0:	a1 09       	sbc	r26, r1
    10f2:	b1 09       	sbc	r27, r1
    10f4:	84 23       	and	r24, r20
    10f6:	95 23       	and	r25, r21
    10f8:	a6 23       	and	r26, r22
    10fa:	b7 23       	and	r27, r23
    10fc:	41 e0       	ldi	r20, 0x01	; 1
    10fe:	50 e0       	ldi	r21, 0x00	; 0
    1100:	60 e0       	ldi	r22, 0x00	; 0
    1102:	70 e0       	ldi	r23, 0x00	; 0
    1104:	89 2b       	or	r24, r25
    1106:	8a 2b       	or	r24, r26
    1108:	8b 2b       	or	r24, r27
    110a:	19 f4       	brne	.+6      	; 0x1112 <__pack_f+0xb2>
    110c:	40 e0       	ldi	r20, 0x00	; 0
    110e:	50 e0       	ldi	r21, 0x00	; 0
    1110:	ba 01       	movw	r22, r20
    1112:	40 2b       	or	r20, r16
    1114:	51 2b       	or	r21, r17
    1116:	62 2b       	or	r22, r18
    1118:	73 2b       	or	r23, r19
    111a:	03 c0       	rjmp	.+6      	; 0x1122 <__pack_f+0xc2>
    111c:	40 e0       	ldi	r20, 0x00	; 0
    111e:	50 e0       	ldi	r21, 0x00	; 0
    1120:	ba 01       	movw	r22, r20
    1122:	db 01       	movw	r26, r22
    1124:	ca 01       	movw	r24, r20
    1126:	8f 77       	andi	r24, 0x7F	; 127
    1128:	99 27       	eor	r25, r25
    112a:	aa 27       	eor	r26, r26
    112c:	bb 27       	eor	r27, r27
    112e:	80 34       	cpi	r24, 0x40	; 64
    1130:	91 05       	cpc	r25, r1
    1132:	a1 05       	cpc	r26, r1
    1134:	b1 05       	cpc	r27, r1
    1136:	39 f4       	brne	.+14     	; 0x1146 <__pack_f+0xe6>
    1138:	47 ff       	sbrs	r20, 7
    113a:	09 c0       	rjmp	.+18     	; 0x114e <__pack_f+0xee>
    113c:	40 5c       	subi	r20, 0xC0	; 192
    113e:	5f 4f       	sbci	r21, 0xFF	; 255
    1140:	6f 4f       	sbci	r22, 0xFF	; 255
    1142:	7f 4f       	sbci	r23, 0xFF	; 255
    1144:	04 c0       	rjmp	.+8      	; 0x114e <__pack_f+0xee>
    1146:	41 5c       	subi	r20, 0xC1	; 193
    1148:	5f 4f       	sbci	r21, 0xFF	; 255
    114a:	6f 4f       	sbci	r22, 0xFF	; 255
    114c:	7f 4f       	sbci	r23, 0xFF	; 255
    114e:	81 e0       	ldi	r24, 0x01	; 1
    1150:	90 e0       	ldi	r25, 0x00	; 0
    1152:	41 15       	cp	r20, r1
    1154:	51 05       	cpc	r21, r1
    1156:	61 05       	cpc	r22, r1
    1158:	20 e4       	ldi	r18, 0x40	; 64
    115a:	72 07       	cpc	r23, r18
    115c:	48 f5       	brcc	.+82     	; 0x11b0 <__pack_f+0x150>
    115e:	80 e0       	ldi	r24, 0x00	; 0
    1160:	90 e0       	ldi	r25, 0x00	; 0
    1162:	26 c0       	rjmp	.+76     	; 0x11b0 <__pack_f+0x150>
    1164:	20 38       	cpi	r18, 0x80	; 128
    1166:	31 05       	cpc	r19, r1
    1168:	8c f5       	brge	.+98     	; 0x11cc <__pack_f+0x16c>
    116a:	db 01       	movw	r26, r22
    116c:	ca 01       	movw	r24, r20
    116e:	8f 77       	andi	r24, 0x7F	; 127
    1170:	99 27       	eor	r25, r25
    1172:	aa 27       	eor	r26, r26
    1174:	bb 27       	eor	r27, r27
    1176:	80 34       	cpi	r24, 0x40	; 64
    1178:	91 05       	cpc	r25, r1
    117a:	a1 05       	cpc	r26, r1
    117c:	b1 05       	cpc	r27, r1
    117e:	39 f4       	brne	.+14     	; 0x118e <__pack_f+0x12e>
    1180:	47 ff       	sbrs	r20, 7
    1182:	09 c0       	rjmp	.+18     	; 0x1196 <__pack_f+0x136>
    1184:	40 5c       	subi	r20, 0xC0	; 192
    1186:	5f 4f       	sbci	r21, 0xFF	; 255
    1188:	6f 4f       	sbci	r22, 0xFF	; 255
    118a:	7f 4f       	sbci	r23, 0xFF	; 255
    118c:	04 c0       	rjmp	.+8      	; 0x1196 <__pack_f+0x136>
    118e:	41 5c       	subi	r20, 0xC1	; 193
    1190:	5f 4f       	sbci	r21, 0xFF	; 255
    1192:	6f 4f       	sbci	r22, 0xFF	; 255
    1194:	7f 4f       	sbci	r23, 0xFF	; 255
    1196:	77 fd       	sbrc	r23, 7
    1198:	04 c0       	rjmp	.+8      	; 0x11a2 <__pack_f+0x142>
    119a:	c9 01       	movw	r24, r18
    119c:	81 58       	subi	r24, 0x81	; 129
    119e:	9f 4f       	sbci	r25, 0xFF	; 255
    11a0:	07 c0       	rjmp	.+14     	; 0x11b0 <__pack_f+0x150>
    11a2:	76 95       	lsr	r23
    11a4:	67 95       	ror	r22
    11a6:	57 95       	ror	r21
    11a8:	47 95       	ror	r20
    11aa:	c9 01       	movw	r24, r18
    11ac:	80 58       	subi	r24, 0x80	; 128
    11ae:	9f 4f       	sbci	r25, 0xFF	; 255
    11b0:	97 e0       	ldi	r25, 0x07	; 7
    11b2:	76 95       	lsr	r23
    11b4:	67 95       	ror	r22
    11b6:	57 95       	ror	r21
    11b8:	47 95       	ror	r20
    11ba:	9a 95       	dec	r25
    11bc:	d1 f7       	brne	.-12     	; 0x11b2 <__pack_f+0x152>
    11be:	0b c0       	rjmp	.+22     	; 0x11d6 <__pack_f+0x176>
    11c0:	80 e0       	ldi	r24, 0x00	; 0
    11c2:	90 e0       	ldi	r25, 0x00	; 0
    11c4:	05 c0       	rjmp	.+10     	; 0x11d0 <__pack_f+0x170>
    11c6:	80 e0       	ldi	r24, 0x00	; 0
    11c8:	90 e0       	ldi	r25, 0x00	; 0
    11ca:	05 c0       	rjmp	.+10     	; 0x11d6 <__pack_f+0x176>
    11cc:	8f ef       	ldi	r24, 0xFF	; 255
    11ce:	90 e0       	ldi	r25, 0x00	; 0
    11d0:	40 e0       	ldi	r20, 0x00	; 0
    11d2:	50 e0       	ldi	r21, 0x00	; 0
    11d4:	ba 01       	movw	r22, r20
    11d6:	98 2f       	mov	r25, r24
    11d8:	96 95       	lsr	r25
    11da:	e0 fb       	bst	r30, 0
    11dc:	97 f9       	bld	r25, 7
    11de:	36 2f       	mov	r19, r22
    11e0:	80 fb       	bst	r24, 0
    11e2:	37 f9       	bld	r19, 7
    11e4:	64 2f       	mov	r22, r20
    11e6:	75 2f       	mov	r23, r21
    11e8:	83 2f       	mov	r24, r19
    11ea:	df 91       	pop	r29
    11ec:	cf 91       	pop	r28
    11ee:	1f 91       	pop	r17
    11f0:	0f 91       	pop	r16
    11f2:	08 95       	ret

000011f4 <__unpack_f>:
    11f4:	cf 92       	push	r12
    11f6:	df 92       	push	r13
    11f8:	ef 92       	push	r14
    11fa:	dc 01       	movw	r26, r24
    11fc:	fb 01       	movw	r30, r22
    11fe:	cc 90       	ld	r12, X
    1200:	11 96       	adiw	r26, 0x01	; 1
    1202:	dc 90       	ld	r13, X
    1204:	11 97       	sbiw	r26, 0x01	; 1
    1206:	12 96       	adiw	r26, 0x02	; 2
    1208:	8c 91       	ld	r24, X
    120a:	12 97       	sbiw	r26, 0x02	; 2
    120c:	3f e7       	ldi	r19, 0x7F	; 127
    120e:	e3 2e       	mov	r14, r19
    1210:	e8 22       	and	r14, r24
    1212:	6e 2d       	mov	r22, r14
    1214:	a6 01       	movw	r20, r12
    1216:	70 e0       	ldi	r23, 0x00	; 0
    1218:	98 2f       	mov	r25, r24
    121a:	99 1f       	adc	r25, r25
    121c:	99 27       	eor	r25, r25
    121e:	99 1f       	adc	r25, r25
    1220:	13 96       	adiw	r26, 0x03	; 3
    1222:	2c 91       	ld	r18, X
    1224:	82 2f       	mov	r24, r18
    1226:	88 0f       	add	r24, r24
    1228:	89 2b       	or	r24, r25
    122a:	90 e0       	ldi	r25, 0x00	; 0
    122c:	27 fb       	bst	r18, 7
    122e:	22 27       	eor	r18, r18
    1230:	20 f9       	bld	r18, 0
    1232:	21 83       	std	Z+1, r18	; 0x01
    1234:	00 97       	sbiw	r24, 0x00	; 0
    1236:	29 f5       	brne	.+74     	; 0x1282 <__unpack_f+0x8e>
    1238:	41 15       	cp	r20, r1
    123a:	51 05       	cpc	r21, r1
    123c:	61 05       	cpc	r22, r1
    123e:	71 05       	cpc	r23, r1
    1240:	11 f4       	brne	.+4      	; 0x1246 <__unpack_f+0x52>
    1242:	82 e0       	ldi	r24, 0x02	; 2
    1244:	27 c0       	rjmp	.+78     	; 0x1294 <__unpack_f+0xa0>
    1246:	82 e8       	ldi	r24, 0x82	; 130
    1248:	9f ef       	ldi	r25, 0xFF	; 255
    124a:	93 83       	std	Z+3, r25	; 0x03
    124c:	82 83       	std	Z+2, r24	; 0x02
    124e:	27 e0       	ldi	r18, 0x07	; 7
    1250:	44 0f       	add	r20, r20
    1252:	55 1f       	adc	r21, r21
    1254:	66 1f       	adc	r22, r22
    1256:	77 1f       	adc	r23, r23
    1258:	2a 95       	dec	r18
    125a:	d1 f7       	brne	.-12     	; 0x1250 <__unpack_f+0x5c>
    125c:	83 e0       	ldi	r24, 0x03	; 3
    125e:	80 83       	st	Z, r24
    1260:	09 c0       	rjmp	.+18     	; 0x1274 <__unpack_f+0x80>
    1262:	44 0f       	add	r20, r20
    1264:	55 1f       	adc	r21, r21
    1266:	66 1f       	adc	r22, r22
    1268:	77 1f       	adc	r23, r23
    126a:	82 81       	ldd	r24, Z+2	; 0x02
    126c:	93 81       	ldd	r25, Z+3	; 0x03
    126e:	01 97       	sbiw	r24, 0x01	; 1
    1270:	93 83       	std	Z+3, r25	; 0x03
    1272:	82 83       	std	Z+2, r24	; 0x02
    1274:	41 15       	cp	r20, r1
    1276:	51 05       	cpc	r21, r1
    1278:	61 05       	cpc	r22, r1
    127a:	80 e4       	ldi	r24, 0x40	; 64
    127c:	78 07       	cpc	r23, r24
    127e:	88 f3       	brcs	.-30     	; 0x1262 <__unpack_f+0x6e>
    1280:	20 c0       	rjmp	.+64     	; 0x12c2 <__unpack_f+0xce>
    1282:	8f 3f       	cpi	r24, 0xFF	; 255
    1284:	91 05       	cpc	r25, r1
    1286:	79 f4       	brne	.+30     	; 0x12a6 <__unpack_f+0xb2>
    1288:	41 15       	cp	r20, r1
    128a:	51 05       	cpc	r21, r1
    128c:	61 05       	cpc	r22, r1
    128e:	71 05       	cpc	r23, r1
    1290:	19 f4       	brne	.+6      	; 0x1298 <__unpack_f+0xa4>
    1292:	84 e0       	ldi	r24, 0x04	; 4
    1294:	80 83       	st	Z, r24
    1296:	19 c0       	rjmp	.+50     	; 0x12ca <__unpack_f+0xd6>
    1298:	e4 fe       	sbrs	r14, 4
    129a:	03 c0       	rjmp	.+6      	; 0x12a2 <__unpack_f+0xae>
    129c:	81 e0       	ldi	r24, 0x01	; 1
    129e:	80 83       	st	Z, r24
    12a0:	10 c0       	rjmp	.+32     	; 0x12c2 <__unpack_f+0xce>
    12a2:	10 82       	st	Z, r1
    12a4:	0e c0       	rjmp	.+28     	; 0x12c2 <__unpack_f+0xce>
    12a6:	8f 57       	subi	r24, 0x7F	; 127
    12a8:	91 09       	sbc	r25, r1
    12aa:	93 83       	std	Z+3, r25	; 0x03
    12ac:	82 83       	std	Z+2, r24	; 0x02
    12ae:	83 e0       	ldi	r24, 0x03	; 3
    12b0:	80 83       	st	Z, r24
    12b2:	87 e0       	ldi	r24, 0x07	; 7
    12b4:	44 0f       	add	r20, r20
    12b6:	55 1f       	adc	r21, r21
    12b8:	66 1f       	adc	r22, r22
    12ba:	77 1f       	adc	r23, r23
    12bc:	8a 95       	dec	r24
    12be:	d1 f7       	brne	.-12     	; 0x12b4 <__unpack_f+0xc0>
    12c0:	70 64       	ori	r23, 0x40	; 64
    12c2:	44 83       	std	Z+4, r20	; 0x04
    12c4:	55 83       	std	Z+5, r21	; 0x05
    12c6:	66 83       	std	Z+6, r22	; 0x06
    12c8:	77 83       	std	Z+7, r23	; 0x07
    12ca:	ef 90       	pop	r14
    12cc:	df 90       	pop	r13
    12ce:	cf 90       	pop	r12
    12d0:	08 95       	ret

000012d2 <__fpcmp_parts_f>:
    12d2:	cf 93       	push	r28
    12d4:	fc 01       	movw	r30, r24
    12d6:	db 01       	movw	r26, r22
    12d8:	90 81       	ld	r25, Z
    12da:	92 30       	cpi	r25, 0x02	; 2
    12dc:	08 f4       	brcc	.+2      	; 0x12e0 <__fpcmp_parts_f+0xe>
    12de:	52 c0       	rjmp	.+164    	; 0x1384 <__fpcmp_parts_f+0xb2>
    12e0:	8c 91       	ld	r24, X
    12e2:	82 30       	cpi	r24, 0x02	; 2
    12e4:	08 f4       	brcc	.+2      	; 0x12e8 <__fpcmp_parts_f+0x16>
    12e6:	4e c0       	rjmp	.+156    	; 0x1384 <__fpcmp_parts_f+0xb2>
    12e8:	94 30       	cpi	r25, 0x04	; 4
    12ea:	71 f4       	brne	.+28     	; 0x1308 <__fpcmp_parts_f+0x36>
    12ec:	84 30       	cpi	r24, 0x04	; 4
    12ee:	39 f4       	brne	.+14     	; 0x12fe <__fpcmp_parts_f+0x2c>
    12f0:	11 96       	adiw	r26, 0x01	; 1
    12f2:	2c 91       	ld	r18, X
    12f4:	30 e0       	ldi	r19, 0x00	; 0
    12f6:	81 81       	ldd	r24, Z+1	; 0x01
    12f8:	28 1b       	sub	r18, r24
    12fa:	31 09       	sbc	r19, r1
    12fc:	48 c0       	rjmp	.+144    	; 0x138e <__fpcmp_parts_f+0xbc>
    12fe:	81 81       	ldd	r24, Z+1	; 0x01
    1300:	88 23       	and	r24, r24
    1302:	09 f4       	brne	.+2      	; 0x1306 <__fpcmp_parts_f+0x34>
    1304:	3f c0       	rjmp	.+126    	; 0x1384 <__fpcmp_parts_f+0xb2>
    1306:	3b c0       	rjmp	.+118    	; 0x137e <__fpcmp_parts_f+0xac>
    1308:	84 30       	cpi	r24, 0x04	; 4
    130a:	29 f4       	brne	.+10     	; 0x1316 <__fpcmp_parts_f+0x44>
    130c:	11 96       	adiw	r26, 0x01	; 1
    130e:	8c 91       	ld	r24, X
    1310:	81 11       	cpse	r24, r1
    1312:	38 c0       	rjmp	.+112    	; 0x1384 <__fpcmp_parts_f+0xb2>
    1314:	34 c0       	rjmp	.+104    	; 0x137e <__fpcmp_parts_f+0xac>
    1316:	92 30       	cpi	r25, 0x02	; 2
    1318:	19 f4       	brne	.+6      	; 0x1320 <__fpcmp_parts_f+0x4e>
    131a:	82 30       	cpi	r24, 0x02	; 2
    131c:	b9 f7       	brne	.-18     	; 0x130c <__fpcmp_parts_f+0x3a>
    131e:	35 c0       	rjmp	.+106    	; 0x138a <__fpcmp_parts_f+0xb8>
    1320:	82 30       	cpi	r24, 0x02	; 2
    1322:	69 f3       	breq	.-38     	; 0x12fe <__fpcmp_parts_f+0x2c>
    1324:	c1 81       	ldd	r28, Z+1	; 0x01
    1326:	11 96       	adiw	r26, 0x01	; 1
    1328:	8c 91       	ld	r24, X
    132a:	11 97       	sbiw	r26, 0x01	; 1
    132c:	c8 13       	cpse	r28, r24
    132e:	1d c0       	rjmp	.+58     	; 0x136a <__fpcmp_parts_f+0x98>
    1330:	22 81       	ldd	r18, Z+2	; 0x02
    1332:	33 81       	ldd	r19, Z+3	; 0x03
    1334:	12 96       	adiw	r26, 0x02	; 2
    1336:	8d 91       	ld	r24, X+
    1338:	9c 91       	ld	r25, X
    133a:	13 97       	sbiw	r26, 0x03	; 3
    133c:	82 17       	cp	r24, r18
    133e:	93 07       	cpc	r25, r19
    1340:	0c f4       	brge	.+2      	; 0x1344 <__fpcmp_parts_f+0x72>
    1342:	13 c0       	rjmp	.+38     	; 0x136a <__fpcmp_parts_f+0x98>
    1344:	28 17       	cp	r18, r24
    1346:	39 07       	cpc	r19, r25
    1348:	0c f4       	brge	.+2      	; 0x134c <__fpcmp_parts_f+0x7a>
    134a:	17 c0       	rjmp	.+46     	; 0x137a <__fpcmp_parts_f+0xa8>
    134c:	44 81       	ldd	r20, Z+4	; 0x04
    134e:	55 81       	ldd	r21, Z+5	; 0x05
    1350:	66 81       	ldd	r22, Z+6	; 0x06
    1352:	77 81       	ldd	r23, Z+7	; 0x07
    1354:	14 96       	adiw	r26, 0x04	; 4
    1356:	8d 91       	ld	r24, X+
    1358:	9d 91       	ld	r25, X+
    135a:	0d 90       	ld	r0, X+
    135c:	bc 91       	ld	r27, X
    135e:	a0 2d       	mov	r26, r0
    1360:	84 17       	cp	r24, r20
    1362:	95 07       	cpc	r25, r21
    1364:	a6 07       	cpc	r26, r22
    1366:	b7 07       	cpc	r27, r23
    1368:	18 f4       	brcc	.+6      	; 0x1370 <__fpcmp_parts_f+0x9e>
    136a:	c1 11       	cpse	r28, r1
    136c:	08 c0       	rjmp	.+16     	; 0x137e <__fpcmp_parts_f+0xac>
    136e:	0a c0       	rjmp	.+20     	; 0x1384 <__fpcmp_parts_f+0xb2>
    1370:	48 17       	cp	r20, r24
    1372:	59 07       	cpc	r21, r25
    1374:	6a 07       	cpc	r22, r26
    1376:	7b 07       	cpc	r23, r27
    1378:	40 f4       	brcc	.+16     	; 0x138a <__fpcmp_parts_f+0xb8>
    137a:	c1 11       	cpse	r28, r1
    137c:	03 c0       	rjmp	.+6      	; 0x1384 <__fpcmp_parts_f+0xb2>
    137e:	2f ef       	ldi	r18, 0xFF	; 255
    1380:	3f ef       	ldi	r19, 0xFF	; 255
    1382:	05 c0       	rjmp	.+10     	; 0x138e <__fpcmp_parts_f+0xbc>
    1384:	21 e0       	ldi	r18, 0x01	; 1
    1386:	30 e0       	ldi	r19, 0x00	; 0
    1388:	02 c0       	rjmp	.+4      	; 0x138e <__fpcmp_parts_f+0xbc>
    138a:	20 e0       	ldi	r18, 0x00	; 0
    138c:	30 e0       	ldi	r19, 0x00	; 0
    138e:	c9 01       	movw	r24, r18
    1390:	cf 91       	pop	r28
    1392:	08 95       	ret

00001394 <main>:
}

int main(void) {
  // Init port B to show keyboard result
  DDRB = 0xff;
    1394:	8f ef       	ldi	r24, 0xFF	; 255
    1396:	84 b9       	out	0x04, r24	; 4
  // and turn out the LEDs
  PORTB = 0xff;   
    1398:	85 b9       	out	0x05, r24	; 5
  
  // init the UART
  uart_init();
    139a:	0e 94 9f 01 	call	0x33e	; 0x33e <uart_init>
  stdout = stdin = stderr = &uart_str;
    139e:	80 e0       	ldi	r24, 0x00	; 0
    13a0:	91 e0       	ldi	r25, 0x01	; 1
    13a2:	90 93 17 04 	sts	0x0417, r25
    13a6:	80 93 16 04 	sts	0x0416, r24
    13aa:	90 93 13 04 	sts	0x0413, r25
    13ae:	80 93 12 04 	sts	0x0412, r24
    13b2:	90 93 15 04 	sts	0x0415, r25
    13b6:	80 93 14 04 	sts	0x0414, r24
  fprintf(stdout, "Starting...\n\r");
    13ba:	bc 01       	movw	r22, r24
    13bc:	8b e5       	ldi	r24, 0x5B	; 91
    13be:	91 e0       	ldi	r25, 0x01	; 1
    13c0:	0e 94 67 0a 	call	0x14ce	; 0x14ce <fputs>

  initialize();
    13c4:	0e 94 85 01 	call	0x30a	; 0x30a <initialize>

  play(1477, 697);
    13c8:	69 eb       	ldi	r22, 0xB9	; 185
    13ca:	72 e0       	ldi	r23, 0x02	; 2
    13cc:	85 ec       	ldi	r24, 0xC5	; 197
    13ce:	95 e0       	ldi	r25, 0x05	; 5
    13d0:	0e 94 86 03 	call	0x70c	; 0x70c <play>
	
  //endless loop to read keyboard
  while(1) {
	// Used for keeping track of time.
	if( count <= 0){
		count = COUNTMS;
    13d4:	ce e3       	ldi	r28, 0x3E	; 62
  play(1477, 697);
	
  //endless loop to read keyboard
  while(1) {
	// Used for keeping track of time.
	if( count <= 0){
    13d6:	80 91 e7 01 	lds	r24, 0x01E7
    13da:	81 11       	cpse	r24, r1
    13dc:	0b c0       	rjmp	.+22     	; 0x13f4 <main+0x60>
		count = COUNTMS;
    13de:	c0 93 e7 01 	sts	0x01E7, r28
		//time++;
		time1++;
    13e2:	80 91 e0 01 	lds	r24, 0x01E0
    13e6:	90 91 e1 01 	lds	r25, 0x01E1
    13ea:	01 96       	adiw	r24, 0x01	; 1
    13ec:	90 93 e1 01 	sts	0x01E1, r25
    13f0:	80 93 e0 01 	sts	0x01E0, r24
	}
	update_status_variables();
    13f4:	0e 94 36 04 	call	0x86c	; 0x86c <update_status_variables>
	//Used for debouncing
    if (time1>=t1) {
    13f8:	80 91 e0 01 	lds	r24, 0x01E0
    13fc:	90 91 e1 01 	lds	r25, 0x01E1
    1400:	44 97       	sbiw	r24, 0x14	; 20
    1402:	48 f3       	brcs	.-46     	; 0x13d6 <main+0x42>
		task1();
    1404:	0e 94 76 00 	call	0xec	; 0xec <task1>
    1408:	e6 cf       	rjmp	.-52     	; 0x13d6 <main+0x42>

0000140a <__clzsi2>:
    140a:	0e 94 0e 0a 	call	0x141c	; 0x141c <__clzhi2>
    140e:	84 ff       	sbrs	r24, 4
    1410:	08 95       	ret
    1412:	cb 01       	movw	r24, r22
    1414:	0e 94 0e 0a 	call	0x141c	; 0x141c <__clzhi2>
    1418:	80 5f       	subi	r24, 0xF0	; 240
    141a:	08 95       	ret

0000141c <__clzhi2>:
    141c:	aa 27       	eor	r26, r26
    141e:	99 23       	and	r25, r25
    1420:	29 f4       	brne	.+10     	; 0x142c <__clzhi2+0x10>
    1422:	a8 5f       	subi	r26, 0xF8	; 248
    1424:	98 2b       	or	r25, r24
    1426:	11 f4       	brne	.+4      	; 0x142c <__clzhi2+0x10>
    1428:	80 e1       	ldi	r24, 0x10	; 16
    142a:	08 95       	ret
    142c:	90 31       	cpi	r25, 0x10	; 16
    142e:	18 f4       	brcc	.+6      	; 0x1436 <__clzhi2+0x1a>
    1430:	ad 5f       	subi	r26, 0xFD	; 253
    1432:	92 95       	swap	r25
    1434:	a3 95       	inc	r26
    1436:	99 0f       	add	r25, r25
    1438:	e8 f7       	brcc	.-6      	; 0x1434 <__clzhi2+0x18>
    143a:	8a 2f       	mov	r24, r26
    143c:	99 27       	eor	r25, r25
    143e:	08 95       	ret

00001440 <__prologue_saves__>:
    1440:	2f 92       	push	r2
    1442:	3f 92       	push	r3
    1444:	4f 92       	push	r4
    1446:	5f 92       	push	r5
    1448:	6f 92       	push	r6
    144a:	7f 92       	push	r7
    144c:	8f 92       	push	r8
    144e:	9f 92       	push	r9
    1450:	af 92       	push	r10
    1452:	bf 92       	push	r11
    1454:	cf 92       	push	r12
    1456:	df 92       	push	r13
    1458:	ef 92       	push	r14
    145a:	ff 92       	push	r15
    145c:	0f 93       	push	r16
    145e:	1f 93       	push	r17
    1460:	cf 93       	push	r28
    1462:	df 93       	push	r29
    1464:	cd b7       	in	r28, 0x3d	; 61
    1466:	de b7       	in	r29, 0x3e	; 62
    1468:	ca 1b       	sub	r28, r26
    146a:	db 0b       	sbc	r29, r27
    146c:	0f b6       	in	r0, 0x3f	; 63
    146e:	f8 94       	cli
    1470:	de bf       	out	0x3e, r29	; 62
    1472:	0f be       	out	0x3f, r0	; 63
    1474:	cd bf       	out	0x3d, r28	; 61
    1476:	09 94       	ijmp

00001478 <__epilogue_restores__>:
    1478:	2a 88       	ldd	r2, Y+18	; 0x12
    147a:	39 88       	ldd	r3, Y+17	; 0x11
    147c:	48 88       	ldd	r4, Y+16	; 0x10
    147e:	5f 84       	ldd	r5, Y+15	; 0x0f
    1480:	6e 84       	ldd	r6, Y+14	; 0x0e
    1482:	7d 84       	ldd	r7, Y+13	; 0x0d
    1484:	8c 84       	ldd	r8, Y+12	; 0x0c
    1486:	9b 84       	ldd	r9, Y+11	; 0x0b
    1488:	aa 84       	ldd	r10, Y+10	; 0x0a
    148a:	b9 84       	ldd	r11, Y+9	; 0x09
    148c:	c8 84       	ldd	r12, Y+8	; 0x08
    148e:	df 80       	ldd	r13, Y+7	; 0x07
    1490:	ee 80       	ldd	r14, Y+6	; 0x06
    1492:	fd 80       	ldd	r15, Y+5	; 0x05
    1494:	0c 81       	ldd	r16, Y+4	; 0x04
    1496:	1b 81       	ldd	r17, Y+3	; 0x03
    1498:	aa 81       	ldd	r26, Y+2	; 0x02
    149a:	b9 81       	ldd	r27, Y+1	; 0x01
    149c:	ce 0f       	add	r28, r30
    149e:	d1 1d       	adc	r29, r1
    14a0:	0f b6       	in	r0, 0x3f	; 63
    14a2:	f8 94       	cli
    14a4:	de bf       	out	0x3e, r29	; 62
    14a6:	0f be       	out	0x3f, r0	; 63
    14a8:	cd bf       	out	0x3d, r28	; 61
    14aa:	ed 01       	movw	r28, r26
    14ac:	08 95       	ret

000014ae <fprintf>:
    14ae:	cf 93       	push	r28
    14b0:	df 93       	push	r29
    14b2:	cd b7       	in	r28, 0x3d	; 61
    14b4:	de b7       	in	r29, 0x3e	; 62
    14b6:	ce 01       	movw	r24, r28
    14b8:	09 96       	adiw	r24, 0x09	; 9
    14ba:	ac 01       	movw	r20, r24
    14bc:	6f 81       	ldd	r22, Y+7	; 0x07
    14be:	78 85       	ldd	r23, Y+8	; 0x08
    14c0:	8d 81       	ldd	r24, Y+5	; 0x05
    14c2:	9e 81       	ldd	r25, Y+6	; 0x06
    14c4:	0e 94 98 0a 	call	0x1530	; 0x1530 <vfprintf>
    14c8:	df 91       	pop	r29
    14ca:	cf 91       	pop	r28
    14cc:	08 95       	ret

000014ce <fputs>:
    14ce:	ef 92       	push	r14
    14d0:	ff 92       	push	r15
    14d2:	0f 93       	push	r16
    14d4:	1f 93       	push	r17
    14d6:	cf 93       	push	r28
    14d8:	df 93       	push	r29
    14da:	7c 01       	movw	r14, r24
    14dc:	8b 01       	movw	r16, r22
    14de:	db 01       	movw	r26, r22
    14e0:	13 96       	adiw	r26, 0x03	; 3
    14e2:	8c 91       	ld	r24, X
    14e4:	81 ff       	sbrs	r24, 1
    14e6:	14 c0       	rjmp	.+40     	; 0x1510 <fputs+0x42>
    14e8:	c0 e0       	ldi	r28, 0x00	; 0
    14ea:	d0 e0       	ldi	r29, 0x00	; 0
    14ec:	0b c0       	rjmp	.+22     	; 0x1504 <fputs+0x36>
    14ee:	d8 01       	movw	r26, r16
    14f0:	18 96       	adiw	r26, 0x08	; 8
    14f2:	ed 91       	ld	r30, X+
    14f4:	fc 91       	ld	r31, X
    14f6:	19 97       	sbiw	r26, 0x09	; 9
    14f8:	b8 01       	movw	r22, r16
    14fa:	09 95       	icall
    14fc:	89 2b       	or	r24, r25
    14fe:	11 f0       	breq	.+4      	; 0x1504 <fputs+0x36>
    1500:	cf ef       	ldi	r28, 0xFF	; 255
    1502:	df ef       	ldi	r29, 0xFF	; 255
    1504:	f7 01       	movw	r30, r14
    1506:	81 91       	ld	r24, Z+
    1508:	7f 01       	movw	r14, r30
    150a:	81 11       	cpse	r24, r1
    150c:	f0 cf       	rjmp	.-32     	; 0x14ee <fputs+0x20>
    150e:	02 c0       	rjmp	.+4      	; 0x1514 <fputs+0x46>
    1510:	cf ef       	ldi	r28, 0xFF	; 255
    1512:	df ef       	ldi	r29, 0xFF	; 255
    1514:	ce 01       	movw	r24, r28
    1516:	df 91       	pop	r29
    1518:	cf 91       	pop	r28
    151a:	1f 91       	pop	r17
    151c:	0f 91       	pop	r16
    151e:	ff 90       	pop	r15
    1520:	ef 90       	pop	r14
    1522:	08 95       	ret

00001524 <sin>:
    1524:	9f 93       	push	r25
    1526:	aa d2       	rcall	.+1364   	; 0x1a7c <__fp_rempio2>
    1528:	0f 90       	pop	r0
    152a:	07 fc       	sbrc	r0, 7
    152c:	ee 5f       	subi	r30, 0xFE	; 254
    152e:	cd c2       	rjmp	.+1434   	; 0x1aca <__fp_sinus>

00001530 <vfprintf>:
    1530:	2f 92       	push	r2
    1532:	3f 92       	push	r3
    1534:	4f 92       	push	r4
    1536:	5f 92       	push	r5
    1538:	6f 92       	push	r6
    153a:	7f 92       	push	r7
    153c:	8f 92       	push	r8
    153e:	9f 92       	push	r9
    1540:	af 92       	push	r10
    1542:	bf 92       	push	r11
    1544:	cf 92       	push	r12
    1546:	df 92       	push	r13
    1548:	ef 92       	push	r14
    154a:	ff 92       	push	r15
    154c:	0f 93       	push	r16
    154e:	1f 93       	push	r17
    1550:	cf 93       	push	r28
    1552:	df 93       	push	r29
    1554:	cd b7       	in	r28, 0x3d	; 61
    1556:	de b7       	in	r29, 0x3e	; 62
    1558:	2c 97       	sbiw	r28, 0x0c	; 12
    155a:	0f b6       	in	r0, 0x3f	; 63
    155c:	f8 94       	cli
    155e:	de bf       	out	0x3e, r29	; 62
    1560:	0f be       	out	0x3f, r0	; 63
    1562:	cd bf       	out	0x3d, r28	; 61
    1564:	7c 01       	movw	r14, r24
    1566:	6b 01       	movw	r12, r22
    1568:	8a 01       	movw	r16, r20
    156a:	fc 01       	movw	r30, r24
    156c:	17 82       	std	Z+7, r1	; 0x07
    156e:	16 82       	std	Z+6, r1	; 0x06
    1570:	83 81       	ldd	r24, Z+3	; 0x03
    1572:	81 ff       	sbrs	r24, 1
    1574:	c6 c1       	rjmp	.+908    	; 0x1902 <vfprintf+0x3d2>
    1576:	88 24       	eor	r8, r8
    1578:	83 94       	inc	r8
    157a:	91 2c       	mov	r9, r1
    157c:	8c 0e       	add	r8, r28
    157e:	9d 1e       	adc	r9, r29
    1580:	f7 01       	movw	r30, r14
    1582:	93 81       	ldd	r25, Z+3	; 0x03
    1584:	f6 01       	movw	r30, r12
    1586:	93 fd       	sbrc	r25, 3
    1588:	85 91       	lpm	r24, Z+
    158a:	93 ff       	sbrs	r25, 3
    158c:	81 91       	ld	r24, Z+
    158e:	6f 01       	movw	r12, r30
    1590:	88 23       	and	r24, r24
    1592:	09 f4       	brne	.+2      	; 0x1596 <vfprintf+0x66>
    1594:	b2 c1       	rjmp	.+868    	; 0x18fa <vfprintf+0x3ca>
    1596:	85 32       	cpi	r24, 0x25	; 37
    1598:	39 f4       	brne	.+14     	; 0x15a8 <vfprintf+0x78>
    159a:	93 fd       	sbrc	r25, 3
    159c:	85 91       	lpm	r24, Z+
    159e:	93 ff       	sbrs	r25, 3
    15a0:	81 91       	ld	r24, Z+
    15a2:	6f 01       	movw	r12, r30
    15a4:	85 32       	cpi	r24, 0x25	; 37
    15a6:	29 f4       	brne	.+10     	; 0x15b2 <vfprintf+0x82>
    15a8:	b7 01       	movw	r22, r14
    15aa:	90 e0       	ldi	r25, 0x00	; 0
    15ac:	0e 94 b3 0c 	call	0x1966	; 0x1966 <fputc>
    15b0:	e7 cf       	rjmp	.-50     	; 0x1580 <vfprintf+0x50>
    15b2:	51 2c       	mov	r5, r1
    15b4:	31 2c       	mov	r3, r1
    15b6:	20 e0       	ldi	r18, 0x00	; 0
    15b8:	20 32       	cpi	r18, 0x20	; 32
    15ba:	a8 f4       	brcc	.+42     	; 0x15e6 <vfprintf+0xb6>
    15bc:	8b 32       	cpi	r24, 0x2B	; 43
    15be:	61 f0       	breq	.+24     	; 0x15d8 <vfprintf+0xa8>
    15c0:	28 f4       	brcc	.+10     	; 0x15cc <vfprintf+0x9c>
    15c2:	80 32       	cpi	r24, 0x20	; 32
    15c4:	51 f0       	breq	.+20     	; 0x15da <vfprintf+0xaa>
    15c6:	83 32       	cpi	r24, 0x23	; 35
    15c8:	71 f4       	brne	.+28     	; 0x15e6 <vfprintf+0xb6>
    15ca:	0b c0       	rjmp	.+22     	; 0x15e2 <vfprintf+0xb2>
    15cc:	8d 32       	cpi	r24, 0x2D	; 45
    15ce:	39 f0       	breq	.+14     	; 0x15de <vfprintf+0xae>
    15d0:	80 33       	cpi	r24, 0x30	; 48
    15d2:	49 f4       	brne	.+18     	; 0x15e6 <vfprintf+0xb6>
    15d4:	21 60       	ori	r18, 0x01	; 1
    15d6:	28 c0       	rjmp	.+80     	; 0x1628 <vfprintf+0xf8>
    15d8:	22 60       	ori	r18, 0x02	; 2
    15da:	24 60       	ori	r18, 0x04	; 4
    15dc:	25 c0       	rjmp	.+74     	; 0x1628 <vfprintf+0xf8>
    15de:	28 60       	ori	r18, 0x08	; 8
    15e0:	23 c0       	rjmp	.+70     	; 0x1628 <vfprintf+0xf8>
    15e2:	20 61       	ori	r18, 0x10	; 16
    15e4:	21 c0       	rjmp	.+66     	; 0x1628 <vfprintf+0xf8>
    15e6:	27 fd       	sbrc	r18, 7
    15e8:	27 c0       	rjmp	.+78     	; 0x1638 <vfprintf+0x108>
    15ea:	38 2f       	mov	r19, r24
    15ec:	30 53       	subi	r19, 0x30	; 48
    15ee:	3a 30       	cpi	r19, 0x0A	; 10
    15f0:	78 f4       	brcc	.+30     	; 0x1610 <vfprintf+0xe0>
    15f2:	26 ff       	sbrs	r18, 6
    15f4:	06 c0       	rjmp	.+12     	; 0x1602 <vfprintf+0xd2>
    15f6:	fa e0       	ldi	r31, 0x0A	; 10
    15f8:	5f 9e       	mul	r5, r31
    15fa:	30 0d       	add	r19, r0
    15fc:	11 24       	eor	r1, r1
    15fe:	53 2e       	mov	r5, r19
    1600:	13 c0       	rjmp	.+38     	; 0x1628 <vfprintf+0xf8>
    1602:	8a e0       	ldi	r24, 0x0A	; 10
    1604:	38 9e       	mul	r3, r24
    1606:	30 0d       	add	r19, r0
    1608:	11 24       	eor	r1, r1
    160a:	33 2e       	mov	r3, r19
    160c:	20 62       	ori	r18, 0x20	; 32
    160e:	0c c0       	rjmp	.+24     	; 0x1628 <vfprintf+0xf8>
    1610:	8e 32       	cpi	r24, 0x2E	; 46
    1612:	21 f4       	brne	.+8      	; 0x161c <vfprintf+0xec>
    1614:	26 fd       	sbrc	r18, 6
    1616:	71 c1       	rjmp	.+738    	; 0x18fa <vfprintf+0x3ca>
    1618:	20 64       	ori	r18, 0x40	; 64
    161a:	06 c0       	rjmp	.+12     	; 0x1628 <vfprintf+0xf8>
    161c:	8c 36       	cpi	r24, 0x6C	; 108
    161e:	11 f4       	brne	.+4      	; 0x1624 <vfprintf+0xf4>
    1620:	20 68       	ori	r18, 0x80	; 128
    1622:	02 c0       	rjmp	.+4      	; 0x1628 <vfprintf+0xf8>
    1624:	88 36       	cpi	r24, 0x68	; 104
    1626:	41 f4       	brne	.+16     	; 0x1638 <vfprintf+0x108>
    1628:	f6 01       	movw	r30, r12
    162a:	93 fd       	sbrc	r25, 3
    162c:	85 91       	lpm	r24, Z+
    162e:	93 ff       	sbrs	r25, 3
    1630:	81 91       	ld	r24, Z+
    1632:	6f 01       	movw	r12, r30
    1634:	81 11       	cpse	r24, r1
    1636:	c0 cf       	rjmp	.-128    	; 0x15b8 <vfprintf+0x88>
    1638:	98 2f       	mov	r25, r24
    163a:	95 54       	subi	r25, 0x45	; 69
    163c:	93 30       	cpi	r25, 0x03	; 3
    163e:	18 f0       	brcs	.+6      	; 0x1646 <vfprintf+0x116>
    1640:	90 52       	subi	r25, 0x20	; 32
    1642:	93 30       	cpi	r25, 0x03	; 3
    1644:	28 f4       	brcc	.+10     	; 0x1650 <vfprintf+0x120>
    1646:	0c 5f       	subi	r16, 0xFC	; 252
    1648:	1f 4f       	sbci	r17, 0xFF	; 255
    164a:	ff e3       	ldi	r31, 0x3F	; 63
    164c:	f9 83       	std	Y+1, r31	; 0x01
    164e:	0d c0       	rjmp	.+26     	; 0x166a <vfprintf+0x13a>
    1650:	83 36       	cpi	r24, 0x63	; 99
    1652:	31 f0       	breq	.+12     	; 0x1660 <vfprintf+0x130>
    1654:	83 37       	cpi	r24, 0x73	; 115
    1656:	71 f0       	breq	.+28     	; 0x1674 <vfprintf+0x144>
    1658:	83 35       	cpi	r24, 0x53	; 83
    165a:	09 f0       	breq	.+2      	; 0x165e <vfprintf+0x12e>
    165c:	5e c0       	rjmp	.+188    	; 0x171a <vfprintf+0x1ea>
    165e:	23 c0       	rjmp	.+70     	; 0x16a6 <vfprintf+0x176>
    1660:	f8 01       	movw	r30, r16
    1662:	80 81       	ld	r24, Z
    1664:	89 83       	std	Y+1, r24	; 0x01
    1666:	0e 5f       	subi	r16, 0xFE	; 254
    1668:	1f 4f       	sbci	r17, 0xFF	; 255
    166a:	44 24       	eor	r4, r4
    166c:	43 94       	inc	r4
    166e:	51 2c       	mov	r5, r1
    1670:	54 01       	movw	r10, r8
    1672:	15 c0       	rjmp	.+42     	; 0x169e <vfprintf+0x16e>
    1674:	38 01       	movw	r6, r16
    1676:	f2 e0       	ldi	r31, 0x02	; 2
    1678:	6f 0e       	add	r6, r31
    167a:	71 1c       	adc	r7, r1
    167c:	f8 01       	movw	r30, r16
    167e:	a0 80       	ld	r10, Z
    1680:	b1 80       	ldd	r11, Z+1	; 0x01
    1682:	26 ff       	sbrs	r18, 6
    1684:	03 c0       	rjmp	.+6      	; 0x168c <vfprintf+0x15c>
    1686:	65 2d       	mov	r22, r5
    1688:	70 e0       	ldi	r23, 0x00	; 0
    168a:	02 c0       	rjmp	.+4      	; 0x1690 <vfprintf+0x160>
    168c:	6f ef       	ldi	r22, 0xFF	; 255
    168e:	7f ef       	ldi	r23, 0xFF	; 255
    1690:	c5 01       	movw	r24, r10
    1692:	2c 87       	std	Y+12, r18	; 0x0c
    1694:	0e 94 a8 0c 	call	0x1950	; 0x1950 <strnlen>
    1698:	2c 01       	movw	r4, r24
    169a:	83 01       	movw	r16, r6
    169c:	2c 85       	ldd	r18, Y+12	; 0x0c
    169e:	6f e7       	ldi	r22, 0x7F	; 127
    16a0:	26 2e       	mov	r2, r22
    16a2:	22 22       	and	r2, r18
    16a4:	18 c0       	rjmp	.+48     	; 0x16d6 <vfprintf+0x1a6>
    16a6:	38 01       	movw	r6, r16
    16a8:	f2 e0       	ldi	r31, 0x02	; 2
    16aa:	6f 0e       	add	r6, r31
    16ac:	71 1c       	adc	r7, r1
    16ae:	f8 01       	movw	r30, r16
    16b0:	a0 80       	ld	r10, Z
    16b2:	b1 80       	ldd	r11, Z+1	; 0x01
    16b4:	26 ff       	sbrs	r18, 6
    16b6:	03 c0       	rjmp	.+6      	; 0x16be <vfprintf+0x18e>
    16b8:	65 2d       	mov	r22, r5
    16ba:	70 e0       	ldi	r23, 0x00	; 0
    16bc:	02 c0       	rjmp	.+4      	; 0x16c2 <vfprintf+0x192>
    16be:	6f ef       	ldi	r22, 0xFF	; 255
    16c0:	7f ef       	ldi	r23, 0xFF	; 255
    16c2:	c5 01       	movw	r24, r10
    16c4:	2c 87       	std	Y+12, r18	; 0x0c
    16c6:	0e 94 9d 0c 	call	0x193a	; 0x193a <strnlen_P>
    16ca:	2c 01       	movw	r4, r24
    16cc:	2c 85       	ldd	r18, Y+12	; 0x0c
    16ce:	50 e8       	ldi	r21, 0x80	; 128
    16d0:	25 2e       	mov	r2, r21
    16d2:	22 2a       	or	r2, r18
    16d4:	83 01       	movw	r16, r6
    16d6:	23 fc       	sbrc	r2, 3
    16d8:	1c c0       	rjmp	.+56     	; 0x1712 <vfprintf+0x1e2>
    16da:	06 c0       	rjmp	.+12     	; 0x16e8 <vfprintf+0x1b8>
    16dc:	b7 01       	movw	r22, r14
    16de:	80 e2       	ldi	r24, 0x20	; 32
    16e0:	90 e0       	ldi	r25, 0x00	; 0
    16e2:	0e 94 b3 0c 	call	0x1966	; 0x1966 <fputc>
    16e6:	3a 94       	dec	r3
    16e8:	83 2d       	mov	r24, r3
    16ea:	90 e0       	ldi	r25, 0x00	; 0
    16ec:	48 16       	cp	r4, r24
    16ee:	59 06       	cpc	r5, r25
    16f0:	a8 f3       	brcs	.-22     	; 0x16dc <vfprintf+0x1ac>
    16f2:	0f c0       	rjmp	.+30     	; 0x1712 <vfprintf+0x1e2>
    16f4:	f5 01       	movw	r30, r10
    16f6:	27 fc       	sbrc	r2, 7
    16f8:	85 91       	lpm	r24, Z+
    16fa:	27 fe       	sbrs	r2, 7
    16fc:	81 91       	ld	r24, Z+
    16fe:	5f 01       	movw	r10, r30
    1700:	b7 01       	movw	r22, r14
    1702:	90 e0       	ldi	r25, 0x00	; 0
    1704:	0e 94 b3 0c 	call	0x1966	; 0x1966 <fputc>
    1708:	31 10       	cpse	r3, r1
    170a:	3a 94       	dec	r3
    170c:	f1 e0       	ldi	r31, 0x01	; 1
    170e:	4f 1a       	sub	r4, r31
    1710:	51 08       	sbc	r5, r1
    1712:	41 14       	cp	r4, r1
    1714:	51 04       	cpc	r5, r1
    1716:	71 f7       	brne	.-36     	; 0x16f4 <vfprintf+0x1c4>
    1718:	ed c0       	rjmp	.+474    	; 0x18f4 <vfprintf+0x3c4>
    171a:	84 36       	cpi	r24, 0x64	; 100
    171c:	11 f0       	breq	.+4      	; 0x1722 <vfprintf+0x1f2>
    171e:	89 36       	cpi	r24, 0x69	; 105
    1720:	41 f5       	brne	.+80     	; 0x1772 <vfprintf+0x242>
    1722:	f8 01       	movw	r30, r16
    1724:	27 ff       	sbrs	r18, 7
    1726:	07 c0       	rjmp	.+14     	; 0x1736 <vfprintf+0x206>
    1728:	60 81       	ld	r22, Z
    172a:	71 81       	ldd	r23, Z+1	; 0x01
    172c:	82 81       	ldd	r24, Z+2	; 0x02
    172e:	93 81       	ldd	r25, Z+3	; 0x03
    1730:	0c 5f       	subi	r16, 0xFC	; 252
    1732:	1f 4f       	sbci	r17, 0xFF	; 255
    1734:	08 c0       	rjmp	.+16     	; 0x1746 <vfprintf+0x216>
    1736:	60 81       	ld	r22, Z
    1738:	71 81       	ldd	r23, Z+1	; 0x01
    173a:	88 27       	eor	r24, r24
    173c:	77 fd       	sbrc	r23, 7
    173e:	80 95       	com	r24
    1740:	98 2f       	mov	r25, r24
    1742:	0e 5f       	subi	r16, 0xFE	; 254
    1744:	1f 4f       	sbci	r17, 0xFF	; 255
    1746:	4f e6       	ldi	r20, 0x6F	; 111
    1748:	b4 2e       	mov	r11, r20
    174a:	b2 22       	and	r11, r18
    174c:	97 ff       	sbrs	r25, 7
    174e:	09 c0       	rjmp	.+18     	; 0x1762 <vfprintf+0x232>
    1750:	90 95       	com	r25
    1752:	80 95       	com	r24
    1754:	70 95       	com	r23
    1756:	61 95       	neg	r22
    1758:	7f 4f       	sbci	r23, 0xFF	; 255
    175a:	8f 4f       	sbci	r24, 0xFF	; 255
    175c:	9f 4f       	sbci	r25, 0xFF	; 255
    175e:	f0 e8       	ldi	r31, 0x80	; 128
    1760:	bf 2a       	or	r11, r31
    1762:	2a e0       	ldi	r18, 0x0A	; 10
    1764:	30 e0       	ldi	r19, 0x00	; 0
    1766:	a4 01       	movw	r20, r8
    1768:	0e 94 df 0c 	call	0x19be	; 0x19be <__ultoa_invert>
    176c:	a8 2e       	mov	r10, r24
    176e:	a8 18       	sub	r10, r8
    1770:	43 c0       	rjmp	.+134    	; 0x17f8 <vfprintf+0x2c8>
    1772:	85 37       	cpi	r24, 0x75	; 117
    1774:	31 f4       	brne	.+12     	; 0x1782 <vfprintf+0x252>
    1776:	3f ee       	ldi	r19, 0xEF	; 239
    1778:	b3 2e       	mov	r11, r19
    177a:	b2 22       	and	r11, r18
    177c:	2a e0       	ldi	r18, 0x0A	; 10
    177e:	30 e0       	ldi	r19, 0x00	; 0
    1780:	24 c0       	rjmp	.+72     	; 0x17ca <vfprintf+0x29a>
    1782:	99 ef       	ldi	r25, 0xF9	; 249
    1784:	b9 2e       	mov	r11, r25
    1786:	b2 22       	and	r11, r18
    1788:	8f 36       	cpi	r24, 0x6F	; 111
    178a:	b9 f0       	breq	.+46     	; 0x17ba <vfprintf+0x28a>
    178c:	20 f4       	brcc	.+8      	; 0x1796 <vfprintf+0x266>
    178e:	88 35       	cpi	r24, 0x58	; 88
    1790:	09 f0       	breq	.+2      	; 0x1794 <vfprintf+0x264>
    1792:	b3 c0       	rjmp	.+358    	; 0x18fa <vfprintf+0x3ca>
    1794:	0d c0       	rjmp	.+26     	; 0x17b0 <vfprintf+0x280>
    1796:	80 37       	cpi	r24, 0x70	; 112
    1798:	21 f0       	breq	.+8      	; 0x17a2 <vfprintf+0x272>
    179a:	88 37       	cpi	r24, 0x78	; 120
    179c:	09 f0       	breq	.+2      	; 0x17a0 <vfprintf+0x270>
    179e:	ad c0       	rjmp	.+346    	; 0x18fa <vfprintf+0x3ca>
    17a0:	02 c0       	rjmp	.+4      	; 0x17a6 <vfprintf+0x276>
    17a2:	20 e1       	ldi	r18, 0x10	; 16
    17a4:	b2 2a       	or	r11, r18
    17a6:	b4 fe       	sbrs	r11, 4
    17a8:	0b c0       	rjmp	.+22     	; 0x17c0 <vfprintf+0x290>
    17aa:	84 e0       	ldi	r24, 0x04	; 4
    17ac:	b8 2a       	or	r11, r24
    17ae:	08 c0       	rjmp	.+16     	; 0x17c0 <vfprintf+0x290>
    17b0:	24 ff       	sbrs	r18, 4
    17b2:	09 c0       	rjmp	.+18     	; 0x17c6 <vfprintf+0x296>
    17b4:	e6 e0       	ldi	r30, 0x06	; 6
    17b6:	be 2a       	or	r11, r30
    17b8:	06 c0       	rjmp	.+12     	; 0x17c6 <vfprintf+0x296>
    17ba:	28 e0       	ldi	r18, 0x08	; 8
    17bc:	30 e0       	ldi	r19, 0x00	; 0
    17be:	05 c0       	rjmp	.+10     	; 0x17ca <vfprintf+0x29a>
    17c0:	20 e1       	ldi	r18, 0x10	; 16
    17c2:	30 e0       	ldi	r19, 0x00	; 0
    17c4:	02 c0       	rjmp	.+4      	; 0x17ca <vfprintf+0x29a>
    17c6:	20 e1       	ldi	r18, 0x10	; 16
    17c8:	32 e0       	ldi	r19, 0x02	; 2
    17ca:	f8 01       	movw	r30, r16
    17cc:	b7 fe       	sbrs	r11, 7
    17ce:	07 c0       	rjmp	.+14     	; 0x17de <vfprintf+0x2ae>
    17d0:	60 81       	ld	r22, Z
    17d2:	71 81       	ldd	r23, Z+1	; 0x01
    17d4:	82 81       	ldd	r24, Z+2	; 0x02
    17d6:	93 81       	ldd	r25, Z+3	; 0x03
    17d8:	0c 5f       	subi	r16, 0xFC	; 252
    17da:	1f 4f       	sbci	r17, 0xFF	; 255
    17dc:	06 c0       	rjmp	.+12     	; 0x17ea <vfprintf+0x2ba>
    17de:	60 81       	ld	r22, Z
    17e0:	71 81       	ldd	r23, Z+1	; 0x01
    17e2:	80 e0       	ldi	r24, 0x00	; 0
    17e4:	90 e0       	ldi	r25, 0x00	; 0
    17e6:	0e 5f       	subi	r16, 0xFE	; 254
    17e8:	1f 4f       	sbci	r17, 0xFF	; 255
    17ea:	a4 01       	movw	r20, r8
    17ec:	0e 94 df 0c 	call	0x19be	; 0x19be <__ultoa_invert>
    17f0:	a8 2e       	mov	r10, r24
    17f2:	a8 18       	sub	r10, r8
    17f4:	ff e7       	ldi	r31, 0x7F	; 127
    17f6:	bf 22       	and	r11, r31
    17f8:	b6 fe       	sbrs	r11, 6
    17fa:	0b c0       	rjmp	.+22     	; 0x1812 <vfprintf+0x2e2>
    17fc:	2b 2d       	mov	r18, r11
    17fe:	2e 7f       	andi	r18, 0xFE	; 254
    1800:	a5 14       	cp	r10, r5
    1802:	50 f4       	brcc	.+20     	; 0x1818 <vfprintf+0x2e8>
    1804:	b4 fe       	sbrs	r11, 4
    1806:	0a c0       	rjmp	.+20     	; 0x181c <vfprintf+0x2ec>
    1808:	b2 fc       	sbrc	r11, 2
    180a:	08 c0       	rjmp	.+16     	; 0x181c <vfprintf+0x2ec>
    180c:	2b 2d       	mov	r18, r11
    180e:	2e 7e       	andi	r18, 0xEE	; 238
    1810:	05 c0       	rjmp	.+10     	; 0x181c <vfprintf+0x2ec>
    1812:	7a 2c       	mov	r7, r10
    1814:	2b 2d       	mov	r18, r11
    1816:	03 c0       	rjmp	.+6      	; 0x181e <vfprintf+0x2ee>
    1818:	7a 2c       	mov	r7, r10
    181a:	01 c0       	rjmp	.+2      	; 0x181e <vfprintf+0x2ee>
    181c:	75 2c       	mov	r7, r5
    181e:	24 ff       	sbrs	r18, 4
    1820:	0d c0       	rjmp	.+26     	; 0x183c <vfprintf+0x30c>
    1822:	fe 01       	movw	r30, r28
    1824:	ea 0d       	add	r30, r10
    1826:	f1 1d       	adc	r31, r1
    1828:	80 81       	ld	r24, Z
    182a:	80 33       	cpi	r24, 0x30	; 48
    182c:	11 f4       	brne	.+4      	; 0x1832 <vfprintf+0x302>
    182e:	29 7e       	andi	r18, 0xE9	; 233
    1830:	09 c0       	rjmp	.+18     	; 0x1844 <vfprintf+0x314>
    1832:	22 ff       	sbrs	r18, 2
    1834:	06 c0       	rjmp	.+12     	; 0x1842 <vfprintf+0x312>
    1836:	73 94       	inc	r7
    1838:	73 94       	inc	r7
    183a:	04 c0       	rjmp	.+8      	; 0x1844 <vfprintf+0x314>
    183c:	82 2f       	mov	r24, r18
    183e:	86 78       	andi	r24, 0x86	; 134
    1840:	09 f0       	breq	.+2      	; 0x1844 <vfprintf+0x314>
    1842:	73 94       	inc	r7
    1844:	23 fd       	sbrc	r18, 3
    1846:	14 c0       	rjmp	.+40     	; 0x1870 <vfprintf+0x340>
    1848:	20 ff       	sbrs	r18, 0
    184a:	0f c0       	rjmp	.+30     	; 0x186a <vfprintf+0x33a>
    184c:	5a 2c       	mov	r5, r10
    184e:	73 14       	cp	r7, r3
    1850:	60 f4       	brcc	.+24     	; 0x186a <vfprintf+0x33a>
    1852:	53 0c       	add	r5, r3
    1854:	57 18       	sub	r5, r7
    1856:	73 2c       	mov	r7, r3
    1858:	08 c0       	rjmp	.+16     	; 0x186a <vfprintf+0x33a>
    185a:	b7 01       	movw	r22, r14
    185c:	80 e2       	ldi	r24, 0x20	; 32
    185e:	90 e0       	ldi	r25, 0x00	; 0
    1860:	2c 87       	std	Y+12, r18	; 0x0c
    1862:	0e 94 b3 0c 	call	0x1966	; 0x1966 <fputc>
    1866:	73 94       	inc	r7
    1868:	2c 85       	ldd	r18, Y+12	; 0x0c
    186a:	73 14       	cp	r7, r3
    186c:	b0 f3       	brcs	.-20     	; 0x185a <vfprintf+0x32a>
    186e:	04 c0       	rjmp	.+8      	; 0x1878 <vfprintf+0x348>
    1870:	73 14       	cp	r7, r3
    1872:	10 f4       	brcc	.+4      	; 0x1878 <vfprintf+0x348>
    1874:	37 18       	sub	r3, r7
    1876:	01 c0       	rjmp	.+2      	; 0x187a <vfprintf+0x34a>
    1878:	31 2c       	mov	r3, r1
    187a:	24 ff       	sbrs	r18, 4
    187c:	12 c0       	rjmp	.+36     	; 0x18a2 <vfprintf+0x372>
    187e:	b7 01       	movw	r22, r14
    1880:	80 e3       	ldi	r24, 0x30	; 48
    1882:	90 e0       	ldi	r25, 0x00	; 0
    1884:	2c 87       	std	Y+12, r18	; 0x0c
    1886:	0e 94 b3 0c 	call	0x1966	; 0x1966 <fputc>
    188a:	2c 85       	ldd	r18, Y+12	; 0x0c
    188c:	22 ff       	sbrs	r18, 2
    188e:	1e c0       	rjmp	.+60     	; 0x18cc <vfprintf+0x39c>
    1890:	21 ff       	sbrs	r18, 1
    1892:	03 c0       	rjmp	.+6      	; 0x189a <vfprintf+0x36a>
    1894:	88 e5       	ldi	r24, 0x58	; 88
    1896:	90 e0       	ldi	r25, 0x00	; 0
    1898:	02 c0       	rjmp	.+4      	; 0x189e <vfprintf+0x36e>
    189a:	88 e7       	ldi	r24, 0x78	; 120
    189c:	90 e0       	ldi	r25, 0x00	; 0
    189e:	b7 01       	movw	r22, r14
    18a0:	0c c0       	rjmp	.+24     	; 0x18ba <vfprintf+0x38a>
    18a2:	82 2f       	mov	r24, r18
    18a4:	86 78       	andi	r24, 0x86	; 134
    18a6:	91 f0       	breq	.+36     	; 0x18cc <vfprintf+0x39c>
    18a8:	21 fd       	sbrc	r18, 1
    18aa:	02 c0       	rjmp	.+4      	; 0x18b0 <vfprintf+0x380>
    18ac:	80 e2       	ldi	r24, 0x20	; 32
    18ae:	01 c0       	rjmp	.+2      	; 0x18b2 <vfprintf+0x382>
    18b0:	8b e2       	ldi	r24, 0x2B	; 43
    18b2:	27 fd       	sbrc	r18, 7
    18b4:	8d e2       	ldi	r24, 0x2D	; 45
    18b6:	b7 01       	movw	r22, r14
    18b8:	90 e0       	ldi	r25, 0x00	; 0
    18ba:	0e 94 b3 0c 	call	0x1966	; 0x1966 <fputc>
    18be:	06 c0       	rjmp	.+12     	; 0x18cc <vfprintf+0x39c>
    18c0:	b7 01       	movw	r22, r14
    18c2:	80 e3       	ldi	r24, 0x30	; 48
    18c4:	90 e0       	ldi	r25, 0x00	; 0
    18c6:	0e 94 b3 0c 	call	0x1966	; 0x1966 <fputc>
    18ca:	5a 94       	dec	r5
    18cc:	a5 14       	cp	r10, r5
    18ce:	c0 f3       	brcs	.-16     	; 0x18c0 <vfprintf+0x390>
    18d0:	aa 94       	dec	r10
    18d2:	f4 01       	movw	r30, r8
    18d4:	ea 0d       	add	r30, r10
    18d6:	f1 1d       	adc	r31, r1
    18d8:	b7 01       	movw	r22, r14
    18da:	80 81       	ld	r24, Z
    18dc:	90 e0       	ldi	r25, 0x00	; 0
    18de:	0e 94 b3 0c 	call	0x1966	; 0x1966 <fputc>
    18e2:	a1 10       	cpse	r10, r1
    18e4:	f5 cf       	rjmp	.-22     	; 0x18d0 <vfprintf+0x3a0>
    18e6:	06 c0       	rjmp	.+12     	; 0x18f4 <vfprintf+0x3c4>
    18e8:	b7 01       	movw	r22, r14
    18ea:	80 e2       	ldi	r24, 0x20	; 32
    18ec:	90 e0       	ldi	r25, 0x00	; 0
    18ee:	0e 94 b3 0c 	call	0x1966	; 0x1966 <fputc>
    18f2:	3a 94       	dec	r3
    18f4:	31 10       	cpse	r3, r1
    18f6:	f8 cf       	rjmp	.-16     	; 0x18e8 <vfprintf+0x3b8>
    18f8:	43 ce       	rjmp	.-890    	; 0x1580 <vfprintf+0x50>
    18fa:	f7 01       	movw	r30, r14
    18fc:	26 81       	ldd	r18, Z+6	; 0x06
    18fe:	37 81       	ldd	r19, Z+7	; 0x07
    1900:	02 c0       	rjmp	.+4      	; 0x1906 <vfprintf+0x3d6>
    1902:	2f ef       	ldi	r18, 0xFF	; 255
    1904:	3f ef       	ldi	r19, 0xFF	; 255
    1906:	c9 01       	movw	r24, r18
    1908:	2c 96       	adiw	r28, 0x0c	; 12
    190a:	0f b6       	in	r0, 0x3f	; 63
    190c:	f8 94       	cli
    190e:	de bf       	out	0x3e, r29	; 62
    1910:	0f be       	out	0x3f, r0	; 63
    1912:	cd bf       	out	0x3d, r28	; 61
    1914:	df 91       	pop	r29
    1916:	cf 91       	pop	r28
    1918:	1f 91       	pop	r17
    191a:	0f 91       	pop	r16
    191c:	ff 90       	pop	r15
    191e:	ef 90       	pop	r14
    1920:	df 90       	pop	r13
    1922:	cf 90       	pop	r12
    1924:	bf 90       	pop	r11
    1926:	af 90       	pop	r10
    1928:	9f 90       	pop	r9
    192a:	8f 90       	pop	r8
    192c:	7f 90       	pop	r7
    192e:	6f 90       	pop	r6
    1930:	5f 90       	pop	r5
    1932:	4f 90       	pop	r4
    1934:	3f 90       	pop	r3
    1936:	2f 90       	pop	r2
    1938:	08 95       	ret

0000193a <strnlen_P>:
    193a:	fc 01       	movw	r30, r24
    193c:	05 90       	lpm	r0, Z+
    193e:	61 50       	subi	r22, 0x01	; 1
    1940:	70 40       	sbci	r23, 0x00	; 0
    1942:	01 10       	cpse	r0, r1
    1944:	d8 f7       	brcc	.-10     	; 0x193c <strnlen_P+0x2>
    1946:	80 95       	com	r24
    1948:	90 95       	com	r25
    194a:	8e 0f       	add	r24, r30
    194c:	9f 1f       	adc	r25, r31
    194e:	08 95       	ret

00001950 <strnlen>:
    1950:	fc 01       	movw	r30, r24
    1952:	61 50       	subi	r22, 0x01	; 1
    1954:	70 40       	sbci	r23, 0x00	; 0
    1956:	01 90       	ld	r0, Z+
    1958:	01 10       	cpse	r0, r1
    195a:	d8 f7       	brcc	.-10     	; 0x1952 <strnlen+0x2>
    195c:	80 95       	com	r24
    195e:	90 95       	com	r25
    1960:	8e 0f       	add	r24, r30
    1962:	9f 1f       	adc	r25, r31
    1964:	08 95       	ret

00001966 <fputc>:
    1966:	0f 93       	push	r16
    1968:	1f 93       	push	r17
    196a:	cf 93       	push	r28
    196c:	df 93       	push	r29
    196e:	8c 01       	movw	r16, r24
    1970:	eb 01       	movw	r28, r22
    1972:	8b 81       	ldd	r24, Y+3	; 0x03
    1974:	81 fd       	sbrc	r24, 1
    1976:	03 c0       	rjmp	.+6      	; 0x197e <fputc+0x18>
    1978:	0f ef       	ldi	r16, 0xFF	; 255
    197a:	1f ef       	ldi	r17, 0xFF	; 255
    197c:	1a c0       	rjmp	.+52     	; 0x19b2 <fputc+0x4c>
    197e:	82 ff       	sbrs	r24, 2
    1980:	0d c0       	rjmp	.+26     	; 0x199c <fputc+0x36>
    1982:	2e 81       	ldd	r18, Y+6	; 0x06
    1984:	3f 81       	ldd	r19, Y+7	; 0x07
    1986:	8c 81       	ldd	r24, Y+4	; 0x04
    1988:	9d 81       	ldd	r25, Y+5	; 0x05
    198a:	28 17       	cp	r18, r24
    198c:	39 07       	cpc	r19, r25
    198e:	64 f4       	brge	.+24     	; 0x19a8 <fputc+0x42>
    1990:	e8 81       	ld	r30, Y
    1992:	f9 81       	ldd	r31, Y+1	; 0x01
    1994:	01 93       	st	Z+, r16
    1996:	f9 83       	std	Y+1, r31	; 0x01
    1998:	e8 83       	st	Y, r30
    199a:	06 c0       	rjmp	.+12     	; 0x19a8 <fputc+0x42>
    199c:	e8 85       	ldd	r30, Y+8	; 0x08
    199e:	f9 85       	ldd	r31, Y+9	; 0x09
    19a0:	80 2f       	mov	r24, r16
    19a2:	09 95       	icall
    19a4:	89 2b       	or	r24, r25
    19a6:	41 f7       	brne	.-48     	; 0x1978 <fputc+0x12>
    19a8:	8e 81       	ldd	r24, Y+6	; 0x06
    19aa:	9f 81       	ldd	r25, Y+7	; 0x07
    19ac:	01 96       	adiw	r24, 0x01	; 1
    19ae:	9f 83       	std	Y+7, r25	; 0x07
    19b0:	8e 83       	std	Y+6, r24	; 0x06
    19b2:	c8 01       	movw	r24, r16
    19b4:	df 91       	pop	r29
    19b6:	cf 91       	pop	r28
    19b8:	1f 91       	pop	r17
    19ba:	0f 91       	pop	r16
    19bc:	08 95       	ret

000019be <__ultoa_invert>:
    19be:	fa 01       	movw	r30, r20
    19c0:	aa 27       	eor	r26, r26
    19c2:	28 30       	cpi	r18, 0x08	; 8
    19c4:	51 f1       	breq	.+84     	; 0x1a1a <__ultoa_invert+0x5c>
    19c6:	20 31       	cpi	r18, 0x10	; 16
    19c8:	81 f1       	breq	.+96     	; 0x1a2a <__ultoa_invert+0x6c>
    19ca:	e8 94       	clt
    19cc:	6f 93       	push	r22
    19ce:	6e 7f       	andi	r22, 0xFE	; 254
    19d0:	6e 5f       	subi	r22, 0xFE	; 254
    19d2:	7f 4f       	sbci	r23, 0xFF	; 255
    19d4:	8f 4f       	sbci	r24, 0xFF	; 255
    19d6:	9f 4f       	sbci	r25, 0xFF	; 255
    19d8:	af 4f       	sbci	r26, 0xFF	; 255
    19da:	b1 e0       	ldi	r27, 0x01	; 1
    19dc:	3e d0       	rcall	.+124    	; 0x1a5a <__ultoa_invert+0x9c>
    19de:	b4 e0       	ldi	r27, 0x04	; 4
    19e0:	3c d0       	rcall	.+120    	; 0x1a5a <__ultoa_invert+0x9c>
    19e2:	67 0f       	add	r22, r23
    19e4:	78 1f       	adc	r23, r24
    19e6:	89 1f       	adc	r24, r25
    19e8:	9a 1f       	adc	r25, r26
    19ea:	a1 1d       	adc	r26, r1
    19ec:	68 0f       	add	r22, r24
    19ee:	79 1f       	adc	r23, r25
    19f0:	8a 1f       	adc	r24, r26
    19f2:	91 1d       	adc	r25, r1
    19f4:	a1 1d       	adc	r26, r1
    19f6:	6a 0f       	add	r22, r26
    19f8:	71 1d       	adc	r23, r1
    19fa:	81 1d       	adc	r24, r1
    19fc:	91 1d       	adc	r25, r1
    19fe:	a1 1d       	adc	r26, r1
    1a00:	20 d0       	rcall	.+64     	; 0x1a42 <__ultoa_invert+0x84>
    1a02:	09 f4       	brne	.+2      	; 0x1a06 <__ultoa_invert+0x48>
    1a04:	68 94       	set
    1a06:	3f 91       	pop	r19
    1a08:	2a e0       	ldi	r18, 0x0A	; 10
    1a0a:	26 9f       	mul	r18, r22
    1a0c:	11 24       	eor	r1, r1
    1a0e:	30 19       	sub	r19, r0
    1a10:	30 5d       	subi	r19, 0xD0	; 208
    1a12:	31 93       	st	Z+, r19
    1a14:	de f6       	brtc	.-74     	; 0x19cc <__ultoa_invert+0xe>
    1a16:	cf 01       	movw	r24, r30
    1a18:	08 95       	ret
    1a1a:	46 2f       	mov	r20, r22
    1a1c:	47 70       	andi	r20, 0x07	; 7
    1a1e:	40 5d       	subi	r20, 0xD0	; 208
    1a20:	41 93       	st	Z+, r20
    1a22:	b3 e0       	ldi	r27, 0x03	; 3
    1a24:	0f d0       	rcall	.+30     	; 0x1a44 <__ultoa_invert+0x86>
    1a26:	c9 f7       	brne	.-14     	; 0x1a1a <__ultoa_invert+0x5c>
    1a28:	f6 cf       	rjmp	.-20     	; 0x1a16 <__ultoa_invert+0x58>
    1a2a:	46 2f       	mov	r20, r22
    1a2c:	4f 70       	andi	r20, 0x0F	; 15
    1a2e:	40 5d       	subi	r20, 0xD0	; 208
    1a30:	4a 33       	cpi	r20, 0x3A	; 58
    1a32:	18 f0       	brcs	.+6      	; 0x1a3a <__ultoa_invert+0x7c>
    1a34:	49 5d       	subi	r20, 0xD9	; 217
    1a36:	31 fd       	sbrc	r19, 1
    1a38:	40 52       	subi	r20, 0x20	; 32
    1a3a:	41 93       	st	Z+, r20
    1a3c:	02 d0       	rcall	.+4      	; 0x1a42 <__ultoa_invert+0x84>
    1a3e:	a9 f7       	brne	.-22     	; 0x1a2a <__ultoa_invert+0x6c>
    1a40:	ea cf       	rjmp	.-44     	; 0x1a16 <__ultoa_invert+0x58>
    1a42:	b4 e0       	ldi	r27, 0x04	; 4
    1a44:	a6 95       	lsr	r26
    1a46:	97 95       	ror	r25
    1a48:	87 95       	ror	r24
    1a4a:	77 95       	ror	r23
    1a4c:	67 95       	ror	r22
    1a4e:	ba 95       	dec	r27
    1a50:	c9 f7       	brne	.-14     	; 0x1a44 <__ultoa_invert+0x86>
    1a52:	00 97       	sbiw	r24, 0x00	; 0
    1a54:	61 05       	cpc	r22, r1
    1a56:	71 05       	cpc	r23, r1
    1a58:	08 95       	ret
    1a5a:	9b 01       	movw	r18, r22
    1a5c:	ac 01       	movw	r20, r24
    1a5e:	0a 2e       	mov	r0, r26
    1a60:	06 94       	lsr	r0
    1a62:	57 95       	ror	r21
    1a64:	47 95       	ror	r20
    1a66:	37 95       	ror	r19
    1a68:	27 95       	ror	r18
    1a6a:	ba 95       	dec	r27
    1a6c:	c9 f7       	brne	.-14     	; 0x1a60 <__ultoa_invert+0xa2>
    1a6e:	62 0f       	add	r22, r18
    1a70:	73 1f       	adc	r23, r19
    1a72:	84 1f       	adc	r24, r20
    1a74:	95 1f       	adc	r25, r21
    1a76:	a0 1d       	adc	r26, r0
    1a78:	08 95       	ret
    1a7a:	ce c0       	rjmp	.+412    	; 0x1c18 <__fp_nan>

00001a7c <__fp_rempio2>:
    1a7c:	3f d0       	rcall	.+126    	; 0x1afc <__fp_splitA>
    1a7e:	e8 f3       	brcs	.-6      	; 0x1a7a <__ultoa_invert+0xbc>
    1a80:	e8 94       	clt
    1a82:	e0 e0       	ldi	r30, 0x00	; 0
    1a84:	bb 27       	eor	r27, r27
    1a86:	9f 57       	subi	r25, 0x7F	; 127
    1a88:	f0 f0       	brcs	.+60     	; 0x1ac6 <__fp_rempio2+0x4a>
    1a8a:	2a ed       	ldi	r18, 0xDA	; 218
    1a8c:	3f e0       	ldi	r19, 0x0F	; 15
    1a8e:	49 ec       	ldi	r20, 0xC9	; 201
    1a90:	06 c0       	rjmp	.+12     	; 0x1a9e <__fp_rempio2+0x22>
    1a92:	ee 0f       	add	r30, r30
    1a94:	bb 0f       	add	r27, r27
    1a96:	66 1f       	adc	r22, r22
    1a98:	77 1f       	adc	r23, r23
    1a9a:	88 1f       	adc	r24, r24
    1a9c:	28 f0       	brcs	.+10     	; 0x1aa8 <__fp_rempio2+0x2c>
    1a9e:	b2 3a       	cpi	r27, 0xA2	; 162
    1aa0:	62 07       	cpc	r22, r18
    1aa2:	73 07       	cpc	r23, r19
    1aa4:	84 07       	cpc	r24, r20
    1aa6:	28 f0       	brcs	.+10     	; 0x1ab2 <__fp_rempio2+0x36>
    1aa8:	b2 5a       	subi	r27, 0xA2	; 162
    1aaa:	62 0b       	sbc	r22, r18
    1aac:	73 0b       	sbc	r23, r19
    1aae:	84 0b       	sbc	r24, r20
    1ab0:	e3 95       	inc	r30
    1ab2:	9a 95       	dec	r25
    1ab4:	72 f7       	brpl	.-36     	; 0x1a92 <__fp_rempio2+0x16>
    1ab6:	80 38       	cpi	r24, 0x80	; 128
    1ab8:	30 f4       	brcc	.+12     	; 0x1ac6 <__fp_rempio2+0x4a>
    1aba:	9a 95       	dec	r25
    1abc:	bb 0f       	add	r27, r27
    1abe:	66 1f       	adc	r22, r22
    1ac0:	77 1f       	adc	r23, r23
    1ac2:	88 1f       	adc	r24, r24
    1ac4:	d2 f7       	brpl	.-12     	; 0x1aba <__fp_rempio2+0x3e>
    1ac6:	90 48       	sbci	r25, 0x80	; 128
    1ac8:	9b c0       	rjmp	.+310    	; 0x1c00 <__fp_mpack_finite>

00001aca <__fp_sinus>:
    1aca:	ef 93       	push	r30
    1acc:	e0 ff       	sbrs	r30, 0
    1ace:	06 c0       	rjmp	.+12     	; 0x1adc <__fp_sinus+0x12>
    1ad0:	a2 ea       	ldi	r26, 0xA2	; 162
    1ad2:	2a ed       	ldi	r18, 0xDA	; 218
    1ad4:	3f e0       	ldi	r19, 0x0F	; 15
    1ad6:	49 ec       	ldi	r20, 0xC9	; 201
    1ad8:	5f eb       	ldi	r21, 0xBF	; 191
    1ada:	37 d0       	rcall	.+110    	; 0x1b4a <__addsf3x>
    1adc:	bf d0       	rcall	.+382    	; 0x1c5c <__fp_round>
    1ade:	0f 90       	pop	r0
    1ae0:	03 94       	inc	r0
    1ae2:	01 fc       	sbrc	r0, 1
    1ae4:	90 58       	subi	r25, 0x80	; 128
    1ae6:	ec e8       	ldi	r30, 0x8C	; 140
    1ae8:	f0 e0       	ldi	r31, 0x00	; 0
    1aea:	99 c0       	rjmp	.+306    	; 0x1c1e <__fp_powsodd>

00001aec <__fp_split3>:
    1aec:	57 fd       	sbrc	r21, 7
    1aee:	90 58       	subi	r25, 0x80	; 128
    1af0:	44 0f       	add	r20, r20
    1af2:	55 1f       	adc	r21, r21
    1af4:	59 f0       	breq	.+22     	; 0x1b0c <__fp_splitA+0x10>
    1af6:	5f 3f       	cpi	r21, 0xFF	; 255
    1af8:	71 f0       	breq	.+28     	; 0x1b16 <__fp_splitA+0x1a>
    1afa:	47 95       	ror	r20

00001afc <__fp_splitA>:
    1afc:	88 0f       	add	r24, r24
    1afe:	97 fb       	bst	r25, 7
    1b00:	99 1f       	adc	r25, r25
    1b02:	61 f0       	breq	.+24     	; 0x1b1c <__fp_splitA+0x20>
    1b04:	9f 3f       	cpi	r25, 0xFF	; 255
    1b06:	79 f0       	breq	.+30     	; 0x1b26 <__fp_splitA+0x2a>
    1b08:	87 95       	ror	r24
    1b0a:	08 95       	ret
    1b0c:	12 16       	cp	r1, r18
    1b0e:	13 06       	cpc	r1, r19
    1b10:	14 06       	cpc	r1, r20
    1b12:	55 1f       	adc	r21, r21
    1b14:	f2 cf       	rjmp	.-28     	; 0x1afa <__fp_split3+0xe>
    1b16:	46 95       	lsr	r20
    1b18:	f1 df       	rcall	.-30     	; 0x1afc <__fp_splitA>
    1b1a:	08 c0       	rjmp	.+16     	; 0x1b2c <__fp_splitA+0x30>
    1b1c:	16 16       	cp	r1, r22
    1b1e:	17 06       	cpc	r1, r23
    1b20:	18 06       	cpc	r1, r24
    1b22:	99 1f       	adc	r25, r25
    1b24:	f1 cf       	rjmp	.-30     	; 0x1b08 <__fp_splitA+0xc>
    1b26:	86 95       	lsr	r24
    1b28:	71 05       	cpc	r23, r1
    1b2a:	61 05       	cpc	r22, r1
    1b2c:	08 94       	sec
    1b2e:	08 95       	ret
    1b30:	87 d0       	rcall	.+270    	; 0x1c40 <__fp_pscA>
    1b32:	30 f0       	brcs	.+12     	; 0x1b40 <__fp_splitA+0x44>
    1b34:	8c d0       	rcall	.+280    	; 0x1c4e <__fp_pscB>
    1b36:	20 f0       	brcs	.+8      	; 0x1b40 <__fp_splitA+0x44>
    1b38:	31 f4       	brne	.+12     	; 0x1b46 <__fp_splitA+0x4a>
    1b3a:	9f 3f       	cpi	r25, 0xFF	; 255
    1b3c:	11 f4       	brne	.+4      	; 0x1b42 <__fp_splitA+0x46>
    1b3e:	1e f4       	brtc	.+6      	; 0x1b46 <__fp_splitA+0x4a>
    1b40:	6b c0       	rjmp	.+214    	; 0x1c18 <__fp_nan>
    1b42:	0e f4       	brtc	.+2      	; 0x1b46 <__fp_splitA+0x4a>
    1b44:	e0 95       	com	r30
    1b46:	e7 fb       	bst	r30, 7
    1b48:	53 c0       	rjmp	.+166    	; 0x1bf0 <__fp_inf>

00001b4a <__addsf3x>:
    1b4a:	e9 2f       	mov	r30, r25
    1b4c:	cf df       	rcall	.-98     	; 0x1aec <__fp_split3>
    1b4e:	80 f3       	brcs	.-32     	; 0x1b30 <__fp_splitA+0x34>
    1b50:	ba 17       	cp	r27, r26
    1b52:	62 07       	cpc	r22, r18
    1b54:	73 07       	cpc	r23, r19
    1b56:	84 07       	cpc	r24, r20
    1b58:	95 07       	cpc	r25, r21
    1b5a:	18 f0       	brcs	.+6      	; 0x1b62 <__addsf3x+0x18>
    1b5c:	71 f4       	brne	.+28     	; 0x1b7a <__addsf3x+0x30>
    1b5e:	9e f5       	brtc	.+102    	; 0x1bc6 <__addsf3x+0x7c>
    1b60:	8e c0       	rjmp	.+284    	; 0x1c7e <__fp_zero>
    1b62:	0e f4       	brtc	.+2      	; 0x1b66 <__addsf3x+0x1c>
    1b64:	e0 95       	com	r30
    1b66:	0b 2e       	mov	r0, r27
    1b68:	ba 2f       	mov	r27, r26
    1b6a:	a0 2d       	mov	r26, r0
    1b6c:	0b 01       	movw	r0, r22
    1b6e:	b9 01       	movw	r22, r18
    1b70:	90 01       	movw	r18, r0
    1b72:	0c 01       	movw	r0, r24
    1b74:	ca 01       	movw	r24, r20
    1b76:	a0 01       	movw	r20, r0
    1b78:	11 24       	eor	r1, r1
    1b7a:	ff 27       	eor	r31, r31
    1b7c:	59 1b       	sub	r21, r25
    1b7e:	99 f0       	breq	.+38     	; 0x1ba6 <__addsf3x+0x5c>
    1b80:	59 3f       	cpi	r21, 0xF9	; 249
    1b82:	50 f4       	brcc	.+20     	; 0x1b98 <__addsf3x+0x4e>
    1b84:	50 3e       	cpi	r21, 0xE0	; 224
    1b86:	68 f1       	brcs	.+90     	; 0x1be2 <__addsf3x+0x98>
    1b88:	1a 16       	cp	r1, r26
    1b8a:	f0 40       	sbci	r31, 0x00	; 0
    1b8c:	a2 2f       	mov	r26, r18
    1b8e:	23 2f       	mov	r18, r19
    1b90:	34 2f       	mov	r19, r20
    1b92:	44 27       	eor	r20, r20
    1b94:	58 5f       	subi	r21, 0xF8	; 248
    1b96:	f3 cf       	rjmp	.-26     	; 0x1b7e <__addsf3x+0x34>
    1b98:	46 95       	lsr	r20
    1b9a:	37 95       	ror	r19
    1b9c:	27 95       	ror	r18
    1b9e:	a7 95       	ror	r26
    1ba0:	f0 40       	sbci	r31, 0x00	; 0
    1ba2:	53 95       	inc	r21
    1ba4:	c9 f7       	brne	.-14     	; 0x1b98 <__addsf3x+0x4e>
    1ba6:	7e f4       	brtc	.+30     	; 0x1bc6 <__addsf3x+0x7c>
    1ba8:	1f 16       	cp	r1, r31
    1baa:	ba 0b       	sbc	r27, r26
    1bac:	62 0b       	sbc	r22, r18
    1bae:	73 0b       	sbc	r23, r19
    1bb0:	84 0b       	sbc	r24, r20
    1bb2:	ba f0       	brmi	.+46     	; 0x1be2 <__addsf3x+0x98>
    1bb4:	91 50       	subi	r25, 0x01	; 1
    1bb6:	a1 f0       	breq	.+40     	; 0x1be0 <__addsf3x+0x96>
    1bb8:	ff 0f       	add	r31, r31
    1bba:	bb 1f       	adc	r27, r27
    1bbc:	66 1f       	adc	r22, r22
    1bbe:	77 1f       	adc	r23, r23
    1bc0:	88 1f       	adc	r24, r24
    1bc2:	c2 f7       	brpl	.-16     	; 0x1bb4 <__addsf3x+0x6a>
    1bc4:	0e c0       	rjmp	.+28     	; 0x1be2 <__addsf3x+0x98>
    1bc6:	ba 0f       	add	r27, r26
    1bc8:	62 1f       	adc	r22, r18
    1bca:	73 1f       	adc	r23, r19
    1bcc:	84 1f       	adc	r24, r20
    1bce:	48 f4       	brcc	.+18     	; 0x1be2 <__addsf3x+0x98>
    1bd0:	87 95       	ror	r24
    1bd2:	77 95       	ror	r23
    1bd4:	67 95       	ror	r22
    1bd6:	b7 95       	ror	r27
    1bd8:	f7 95       	ror	r31
    1bda:	9e 3f       	cpi	r25, 0xFE	; 254
    1bdc:	08 f0       	brcs	.+2      	; 0x1be0 <__addsf3x+0x96>
    1bde:	b3 cf       	rjmp	.-154    	; 0x1b46 <__fp_splitA+0x4a>
    1be0:	93 95       	inc	r25
    1be2:	88 0f       	add	r24, r24
    1be4:	08 f0       	brcs	.+2      	; 0x1be8 <__addsf3x+0x9e>
    1be6:	99 27       	eor	r25, r25
    1be8:	ee 0f       	add	r30, r30
    1bea:	97 95       	ror	r25
    1bec:	87 95       	ror	r24
    1bee:	08 95       	ret

00001bf0 <__fp_inf>:
    1bf0:	97 f9       	bld	r25, 7
    1bf2:	9f 67       	ori	r25, 0x7F	; 127
    1bf4:	80 e8       	ldi	r24, 0x80	; 128
    1bf6:	70 e0       	ldi	r23, 0x00	; 0
    1bf8:	60 e0       	ldi	r22, 0x00	; 0
    1bfa:	08 95       	ret

00001bfc <__fp_mpack>:
    1bfc:	9f 3f       	cpi	r25, 0xFF	; 255
    1bfe:	31 f0       	breq	.+12     	; 0x1c0c <__fp_mpack_finite+0xc>

00001c00 <__fp_mpack_finite>:
    1c00:	91 50       	subi	r25, 0x01	; 1
    1c02:	20 f4       	brcc	.+8      	; 0x1c0c <__fp_mpack_finite+0xc>
    1c04:	87 95       	ror	r24
    1c06:	77 95       	ror	r23
    1c08:	67 95       	ror	r22
    1c0a:	b7 95       	ror	r27
    1c0c:	88 0f       	add	r24, r24
    1c0e:	91 1d       	adc	r25, r1
    1c10:	96 95       	lsr	r25
    1c12:	87 95       	ror	r24
    1c14:	97 f9       	bld	r25, 7
    1c16:	08 95       	ret

00001c18 <__fp_nan>:
    1c18:	9f ef       	ldi	r25, 0xFF	; 255
    1c1a:	80 ec       	ldi	r24, 0xC0	; 192
    1c1c:	08 95       	ret

00001c1e <__fp_powsodd>:
    1c1e:	9f 93       	push	r25
    1c20:	8f 93       	push	r24
    1c22:	7f 93       	push	r23
    1c24:	6f 93       	push	r22
    1c26:	ff 93       	push	r31
    1c28:	ef 93       	push	r30
    1c2a:	9b 01       	movw	r18, r22
    1c2c:	ac 01       	movw	r20, r24
    1c2e:	59 d8       	rcall	.-3918   	; 0xce2 <__mulsf3>
    1c30:	ef 91       	pop	r30
    1c32:	ff 91       	pop	r31
    1c34:	2b d0       	rcall	.+86     	; 0x1c8c <__fp_powser>
    1c36:	2f 91       	pop	r18
    1c38:	3f 91       	pop	r19
    1c3a:	4f 91       	pop	r20
    1c3c:	5f 91       	pop	r21
    1c3e:	51 c8       	rjmp	.-3934   	; 0xce2 <__mulsf3>

00001c40 <__fp_pscA>:
    1c40:	00 24       	eor	r0, r0
    1c42:	0a 94       	dec	r0
    1c44:	16 16       	cp	r1, r22
    1c46:	17 06       	cpc	r1, r23
    1c48:	18 06       	cpc	r1, r24
    1c4a:	09 06       	cpc	r0, r25
    1c4c:	08 95       	ret

00001c4e <__fp_pscB>:
    1c4e:	00 24       	eor	r0, r0
    1c50:	0a 94       	dec	r0
    1c52:	12 16       	cp	r1, r18
    1c54:	13 06       	cpc	r1, r19
    1c56:	14 06       	cpc	r1, r20
    1c58:	05 06       	cpc	r0, r21
    1c5a:	08 95       	ret

00001c5c <__fp_round>:
    1c5c:	09 2e       	mov	r0, r25
    1c5e:	03 94       	inc	r0
    1c60:	00 0c       	add	r0, r0
    1c62:	11 f4       	brne	.+4      	; 0x1c68 <__fp_round+0xc>
    1c64:	88 23       	and	r24, r24
    1c66:	52 f0       	brmi	.+20     	; 0x1c7c <__fp_round+0x20>
    1c68:	bb 0f       	add	r27, r27
    1c6a:	40 f4       	brcc	.+16     	; 0x1c7c <__fp_round+0x20>
    1c6c:	bf 2b       	or	r27, r31
    1c6e:	11 f4       	brne	.+4      	; 0x1c74 <__fp_round+0x18>
    1c70:	60 ff       	sbrs	r22, 0
    1c72:	04 c0       	rjmp	.+8      	; 0x1c7c <__fp_round+0x20>
    1c74:	6f 5f       	subi	r22, 0xFF	; 255
    1c76:	7f 4f       	sbci	r23, 0xFF	; 255
    1c78:	8f 4f       	sbci	r24, 0xFF	; 255
    1c7a:	9f 4f       	sbci	r25, 0xFF	; 255
    1c7c:	08 95       	ret

00001c7e <__fp_zero>:
    1c7e:	e8 94       	clt

00001c80 <__fp_szero>:
    1c80:	bb 27       	eor	r27, r27
    1c82:	66 27       	eor	r22, r22
    1c84:	77 27       	eor	r23, r23
    1c86:	cb 01       	movw	r24, r22
    1c88:	97 f9       	bld	r25, 7
    1c8a:	08 95       	ret

00001c8c <__fp_powser>:
    1c8c:	df 93       	push	r29
    1c8e:	cf 93       	push	r28
    1c90:	1f 93       	push	r17
    1c92:	0f 93       	push	r16
    1c94:	ff 92       	push	r15
    1c96:	ef 92       	push	r14
    1c98:	df 92       	push	r13
    1c9a:	7b 01       	movw	r14, r22
    1c9c:	8c 01       	movw	r16, r24
    1c9e:	68 94       	set
    1ca0:	05 c0       	rjmp	.+10     	; 0x1cac <__fp_powser+0x20>
    1ca2:	da 2e       	mov	r13, r26
    1ca4:	ef 01       	movw	r28, r30
    1ca6:	21 d0       	rcall	.+66     	; 0x1cea <__mulsf3x>
    1ca8:	fe 01       	movw	r30, r28
    1caa:	e8 94       	clt
    1cac:	a5 91       	lpm	r26, Z+
    1cae:	25 91       	lpm	r18, Z+
    1cb0:	35 91       	lpm	r19, Z+
    1cb2:	45 91       	lpm	r20, Z+
    1cb4:	55 91       	lpm	r21, Z+
    1cb6:	ae f3       	brts	.-22     	; 0x1ca2 <__fp_powser+0x16>
    1cb8:	ef 01       	movw	r28, r30
    1cba:	47 df       	rcall	.-370    	; 0x1b4a <__addsf3x>
    1cbc:	fe 01       	movw	r30, r28
    1cbe:	97 01       	movw	r18, r14
    1cc0:	a8 01       	movw	r20, r16
    1cc2:	da 94       	dec	r13
    1cc4:	79 f7       	brne	.-34     	; 0x1ca4 <__fp_powser+0x18>
    1cc6:	df 90       	pop	r13
    1cc8:	ef 90       	pop	r14
    1cca:	ff 90       	pop	r15
    1ccc:	0f 91       	pop	r16
    1cce:	1f 91       	pop	r17
    1cd0:	cf 91       	pop	r28
    1cd2:	df 91       	pop	r29
    1cd4:	08 95       	ret
    1cd6:	b4 df       	rcall	.-152    	; 0x1c40 <__fp_pscA>
    1cd8:	28 f0       	brcs	.+10     	; 0x1ce4 <__fp_powser+0x58>
    1cda:	b9 df       	rcall	.-142    	; 0x1c4e <__fp_pscB>
    1cdc:	18 f0       	brcs	.+6      	; 0x1ce4 <__fp_powser+0x58>
    1cde:	95 23       	and	r25, r21
    1ce0:	09 f0       	breq	.+2      	; 0x1ce4 <__fp_powser+0x58>
    1ce2:	86 cf       	rjmp	.-244    	; 0x1bf0 <__fp_inf>
    1ce4:	99 cf       	rjmp	.-206    	; 0x1c18 <__fp_nan>
    1ce6:	11 24       	eor	r1, r1
    1ce8:	cb cf       	rjmp	.-106    	; 0x1c80 <__fp_szero>

00001cea <__mulsf3x>:
    1cea:	00 df       	rcall	.-512    	; 0x1aec <__fp_split3>
    1cec:	a0 f3       	brcs	.-24     	; 0x1cd6 <__fp_powser+0x4a>

00001cee <__mulsf3_pse>:
    1cee:	95 9f       	mul	r25, r21
    1cf0:	d1 f3       	breq	.-12     	; 0x1ce6 <__fp_powser+0x5a>
    1cf2:	95 0f       	add	r25, r21
    1cf4:	50 e0       	ldi	r21, 0x00	; 0
    1cf6:	55 1f       	adc	r21, r21
    1cf8:	62 9f       	mul	r22, r18
    1cfa:	f0 01       	movw	r30, r0
    1cfc:	72 9f       	mul	r23, r18
    1cfe:	bb 27       	eor	r27, r27
    1d00:	f0 0d       	add	r31, r0
    1d02:	b1 1d       	adc	r27, r1
    1d04:	63 9f       	mul	r22, r19
    1d06:	aa 27       	eor	r26, r26
    1d08:	f0 0d       	add	r31, r0
    1d0a:	b1 1d       	adc	r27, r1
    1d0c:	aa 1f       	adc	r26, r26
    1d0e:	64 9f       	mul	r22, r20
    1d10:	66 27       	eor	r22, r22
    1d12:	b0 0d       	add	r27, r0
    1d14:	a1 1d       	adc	r26, r1
    1d16:	66 1f       	adc	r22, r22
    1d18:	82 9f       	mul	r24, r18
    1d1a:	22 27       	eor	r18, r18
    1d1c:	b0 0d       	add	r27, r0
    1d1e:	a1 1d       	adc	r26, r1
    1d20:	62 1f       	adc	r22, r18
    1d22:	73 9f       	mul	r23, r19
    1d24:	b0 0d       	add	r27, r0
    1d26:	a1 1d       	adc	r26, r1
    1d28:	62 1f       	adc	r22, r18
    1d2a:	83 9f       	mul	r24, r19
    1d2c:	a0 0d       	add	r26, r0
    1d2e:	61 1d       	adc	r22, r1
    1d30:	22 1f       	adc	r18, r18
    1d32:	74 9f       	mul	r23, r20
    1d34:	33 27       	eor	r19, r19
    1d36:	a0 0d       	add	r26, r0
    1d38:	61 1d       	adc	r22, r1
    1d3a:	23 1f       	adc	r18, r19
    1d3c:	84 9f       	mul	r24, r20
    1d3e:	60 0d       	add	r22, r0
    1d40:	21 1d       	adc	r18, r1
    1d42:	82 2f       	mov	r24, r18
    1d44:	76 2f       	mov	r23, r22
    1d46:	6a 2f       	mov	r22, r26
    1d48:	11 24       	eor	r1, r1
    1d4a:	9f 57       	subi	r25, 0x7F	; 127
    1d4c:	50 40       	sbci	r21, 0x00	; 0
    1d4e:	8a f0       	brmi	.+34     	; 0x1d72 <__mulsf3_pse+0x84>
    1d50:	e1 f0       	breq	.+56     	; 0x1d8a <__mulsf3_pse+0x9c>
    1d52:	88 23       	and	r24, r24
    1d54:	4a f0       	brmi	.+18     	; 0x1d68 <__mulsf3_pse+0x7a>
    1d56:	ee 0f       	add	r30, r30
    1d58:	ff 1f       	adc	r31, r31
    1d5a:	bb 1f       	adc	r27, r27
    1d5c:	66 1f       	adc	r22, r22
    1d5e:	77 1f       	adc	r23, r23
    1d60:	88 1f       	adc	r24, r24
    1d62:	91 50       	subi	r25, 0x01	; 1
    1d64:	50 40       	sbci	r21, 0x00	; 0
    1d66:	a9 f7       	brne	.-22     	; 0x1d52 <__mulsf3_pse+0x64>
    1d68:	9e 3f       	cpi	r25, 0xFE	; 254
    1d6a:	51 05       	cpc	r21, r1
    1d6c:	70 f0       	brcs	.+28     	; 0x1d8a <__mulsf3_pse+0x9c>
    1d6e:	40 cf       	rjmp	.-384    	; 0x1bf0 <__fp_inf>
    1d70:	87 cf       	rjmp	.-242    	; 0x1c80 <__fp_szero>
    1d72:	5f 3f       	cpi	r21, 0xFF	; 255
    1d74:	ec f3       	brlt	.-6      	; 0x1d70 <__mulsf3_pse+0x82>
    1d76:	98 3e       	cpi	r25, 0xE8	; 232
    1d78:	dc f3       	brlt	.-10     	; 0x1d70 <__mulsf3_pse+0x82>
    1d7a:	86 95       	lsr	r24
    1d7c:	77 95       	ror	r23
    1d7e:	67 95       	ror	r22
    1d80:	b7 95       	ror	r27
    1d82:	f7 95       	ror	r31
    1d84:	e7 95       	ror	r30
    1d86:	9f 5f       	subi	r25, 0xFF	; 255
    1d88:	c1 f7       	brne	.-16     	; 0x1d7a <__mulsf3_pse+0x8c>
    1d8a:	fe 2b       	or	r31, r30
    1d8c:	88 0f       	add	r24, r24
    1d8e:	91 1d       	adc	r25, r1
    1d90:	96 95       	lsr	r25
    1d92:	87 95       	ror	r24
    1d94:	97 f9       	bld	r25, 7
    1d96:	08 95       	ret

00001d98 <_exit>:
    1d98:	f8 94       	cli

00001d9a <__stop_program>:
    1d9a:	ff cf       	rjmp	.-2      	; 0x1d9a <__stop_program>
