
Lab2_DTMF.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000084  00800100  00001d98  00001e2c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001d98  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000002a6  00800184  00800184  00001eb0  2**0
                  ALLOC
  3 .stab         000022a4  00000000  00000000  00001eb0  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000008d1  00000000  00000000  00004154  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000002f  00000000  00000000  00004a25  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 00000238  00000000  00000000  00004a54  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   0000343d  00000000  00000000  00004c8c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00001987  00000000  00000000  000080c9  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000013d0  00000000  00000000  00009a50  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  0000052c  00000000  00000000  0000ae20  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000875  00000000  00000000  0000b34c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00001a00  00000000  00000000  0000bbc1  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000088  00000000  00000000  0000d5c1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 55 00 	jmp	0xaa	; 0xaa <__ctors_end>
       4:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
       8:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
       c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      10:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      14:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      18:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      1c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      20:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      24:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      28:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      2c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      30:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      34:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      38:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      3c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      40:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      44:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      48:	0c 94 c7 02 	jmp	0x58e	; 0x58e <__vector_18>
      4c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      50:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      54:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      58:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      5c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      60:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      64:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      68:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      6c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      70:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      74:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      78:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      7c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      80:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      84:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      88:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      8c:	05 a8       	ldd	r0, Z+53	; 0x35
      8e:	4c cd       	rjmp	.-1384   	; 0xfffffb28 <__eeprom_end+0xff7efb28>
      90:	b2 d4       	rcall	.+2404   	; 0x9f6 <_fpadd_parts+0x7c>
      92:	4e b9       	out	0x0e, r20	; 14
      94:	38 36       	cpi	r19, 0x68	; 104
      96:	a9 02       	muls	r26, r25
      98:	0c 50       	subi	r16, 0x0C	; 12
      9a:	b9 91       	ld	r27, Y+
      9c:	86 88       	ldd	r8, Z+22	; 0x16
      9e:	08 3c       	cpi	r16, 0xC8	; 200
      a0:	a6 aa       	std	Z+54, r10	; 0x36
      a2:	aa 2a       	or	r10, r26
      a4:	be 00       	.word	0x00be	; ????
      a6:	00 00       	nop
      a8:	80 3f       	cpi	r24, 0xF0	; 240

000000aa <__ctors_end>:
      aa:	11 24       	eor	r1, r1
      ac:	1f be       	out	0x3f, r1	; 63
      ae:	cf ef       	ldi	r28, 0xFF	; 255
      b0:	d0 e4       	ldi	r29, 0x40	; 64
      b2:	de bf       	out	0x3e, r29	; 62
      b4:	cd bf       	out	0x3d, r28	; 61

000000b6 <__do_copy_data>:
      b6:	11 e0       	ldi	r17, 0x01	; 1
      b8:	a0 e0       	ldi	r26, 0x00	; 0
      ba:	b1 e0       	ldi	r27, 0x01	; 1
      bc:	e8 e9       	ldi	r30, 0x98	; 152
      be:	fd e1       	ldi	r31, 0x1D	; 29
      c0:	00 e0       	ldi	r16, 0x00	; 0
      c2:	0b bf       	out	0x3b, r16	; 59
      c4:	02 c0       	rjmp	.+4      	; 0xca <__do_copy_data+0x14>
      c6:	07 90       	elpm	r0, Z+
      c8:	0d 92       	st	X+, r0
      ca:	a4 38       	cpi	r26, 0x84	; 132
      cc:	b1 07       	cpc	r27, r17
      ce:	d9 f7       	brne	.-10     	; 0xc6 <__do_copy_data+0x10>

000000d0 <__do_clear_bss>:
      d0:	24 e0       	ldi	r18, 0x04	; 4
      d2:	a4 e8       	ldi	r26, 0x84	; 132
      d4:	b1 e0       	ldi	r27, 0x01	; 1
      d6:	01 c0       	rjmp	.+2      	; 0xda <.do_clear_bss_start>

000000d8 <.do_clear_bss_loop>:
      d8:	1d 92       	st	X+, r1

000000da <.do_clear_bss_start>:
      da:	aa 32       	cpi	r26, 0x2A	; 42
      dc:	b2 07       	cpc	r27, r18
      de:	e1 f7       	brne	.-8      	; 0xd8 <.do_clear_bss_loop>
      e0:	0e 94 ce 09 	call	0x139c	; 0x139c <main>
      e4:	0c 94 ca 0e 	jmp	0x1d94	; 0x1d94 <_exit>

000000e8 <__bad_interrupt>:
      e8:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ec <task1>:
// putchar and getchar are in uart.c
FILE uart_str = FDEV_SETUP_STREAM(uart_putchar, uart_getchar, _FDEV_SETUP_RW);

//******************************* 
//Task 1  
void task1(void) {
      ec:	cf 93       	push	r28
      ee:	df 93       	push	r29
	time1=0;  //reset the task timer
      f0:	10 92 f3 01 	sts	0x01F3, r1
      f4:	10 92 f2 01 	sts	0x01F2, r1

	//get lower nibble
	PORTDIR = 0x0f;
      f8:	8f e0       	ldi	r24, 0x0F	; 15
      fa:	81 b9       	out	0x01, r24	; 1
	PORTDATA = 0xf0; 
      fc:	90 ef       	ldi	r25, 0xF0	; 240
      fe:	92 b9       	out	0x02, r25	; 2
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     100:	2a e1       	ldi	r18, 0x1A	; 26
     102:	2a 95       	dec	r18
     104:	f1 f7       	brne	.-4      	; 0x102 <task1+0x16>
     106:	00 c0       	rjmp	.+0      	; 0x108 <task1+0x1c>
	_delay_us(5);
	key = PORTIN;
     108:	20 b1       	in	r18, 0x00	; 0
     10a:	20 93 f6 01 	sts	0x01F6, r18
  
	//get upper nibble
	PORTDIR = 0xf0;
     10e:	91 b9       	out	0x01, r25	; 1
	PORTDATA = 0x0f; 
     110:	82 b9       	out	0x02, r24	; 2
     112:	8a e1       	ldi	r24, 0x1A	; 26
     114:	8a 95       	dec	r24
     116:	f1 f7       	brne	.-4      	; 0x114 <task1+0x28>
     118:	00 c0       	rjmp	.+0      	; 0x11a <task1+0x2e>
	_delay_us(5);
	key = key | PORTIN;
     11a:	90 b1       	in	r25, 0x00	; 0
     11c:	80 91 f6 01 	lds	r24, 0x01F6
     120:	98 2b       	or	r25, r24
     122:	90 93 f6 01 	sts	0x01F6, r25
  
	//find matching keycode in keytbl
	if (key != 0xff) {
     126:	9f 3f       	cpi	r25, 0xFF	; 255
     128:	a9 f0       	breq	.+42     	; 0x154 <task1+0x68>
	  for (butnum=0; butnum<maxkeys; butnum++) {   
     12a:	80 e0       	ldi	r24, 0x00	; 0
     12c:	0a c0       	rjmp	.+20     	; 0x142 <task1+0x56>
     12e:	28 2f       	mov	r18, r24
     130:	2f 5f       	subi	r18, 0xFF	; 255
	  	if (keytbl[butnum]==key)  break;   
     132:	e8 2f       	mov	r30, r24
     134:	f0 e0       	ldi	r31, 0x00	; 0
     136:	e2 5c       	subi	r30, 0xC2	; 194
     138:	fe 4f       	sbci	r31, 0xFE	; 254
     13a:	30 81       	ld	r19, Z
     13c:	39 17       	cp	r19, r25
     13e:	31 f0       	breq	.+12     	; 0x14c <task1+0x60>
     140:	82 2f       	mov	r24, r18
	_delay_us(5);
	key = key | PORTIN;
  
	//find matching keycode in keytbl
	if (key != 0xff) {
	  for (butnum=0; butnum<maxkeys; butnum++) {   
     142:	8c 30       	cpi	r24, 0x0C	; 12
     144:	a0 f3       	brcs	.-24     	; 0x12e <task1+0x42>
	  	if (keytbl[butnum]==key)  break;   
	  }

	  if (butnum==maxkeys) butnum=0;
     146:	8c 30       	cpi	r24, 0x0C	; 12
     148:	09 f4       	brne	.+2      	; 0x14c <task1+0x60>
     14a:	04 c0       	rjmp	.+8      	; 0x154 <task1+0x68>
	  else butnum++;	   //adjust by one to make range 1-16
     14c:	8f 5f       	subi	r24, 0xFF	; 255
     14e:	80 93 ee 01 	sts	0x01EE, r24
     152:	02 c0       	rjmp	.+4      	; 0x158 <task1+0x6c>
	}
	else butnum=0;
     154:	10 92 ee 01 	sts	0x01EE, r1
	
	// Switching in the finite state machine.
	switch (PushState) {
     158:	80 91 fa 01 	lds	r24, 0x01FA
     15c:	82 30       	cpi	r24, 0x02	; 2
     15e:	91 f0       	breq	.+36     	; 0x184 <task1+0x98>
     160:	20 f4       	brcc	.+8      	; 0x16a <task1+0x7e>
     162:	81 30       	cpi	r24, 0x01	; 1
     164:	09 f0       	breq	.+2      	; 0x168 <task1+0x7c>
     166:	68 c0       	rjmp	.+208    	; 0x238 <task1+0x14c>
     168:	06 c0       	rjmp	.+12     	; 0x176 <task1+0x8a>
     16a:	83 30       	cpi	r24, 0x03	; 3
     16c:	11 f1       	breq	.+68     	; 0x1b2 <task1+0xc6>
     16e:	84 30       	cpi	r24, 0x04	; 4
     170:	09 f0       	breq	.+2      	; 0x174 <task1+0x88>
     172:	62 c0       	rjmp	.+196    	; 0x238 <task1+0x14c>
     174:	54 c0       	rjmp	.+168    	; 0x21e <task1+0x132>
     case NoPush: 
        if (butnum != 0) {
     176:	80 91 ee 01 	lds	r24, 0x01EE
     17a:	88 23       	and	r24, r24
     17c:	09 f4       	brne	.+2      	; 0x180 <task1+0x94>
     17e:	5c c0       	rjmp	.+184    	; 0x238 <task1+0x14c>
			PushState=MaybePush;
     180:	82 e0       	ldi	r24, 0x02	; 2
     182:	52 c0       	rjmp	.+164    	; 0x228 <task1+0x13c>
		}
        else PushState=NoPush;
        break;
     case MaybePush:
        if (butnum != 0) {
     184:	80 91 ee 01 	lds	r24, 0x01EE
     188:	88 23       	and	r24, r24
     18a:	89 f0       	breq	.+34     	; 0x1ae <task1+0xc2>
           	PushState=Pushed; 
     18c:	83 e0       	ldi	r24, 0x03	; 3
     18e:	80 93 fa 01 	sts	0x01FA, r24
			PushFlag=1;
     192:	81 e0       	ldi	r24, 0x01	; 1
     194:	80 93 ef 01 	sts	0x01EF, r24
			//Test mode override
			if (~PINB & 0x01) {
     198:	18 99       	sbic	0x03, 0	; 3
     19a:	4e c0       	rjmp	.+156    	; 0x238 <task1+0x14c>
				fprintf(stdout, "PINB is pressed.\n\r");
     19c:	60 91 26 04 	lds	r22, 0x0426
     1a0:	70 91 27 04 	lds	r23, 0x0427
     1a4:	86 e5       	ldi	r24, 0x56	; 86
     1a6:	91 e0       	ldi	r25, 0x01	; 1
     1a8:	0e 94 65 0a 	call	0x14ca	; 0x14ca <fputs>
     1ac:	43 c0       	rjmp	.+134    	; 0x234 <task1+0x148>
		 		PushFlag=0;			
		   	}  
        }
        else PushState=NoPush;
     1ae:	81 e0       	ldi	r24, 0x01	; 1
     1b0:	3b c0       	rjmp	.+118    	; 0x228 <task1+0x13c>
        break;
     case Pushed:  
        if (butnum != 0) {
     1b2:	80 91 ee 01 	lds	r24, 0x01EE
     1b6:	88 23       	and	r24, r24
     1b8:	81 f1       	breq	.+96     	; 0x21a <task1+0x12e>
			PushState=Pushed;
			//Test mode override
			if (~PINB & 0x01) {
     1ba:	18 99       	sbic	0x03, 0	; 3
     1bc:	3d c0       	rjmp	.+122    	; 0x238 <task1+0x14c>
		 		switch (butnum) {
     1be:	84 30       	cpi	r24, 0x04	; 4
     1c0:	c1 f0       	breq	.+48     	; 0x1f2 <task1+0x106>
     1c2:	30 f4       	brcc	.+12     	; 0x1d0 <task1+0xe4>
     1c4:	82 30       	cpi	r24, 0x02	; 2
     1c6:	69 f0       	breq	.+26     	; 0x1e2 <task1+0xf6>
     1c8:	88 f4       	brcc	.+34     	; 0x1ec <task1+0x100>
     1ca:	81 30       	cpi	r24, 0x01	; 1
     1cc:	a9 f5       	brne	.+106    	; 0x238 <task1+0x14c>
     1ce:	06 c0       	rjmp	.+12     	; 0x1dc <task1+0xf0>
     1d0:	86 30       	cpi	r24, 0x06	; 6
     1d2:	b9 f0       	breq	.+46     	; 0x202 <task1+0x116>
     1d4:	88 f0       	brcs	.+34     	; 0x1f8 <task1+0x10c>
     1d6:	87 30       	cpi	r24, 0x07	; 7
     1d8:	79 f5       	brne	.+94     	; 0x238 <task1+0x14c>
     1da:	18 c0       	rjmp	.+48     	; 0x20c <task1+0x120>
					case 1: 
						play(0, 697);
     1dc:	69 eb       	ldi	r22, 0xB9	; 185
     1de:	72 e0       	ldi	r23, 0x02	; 2
     1e0:	02 c0       	rjmp	.+4      	; 0x1e6 <task1+0xfa>
						break;
					case 2: 
						play(0, 770);
     1e2:	62 e0       	ldi	r22, 0x02	; 2
     1e4:	73 e0       	ldi	r23, 0x03	; 3
     1e6:	80 e0       	ldi	r24, 0x00	; 0
     1e8:	90 e0       	ldi	r25, 0x00	; 0
     1ea:	14 c0       	rjmp	.+40     	; 0x214 <task1+0x128>
						break;
					case 3: 
						play(0, 852);
     1ec:	64 e5       	ldi	r22, 0x54	; 84
     1ee:	73 e0       	ldi	r23, 0x03	; 3
     1f0:	fa cf       	rjmp	.-12     	; 0x1e6 <task1+0xfa>
						break;
					case 4: 
						play(0, 941);
     1f2:	6d ea       	ldi	r22, 0xAD	; 173
     1f4:	73 e0       	ldi	r23, 0x03	; 3
     1f6:	f7 cf       	rjmp	.-18     	; 0x1e6 <task1+0xfa>
						break;
					case 5:
						play(1209, 0);
     1f8:	60 e0       	ldi	r22, 0x00	; 0
     1fa:	70 e0       	ldi	r23, 0x00	; 0
     1fc:	89 eb       	ldi	r24, 0xB9	; 185
     1fe:	94 e0       	ldi	r25, 0x04	; 4
     200:	09 c0       	rjmp	.+18     	; 0x214 <task1+0x128>
						break;
					case 6:
						play(1336, 0);
     202:	60 e0       	ldi	r22, 0x00	; 0
     204:	70 e0       	ldi	r23, 0x00	; 0
     206:	88 e3       	ldi	r24, 0x38	; 56
     208:	95 e0       	ldi	r25, 0x05	; 5
     20a:	04 c0       	rjmp	.+8      	; 0x214 <task1+0x128>
						break;
					case 7: 
						play(1477, 0);
     20c:	60 e0       	ldi	r22, 0x00	; 0
     20e:	70 e0       	ldi	r23, 0x00	; 0
     210:	85 ec       	ldi	r24, 0xC5	; 197
     212:	95 e0       	ldi	r25, 0x05	; 5
     214:	0e 94 bc 03 	call	0x778	; 0x778 <play>
						break;
     218:	0f c0       	rjmp	.+30     	; 0x238 <task1+0x14c>
					default:
						break;
				}	
		   	}  
		}
        else PushState=MaybeNoPush;    
     21a:	84 e0       	ldi	r24, 0x04	; 4
     21c:	05 c0       	rjmp	.+10     	; 0x228 <task1+0x13c>
        break;
     case MaybeNoPush:
        if (butnum != 0) PushState=Pushed; 
     21e:	80 91 ee 01 	lds	r24, 0x01EE
     222:	88 23       	and	r24, r24
     224:	21 f0       	breq	.+8      	; 0x22e <task1+0x142>
     226:	83 e0       	ldi	r24, 0x03	; 3
     228:	80 93 fa 01 	sts	0x01FA, r24
     22c:	05 c0       	rjmp	.+10     	; 0x238 <task1+0x14c>
        else {
           PushState=NoPush;
     22e:	81 e0       	ldi	r24, 0x01	; 1
     230:	80 93 fa 01 	sts	0x01FA, r24
           PushFlag=0;
     234:	10 92 ef 01 	sts	0x01EF, r1
        }    
        break;
  	}

	if (PushState == NoPush) {
     238:	80 91 fa 01 	lds	r24, 0x01FA
     23c:	81 30       	cpi	r24, 0x01	; 1
     23e:	11 f4       	brne	.+4      	; 0x244 <task1+0x158>
		//fprintf(stdout, "Depressed...\n\r");
		stop_playing();
     240:	0e 94 41 04 	call	0x882	; 0x882 <stop_playing>
	}	

	if (PushFlag) {
     244:	80 91 ef 01 	lds	r24, 0x01EF
     248:	88 23       	and	r24, r24
     24a:	09 f4       	brne	.+2      	; 0x24e <task1+0x162>
     24c:	91 c0       	rjmp	.+290    	; 0x370 <task1+0x284>
		PushFlag = 0;
     24e:	10 92 ef 01 	sts	0x01EF, r1
		// The * button was pressed. Clear all memory.
		if (butnum == 10) {
     252:	80 91 ee 01 	lds	r24, 0x01EE
     256:	8a 30       	cpi	r24, 0x0A	; 10
     258:	09 f5       	brne	.+66     	; 0x29c <task1+0x1b0>
			fprintf(stdout, "%u\n\r", butnum);
     25a:	1f 92       	push	r1
     25c:	8f 93       	push	r24
     25e:	89 e6       	ldi	r24, 0x69	; 105
     260:	91 e0       	ldi	r25, 0x01	; 1
     262:	9f 93       	push	r25
     264:	8f 93       	push	r24
     266:	80 91 27 04 	lds	r24, 0x0427
     26a:	8f 93       	push	r24
     26c:	80 91 26 04 	lds	r24, 0x0426
     270:	8f 93       	push	r24
     272:	0e 94 55 0a 	call	0x14aa	; 0x14aa <fprintf>
     276:	e4 e8       	ldi	r30, 0x84	; 132
     278:	f1 e0       	ldi	r31, 0x01	; 1
// putchar and getchar are in uart.c
FILE uart_str = FDEV_SETUP_STREAM(uart_putchar, uart_getchar, _FDEV_SETUP_RW);

//******************************* 
//Task 1  
void task1(void) {
     27a:	0f 90       	pop	r0
     27c:	0f 90       	pop	r0
     27e:	0f 90       	pop	r0
     280:	0f 90       	pop	r0
     282:	0f 90       	pop	r0
     284:	0f 90       	pop	r0
		PushFlag = 0;
		// The * button was pressed. Clear all memory.
		if (butnum == 10) {
			fprintf(stdout, "%u\n\r", butnum);
			for (int i = 0; i < 12; i++) {
				mem[i] = 0;
     286:	11 92       	st	Z+, r1
     288:	11 92       	st	Z+, r1
	if (PushFlag) {
		PushFlag = 0;
		// The * button was pressed. Clear all memory.
		if (butnum == 10) {
			fprintf(stdout, "%u\n\r", butnum);
			for (int i = 0; i < 12; i++) {
     28a:	21 e0       	ldi	r18, 0x01	; 1
     28c:	ec 39       	cpi	r30, 0x9C	; 156
     28e:	f2 07       	cpc	r31, r18
     290:	d1 f7       	brne	.-12     	; 0x286 <task1+0x19a>
				mem[i] = 0;
			}
			mem_index = 0;
     292:	10 92 f8 01 	sts	0x01F8, r1
     296:	10 92 f7 01 	sts	0x01F7, r1
     29a:	6a c0       	rjmp	.+212    	; 0x370 <task1+0x284>
		}
		// The # button was pressed. Play all sounds in memory.
		else if (butnum == 12) {
     29c:	8c 30       	cpi	r24, 0x0C	; 12
     29e:	69 f5       	brne	.+90     	; 0x2fa <task1+0x20e>
			fprintf(stdout, "%u\n\r", butnum);
     2a0:	1f 92       	push	r1
     2a2:	8f 93       	push	r24
     2a4:	89 e6       	ldi	r24, 0x69	; 105
     2a6:	91 e0       	ldi	r25, 0x01	; 1
     2a8:	9f 93       	push	r25
     2aa:	8f 93       	push	r24
     2ac:	80 91 27 04 	lds	r24, 0x0427
     2b0:	8f 93       	push	r24
     2b2:	80 91 26 04 	lds	r24, 0x0426
     2b6:	8f 93       	push	r24
     2b8:	0e 94 55 0a 	call	0x14aa	; 0x14aa <fprintf>
     2bc:	c4 e8       	ldi	r28, 0x84	; 132
     2be:	d1 e0       	ldi	r29, 0x01	; 1
// putchar and getchar are in uart.c
FILE uart_str = FDEV_SETUP_STREAM(uart_putchar, uart_getchar, _FDEV_SETUP_RW);

//******************************* 
//Task 1  
void task1(void) {
     2c0:	0f 90       	pop	r0
     2c2:	0f 90       	pop	r0
     2c4:	0f 90       	pop	r0
     2c6:	0f 90       	pop	r0
     2c8:	0f 90       	pop	r0
     2ca:	0f 90       	pop	r0
		}
		// The # button was pressed. Play all sounds in memory.
		else if (butnum == 12) {
			fprintf(stdout, "%u\n\r", butnum);
			for (int i = 0; i < 12; i++) {
				if (mem[i] != 0) {
     2cc:	89 91       	ld	r24, Y+
     2ce:	99 91       	ld	r25, Y+
     2d0:	00 97       	sbiw	r24, 0x00	; 0
     2d2:	71 f0       	breq	.+28     	; 0x2f0 <task1+0x204>
					play(high_freq[mem[i]], low_freq[mem[i]]);
     2d4:	88 0f       	add	r24, r24
     2d6:	99 1f       	adc	r25, r25
     2d8:	fc 01       	movw	r30, r24
     2da:	e2 5f       	subi	r30, 0xF2	; 242
     2dc:	fe 4f       	sbci	r31, 0xFE	; 254
     2de:	60 81       	ld	r22, Z
     2e0:	71 81       	ldd	r23, Z+1	; 0x01
     2e2:	fc 01       	movw	r30, r24
     2e4:	ea 5d       	subi	r30, 0xDA	; 218
     2e6:	fe 4f       	sbci	r31, 0xFE	; 254
     2e8:	80 81       	ld	r24, Z
     2ea:	91 81       	ldd	r25, Z+1	; 0x01
     2ec:	0e 94 bc 03 	call	0x778	; 0x778 <play>
			mem_index = 0;
		}
		// The # button was pressed. Play all sounds in memory.
		else if (butnum == 12) {
			fprintf(stdout, "%u\n\r", butnum);
			for (int i = 0; i < 12; i++) {
     2f0:	81 e0       	ldi	r24, 0x01	; 1
     2f2:	cc 39       	cpi	r28, 0x9C	; 156
     2f4:	d8 07       	cpc	r29, r24
     2f6:	51 f7       	brne	.-44     	; 0x2cc <task1+0x1e0>
     2f8:	3b c0       	rjmp	.+118    	; 0x370 <task1+0x284>
				}
			}
		}
		// A normal button press. 
		else {
			fprintf(stdout, "%u\n\r", butnum);
     2fa:	1f 92       	push	r1
     2fc:	8f 93       	push	r24
     2fe:	89 e6       	ldi	r24, 0x69	; 105
     300:	91 e0       	ldi	r25, 0x01	; 1
     302:	9f 93       	push	r25
     304:	8f 93       	push	r24
     306:	80 91 27 04 	lds	r24, 0x0427
     30a:	8f 93       	push	r24
     30c:	80 91 26 04 	lds	r24, 0x0426
     310:	8f 93       	push	r24
     312:	0e 94 55 0a 	call	0x14aa	; 0x14aa <fprintf>
			if (mem_index < 12) {
     316:	20 91 f7 01 	lds	r18, 0x01F7
     31a:	30 91 f8 01 	lds	r19, 0x01F8
     31e:	0f 90       	pop	r0
     320:	0f 90       	pop	r0
     322:	0f 90       	pop	r0
     324:	0f 90       	pop	r0
     326:	0f 90       	pop	r0
     328:	0f 90       	pop	r0
     32a:	2c 30       	cpi	r18, 0x0C	; 12
     32c:	31 05       	cpc	r19, r1
     32e:	00 f5       	brcc	.+64     	; 0x370 <task1+0x284>
				mem[mem_index] = butnum;
     330:	80 91 ee 01 	lds	r24, 0x01EE
     334:	f9 01       	movw	r30, r18
     336:	ee 0f       	add	r30, r30
     338:	ff 1f       	adc	r31, r31
     33a:	ec 57       	subi	r30, 0x7C	; 124
     33c:	fe 4f       	sbci	r31, 0xFE	; 254
     33e:	80 83       	st	Z, r24
     340:	11 82       	std	Z+1, r1	; 0x01
				mem_index++;
     342:	2f 5f       	subi	r18, 0xFF	; 255
     344:	3f 4f       	sbci	r19, 0xFF	; 255
     346:	30 93 f8 01 	sts	0x01F8, r19
     34a:	20 93 f7 01 	sts	0x01F7, r18
				play(high_freq[butnum], low_freq[butnum]);
     34e:	90 e0       	ldi	r25, 0x00	; 0
     350:	88 0f       	add	r24, r24
     352:	99 1f       	adc	r25, r25
     354:	fc 01       	movw	r30, r24
     356:	e2 5f       	subi	r30, 0xF2	; 242
     358:	fe 4f       	sbci	r31, 0xFE	; 254
     35a:	60 81       	ld	r22, Z
     35c:	71 81       	ldd	r23, Z+1	; 0x01
     35e:	fc 01       	movw	r30, r24
     360:	ea 5d       	subi	r30, 0xDA	; 218
     362:	fe 4f       	sbci	r31, 0xFE	; 254
     364:	80 81       	ld	r24, Z
     366:	91 81       	ldd	r25, Z+1	; 0x01
			}		
		}
	}
} 
     368:	df 91       	pop	r29
     36a:	cf 91       	pop	r28
		else {
			fprintf(stdout, "%u\n\r", butnum);
			if (mem_index < 12) {
				mem[mem_index] = butnum;
				mem_index++;
				play(high_freq[butnum], low_freq[butnum]);
     36c:	0c 94 bc 03 	jmp	0x778	; 0x778 <play>
			}		
		}
	}
} 
     370:	df 91       	pop	r29
     372:	cf 91       	pop	r28
     374:	08 95       	ret

00000376 <initialize>:
 
//Initialization used for the timer interrupts for debouncing
void initialize(void) {
	//set up timer 0 for 1 mSec timebase 
	OCR0A = 249;  		//set the compare re to 250 time ticks
     376:	89 ef       	ldi	r24, 0xF9	; 249
     378:	87 bd       	out	0x27, r24	; 39
	TIMSK0= (1<<OCIE0A);	//turn on timer 0 cmp match ISR 
     37a:	82 e0       	ldi	r24, 0x02	; 2
     37c:	80 93 6e 00 	sts	0x006E, r24
	//set prescalar to divide by 64 
	TCCR0B= 3; //0b00000011;	
     380:	93 e0       	ldi	r25, 0x03	; 3
     382:	95 bd       	out	0x25, r25	; 37
	// turn on clear-on-match
	TCCR0A= (1<<WGM01) ;
     384:	84 bd       	out	0x24, r24	; 36

	//init the task timers
	time1=0;  
     386:	10 92 f3 01 	sts	0x01F3, r1
     38a:	10 92 f2 01 	sts	0x01F2, r1
	// PORT B is an input
	DDRB = 0x00;
     38e:	14 b8       	out	0x04, r1	; 4
	//for no button push
	PushFlag = 0;
     390:	10 92 ef 01 	sts	0x01EF, r1
	//init the state machine
	PushState = NoPush;
     394:	81 e0       	ldi	r24, 0x01	; 1
     396:	80 93 fa 01 	sts	0x01FA, r24

	mem_index = 0;
     39a:	10 92 f8 01 	sts	0x01F8, r1
     39e:	10 92 f7 01 	sts	0x01F7, r1

	init_dtmf();
     3a2:	0e 94 67 03 	call	0x6ce	; 0x6ce <init_dtmf>
	//crank up the ISRs
	sei() ;
     3a6:	78 94       	sei
     3a8:	08 95       	ret

000003aa <uart_init>:
{
#if F_CPU < 2000000UL && defined(U2X)
  UCSR0A = _BV(U2X);             /* improve baud rate error by using 2x clk */
  UBRR0L = (F_CPU / (8UL * UART_BAUD)) - 1;
#else
  UBRR0L = (F_CPU / (16UL * UART_BAUD)) - 1;
     3aa:	87 e6       	ldi	r24, 0x67	; 103
     3ac:	80 93 c4 00 	sts	0x00C4, r24
#endif
  UCSR0B = _BV(TXEN0) | _BV(RXEN0); /* tx/rx enable */
     3b0:	88 e1       	ldi	r24, 0x18	; 24
     3b2:	80 93 c1 00 	sts	0x00C1, r24
     3b6:	08 95       	ret

000003b8 <uart_putchar>:
 * Send character c down the UART Tx, wait until tx holding register
 * is empty.
 */
int
uart_putchar(char c, FILE *stream)
{
     3b8:	cf 93       	push	r28
     3ba:	c8 2f       	mov	r28, r24

  if (c == '\a')
     3bc:	87 30       	cpi	r24, 0x07	; 7
     3be:	49 f4       	brne	.+18     	; 0x3d2 <uart_putchar+0x1a>
    {
      fputs("*ring*\n", stderr);
     3c0:	60 91 28 04 	lds	r22, 0x0428
     3c4:	70 91 29 04 	lds	r23, 0x0429
     3c8:	8c e7       	ldi	r24, 0x7C	; 124
     3ca:	91 e0       	ldi	r25, 0x01	; 1
     3cc:	0e 94 65 0a 	call	0x14ca	; 0x14ca <fputs>
     3d0:	0b c0       	rjmp	.+22     	; 0x3e8 <uart_putchar+0x30>
      return 0;
    }

  if (c == '\n')
     3d2:	8a 30       	cpi	r24, 0x0A	; 10
     3d4:	19 f4       	brne	.+6      	; 0x3dc <uart_putchar+0x24>
    uart_putchar('\r', stream);
     3d6:	8d e0       	ldi	r24, 0x0D	; 13
     3d8:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <uart_putchar>
  loop_until_bit_is_set(UCSR0A, UDRE0);
     3dc:	80 91 c0 00 	lds	r24, 0x00C0
     3e0:	85 ff       	sbrs	r24, 5
     3e2:	fc cf       	rjmp	.-8      	; 0x3dc <uart_putchar+0x24>
  UDR0 = c;
     3e4:	c0 93 c6 00 	sts	0x00C6, r28

  return 0;
}
     3e8:	80 e0       	ldi	r24, 0x00	; 0
     3ea:	90 e0       	ldi	r25, 0x00	; 0
     3ec:	cf 91       	pop	r28
     3ee:	08 95       	ret

000003f0 <uart_getchar>:
 * Successive calls to uart_getchar() will be satisfied from the
 * internal buffer until that buffer is emptied again.
 */
int
uart_getchar(FILE *stream)
{
     3f0:	ef 92       	push	r14
     3f2:	ff 92       	push	r15
     3f4:	0f 93       	push	r16
     3f6:	1f 93       	push	r17
     3f8:	cf 93       	push	r28
     3fa:	df 93       	push	r29
     3fc:	8c 01       	movw	r16, r24
  uint8_t c;
  char *cp, *cp2;
  static char b[RX_BUFSIZE];
  static char *rxp;

  if (rxp == 0)
     3fe:	80 91 9c 01 	lds	r24, 0x019C
     402:	90 91 9d 01 	lds	r25, 0x019D
     406:	89 2b       	or	r24, r25
     408:	09 f0       	breq	.+2      	; 0x40c <uart_getchar+0x1c>
     40a:	a1 c0       	rjmp	.+322    	; 0x54e <uart_getchar+0x15e>
     40c:	ce e9       	ldi	r28, 0x9E	; 158
     40e:	d1 e0       	ldi	r29, 0x01	; 1
    for (cp = b;;)
      {
	loop_until_bit_is_set(UCSR0A, RXC0);
     410:	80 91 c0 00 	lds	r24, 0x00C0
     414:	87 ff       	sbrs	r24, 7
     416:	fc cf       	rjmp	.-8      	; 0x410 <uart_getchar+0x20>
	if (UCSR0A & _BV(FE0))
     418:	80 91 c0 00 	lds	r24, 0x00C0
     41c:	84 fd       	sbrc	r24, 4
     41e:	aa c0       	rjmp	.+340    	; 0x574 <uart_getchar+0x184>
	  return _FDEV_EOF;
	if (UCSR0A & _BV(DOR0))
     420:	80 91 c0 00 	lds	r24, 0x00C0
     424:	83 fd       	sbrc	r24, 3
     426:	a9 c0       	rjmp	.+338    	; 0x57a <uart_getchar+0x18a>
	  return _FDEV_ERR;
	c = UDR0;
     428:	80 91 c6 00 	lds	r24, 0x00C6
	/* behaviour similar to Unix stty ICRNL */
	if (c == '\r')
     42c:	8d 30       	cpi	r24, 0x0D	; 13
     42e:	61 f4       	brne	.+24     	; 0x448 <uart_getchar+0x58>
	  c = '\n';
	if (c == '\n')
	  {
	    *cp = c;
     430:	8a e0       	ldi	r24, 0x0A	; 10
     432:	88 83       	st	Y, r24
	    uart_putchar(c, stream);
     434:	b8 01       	movw	r22, r16
     436:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <uart_putchar>
	    rxp = b;
     43a:	8e e9       	ldi	r24, 0x9E	; 158
     43c:	91 e0       	ldi	r25, 0x01	; 1
     43e:	90 93 9d 01 	sts	0x019D, r25
     442:	80 93 9c 01 	sts	0x019C, r24
	    break;
     446:	83 c0       	rjmp	.+262    	; 0x54e <uart_getchar+0x15e>
	  return _FDEV_ERR;
	c = UDR0;
	/* behaviour similar to Unix stty ICRNL */
	if (c == '\r')
	  c = '\n';
	if (c == '\n')
     448:	8a 30       	cpi	r24, 0x0A	; 10
     44a:	91 f3       	breq	.-28     	; 0x430 <uart_getchar+0x40>
	    *cp = c;
	    uart_putchar(c, stream);
	    rxp = b;
	    break;
	  }
	else if (c == '\t')
     44c:	89 30       	cpi	r24, 0x09	; 9
     44e:	09 f4       	brne	.+2      	; 0x452 <uart_getchar+0x62>
	  c = ' ';
     450:	80 e2       	ldi	r24, 0x20	; 32

	if ((c >= (uint8_t)' ' && c <= (uint8_t)'\x7e') ||
     452:	98 2f       	mov	r25, r24
     454:	90 52       	subi	r25, 0x20	; 32
     456:	9f 35       	cpi	r25, 0x5F	; 95
     458:	10 f0       	brcs	.+4      	; 0x45e <uart_getchar+0x6e>
     45a:	80 3a       	cpi	r24, 0xA0	; 160
     45c:	90 f0       	brcs	.+36     	; 0x482 <uart_getchar+0x92>
	    c >= (uint8_t)'\xa0')
	  {
	    if (cp == b + RX_BUFSIZE - 1)
     45e:	91 e0       	ldi	r25, 0x01	; 1
     460:	cd 3e       	cpi	r28, 0xED	; 237
     462:	d9 07       	cpc	r29, r25
     464:	49 f4       	brne	.+18     	; 0x478 <uart_getchar+0x88>
uart_putchar(char c, FILE *stream)
{

  if (c == '\a')
    {
      fputs("*ring*\n", stderr);
     466:	60 91 28 04 	lds	r22, 0x0428
     46a:	70 91 29 04 	lds	r23, 0x0429
     46e:	8c e7       	ldi	r24, 0x7C	; 124
     470:	91 e0       	ldi	r25, 0x01	; 1
     472:	0e 94 65 0a 	call	0x14ca	; 0x14ca <fputs>
     476:	cc cf       	rjmp	.-104    	; 0x410 <uart_getchar+0x20>
	  {
	    if (cp == b + RX_BUFSIZE - 1)
	      uart_putchar('\a', stream);
	    else
	      {
		*cp++ = c;
     478:	89 93       	st	Y+, r24
		uart_putchar(c, stream);
     47a:	b8 01       	movw	r22, r16
     47c:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <uart_putchar>
     480:	c7 cf       	rjmp	.-114    	; 0x410 <uart_getchar+0x20>
	      }
	    continue;
	  }

	switch (c)
     482:	82 31       	cpi	r24, 0x12	; 18
     484:	29 f1       	breq	.+74     	; 0x4d0 <uart_getchar+0xe0>
     486:	38 f4       	brcc	.+14     	; 0x496 <uart_getchar+0xa6>
     488:	83 30       	cpi	r24, 0x03	; 3
     48a:	09 f4       	brne	.+2      	; 0x48e <uart_getchar+0x9e>
     48c:	76 c0       	rjmp	.+236    	; 0x57a <uart_getchar+0x18a>
     48e:	88 30       	cpi	r24, 0x08	; 8
     490:	09 f0       	breq	.+2      	; 0x494 <uart_getchar+0xa4>
     492:	be cf       	rjmp	.-132    	; 0x410 <uart_getchar+0x20>
     494:	09 c0       	rjmp	.+18     	; 0x4a8 <uart_getchar+0xb8>
     496:	87 31       	cpi	r24, 0x17	; 23
     498:	09 f4       	brne	.+2      	; 0x49c <uart_getchar+0xac>
     49a:	4d c0       	rjmp	.+154    	; 0x536 <uart_getchar+0x146>
     49c:	8f 37       	cpi	r24, 0x7F	; 127
     49e:	21 f0       	breq	.+8      	; 0x4a8 <uart_getchar+0xb8>
     4a0:	85 31       	cpi	r24, 0x15	; 21
     4a2:	09 f0       	breq	.+2      	; 0x4a6 <uart_getchar+0xb6>
     4a4:	b5 cf       	rjmp	.-150    	; 0x410 <uart_getchar+0x20>
     4a6:	34 c0       	rjmp	.+104    	; 0x510 <uart_getchar+0x120>
	  case 'c' & 0x1f:
	    return -1;

	  case '\b':
	  case '\x7f':
	    if (cp > b)
     4a8:	e1 e0       	ldi	r30, 0x01	; 1
     4aa:	ce 39       	cpi	r28, 0x9E	; 158
     4ac:	de 07       	cpc	r29, r30
     4ae:	09 f0       	breq	.+2      	; 0x4b2 <uart_getchar+0xc2>
     4b0:	08 f4       	brcc	.+2      	; 0x4b4 <uart_getchar+0xc4>
     4b2:	ae cf       	rjmp	.-164    	; 0x410 <uart_getchar+0x20>
	      {
		uart_putchar('\b', stream);
     4b4:	b8 01       	movw	r22, r16
     4b6:	88 e0       	ldi	r24, 0x08	; 8
     4b8:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <uart_putchar>
		uart_putchar(' ', stream);
     4bc:	b8 01       	movw	r22, r16
     4be:	80 e2       	ldi	r24, 0x20	; 32
     4c0:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <uart_putchar>
		uart_putchar('\b', stream);
     4c4:	b8 01       	movw	r22, r16
     4c6:	88 e0       	ldi	r24, 0x08	; 8
     4c8:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <uart_putchar>
		cp--;
     4cc:	21 97       	sbiw	r28, 0x01	; 1
     4ce:	a0 cf       	rjmp	.-192    	; 0x410 <uart_getchar+0x20>
	      }
	    break;

	  case 'r' & 0x1f:
	    uart_putchar('\r', stream);
     4d0:	b8 01       	movw	r22, r16
     4d2:	8d e0       	ldi	r24, 0x0D	; 13
     4d4:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <uart_putchar>
	    for (cp2 = b; cp2 < cp; cp2++)
     4d8:	8e e9       	ldi	r24, 0x9E	; 158
     4da:	e8 2e       	mov	r14, r24
     4dc:	81 e0       	ldi	r24, 0x01	; 1
     4de:	f8 2e       	mov	r15, r24
     4e0:	06 c0       	rjmp	.+12     	; 0x4ee <uart_getchar+0xfe>
	      uart_putchar(*cp2, stream);
     4e2:	b8 01       	movw	r22, r16
     4e4:	f7 01       	movw	r30, r14
     4e6:	81 91       	ld	r24, Z+
     4e8:	7f 01       	movw	r14, r30
     4ea:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <uart_putchar>
	      }
	    break;

	  case 'r' & 0x1f:
	    uart_putchar('\r', stream);
	    for (cp2 = b; cp2 < cp; cp2++)
     4ee:	ec 16       	cp	r14, r28
     4f0:	fd 06       	cpc	r15, r29
     4f2:	b8 f3       	brcs	.-18     	; 0x4e2 <uart_getchar+0xf2>
     4f4:	8d cf       	rjmp	.-230    	; 0x410 <uart_getchar+0x20>
	    break;

	  case 'u' & 0x1f:
	    while (cp > b)
	      {
		uart_putchar('\b', stream);
     4f6:	b8 01       	movw	r22, r16
     4f8:	88 e0       	ldi	r24, 0x08	; 8
     4fa:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <uart_putchar>
		uart_putchar(' ', stream);
     4fe:	b8 01       	movw	r22, r16
     500:	80 e2       	ldi	r24, 0x20	; 32
     502:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <uart_putchar>
		uart_putchar('\b', stream);
     506:	b8 01       	movw	r22, r16
     508:	88 e0       	ldi	r24, 0x08	; 8
     50a:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <uart_putchar>
		cp--;
     50e:	21 97       	sbiw	r28, 0x01	; 1
	    for (cp2 = b; cp2 < cp; cp2++)
	      uart_putchar(*cp2, stream);
	    break;

	  case 'u' & 0x1f:
	    while (cp > b)
     510:	f1 e0       	ldi	r31, 0x01	; 1
     512:	ce 39       	cpi	r28, 0x9E	; 158
     514:	df 07       	cpc	r29, r31
     516:	09 f0       	breq	.+2      	; 0x51a <uart_getchar+0x12a>
     518:	70 f7       	brcc	.-36     	; 0x4f6 <uart_getchar+0x106>
     51a:	7a cf       	rjmp	.-268    	; 0x410 <uart_getchar+0x20>
	    break;

	  case 'w' & 0x1f:
	    while (cp > b && cp[-1] != ' ')
	      {
		uart_putchar('\b', stream);
     51c:	b8 01       	movw	r22, r16
     51e:	88 e0       	ldi	r24, 0x08	; 8
     520:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <uart_putchar>
		uart_putchar(' ', stream);
     524:	b8 01       	movw	r22, r16
     526:	80 e2       	ldi	r24, 0x20	; 32
     528:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <uart_putchar>
		uart_putchar('\b', stream);
     52c:	b8 01       	movw	r22, r16
     52e:	88 e0       	ldi	r24, 0x08	; 8
     530:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <uart_putchar>
		cp--;
     534:	e7 01       	movw	r28, r14
		cp--;
	      }
	    break;

	  case 'w' & 0x1f:
	    while (cp > b && cp[-1] != ' ')
     536:	81 e0       	ldi	r24, 0x01	; 1
     538:	ce 39       	cpi	r28, 0x9E	; 158
     53a:	d8 07       	cpc	r29, r24
     53c:	09 f0       	breq	.+2      	; 0x540 <uart_getchar+0x150>
     53e:	08 f4       	brcc	.+2      	; 0x542 <uart_getchar+0x152>
     540:	67 cf       	rjmp	.-306    	; 0x410 <uart_getchar+0x20>
     542:	fe 01       	movw	r30, r28
     544:	82 91       	ld	r24, -Z
     546:	7f 01       	movw	r14, r30
     548:	80 32       	cpi	r24, 0x20	; 32
     54a:	41 f7       	brne	.-48     	; 0x51c <uart_getchar+0x12c>
     54c:	61 cf       	rjmp	.-318    	; 0x410 <uart_getchar+0x20>
	      }
	    break;
	  }
      }

  c = *rxp++;
     54e:	e0 91 9c 01 	lds	r30, 0x019C
     552:	f0 91 9d 01 	lds	r31, 0x019D
     556:	20 81       	ld	r18, Z
  if (c == '\n')
     558:	2a 30       	cpi	r18, 0x0A	; 10
     55a:	31 f0       	breq	.+12     	; 0x568 <uart_getchar+0x178>
	      }
	    break;
	  }
      }

  c = *rxp++;
     55c:	31 96       	adiw	r30, 0x01	; 1
     55e:	f0 93 9d 01 	sts	0x019D, r31
     562:	e0 93 9c 01 	sts	0x019C, r30
     566:	04 c0       	rjmp	.+8      	; 0x570 <uart_getchar+0x180>
  if (c == '\n')
    rxp = 0;
     568:	10 92 9d 01 	sts	0x019D, r1
     56c:	10 92 9c 01 	sts	0x019C, r1

  return c;
     570:	30 e0       	ldi	r19, 0x00	; 0
     572:	05 c0       	rjmp	.+10     	; 0x57e <uart_getchar+0x18e>
  if (rxp == 0)
    for (cp = b;;)
      {
	loop_until_bit_is_set(UCSR0A, RXC0);
	if (UCSR0A & _BV(FE0))
	  return _FDEV_EOF;
     574:	2e ef       	ldi	r18, 0xFE	; 254
     576:	3f ef       	ldi	r19, 0xFF	; 255
     578:	02 c0       	rjmp	.+4      	; 0x57e <uart_getchar+0x18e>
	  }

	switch (c)
	  {
	  case 'c' & 0x1f:
	    return -1;
     57a:	2f ef       	ldi	r18, 0xFF	; 255
     57c:	3f ef       	ldi	r19, 0xFF	; 255
  c = *rxp++;
  if (c == '\n')
    rxp = 0;

  return c;
}
     57e:	c9 01       	movw	r24, r18
     580:	df 91       	pop	r29
     582:	cf 91       	pop	r28
     584:	1f 91       	pop	r17
     586:	0f 91       	pop	r16
     588:	ff 90       	pop	r15
     58a:	ef 90       	pop	r14
     58c:	08 95       	ret

0000058e <__vector_18>:
volatile unsigned long accumulator ;
volatile unsigned char changed;


volatile unsigned long increment;
ISR( TIMER0_OVF_vect){
     58e:	1f 92       	push	r1
     590:	0f 92       	push	r0
     592:	0f b6       	in	r0, 0x3f	; 63
     594:	0f 92       	push	r0
     596:	11 24       	eor	r1, r1
     598:	0b b6       	in	r0, 0x3b	; 59
     59a:	0f 92       	push	r0
     59c:	2f 93       	push	r18
     59e:	3f 93       	push	r19
     5a0:	4f 93       	push	r20
     5a2:	5f 93       	push	r21
     5a4:	6f 93       	push	r22
     5a6:	7f 93       	push	r23
     5a8:	8f 93       	push	r24
     5aa:	9f 93       	push	r25
     5ac:	af 93       	push	r26
     5ae:	bf 93       	push	r27
     5b0:	cf 93       	push	r28
     5b2:	df 93       	push	r29
     5b4:	ef 93       	push	r30
     5b6:	ff 93       	push	r31
	//accumulator = accumulator + increment ;
	//highbyte = (char)(accumulator >> 24) ;
	
	// output the wavefrom sample
	//OCR0A = 128 + ((sineTable[highbyte] * rampTable[rampCount])>>7) ;
	changed = TRUE;
     5b8:	81 e0       	ldi	r24, 0x01	; 1
     5ba:	80 93 11 04 	sts	0x0411, r24


	OCR0A = 128 + 
	   ( (
	   	   (sineTable[(accumulator_a >> 24)] + sineTable[(accumulator_b >> 24)]) * rampTable[rampCount]
     5be:	40 91 09 04 	lds	r20, 0x0409
     5c2:	50 91 0a 04 	lds	r21, 0x040A
     5c6:	60 91 0b 04 	lds	r22, 0x040B
     5ca:	70 91 0c 04 	lds	r23, 0x040C
     5ce:	80 91 14 04 	lds	r24, 0x0414
     5d2:	90 91 15 04 	lds	r25, 0x0415
     5d6:	a0 91 16 04 	lds	r26, 0x0416
     5da:	b0 91 17 04 	lds	r27, 0x0417
     5de:	e0 91 12 04 	lds	r30, 0x0412
     5e2:	f0 91 13 04 	lds	r31, 0x0413
     5e6:	47 2f       	mov	r20, r23
     5e8:	55 27       	eor	r21, r21
     5ea:	66 27       	eor	r22, r22
     5ec:	77 27       	eor	r23, r23
     5ee:	ea 01       	movw	r28, r20
     5f0:	c7 5f       	subi	r28, 0xF7	; 247
     5f2:	dc 4f       	sbci	r29, 0xFC	; 252
     5f4:	28 81       	ld	r18, Y
     5f6:	8b 2f       	mov	r24, r27
     5f8:	99 27       	eor	r25, r25
     5fa:	aa 27       	eor	r26, r26
     5fc:	bb 27       	eor	r27, r27
     5fe:	dc 01       	movw	r26, r24
     600:	a7 5f       	subi	r26, 0xF7	; 247
     602:	bc 4f       	sbci	r27, 0xFC	; 252
     604:	8c 91       	ld	r24, X
     606:	99 27       	eor	r25, r25
     608:	87 fd       	sbrc	r24, 7
     60a:	90 95       	com	r25
     60c:	82 0f       	add	r24, r18
     60e:	91 1d       	adc	r25, r1
     610:	27 fd       	sbrc	r18, 7
     612:	9a 95       	dec	r25
     614:	e0 50       	subi	r30, 0x00	; 0
     616:	fe 4f       	sbci	r31, 0xFE	; 254
     618:	40 81       	ld	r20, Z
     61a:	48 9f       	mul	r20, r24
     61c:	90 01       	movw	r18, r0
     61e:	49 9f       	mul	r20, r25
     620:	30 0d       	add	r19, r0
     622:	11 24       	eor	r1, r1
	// output the wavefrom sample
	//OCR0A = 128 + ((sineTable[highbyte] * rampTable[rampCount])>>7) ;
	changed = TRUE;


	OCR0A = 128 + 
     624:	83 2f       	mov	r24, r19
     626:	80 58       	subi	r24, 0x80	; 128
     628:	87 bd       	out	0x27, r24	; 39
	   ( (
	   	   (sineTable[(accumulator_a >> 24)] + sineTable[(accumulator_b >> 24)]) * rampTable[rampCount]
	   	 ) >> 8
	   );
	accumulator_a += increment_a;
     62a:	80 91 09 04 	lds	r24, 0x0409
     62e:	90 91 0a 04 	lds	r25, 0x040A
     632:	a0 91 0b 04 	lds	r26, 0x040B
     636:	b0 91 0c 04 	lds	r27, 0x040C
     63a:	40 91 fc 01 	lds	r20, 0x01FC
     63e:	50 91 fd 01 	lds	r21, 0x01FD
     642:	60 91 fe 01 	lds	r22, 0x01FE
     646:	70 91 ff 01 	lds	r23, 0x01FF
     64a:	84 0f       	add	r24, r20
     64c:	95 1f       	adc	r25, r21
     64e:	a6 1f       	adc	r26, r22
     650:	b7 1f       	adc	r27, r23
     652:	80 93 09 04 	sts	0x0409, r24
     656:	90 93 0a 04 	sts	0x040A, r25
     65a:	a0 93 0b 04 	sts	0x040B, r26
     65e:	b0 93 0c 04 	sts	0x040C, r27
	accumulator_b += increment_b;
     662:	80 91 14 04 	lds	r24, 0x0414
     666:	90 91 15 04 	lds	r25, 0x0415
     66a:	a0 91 16 04 	lds	r26, 0x0416
     66e:	b0 91 17 04 	lds	r27, 0x0417
     672:	40 91 1d 04 	lds	r20, 0x041D
     676:	50 91 1e 04 	lds	r21, 0x041E
     67a:	60 91 1f 04 	lds	r22, 0x041F
     67e:	70 91 20 04 	lds	r23, 0x0420
     682:	84 0f       	add	r24, r20
     684:	95 1f       	adc	r25, r21
     686:	a6 1f       	adc	r26, r22
     688:	b7 1f       	adc	r27, r23
     68a:	80 93 14 04 	sts	0x0414, r24
     68e:	90 93 15 04 	sts	0x0415, r25
     692:	a0 93 16 04 	sts	0x0416, r26
     696:	b0 93 17 04 	sts	0x0417, r27
	//generates a 1 ms timebase
	count--;	
     69a:	80 91 f9 01 	lds	r24, 0x01F9
     69e:	81 50       	subi	r24, 0x01	; 1
     6a0:	80 93 f9 01 	sts	0x01F9, r24
}
     6a4:	ff 91       	pop	r31
     6a6:	ef 91       	pop	r30
     6a8:	df 91       	pop	r29
     6aa:	cf 91       	pop	r28
     6ac:	bf 91       	pop	r27
     6ae:	af 91       	pop	r26
     6b0:	9f 91       	pop	r25
     6b2:	8f 91       	pop	r24
     6b4:	7f 91       	pop	r23
     6b6:	6f 91       	pop	r22
     6b8:	5f 91       	pop	r21
     6ba:	4f 91       	pop	r20
     6bc:	3f 91       	pop	r19
     6be:	2f 91       	pop	r18
     6c0:	0f 90       	pop	r0
     6c2:	0b be       	out	0x3b, r0	; 59
     6c4:	0f 90       	pop	r0
     6c6:	0f be       	out	0x3f, r0	; 63
     6c8:	0f 90       	pop	r0
     6ca:	1f 90       	pop	r1
     6cc:	18 95       	reti

000006ce <init_dtmf>:


void init_dtmf(){
     6ce:	ef 92       	push	r14
     6d0:	ff 92       	push	r15
     6d2:	0f 93       	push	r16
     6d4:	1f 93       	push	r17
     6d6:	cf 93       	push	r28
     6d8:	df 93       	push	r29
	DDRB = 0;
     6da:	14 b8       	out	0x04, r1	; 4
	DDRB |= OUTPUT_PIN;
     6dc:	23 9a       	sbi	0x04, 3	; 4
     6de:	59 e0       	ldi	r21, 0x09	; 9
     6e0:	e5 2e       	mov	r14, r21
     6e2:	53 e0       	ldi	r21, 0x03	; 3
     6e4:	f5 2e       	mov	r15, r21
     6e6:	00 e0       	ldi	r16, 0x00	; 0
     6e8:	12 e0       	ldi	r17, 0x02	; 2
	int i;
	for (i=0; i<256; i++){
     6ea:	c0 e0       	ldi	r28, 0x00	; 0
     6ec:	d0 e0       	ldi	r29, 0x00	; 0
		sineTable[i] = (char)(127.0 * sin(6.283*((float)i)/256.0)) ;
     6ee:	be 01       	movw	r22, r28
     6f0:	88 27       	eor	r24, r24
     6f2:	77 fd       	sbrc	r23, 7
     6f4:	80 95       	com	r24
     6f6:	98 2f       	mov	r25, r24
     6f8:	0e 94 89 07 	call	0xf12	; 0xf12 <__floatsisf>
     6fc:	26 e5       	ldi	r18, 0x56	; 86
     6fe:	3e e0       	ldi	r19, 0x0E	; 14
     700:	49 ec       	ldi	r20, 0xC9	; 201
     702:	50 e4       	ldi	r21, 0x40	; 64
     704:	0e 94 75 06 	call	0xcea	; 0xcea <__mulsf3>
     708:	20 e0       	ldi	r18, 0x00	; 0
     70a:	30 e0       	ldi	r19, 0x00	; 0
     70c:	40 e8       	ldi	r20, 0x80	; 128
     70e:	5b e3       	ldi	r21, 0x3B	; 59
     710:	0e 94 75 06 	call	0xcea	; 0xcea <__mulsf3>
     714:	0e 94 90 0a 	call	0x1520	; 0x1520 <sin>
     718:	20 e0       	ldi	r18, 0x00	; 0
     71a:	30 e0       	ldi	r19, 0x00	; 0
     71c:	4e ef       	ldi	r20, 0xFE	; 254
     71e:	52 e4       	ldi	r21, 0x42	; 66
     720:	0e 94 75 06 	call	0xcea	; 0xcea <__mulsf3>
     724:	0e 94 90 04 	call	0x920	; 0x920 <__fixunssfsi>
     728:	f7 01       	movw	r30, r14
     72a:	61 93       	st	Z+, r22
     72c:	7f 01       	movw	r14, r30
		// the following table needs 
		// rampTable[0]=0 and rampTable[255]=127
		rampTable[i] = i>>1 ;
     72e:	ce 01       	movw	r24, r28
     730:	95 95       	asr	r25
     732:	87 95       	ror	r24
     734:	f8 01       	movw	r30, r16
     736:	81 93       	st	Z+, r24
     738:	8f 01       	movw	r16, r30

void init_dtmf(){
	DDRB = 0;
	DDRB |= OUTPUT_PIN;
	int i;
	for (i=0; i<256; i++){
     73a:	21 96       	adiw	r28, 0x01	; 1
     73c:	c1 15       	cp	r28, r1
     73e:	f1 e0       	ldi	r31, 0x01	; 1
     740:	df 07       	cpc	r29, r31
     742:	a9 f6       	brne	.-86     	; 0x6ee <init_dtmf+0x20>
		sineTable[i] = (char)(127.0 * sin(6.283*((float)i)/256.0)) ;
		// the following table needs 
		// rampTable[0]=0 and rampTable[255]=127
		rampTable[i] = i>>1 ;
	}
	time = 0;
     744:	10 92 f5 01 	sts	0x01F5, r1
     748:	10 92 f4 01 	sts	0x01F4, r1

	// TCCR0B = 0;
	// //set divider to 1, run T0 at 16 MHz 
	// TCCR0B |= T0_CS00;
	TCCR0B = 1;
     74c:	81 e0       	ldi	r24, 0x01	; 1
     74e:	85 bd       	out	0x25, r24	; 37
	TIMSK0 = 0;
     750:	10 92 6e 00 	sts	0x006E, r1
	TIMSK0 |= TIMER0_OVERFLOW_INTERRUPT_ENABLE;
     754:	80 91 6e 00 	lds	r24, 0x006E
     758:	81 60       	ori	r24, 0x01	; 1
     75a:	80 93 6e 00 	sts	0x006E, r24
	//turn on fast PWM and OC0A - output 
	TCCR0A = 0;
     75e:	14 bc       	out	0x24, r1	; 36
	TCCR0A = (1<<COM0A0) | (1<<COM0A1) | (1<<WGM00) | (1<<WGM01) ; 
     760:	83 ec       	ldi	r24, 0xC3	; 195
     762:	84 bd       	out	0x24, r24	; 36

	//TCCR0A |= WAVE_GEN_M00 + WAVE_GEN_M01 + COMPARE_MATCH_OUTPUT_A0 + COMPARE_MATCH_OUTPUT_A1; 
	OCR0A = 128;
     764:	80 e8       	ldi	r24, 0x80	; 128
     766:	87 bd       	out	0x27, r24	; 39
	//increment = INCREMENT_941;
	//increment_a = INCREMENT_941;
	//increment_b = INCREMENT_941;
	sei();
     768:	78 94       	sei
}
     76a:	df 91       	pop	r29
     76c:	cf 91       	pop	r28
     76e:	1f 91       	pop	r17
     770:	0f 91       	pop	r16
     772:	ff 90       	pop	r15
     774:	ef 90       	pop	r14
     776:	08 95       	ret

00000778 <play>:

//plays fA and fB for a duration of duration ms
void play(int fA, int fB){
	//if( !is_playing ){
		//is_playing = TRUE;
		switch( fA){
     778:	89 3b       	cpi	r24, 0xB9	; 185
     77a:	24 e0       	ldi	r18, 0x04	; 4
     77c:	92 07       	cpc	r25, r18
     77e:	89 f0       	breq	.+34     	; 0x7a2 <play+0x2a>
     780:	44 f4       	brge	.+16     	; 0x792 <play+0x1a>
     782:	89 3b       	cpi	r24, 0xB9	; 185
     784:	22 e0       	ldi	r18, 0x02	; 2
     786:	92 07       	cpc	r25, r18
     788:	19 f1       	breq	.+70     	; 0x7d0 <play+0x58>
     78a:	8d 3a       	cpi	r24, 0xAD	; 173
     78c:	93 40       	sbci	r25, 0x03	; 3
     78e:	51 f5       	brne	.+84     	; 0x7e4 <play+0x6c>
     790:	24 c0       	rjmp	.+72     	; 0x7da <play+0x62>
     792:	88 33       	cpi	r24, 0x38	; 56
     794:	25 e0       	ldi	r18, 0x05	; 5
     796:	92 07       	cpc	r25, r18
     798:	49 f0       	breq	.+18     	; 0x7ac <play+0x34>
     79a:	85 3c       	cpi	r24, 0xC5	; 197
     79c:	95 40       	sbci	r25, 0x05	; 5
     79e:	11 f5       	brne	.+68     	; 0x7e4 <play+0x6c>
     7a0:	12 c0       	rjmp	.+36     	; 0x7c6 <play+0x4e>
			case 1209: increment_a = INCREMENT_1209; break;
     7a2:	87 e3       	ldi	r24, 0x37	; 55
     7a4:	98 eb       	ldi	r25, 0xB8	; 184
     7a6:	a3 ef       	ldi	r26, 0xF3	; 243
     7a8:	b4 e0       	ldi	r27, 0x04	; 4
     7aa:	04 c0       	rjmp	.+8      	; 0x7b4 <play+0x3c>
			case 1336: increment_a = INCREMENT_1336; break;
     7ac:	88 e4       	ldi	r24, 0x48	; 72
     7ae:	93 ee       	ldi	r25, 0xE3	; 227
     7b0:	a8 e7       	ldi	r26, 0x78	; 120
     7b2:	b5 e0       	ldi	r27, 0x05	; 5
     7b4:	80 93 fc 01 	sts	0x01FC, r24
     7b8:	90 93 fd 01 	sts	0x01FD, r25
     7bc:	a0 93 fe 01 	sts	0x01FE, r26
     7c0:	b0 93 ff 01 	sts	0x01FF, r27
     7c4:	17 c0       	rjmp	.+46     	; 0x7f4 <play+0x7c>
			case 1477: increment_a = INCREMENT_1477; break;
     7c6:	8b e6       	ldi	r24, 0x6B	; 107
     7c8:	9c eb       	ldi	r25, 0xBC	; 188
     7ca:	ac e0       	ldi	r26, 0x0C	; 12
     7cc:	b6 e0       	ldi	r27, 0x06	; 6
     7ce:	f2 cf       	rjmp	.-28     	; 0x7b4 <play+0x3c>
			case 697:  increment_a = INCREMENT_697; break;
     7d0:	87 e3       	ldi	r24, 0x37	; 55
     7d2:	9a ed       	ldi	r25, 0xDA	; 218
     7d4:	aa ed       	ldi	r26, 0xDA	; 218
     7d6:	b2 e0       	ldi	r27, 0x02	; 2
     7d8:	ed cf       	rjmp	.-38     	; 0x7b4 <play+0x3c>
			case 941: increment_a = INCREMENT_941; break;
     7da:	83 e0       	ldi	r24, 0x03	; 3
     7dc:	94 eb       	ldi	r25, 0xB4	; 180
     7de:	aa ed       	ldi	r26, 0xDA	; 218
     7e0:	b3 e0       	ldi	r27, 0x03	; 3
     7e2:	e8 cf       	rjmp	.-48     	; 0x7b4 <play+0x3c>
			default: increment_a = 0; break;
     7e4:	10 92 fc 01 	sts	0x01FC, r1
     7e8:	10 92 fd 01 	sts	0x01FD, r1
     7ec:	10 92 fe 01 	sts	0x01FE, r1
     7f0:	10 92 ff 01 	sts	0x01FF, r1
		}

		switch ( fB) {
     7f4:	64 35       	cpi	r22, 0x54	; 84
     7f6:	83 e0       	ldi	r24, 0x03	; 3
     7f8:	78 07       	cpc	r23, r24
     7fa:	d9 f0       	breq	.+54     	; 0x832 <play+0xba>
     7fc:	44 f4       	brge	.+16     	; 0x80e <play+0x96>
     7fe:	69 3b       	cpi	r22, 0xB9	; 185
     800:	82 e0       	ldi	r24, 0x02	; 2
     802:	78 07       	cpc	r23, r24
     804:	61 f0       	breq	.+24     	; 0x81e <play+0xa6>
     806:	62 30       	cpi	r22, 0x02	; 2
     808:	73 40       	sbci	r23, 0x03	; 3
     80a:	91 f5       	brne	.+100    	; 0x870 <play+0xf8>
     80c:	0d c0       	rjmp	.+26     	; 0x828 <play+0xb0>
     80e:	6d 3a       	cpi	r22, 0xAD	; 173
     810:	83 e0       	ldi	r24, 0x03	; 3
     812:	78 07       	cpc	r23, r24
     814:	99 f0       	breq	.+38     	; 0x83c <play+0xc4>
     816:	69 3b       	cpi	r22, 0xB9	; 185
     818:	74 40       	sbci	r23, 0x04	; 4
     81a:	51 f5       	brne	.+84     	; 0x870 <play+0xf8>
     81c:	1c c0       	rjmp	.+56     	; 0x856 <play+0xde>
			case 697: increment_b = INCREMENT_697; break;
     81e:	87 e3       	ldi	r24, 0x37	; 55
     820:	9a ed       	ldi	r25, 0xDA	; 218
     822:	aa ed       	ldi	r26, 0xDA	; 218
     824:	b2 e0       	ldi	r27, 0x02	; 2
     826:	0e c0       	rjmp	.+28     	; 0x844 <play+0xcc>
			case 770: increment_b = INCREMENT_770; break;
     828:	8e ed       	ldi	r24, 0xDE	; 222
     82a:	95 e6       	ldi	r25, 0x65	; 101
     82c:	a7 e2       	ldi	r26, 0x27	; 39
     82e:	b3 e0       	ldi	r27, 0x03	; 3
     830:	09 c0       	rjmp	.+18     	; 0x844 <play+0xcc>
			case 852: increment_b = INCREMENT_852; break;
     832:	8c e6       	ldi	r24, 0x6C	; 108
     834:	91 e6       	ldi	r25, 0x61	; 97
     836:	ad e7       	ldi	r26, 0x7D	; 125
     838:	b3 e0       	ldi	r27, 0x03	; 3
     83a:	04 c0       	rjmp	.+8      	; 0x844 <play+0xcc>
			case 941: increment_b = INCREMENT_941; break;
     83c:	83 e0       	ldi	r24, 0x03	; 3
     83e:	94 eb       	ldi	r25, 0xB4	; 180
     840:	aa ed       	ldi	r26, 0xDA	; 218
     842:	b3 e0       	ldi	r27, 0x03	; 3
     844:	80 93 1d 04 	sts	0x041D, r24
     848:	90 93 1e 04 	sts	0x041E, r25
     84c:	a0 93 1f 04 	sts	0x041F, r26
     850:	b0 93 20 04 	sts	0x0420, r27
     854:	08 95       	ret
			case 1209: increment_a = INCREMENT_1209; break;
     856:	87 e3       	ldi	r24, 0x37	; 55
     858:	98 eb       	ldi	r25, 0xB8	; 184
     85a:	a3 ef       	ldi	r26, 0xF3	; 243
     85c:	b4 e0       	ldi	r27, 0x04	; 4
     85e:	80 93 fc 01 	sts	0x01FC, r24
     862:	90 93 fd 01 	sts	0x01FD, r25
     866:	a0 93 fe 01 	sts	0x01FE, r26
     86a:	b0 93 ff 01 	sts	0x01FF, r27
     86e:	08 95       	ret
			default: increment_b = 0; break;
     870:	10 92 1d 04 	sts	0x041D, r1
     874:	10 92 1e 04 	sts	0x041E, r1
     878:	10 92 1f 04 	sts	0x041F, r1
     87c:	10 92 20 04 	sts	0x0420, r1
     880:	08 95       	ret

00000882 <stop_playing>:


}

void stop_playing(){
	is_playing = FALSE;
     882:	10 92 fb 01 	sts	0x01FB, r1
	sample = 0;
     886:	10 92 23 04 	sts	0x0423, r1
     88a:	10 92 22 04 	sts	0x0422, r1
	rampCount = 0;
     88e:	10 92 13 04 	sts	0x0413, r1
     892:	10 92 12 04 	sts	0x0412, r1
	increment_a = increment_b = 0;
     896:	10 92 1d 04 	sts	0x041D, r1
     89a:	10 92 1e 04 	sts	0x041E, r1
     89e:	10 92 1f 04 	sts	0x041F, r1
     8a2:	10 92 20 04 	sts	0x0420, r1
     8a6:	10 92 fc 01 	sts	0x01FC, r1
     8aa:	10 92 fd 01 	sts	0x01FD, r1
     8ae:	10 92 fe 01 	sts	0x01FE, r1
     8b2:	10 92 ff 01 	sts	0x01FF, r1
	accumulator_a = accumulator_b = 0;
     8b6:	10 92 14 04 	sts	0x0414, r1
     8ba:	10 92 15 04 	sts	0x0415, r1
     8be:	10 92 16 04 	sts	0x0416, r1
     8c2:	10 92 17 04 	sts	0x0417, r1
     8c6:	10 92 09 04 	sts	0x0409, r1
     8ca:	10 92 0a 04 	sts	0x040A, r1
     8ce:	10 92 0b 04 	sts	0x040B, r1
     8d2:	10 92 0c 04 	sts	0x040C, r1
     8d6:	08 95       	ret

000008d8 <update_status_variables>:
}


void update_status_variables(){
	if(changed == TRUE){
     8d8:	80 91 11 04 	lds	r24, 0x0411
     8dc:	81 30       	cpi	r24, 0x01	; 1
     8de:	f9 f4       	brne	.+62     	; 0x91e <update_status_variables+0x46>
		changed = FALSE;
     8e0:	10 92 11 04 	sts	0x0411, r1

		if (PushState == Pushed && rampCount < 255) {
     8e4:	80 91 fa 01 	lds	r24, 0x01FA
     8e8:	83 30       	cpi	r24, 0x03	; 3
     8ea:	41 f4       	brne	.+16     	; 0x8fc <update_status_variables+0x24>
     8ec:	80 91 12 04 	lds	r24, 0x0412
     8f0:	90 91 13 04 	lds	r25, 0x0413
     8f4:	8f 3f       	cpi	r24, 0xFF	; 255
     8f6:	91 05       	cpc	r25, r1
     8f8:	90 f4       	brcc	.+36     	; 0x91e <update_status_variables+0x46>
     8fa:	08 c0       	rjmp	.+16     	; 0x90c <update_status_variables+0x34>
			rampCount++;
		}
		if (PushState == NoPush && rampCount > 0 ) {
     8fc:	81 30       	cpi	r24, 0x01	; 1
     8fe:	79 f4       	brne	.+30     	; 0x91e <update_status_variables+0x46>
     900:	80 91 12 04 	lds	r24, 0x0412
     904:	90 91 13 04 	lds	r25, 0x0413
     908:	89 2b       	or	r24, r25
     90a:	49 f0       	breq	.+18     	; 0x91e <update_status_variables+0x46>
			rampCount++;
     90c:	80 91 12 04 	lds	r24, 0x0412
     910:	90 91 13 04 	lds	r25, 0x0413
     914:	01 96       	adiw	r24, 0x01	; 1
     916:	90 93 13 04 	sts	0x0413, r25
     91a:	80 93 12 04 	sts	0x0412, r24
     91e:	08 95       	ret

00000920 <__fixunssfsi>:
     920:	cf 92       	push	r12
     922:	df 92       	push	r13
     924:	ef 92       	push	r14
     926:	ff 92       	push	r15
     928:	0f 93       	push	r16
     92a:	1f 93       	push	r17
     92c:	6b 01       	movw	r12, r22
     92e:	7c 01       	movw	r14, r24
     930:	20 e0       	ldi	r18, 0x00	; 0
     932:	30 e0       	ldi	r19, 0x00	; 0
     934:	40 e0       	ldi	r20, 0x00	; 0
     936:	5f e4       	ldi	r21, 0x4F	; 79
     938:	0e 94 5a 07 	call	0xeb4	; 0xeb4 <__gesf2>
     93c:	87 fd       	sbrc	r24, 7
     93e:	0e c0       	rjmp	.+28     	; 0x95c <__fixunssfsi+0x3c>
     940:	20 e0       	ldi	r18, 0x00	; 0
     942:	30 e0       	ldi	r19, 0x00	; 0
     944:	40 e0       	ldi	r20, 0x00	; 0
     946:	5f e4       	ldi	r21, 0x4F	; 79
     948:	c7 01       	movw	r24, r14
     94a:	b6 01       	movw	r22, r12
     94c:	0e 94 45 06 	call	0xc8a	; 0xc8a <__subsf3>
     950:	0e 94 e5 07 	call	0xfca	; 0xfca <__fixsfsi>
     954:	8b 01       	movw	r16, r22
     956:	9c 01       	movw	r18, r24
     958:	30 58       	subi	r19, 0x80	; 128
     95a:	06 c0       	rjmp	.+12     	; 0x968 <__fixunssfsi+0x48>
     95c:	c7 01       	movw	r24, r14
     95e:	b6 01       	movw	r22, r12
     960:	0e 94 e5 07 	call	0xfca	; 0xfca <__fixsfsi>
     964:	8b 01       	movw	r16, r22
     966:	9c 01       	movw	r18, r24
     968:	b8 01       	movw	r22, r16
     96a:	c9 01       	movw	r24, r18
     96c:	1f 91       	pop	r17
     96e:	0f 91       	pop	r16
     970:	ff 90       	pop	r15
     972:	ef 90       	pop	r14
     974:	df 90       	pop	r13
     976:	cf 90       	pop	r12
     978:	08 95       	ret

0000097a <_fpadd_parts>:
     97a:	a4 e0       	ldi	r26, 0x04	; 4
     97c:	b0 e0       	ldi	r27, 0x00	; 0
     97e:	e3 ec       	ldi	r30, 0xC3	; 195
     980:	f4 e0       	ldi	r31, 0x04	; 4
     982:	0c 94 20 0a 	jmp	0x1440	; 0x1440 <__prologue_saves__+0x4>
     986:	7c 01       	movw	r14, r24
     988:	6a 01       	movw	r12, r20
     98a:	fc 01       	movw	r30, r24
     98c:	80 81       	ld	r24, Z
     98e:	82 30       	cpi	r24, 0x02	; 2
     990:	08 f4       	brcc	.+2      	; 0x994 <_fpadd_parts+0x1a>
     992:	4a c1       	rjmp	.+660    	; 0xc28 <_fpadd_parts+0x2ae>
     994:	fb 01       	movw	r30, r22
     996:	90 81       	ld	r25, Z
     998:	92 30       	cpi	r25, 0x02	; 2
     99a:	08 f4       	brcc	.+2      	; 0x99e <_fpadd_parts+0x24>
     99c:	42 c1       	rjmp	.+644    	; 0xc22 <_fpadd_parts+0x2a8>
     99e:	84 30       	cpi	r24, 0x04	; 4
     9a0:	79 f4       	brne	.+30     	; 0x9c0 <_fpadd_parts+0x46>
     9a2:	94 30       	cpi	r25, 0x04	; 4
     9a4:	09 f0       	breq	.+2      	; 0x9a8 <_fpadd_parts+0x2e>
     9a6:	40 c1       	rjmp	.+640    	; 0xc28 <_fpadd_parts+0x2ae>
     9a8:	f7 01       	movw	r30, r14
     9aa:	91 81       	ldd	r25, Z+1	; 0x01
     9ac:	fb 01       	movw	r30, r22
     9ae:	81 81       	ldd	r24, Z+1	; 0x01
     9b0:	98 17       	cp	r25, r24
     9b2:	09 f4       	brne	.+2      	; 0x9b6 <_fpadd_parts+0x3c>
     9b4:	39 c1       	rjmp	.+626    	; 0xc28 <_fpadd_parts+0x2ae>
     9b6:	ae e4       	ldi	r26, 0x4E	; 78
     9b8:	ea 2e       	mov	r14, r26
     9ba:	a1 e0       	ldi	r26, 0x01	; 1
     9bc:	fa 2e       	mov	r15, r26
     9be:	34 c1       	rjmp	.+616    	; 0xc28 <_fpadd_parts+0x2ae>
     9c0:	94 30       	cpi	r25, 0x04	; 4
     9c2:	09 f4       	brne	.+2      	; 0x9c6 <_fpadd_parts+0x4c>
     9c4:	2e c1       	rjmp	.+604    	; 0xc22 <_fpadd_parts+0x2a8>
     9c6:	92 30       	cpi	r25, 0x02	; 2
     9c8:	91 f4       	brne	.+36     	; 0x9ee <_fpadd_parts+0x74>
     9ca:	82 30       	cpi	r24, 0x02	; 2
     9cc:	09 f0       	breq	.+2      	; 0x9d0 <_fpadd_parts+0x56>
     9ce:	2c c1       	rjmp	.+600    	; 0xc28 <_fpadd_parts+0x2ae>
     9d0:	88 e0       	ldi	r24, 0x08	; 8
     9d2:	f7 01       	movw	r30, r14
     9d4:	da 01       	movw	r26, r20
     9d6:	01 90       	ld	r0, Z+
     9d8:	0d 92       	st	X+, r0
     9da:	8a 95       	dec	r24
     9dc:	e1 f7       	brne	.-8      	; 0x9d6 <_fpadd_parts+0x5c>
     9de:	fb 01       	movw	r30, r22
     9e0:	81 81       	ldd	r24, Z+1	; 0x01
     9e2:	f7 01       	movw	r30, r14
     9e4:	91 81       	ldd	r25, Z+1	; 0x01
     9e6:	89 23       	and	r24, r25
     9e8:	fa 01       	movw	r30, r20
     9ea:	81 83       	std	Z+1, r24	; 0x01
     9ec:	1c c1       	rjmp	.+568    	; 0xc26 <_fpadd_parts+0x2ac>
     9ee:	82 30       	cpi	r24, 0x02	; 2
     9f0:	09 f4       	brne	.+2      	; 0x9f4 <_fpadd_parts+0x7a>
     9f2:	17 c1       	rjmp	.+558    	; 0xc22 <_fpadd_parts+0x2a8>
     9f4:	f7 01       	movw	r30, r14
     9f6:	82 81       	ldd	r24, Z+2	; 0x02
     9f8:	93 81       	ldd	r25, Z+3	; 0x03
     9fa:	fb 01       	movw	r30, r22
     9fc:	a2 81       	ldd	r26, Z+2	; 0x02
     9fe:	b3 81       	ldd	r27, Z+3	; 0x03
     a00:	f7 01       	movw	r30, r14
     a02:	04 81       	ldd	r16, Z+4	; 0x04
     a04:	15 81       	ldd	r17, Z+5	; 0x05
     a06:	26 81       	ldd	r18, Z+6	; 0x06
     a08:	37 81       	ldd	r19, Z+7	; 0x07
     a0a:	fb 01       	movw	r30, r22
     a0c:	84 80       	ldd	r8, Z+4	; 0x04
     a0e:	95 80       	ldd	r9, Z+5	; 0x05
     a10:	a6 80       	ldd	r10, Z+6	; 0x06
     a12:	b7 80       	ldd	r11, Z+7	; 0x07
     a14:	fc 01       	movw	r30, r24
     a16:	ea 1b       	sub	r30, r26
     a18:	fb 0b       	sbc	r31, r27
     a1a:	af 01       	movw	r20, r30
     a1c:	f7 ff       	sbrs	r31, 7
     a1e:	04 c0       	rjmp	.+8      	; 0xa28 <_fpadd_parts+0xae>
     a20:	44 27       	eor	r20, r20
     a22:	55 27       	eor	r21, r21
     a24:	4e 1b       	sub	r20, r30
     a26:	5f 0b       	sbc	r21, r31
     a28:	40 32       	cpi	r20, 0x20	; 32
     a2a:	51 05       	cpc	r21, r1
     a2c:	0c f0       	brlt	.+2      	; 0xa30 <_fpadd_parts+0xb6>
     a2e:	74 c0       	rjmp	.+232    	; 0xb18 <_fpadd_parts+0x19e>
     a30:	1e 16       	cp	r1, r30
     a32:	1f 06       	cpc	r1, r31
     a34:	b4 f5       	brge	.+108    	; 0xaa2 <_fpadd_parts+0x128>
     a36:	24 01       	movw	r4, r8
     a38:	35 01       	movw	r6, r10
     a3a:	04 2e       	mov	r0, r20
     a3c:	04 c0       	rjmp	.+8      	; 0xa46 <_fpadd_parts+0xcc>
     a3e:	76 94       	lsr	r7
     a40:	67 94       	ror	r6
     a42:	57 94       	ror	r5
     a44:	47 94       	ror	r4
     a46:	0a 94       	dec	r0
     a48:	d2 f7       	brpl	.-12     	; 0xa3e <_fpadd_parts+0xc4>
     a4a:	49 82       	std	Y+1, r4	; 0x01
     a4c:	5a 82       	std	Y+2, r5	; 0x02
     a4e:	6b 82       	std	Y+3, r6	; 0x03
     a50:	7c 82       	std	Y+4, r7	; 0x04
     a52:	41 2c       	mov	r4, r1
     a54:	51 2c       	mov	r5, r1
     a56:	32 01       	movw	r6, r4
     a58:	43 94       	inc	r4
     a5a:	04 c0       	rjmp	.+8      	; 0xa64 <_fpadd_parts+0xea>
     a5c:	44 0c       	add	r4, r4
     a5e:	55 1c       	adc	r5, r5
     a60:	66 1c       	adc	r6, r6
     a62:	77 1c       	adc	r7, r7
     a64:	4a 95       	dec	r20
     a66:	d2 f7       	brpl	.-12     	; 0xa5c <_fpadd_parts+0xe2>
     a68:	41 e0       	ldi	r20, 0x01	; 1
     a6a:	44 1a       	sub	r4, r20
     a6c:	51 08       	sbc	r5, r1
     a6e:	61 08       	sbc	r6, r1
     a70:	71 08       	sbc	r7, r1
     a72:	48 20       	and	r4, r8
     a74:	59 20       	and	r5, r9
     a76:	6a 20       	and	r6, r10
     a78:	7b 20       	and	r7, r11
     a7a:	81 2c       	mov	r8, r1
     a7c:	91 2c       	mov	r9, r1
     a7e:	54 01       	movw	r10, r8
     a80:	83 94       	inc	r8
     a82:	45 28       	or	r4, r5
     a84:	46 28       	or	r4, r6
     a86:	47 28       	or	r4, r7
     a88:	19 f4       	brne	.+6      	; 0xa90 <_fpadd_parts+0x116>
     a8a:	81 2c       	mov	r8, r1
     a8c:	91 2c       	mov	r9, r1
     a8e:	54 01       	movw	r10, r8
     a90:	49 80       	ldd	r4, Y+1	; 0x01
     a92:	5a 80       	ldd	r5, Y+2	; 0x02
     a94:	6b 80       	ldd	r6, Y+3	; 0x03
     a96:	7c 80       	ldd	r7, Y+4	; 0x04
     a98:	84 28       	or	r8, r4
     a9a:	95 28       	or	r9, r5
     a9c:	a6 28       	or	r10, r6
     a9e:	b7 28       	or	r11, r7
     aa0:	46 c0       	rjmp	.+140    	; 0xb2e <_fpadd_parts+0x1b4>
     aa2:	ef 2b       	or	r30, r31
     aa4:	09 f4       	brne	.+2      	; 0xaa8 <_fpadd_parts+0x12e>
     aa6:	43 c0       	rjmp	.+134    	; 0xb2e <_fpadd_parts+0x1b4>
     aa8:	84 0f       	add	r24, r20
     aaa:	95 1f       	adc	r25, r21
     aac:	28 01       	movw	r4, r16
     aae:	39 01       	movw	r6, r18
     ab0:	04 2e       	mov	r0, r20
     ab2:	04 c0       	rjmp	.+8      	; 0xabc <_fpadd_parts+0x142>
     ab4:	76 94       	lsr	r7
     ab6:	67 94       	ror	r6
     ab8:	57 94       	ror	r5
     aba:	47 94       	ror	r4
     abc:	0a 94       	dec	r0
     abe:	d2 f7       	brpl	.-12     	; 0xab4 <_fpadd_parts+0x13a>
     ac0:	49 82       	std	Y+1, r4	; 0x01
     ac2:	5a 82       	std	Y+2, r5	; 0x02
     ac4:	6b 82       	std	Y+3, r6	; 0x03
     ac6:	7c 82       	std	Y+4, r7	; 0x04
     ac8:	41 2c       	mov	r4, r1
     aca:	51 2c       	mov	r5, r1
     acc:	32 01       	movw	r6, r4
     ace:	43 94       	inc	r4
     ad0:	04 c0       	rjmp	.+8      	; 0xada <_fpadd_parts+0x160>
     ad2:	44 0c       	add	r4, r4
     ad4:	55 1c       	adc	r5, r5
     ad6:	66 1c       	adc	r6, r6
     ad8:	77 1c       	adc	r7, r7
     ada:	4a 95       	dec	r20
     adc:	d2 f7       	brpl	.-12     	; 0xad2 <_fpadd_parts+0x158>
     ade:	41 e0       	ldi	r20, 0x01	; 1
     ae0:	44 1a       	sub	r4, r20
     ae2:	51 08       	sbc	r5, r1
     ae4:	61 08       	sbc	r6, r1
     ae6:	71 08       	sbc	r7, r1
     ae8:	40 22       	and	r4, r16
     aea:	51 22       	and	r5, r17
     aec:	62 22       	and	r6, r18
     aee:	73 22       	and	r7, r19
     af0:	01 e0       	ldi	r16, 0x01	; 1
     af2:	10 e0       	ldi	r17, 0x00	; 0
     af4:	20 e0       	ldi	r18, 0x00	; 0
     af6:	30 e0       	ldi	r19, 0x00	; 0
     af8:	45 28       	or	r4, r5
     afa:	46 28       	or	r4, r6
     afc:	47 28       	or	r4, r7
     afe:	19 f4       	brne	.+6      	; 0xb06 <_fpadd_parts+0x18c>
     b00:	00 e0       	ldi	r16, 0x00	; 0
     b02:	10 e0       	ldi	r17, 0x00	; 0
     b04:	98 01       	movw	r18, r16
     b06:	49 80       	ldd	r4, Y+1	; 0x01
     b08:	5a 80       	ldd	r5, Y+2	; 0x02
     b0a:	6b 80       	ldd	r6, Y+3	; 0x03
     b0c:	7c 80       	ldd	r7, Y+4	; 0x04
     b0e:	04 29       	or	r16, r4
     b10:	15 29       	or	r17, r5
     b12:	26 29       	or	r18, r6
     b14:	37 29       	or	r19, r7
     b16:	0b c0       	rjmp	.+22     	; 0xb2e <_fpadd_parts+0x1b4>
     b18:	a8 17       	cp	r26, r24
     b1a:	b9 07       	cpc	r27, r25
     b1c:	24 f4       	brge	.+8      	; 0xb26 <_fpadd_parts+0x1ac>
     b1e:	81 2c       	mov	r8, r1
     b20:	91 2c       	mov	r9, r1
     b22:	54 01       	movw	r10, r8
     b24:	04 c0       	rjmp	.+8      	; 0xb2e <_fpadd_parts+0x1b4>
     b26:	cd 01       	movw	r24, r26
     b28:	00 e0       	ldi	r16, 0x00	; 0
     b2a:	10 e0       	ldi	r17, 0x00	; 0
     b2c:	98 01       	movw	r18, r16
     b2e:	f7 01       	movw	r30, r14
     b30:	41 81       	ldd	r20, Z+1	; 0x01
     b32:	fb 01       	movw	r30, r22
     b34:	51 81       	ldd	r21, Z+1	; 0x01
     b36:	45 17       	cp	r20, r21
     b38:	09 f4       	brne	.+2      	; 0xb3c <_fpadd_parts+0x1c2>
     b3a:	46 c0       	rjmp	.+140    	; 0xbc8 <_fpadd_parts+0x24e>
     b3c:	44 23       	and	r20, r20
     b3e:	49 f0       	breq	.+18     	; 0xb52 <_fpadd_parts+0x1d8>
     b40:	24 01       	movw	r4, r8
     b42:	35 01       	movw	r6, r10
     b44:	40 1a       	sub	r4, r16
     b46:	51 0a       	sbc	r5, r17
     b48:	62 0a       	sbc	r6, r18
     b4a:	73 0a       	sbc	r7, r19
     b4c:	93 01       	movw	r18, r6
     b4e:	82 01       	movw	r16, r4
     b50:	04 c0       	rjmp	.+8      	; 0xb5a <_fpadd_parts+0x1e0>
     b52:	08 19       	sub	r16, r8
     b54:	19 09       	sbc	r17, r9
     b56:	2a 09       	sbc	r18, r10
     b58:	3b 09       	sbc	r19, r11
     b5a:	37 fd       	sbrc	r19, 7
     b5c:	05 c0       	rjmp	.+10     	; 0xb68 <_fpadd_parts+0x1ee>
     b5e:	f6 01       	movw	r30, r12
     b60:	11 82       	std	Z+1, r1	; 0x01
     b62:	93 83       	std	Z+3, r25	; 0x03
     b64:	82 83       	std	Z+2, r24	; 0x02
     b66:	0c c0       	rjmp	.+24     	; 0xb80 <_fpadd_parts+0x206>
     b68:	41 e0       	ldi	r20, 0x01	; 1
     b6a:	f6 01       	movw	r30, r12
     b6c:	41 83       	std	Z+1, r20	; 0x01
     b6e:	93 83       	std	Z+3, r25	; 0x03
     b70:	82 83       	std	Z+2, r24	; 0x02
     b72:	30 95       	com	r19
     b74:	20 95       	com	r18
     b76:	10 95       	com	r17
     b78:	01 95       	neg	r16
     b7a:	1f 4f       	sbci	r17, 0xFF	; 255
     b7c:	2f 4f       	sbci	r18, 0xFF	; 255
     b7e:	3f 4f       	sbci	r19, 0xFF	; 255
     b80:	04 83       	std	Z+4, r16	; 0x04
     b82:	15 83       	std	Z+5, r17	; 0x05
     b84:	26 83       	std	Z+6, r18	; 0x06
     b86:	37 83       	std	Z+7, r19	; 0x07
     b88:	0e c0       	rjmp	.+28     	; 0xba6 <_fpadd_parts+0x22c>
     b8a:	88 0f       	add	r24, r24
     b8c:	99 1f       	adc	r25, r25
     b8e:	aa 1f       	adc	r26, r26
     b90:	bb 1f       	adc	r27, r27
     b92:	f6 01       	movw	r30, r12
     b94:	84 83       	std	Z+4, r24	; 0x04
     b96:	95 83       	std	Z+5, r25	; 0x05
     b98:	a6 83       	std	Z+6, r26	; 0x06
     b9a:	b7 83       	std	Z+7, r27	; 0x07
     b9c:	82 81       	ldd	r24, Z+2	; 0x02
     b9e:	93 81       	ldd	r25, Z+3	; 0x03
     ba0:	01 97       	sbiw	r24, 0x01	; 1
     ba2:	93 83       	std	Z+3, r25	; 0x03
     ba4:	82 83       	std	Z+2, r24	; 0x02
     ba6:	f6 01       	movw	r30, r12
     ba8:	84 81       	ldd	r24, Z+4	; 0x04
     baa:	95 81       	ldd	r25, Z+5	; 0x05
     bac:	a6 81       	ldd	r26, Z+6	; 0x06
     bae:	b7 81       	ldd	r27, Z+7	; 0x07
     bb0:	ac 01       	movw	r20, r24
     bb2:	bd 01       	movw	r22, r26
     bb4:	41 50       	subi	r20, 0x01	; 1
     bb6:	51 09       	sbc	r21, r1
     bb8:	61 09       	sbc	r22, r1
     bba:	71 09       	sbc	r23, r1
     bbc:	4f 3f       	cpi	r20, 0xFF	; 255
     bbe:	5f 4f       	sbci	r21, 0xFF	; 255
     bc0:	6f 4f       	sbci	r22, 0xFF	; 255
     bc2:	7f 43       	sbci	r23, 0x3F	; 63
     bc4:	10 f3       	brcs	.-60     	; 0xb8a <_fpadd_parts+0x210>
     bc6:	0c c0       	rjmp	.+24     	; 0xbe0 <_fpadd_parts+0x266>
     bc8:	f6 01       	movw	r30, r12
     bca:	41 83       	std	Z+1, r20	; 0x01
     bcc:	93 83       	std	Z+3, r25	; 0x03
     bce:	82 83       	std	Z+2, r24	; 0x02
     bd0:	08 0d       	add	r16, r8
     bd2:	19 1d       	adc	r17, r9
     bd4:	2a 1d       	adc	r18, r10
     bd6:	3b 1d       	adc	r19, r11
     bd8:	04 83       	std	Z+4, r16	; 0x04
     bda:	15 83       	std	Z+5, r17	; 0x05
     bdc:	26 83       	std	Z+6, r18	; 0x06
     bde:	37 83       	std	Z+7, r19	; 0x07
     be0:	83 e0       	ldi	r24, 0x03	; 3
     be2:	f6 01       	movw	r30, r12
     be4:	80 83       	st	Z, r24
     be6:	44 81       	ldd	r20, Z+4	; 0x04
     be8:	55 81       	ldd	r21, Z+5	; 0x05
     bea:	66 81       	ldd	r22, Z+6	; 0x06
     bec:	77 81       	ldd	r23, Z+7	; 0x07
     bee:	77 ff       	sbrs	r23, 7
     bf0:	1a c0       	rjmp	.+52     	; 0xc26 <_fpadd_parts+0x2ac>
     bf2:	db 01       	movw	r26, r22
     bf4:	ca 01       	movw	r24, r20
     bf6:	81 70       	andi	r24, 0x01	; 1
     bf8:	99 27       	eor	r25, r25
     bfa:	aa 27       	eor	r26, r26
     bfc:	bb 27       	eor	r27, r27
     bfe:	76 95       	lsr	r23
     c00:	67 95       	ror	r22
     c02:	57 95       	ror	r21
     c04:	47 95       	ror	r20
     c06:	84 2b       	or	r24, r20
     c08:	95 2b       	or	r25, r21
     c0a:	a6 2b       	or	r26, r22
     c0c:	b7 2b       	or	r27, r23
     c0e:	84 83       	std	Z+4, r24	; 0x04
     c10:	95 83       	std	Z+5, r25	; 0x05
     c12:	a6 83       	std	Z+6, r26	; 0x06
     c14:	b7 83       	std	Z+7, r27	; 0x07
     c16:	82 81       	ldd	r24, Z+2	; 0x02
     c18:	93 81       	ldd	r25, Z+3	; 0x03
     c1a:	01 96       	adiw	r24, 0x01	; 1
     c1c:	93 83       	std	Z+3, r25	; 0x03
     c1e:	82 83       	std	Z+2, r24	; 0x02
     c20:	02 c0       	rjmp	.+4      	; 0xc26 <_fpadd_parts+0x2ac>
     c22:	7b 01       	movw	r14, r22
     c24:	01 c0       	rjmp	.+2      	; 0xc28 <_fpadd_parts+0x2ae>
     c26:	76 01       	movw	r14, r12
     c28:	c7 01       	movw	r24, r14
     c2a:	24 96       	adiw	r28, 0x04	; 4
     c2c:	e0 e1       	ldi	r30, 0x10	; 16
     c2e:	0c 94 3c 0a 	jmp	0x1478	; 0x1478 <__epilogue_restores__+0x4>

00000c32 <__addsf3>:
     c32:	a0 e2       	ldi	r26, 0x20	; 32
     c34:	b0 e0       	ldi	r27, 0x00	; 0
     c36:	ef e1       	ldi	r30, 0x1F	; 31
     c38:	f6 e0       	ldi	r31, 0x06	; 6
     c3a:	0c 94 2e 0a 	jmp	0x145c	; 0x145c <__prologue_saves__+0x20>
     c3e:	6d 8f       	std	Y+29, r22	; 0x1d
     c40:	7e 8f       	std	Y+30, r23	; 0x1e
     c42:	8f 8f       	std	Y+31, r24	; 0x1f
     c44:	98 a3       	std	Y+32, r25	; 0x20
     c46:	29 8f       	std	Y+25, r18	; 0x19
     c48:	3a 8f       	std	Y+26, r19	; 0x1a
     c4a:	4b 8f       	std	Y+27, r20	; 0x1b
     c4c:	5c 8f       	std	Y+28, r21	; 0x1c
     c4e:	be 01       	movw	r22, r28
     c50:	6f 5e       	subi	r22, 0xEF	; 239
     c52:	7f 4f       	sbci	r23, 0xFF	; 255
     c54:	ce 01       	movw	r24, r28
     c56:	4d 96       	adiw	r24, 0x1d	; 29
     c58:	0e 94 fe 08 	call	0x11fc	; 0x11fc <__unpack_f>
     c5c:	be 01       	movw	r22, r28
     c5e:	67 5f       	subi	r22, 0xF7	; 247
     c60:	7f 4f       	sbci	r23, 0xFF	; 255
     c62:	ce 01       	movw	r24, r28
     c64:	49 96       	adiw	r24, 0x19	; 25
     c66:	0e 94 fe 08 	call	0x11fc	; 0x11fc <__unpack_f>
     c6a:	ae 01       	movw	r20, r28
     c6c:	4f 5f       	subi	r20, 0xFF	; 255
     c6e:	5f 4f       	sbci	r21, 0xFF	; 255
     c70:	be 01       	movw	r22, r28
     c72:	67 5f       	subi	r22, 0xF7	; 247
     c74:	7f 4f       	sbci	r23, 0xFF	; 255
     c76:	ce 01       	movw	r24, r28
     c78:	41 96       	adiw	r24, 0x11	; 17
     c7a:	0e 94 bd 04 	call	0x97a	; 0x97a <_fpadd_parts>
     c7e:	0e 94 34 08 	call	0x1068	; 0x1068 <__pack_f>
     c82:	a0 96       	adiw	r28, 0x20	; 32
     c84:	e2 e0       	ldi	r30, 0x02	; 2
     c86:	0c 94 4a 0a 	jmp	0x1494	; 0x1494 <__epilogue_restores__+0x20>

00000c8a <__subsf3>:
     c8a:	a0 e2       	ldi	r26, 0x20	; 32
     c8c:	b0 e0       	ldi	r27, 0x00	; 0
     c8e:	eb e4       	ldi	r30, 0x4B	; 75
     c90:	f6 e0       	ldi	r31, 0x06	; 6
     c92:	0c 94 2e 0a 	jmp	0x145c	; 0x145c <__prologue_saves__+0x20>
     c96:	6d 8f       	std	Y+29, r22	; 0x1d
     c98:	7e 8f       	std	Y+30, r23	; 0x1e
     c9a:	8f 8f       	std	Y+31, r24	; 0x1f
     c9c:	98 a3       	std	Y+32, r25	; 0x20
     c9e:	29 8f       	std	Y+25, r18	; 0x19
     ca0:	3a 8f       	std	Y+26, r19	; 0x1a
     ca2:	4b 8f       	std	Y+27, r20	; 0x1b
     ca4:	5c 8f       	std	Y+28, r21	; 0x1c
     ca6:	be 01       	movw	r22, r28
     ca8:	6f 5e       	subi	r22, 0xEF	; 239
     caa:	7f 4f       	sbci	r23, 0xFF	; 255
     cac:	ce 01       	movw	r24, r28
     cae:	4d 96       	adiw	r24, 0x1d	; 29
     cb0:	0e 94 fe 08 	call	0x11fc	; 0x11fc <__unpack_f>
     cb4:	be 01       	movw	r22, r28
     cb6:	67 5f       	subi	r22, 0xF7	; 247
     cb8:	7f 4f       	sbci	r23, 0xFF	; 255
     cba:	ce 01       	movw	r24, r28
     cbc:	49 96       	adiw	r24, 0x19	; 25
     cbe:	0e 94 fe 08 	call	0x11fc	; 0x11fc <__unpack_f>
     cc2:	8a 85       	ldd	r24, Y+10	; 0x0a
     cc4:	91 e0       	ldi	r25, 0x01	; 1
     cc6:	89 27       	eor	r24, r25
     cc8:	8a 87       	std	Y+10, r24	; 0x0a
     cca:	ae 01       	movw	r20, r28
     ccc:	4f 5f       	subi	r20, 0xFF	; 255
     cce:	5f 4f       	sbci	r21, 0xFF	; 255
     cd0:	be 01       	movw	r22, r28
     cd2:	67 5f       	subi	r22, 0xF7	; 247
     cd4:	7f 4f       	sbci	r23, 0xFF	; 255
     cd6:	ce 01       	movw	r24, r28
     cd8:	41 96       	adiw	r24, 0x11	; 17
     cda:	0e 94 bd 04 	call	0x97a	; 0x97a <_fpadd_parts>
     cde:	0e 94 34 08 	call	0x1068	; 0x1068 <__pack_f>
     ce2:	a0 96       	adiw	r28, 0x20	; 32
     ce4:	e2 e0       	ldi	r30, 0x02	; 2
     ce6:	0c 94 4a 0a 	jmp	0x1494	; 0x1494 <__epilogue_restores__+0x20>

00000cea <__mulsf3>:
     cea:	a0 e2       	ldi	r26, 0x20	; 32
     cec:	b0 e0       	ldi	r27, 0x00	; 0
     cee:	eb e7       	ldi	r30, 0x7B	; 123
     cf0:	f6 e0       	ldi	r31, 0x06	; 6
     cf2:	0c 94 20 0a 	jmp	0x1440	; 0x1440 <__prologue_saves__+0x4>
     cf6:	6d 8f       	std	Y+29, r22	; 0x1d
     cf8:	7e 8f       	std	Y+30, r23	; 0x1e
     cfa:	8f 8f       	std	Y+31, r24	; 0x1f
     cfc:	98 a3       	std	Y+32, r25	; 0x20
     cfe:	29 8f       	std	Y+25, r18	; 0x19
     d00:	3a 8f       	std	Y+26, r19	; 0x1a
     d02:	4b 8f       	std	Y+27, r20	; 0x1b
     d04:	5c 8f       	std	Y+28, r21	; 0x1c
     d06:	be 01       	movw	r22, r28
     d08:	6f 5e       	subi	r22, 0xEF	; 239
     d0a:	7f 4f       	sbci	r23, 0xFF	; 255
     d0c:	ce 01       	movw	r24, r28
     d0e:	4d 96       	adiw	r24, 0x1d	; 29
     d10:	0e 94 fe 08 	call	0x11fc	; 0x11fc <__unpack_f>
     d14:	be 01       	movw	r22, r28
     d16:	67 5f       	subi	r22, 0xF7	; 247
     d18:	7f 4f       	sbci	r23, 0xFF	; 255
     d1a:	ce 01       	movw	r24, r28
     d1c:	49 96       	adiw	r24, 0x19	; 25
     d1e:	0e 94 fe 08 	call	0x11fc	; 0x11fc <__unpack_f>
     d22:	99 89       	ldd	r25, Y+17	; 0x11
     d24:	92 30       	cpi	r25, 0x02	; 2
     d26:	08 f4       	brcc	.+2      	; 0xd2a <__mulsf3+0x40>
     d28:	12 c0       	rjmp	.+36     	; 0xd4e <__mulsf3+0x64>
     d2a:	89 85       	ldd	r24, Y+9	; 0x09
     d2c:	82 30       	cpi	r24, 0x02	; 2
     d2e:	08 f4       	brcc	.+2      	; 0xd32 <__mulsf3+0x48>
     d30:	1a c0       	rjmp	.+52     	; 0xd66 <__mulsf3+0x7c>
     d32:	94 30       	cpi	r25, 0x04	; 4
     d34:	21 f4       	brne	.+8      	; 0xd3e <__mulsf3+0x54>
     d36:	82 30       	cpi	r24, 0x02	; 2
     d38:	09 f4       	brne	.+2      	; 0xd3c <__mulsf3+0x52>
     d3a:	b4 c0       	rjmp	.+360    	; 0xea4 <__mulsf3+0x1ba>
     d3c:	08 c0       	rjmp	.+16     	; 0xd4e <__mulsf3+0x64>
     d3e:	84 30       	cpi	r24, 0x04	; 4
     d40:	21 f4       	brne	.+8      	; 0xd4a <__mulsf3+0x60>
     d42:	92 30       	cpi	r25, 0x02	; 2
     d44:	09 f4       	brne	.+2      	; 0xd48 <__mulsf3+0x5e>
     d46:	ae c0       	rjmp	.+348    	; 0xea4 <__mulsf3+0x1ba>
     d48:	0e c0       	rjmp	.+28     	; 0xd66 <__mulsf3+0x7c>
     d4a:	92 30       	cpi	r25, 0x02	; 2
     d4c:	51 f4       	brne	.+20     	; 0xd62 <__mulsf3+0x78>
     d4e:	81 e0       	ldi	r24, 0x01	; 1
     d50:	2a 89       	ldd	r18, Y+18	; 0x12
     d52:	9a 85       	ldd	r25, Y+10	; 0x0a
     d54:	29 13       	cpse	r18, r25
     d56:	01 c0       	rjmp	.+2      	; 0xd5a <__mulsf3+0x70>
     d58:	80 e0       	ldi	r24, 0x00	; 0
     d5a:	8a 8b       	std	Y+18, r24	; 0x12
     d5c:	ce 01       	movw	r24, r28
     d5e:	41 96       	adiw	r24, 0x11	; 17
     d60:	a3 c0       	rjmp	.+326    	; 0xea8 <__mulsf3+0x1be>
     d62:	82 30       	cpi	r24, 0x02	; 2
     d64:	51 f4       	brne	.+20     	; 0xd7a <__mulsf3+0x90>
     d66:	81 e0       	ldi	r24, 0x01	; 1
     d68:	2a 89       	ldd	r18, Y+18	; 0x12
     d6a:	9a 85       	ldd	r25, Y+10	; 0x0a
     d6c:	29 13       	cpse	r18, r25
     d6e:	01 c0       	rjmp	.+2      	; 0xd72 <__mulsf3+0x88>
     d70:	80 e0       	ldi	r24, 0x00	; 0
     d72:	8a 87       	std	Y+10, r24	; 0x0a
     d74:	ce 01       	movw	r24, r28
     d76:	09 96       	adiw	r24, 0x09	; 9
     d78:	97 c0       	rjmp	.+302    	; 0xea8 <__mulsf3+0x1be>
     d7a:	8d 88       	ldd	r8, Y+21	; 0x15
     d7c:	9e 88       	ldd	r9, Y+22	; 0x16
     d7e:	af 88       	ldd	r10, Y+23	; 0x17
     d80:	b8 8c       	ldd	r11, Y+24	; 0x18
     d82:	0d 85       	ldd	r16, Y+13	; 0x0d
     d84:	1e 85       	ldd	r17, Y+14	; 0x0e
     d86:	2f 85       	ldd	r18, Y+15	; 0x0f
     d88:	38 89       	ldd	r19, Y+16	; 0x10
     d8a:	e0 e2       	ldi	r30, 0x20	; 32
     d8c:	f0 e0       	ldi	r31, 0x00	; 0
     d8e:	80 e0       	ldi	r24, 0x00	; 0
     d90:	90 e0       	ldi	r25, 0x00	; 0
     d92:	dc 01       	movw	r26, r24
     d94:	c1 2c       	mov	r12, r1
     d96:	d1 2c       	mov	r13, r1
     d98:	76 01       	movw	r14, r12
     d9a:	40 e0       	ldi	r20, 0x00	; 0
     d9c:	50 e0       	ldi	r21, 0x00	; 0
     d9e:	ba 01       	movw	r22, r20
     da0:	80 fe       	sbrs	r8, 0
     da2:	18 c0       	rjmp	.+48     	; 0xdd4 <__mulsf3+0xea>
     da4:	40 0f       	add	r20, r16
     da6:	51 1f       	adc	r21, r17
     da8:	62 1f       	adc	r22, r18
     daa:	73 1f       	adc	r23, r19
     dac:	8c 0d       	add	r24, r12
     dae:	9d 1d       	adc	r25, r13
     db0:	ae 1d       	adc	r26, r14
     db2:	bf 1d       	adc	r27, r15
     db4:	41 2c       	mov	r4, r1
     db6:	51 2c       	mov	r5, r1
     db8:	32 01       	movw	r6, r4
     dba:	43 94       	inc	r4
     dbc:	40 17       	cp	r20, r16
     dbe:	51 07       	cpc	r21, r17
     dc0:	62 07       	cpc	r22, r18
     dc2:	73 07       	cpc	r23, r19
     dc4:	18 f0       	brcs	.+6      	; 0xdcc <__mulsf3+0xe2>
     dc6:	41 2c       	mov	r4, r1
     dc8:	51 2c       	mov	r5, r1
     dca:	32 01       	movw	r6, r4
     dcc:	84 0d       	add	r24, r4
     dce:	95 1d       	adc	r25, r5
     dd0:	a6 1d       	adc	r26, r6
     dd2:	b7 1d       	adc	r27, r7
     dd4:	cc 0c       	add	r12, r12
     dd6:	dd 1c       	adc	r13, r13
     dd8:	ee 1c       	adc	r14, r14
     dda:	ff 1c       	adc	r15, r15
     ddc:	37 ff       	sbrs	r19, 7
     dde:	02 c0       	rjmp	.+4      	; 0xde4 <__mulsf3+0xfa>
     de0:	68 94       	set
     de2:	c0 f8       	bld	r12, 0
     de4:	00 0f       	add	r16, r16
     de6:	11 1f       	adc	r17, r17
     de8:	22 1f       	adc	r18, r18
     dea:	33 1f       	adc	r19, r19
     dec:	b6 94       	lsr	r11
     dee:	a7 94       	ror	r10
     df0:	97 94       	ror	r9
     df2:	87 94       	ror	r8
     df4:	31 97       	sbiw	r30, 0x01	; 1
     df6:	a1 f6       	brne	.-88     	; 0xda0 <__mulsf3+0xb6>
     df8:	2b 89       	ldd	r18, Y+19	; 0x13
     dfa:	3c 89       	ldd	r19, Y+20	; 0x14
     dfc:	eb 85       	ldd	r30, Y+11	; 0x0b
     dfe:	fc 85       	ldd	r31, Y+12	; 0x0c
     e00:	2e 0f       	add	r18, r30
     e02:	3f 1f       	adc	r19, r31
     e04:	2e 5f       	subi	r18, 0xFE	; 254
     e06:	3f 4f       	sbci	r19, 0xFF	; 255
     e08:	3c 83       	std	Y+4, r19	; 0x04
     e0a:	2b 83       	std	Y+3, r18	; 0x03
     e0c:	21 e0       	ldi	r18, 0x01	; 1
     e0e:	ea 89       	ldd	r30, Y+18	; 0x12
     e10:	3a 85       	ldd	r19, Y+10	; 0x0a
     e12:	e3 13       	cpse	r30, r19
     e14:	01 c0       	rjmp	.+2      	; 0xe18 <__mulsf3+0x12e>
     e16:	20 e0       	ldi	r18, 0x00	; 0
     e18:	2a 83       	std	Y+2, r18	; 0x02
     e1a:	eb 81       	ldd	r30, Y+3	; 0x03
     e1c:	fc 81       	ldd	r31, Y+4	; 0x04
     e1e:	0c c0       	rjmp	.+24     	; 0xe38 <__mulsf3+0x14e>
     e20:	80 ff       	sbrs	r24, 0
     e22:	05 c0       	rjmp	.+10     	; 0xe2e <__mulsf3+0x144>
     e24:	76 95       	lsr	r23
     e26:	67 95       	ror	r22
     e28:	57 95       	ror	r21
     e2a:	47 95       	ror	r20
     e2c:	70 68       	ori	r23, 0x80	; 128
     e2e:	b6 95       	lsr	r27
     e30:	a7 95       	ror	r26
     e32:	97 95       	ror	r25
     e34:	87 95       	ror	r24
     e36:	31 96       	adiw	r30, 0x01	; 1
     e38:	b7 fd       	sbrc	r27, 7
     e3a:	f2 cf       	rjmp	.-28     	; 0xe20 <__mulsf3+0x136>
     e3c:	9f 01       	movw	r18, r30
     e3e:	0c c0       	rjmp	.+24     	; 0xe58 <__mulsf3+0x16e>
     e40:	88 0f       	add	r24, r24
     e42:	99 1f       	adc	r25, r25
     e44:	aa 1f       	adc	r26, r26
     e46:	bb 1f       	adc	r27, r27
     e48:	77 fd       	sbrc	r23, 7
     e4a:	81 60       	ori	r24, 0x01	; 1
     e4c:	44 0f       	add	r20, r20
     e4e:	55 1f       	adc	r21, r21
     e50:	66 1f       	adc	r22, r22
     e52:	77 1f       	adc	r23, r23
     e54:	21 50       	subi	r18, 0x01	; 1
     e56:	31 09       	sbc	r19, r1
     e58:	00 97       	sbiw	r24, 0x00	; 0
     e5a:	a1 05       	cpc	r26, r1
     e5c:	e0 e4       	ldi	r30, 0x40	; 64
     e5e:	be 07       	cpc	r27, r30
     e60:	78 f3       	brcs	.-34     	; 0xe40 <__mulsf3+0x156>
     e62:	2b 83       	std	Y+3, r18	; 0x03
     e64:	3c 83       	std	Y+4, r19	; 0x04
     e66:	8c 01       	movw	r16, r24
     e68:	9d 01       	movw	r18, r26
     e6a:	0f 77       	andi	r16, 0x7F	; 127
     e6c:	11 27       	eor	r17, r17
     e6e:	22 27       	eor	r18, r18
     e70:	33 27       	eor	r19, r19
     e72:	00 34       	cpi	r16, 0x40	; 64
     e74:	11 05       	cpc	r17, r1
     e76:	21 05       	cpc	r18, r1
     e78:	31 05       	cpc	r19, r1
     e7a:	59 f4       	brne	.+22     	; 0xe92 <__mulsf3+0x1a8>
     e7c:	87 fd       	sbrc	r24, 7
     e7e:	09 c0       	rjmp	.+18     	; 0xe92 <__mulsf3+0x1a8>
     e80:	45 2b       	or	r20, r21
     e82:	46 2b       	or	r20, r22
     e84:	47 2b       	or	r20, r23
     e86:	29 f0       	breq	.+10     	; 0xe92 <__mulsf3+0x1a8>
     e88:	80 5c       	subi	r24, 0xC0	; 192
     e8a:	9f 4f       	sbci	r25, 0xFF	; 255
     e8c:	af 4f       	sbci	r26, 0xFF	; 255
     e8e:	bf 4f       	sbci	r27, 0xFF	; 255
     e90:	80 78       	andi	r24, 0x80	; 128
     e92:	8d 83       	std	Y+5, r24	; 0x05
     e94:	9e 83       	std	Y+6, r25	; 0x06
     e96:	af 83       	std	Y+7, r26	; 0x07
     e98:	b8 87       	std	Y+8, r27	; 0x08
     e9a:	83 e0       	ldi	r24, 0x03	; 3
     e9c:	89 83       	std	Y+1, r24	; 0x01
     e9e:	ce 01       	movw	r24, r28
     ea0:	01 96       	adiw	r24, 0x01	; 1
     ea2:	02 c0       	rjmp	.+4      	; 0xea8 <__mulsf3+0x1be>
     ea4:	8e e4       	ldi	r24, 0x4E	; 78
     ea6:	91 e0       	ldi	r25, 0x01	; 1
     ea8:	0e 94 34 08 	call	0x1068	; 0x1068 <__pack_f>
     eac:	a0 96       	adiw	r28, 0x20	; 32
     eae:	e0 e1       	ldi	r30, 0x10	; 16
     eb0:	0c 94 3c 0a 	jmp	0x1478	; 0x1478 <__epilogue_restores__+0x4>

00000eb4 <__gesf2>:
     eb4:	a8 e1       	ldi	r26, 0x18	; 24
     eb6:	b0 e0       	ldi	r27, 0x00	; 0
     eb8:	e0 e6       	ldi	r30, 0x60	; 96
     eba:	f7 e0       	ldi	r31, 0x07	; 7
     ebc:	0c 94 2e 0a 	jmp	0x145c	; 0x145c <__prologue_saves__+0x20>
     ec0:	6d 8b       	std	Y+21, r22	; 0x15
     ec2:	7e 8b       	std	Y+22, r23	; 0x16
     ec4:	8f 8b       	std	Y+23, r24	; 0x17
     ec6:	98 8f       	std	Y+24, r25	; 0x18
     ec8:	29 8b       	std	Y+17, r18	; 0x11
     eca:	3a 8b       	std	Y+18, r19	; 0x12
     ecc:	4b 8b       	std	Y+19, r20	; 0x13
     ece:	5c 8b       	std	Y+20, r21	; 0x14
     ed0:	be 01       	movw	r22, r28
     ed2:	67 5f       	subi	r22, 0xF7	; 247
     ed4:	7f 4f       	sbci	r23, 0xFF	; 255
     ed6:	ce 01       	movw	r24, r28
     ed8:	45 96       	adiw	r24, 0x15	; 21
     eda:	0e 94 fe 08 	call	0x11fc	; 0x11fc <__unpack_f>
     ede:	be 01       	movw	r22, r28
     ee0:	6f 5f       	subi	r22, 0xFF	; 255
     ee2:	7f 4f       	sbci	r23, 0xFF	; 255
     ee4:	ce 01       	movw	r24, r28
     ee6:	41 96       	adiw	r24, 0x11	; 17
     ee8:	0e 94 fe 08 	call	0x11fc	; 0x11fc <__unpack_f>
     eec:	89 85       	ldd	r24, Y+9	; 0x09
     eee:	82 30       	cpi	r24, 0x02	; 2
     ef0:	58 f0       	brcs	.+22     	; 0xf08 <__gesf2+0x54>
     ef2:	89 81       	ldd	r24, Y+1	; 0x01
     ef4:	82 30       	cpi	r24, 0x02	; 2
     ef6:	40 f0       	brcs	.+16     	; 0xf08 <__gesf2+0x54>
     ef8:	be 01       	movw	r22, r28
     efa:	6f 5f       	subi	r22, 0xFF	; 255
     efc:	7f 4f       	sbci	r23, 0xFF	; 255
     efe:	ce 01       	movw	r24, r28
     f00:	09 96       	adiw	r24, 0x09	; 9
     f02:	0e 94 6d 09 	call	0x12da	; 0x12da <__fpcmp_parts_f>
     f06:	01 c0       	rjmp	.+2      	; 0xf0a <__gesf2+0x56>
     f08:	8f ef       	ldi	r24, 0xFF	; 255
     f0a:	68 96       	adiw	r28, 0x18	; 24
     f0c:	e2 e0       	ldi	r30, 0x02	; 2
     f0e:	0c 94 4a 0a 	jmp	0x1494	; 0x1494 <__epilogue_restores__+0x20>

00000f12 <__floatsisf>:
     f12:	a8 e0       	ldi	r26, 0x08	; 8
     f14:	b0 e0       	ldi	r27, 0x00	; 0
     f16:	ef e8       	ldi	r30, 0x8F	; 143
     f18:	f7 e0       	ldi	r31, 0x07	; 7
     f1a:	0c 94 2c 0a 	jmp	0x1458	; 0x1458 <__prologue_saves__+0x1c>
     f1e:	23 e0       	ldi	r18, 0x03	; 3
     f20:	29 83       	std	Y+1, r18	; 0x01
     f22:	8b 01       	movw	r16, r22
     f24:	9c 01       	movw	r18, r24
     f26:	00 27       	eor	r16, r16
     f28:	37 fd       	sbrc	r19, 7
     f2a:	03 95       	inc	r16
     f2c:	11 27       	eor	r17, r17
     f2e:	22 27       	eor	r18, r18
     f30:	33 27       	eor	r19, r19
     f32:	40 2f       	mov	r20, r16
     f34:	0a 83       	std	Y+2, r16	; 0x02
     f36:	61 15       	cp	r22, r1
     f38:	71 05       	cpc	r23, r1
     f3a:	81 05       	cpc	r24, r1
     f3c:	91 05       	cpc	r25, r1
     f3e:	19 f4       	brne	.+6      	; 0xf46 <__floatsisf+0x34>
     f40:	82 e0       	ldi	r24, 0x02	; 2
     f42:	89 83       	std	Y+1, r24	; 0x01
     f44:	35 c0       	rjmp	.+106    	; 0xfb0 <__floatsisf+0x9e>
     f46:	2e e1       	ldi	r18, 0x1E	; 30
     f48:	30 e0       	ldi	r19, 0x00	; 0
     f4a:	3c 83       	std	Y+4, r19	; 0x04
     f4c:	2b 83       	std	Y+3, r18	; 0x03
     f4e:	44 23       	and	r20, r20
     f50:	71 f0       	breq	.+28     	; 0xf6e <__floatsisf+0x5c>
     f52:	61 15       	cp	r22, r1
     f54:	71 05       	cpc	r23, r1
     f56:	81 05       	cpc	r24, r1
     f58:	20 e8       	ldi	r18, 0x80	; 128
     f5a:	92 07       	cpc	r25, r18
     f5c:	71 f1       	breq	.+92     	; 0xfba <__floatsisf+0xa8>
     f5e:	00 27       	eor	r16, r16
     f60:	11 27       	eor	r17, r17
     f62:	98 01       	movw	r18, r16
     f64:	06 1b       	sub	r16, r22
     f66:	17 0b       	sbc	r17, r23
     f68:	28 0b       	sbc	r18, r24
     f6a:	39 0b       	sbc	r19, r25
     f6c:	02 c0       	rjmp	.+4      	; 0xf72 <__floatsisf+0x60>
     f6e:	8b 01       	movw	r16, r22
     f70:	9c 01       	movw	r18, r24
     f72:	c9 01       	movw	r24, r18
     f74:	b8 01       	movw	r22, r16
     f76:	0e 94 03 0a 	call	0x1406	; 0x1406 <__clzsi2>
     f7a:	01 97       	sbiw	r24, 0x01	; 1
     f7c:	18 16       	cp	r1, r24
     f7e:	19 06       	cpc	r1, r25
     f80:	2c f0       	brlt	.+10     	; 0xf8c <__floatsisf+0x7a>
     f82:	0d 83       	std	Y+5, r16	; 0x05
     f84:	1e 83       	std	Y+6, r17	; 0x06
     f86:	2f 83       	std	Y+7, r18	; 0x07
     f88:	38 87       	std	Y+8, r19	; 0x08
     f8a:	12 c0       	rjmp	.+36     	; 0xfb0 <__floatsisf+0x9e>
     f8c:	08 2e       	mov	r0, r24
     f8e:	04 c0       	rjmp	.+8      	; 0xf98 <__floatsisf+0x86>
     f90:	00 0f       	add	r16, r16
     f92:	11 1f       	adc	r17, r17
     f94:	22 1f       	adc	r18, r18
     f96:	33 1f       	adc	r19, r19
     f98:	0a 94       	dec	r0
     f9a:	d2 f7       	brpl	.-12     	; 0xf90 <__floatsisf+0x7e>
     f9c:	0d 83       	std	Y+5, r16	; 0x05
     f9e:	1e 83       	std	Y+6, r17	; 0x06
     fa0:	2f 83       	std	Y+7, r18	; 0x07
     fa2:	38 87       	std	Y+8, r19	; 0x08
     fa4:	2e e1       	ldi	r18, 0x1E	; 30
     fa6:	30 e0       	ldi	r19, 0x00	; 0
     fa8:	28 1b       	sub	r18, r24
     faa:	39 0b       	sbc	r19, r25
     fac:	3c 83       	std	Y+4, r19	; 0x04
     fae:	2b 83       	std	Y+3, r18	; 0x03
     fb0:	ce 01       	movw	r24, r28
     fb2:	01 96       	adiw	r24, 0x01	; 1
     fb4:	0e 94 34 08 	call	0x1068	; 0x1068 <__pack_f>
     fb8:	04 c0       	rjmp	.+8      	; 0xfc2 <__floatsisf+0xb0>
     fba:	60 e0       	ldi	r22, 0x00	; 0
     fbc:	70 e0       	ldi	r23, 0x00	; 0
     fbe:	80 e0       	ldi	r24, 0x00	; 0
     fc0:	9f ec       	ldi	r25, 0xCF	; 207
     fc2:	28 96       	adiw	r28, 0x08	; 8
     fc4:	e4 e0       	ldi	r30, 0x04	; 4
     fc6:	0c 94 48 0a 	jmp	0x1490	; 0x1490 <__epilogue_restores__+0x1c>

00000fca <__fixsfsi>:
     fca:	ac e0       	ldi	r26, 0x0C	; 12
     fcc:	b0 e0       	ldi	r27, 0x00	; 0
     fce:	eb ee       	ldi	r30, 0xEB	; 235
     fd0:	f7 e0       	ldi	r31, 0x07	; 7
     fd2:	0c 94 2c 0a 	jmp	0x1458	; 0x1458 <__prologue_saves__+0x1c>
     fd6:	69 87       	std	Y+9, r22	; 0x09
     fd8:	7a 87       	std	Y+10, r23	; 0x0a
     fda:	8b 87       	std	Y+11, r24	; 0x0b
     fdc:	9c 87       	std	Y+12, r25	; 0x0c
     fde:	be 01       	movw	r22, r28
     fe0:	6f 5f       	subi	r22, 0xFF	; 255
     fe2:	7f 4f       	sbci	r23, 0xFF	; 255
     fe4:	ce 01       	movw	r24, r28
     fe6:	09 96       	adiw	r24, 0x09	; 9
     fe8:	0e 94 fe 08 	call	0x11fc	; 0x11fc <__unpack_f>
     fec:	89 81       	ldd	r24, Y+1	; 0x01
     fee:	82 30       	cpi	r24, 0x02	; 2
     ff0:	91 f1       	breq	.+100    	; 0x1056 <__fixsfsi+0x8c>
     ff2:	82 30       	cpi	r24, 0x02	; 2
     ff4:	80 f1       	brcs	.+96     	; 0x1056 <__fixsfsi+0x8c>
     ff6:	84 30       	cpi	r24, 0x04	; 4
     ff8:	41 f4       	brne	.+16     	; 0x100a <__fixsfsi+0x40>
     ffa:	8a 81       	ldd	r24, Y+2	; 0x02
     ffc:	88 23       	and	r24, r24
     ffe:	31 f1       	breq	.+76     	; 0x104c <__fixsfsi+0x82>
    1000:	00 e0       	ldi	r16, 0x00	; 0
    1002:	10 e0       	ldi	r17, 0x00	; 0
    1004:	20 e0       	ldi	r18, 0x00	; 0
    1006:	30 e8       	ldi	r19, 0x80	; 128
    1008:	29 c0       	rjmp	.+82     	; 0x105c <__fixsfsi+0x92>
    100a:	2b 81       	ldd	r18, Y+3	; 0x03
    100c:	3c 81       	ldd	r19, Y+4	; 0x04
    100e:	37 fd       	sbrc	r19, 7
    1010:	22 c0       	rjmp	.+68     	; 0x1056 <__fixsfsi+0x8c>
    1012:	2f 31       	cpi	r18, 0x1F	; 31
    1014:	31 05       	cpc	r19, r1
    1016:	8c f7       	brge	.-30     	; 0xffa <__fixsfsi+0x30>
    1018:	8e e1       	ldi	r24, 0x1E	; 30
    101a:	90 e0       	ldi	r25, 0x00	; 0
    101c:	82 1b       	sub	r24, r18
    101e:	93 0b       	sbc	r25, r19
    1020:	0d 81       	ldd	r16, Y+5	; 0x05
    1022:	1e 81       	ldd	r17, Y+6	; 0x06
    1024:	2f 81       	ldd	r18, Y+7	; 0x07
    1026:	38 85       	ldd	r19, Y+8	; 0x08
    1028:	04 c0       	rjmp	.+8      	; 0x1032 <__fixsfsi+0x68>
    102a:	36 95       	lsr	r19
    102c:	27 95       	ror	r18
    102e:	17 95       	ror	r17
    1030:	07 95       	ror	r16
    1032:	8a 95       	dec	r24
    1034:	d2 f7       	brpl	.-12     	; 0x102a <__fixsfsi+0x60>
    1036:	8a 81       	ldd	r24, Y+2	; 0x02
    1038:	88 23       	and	r24, r24
    103a:	81 f0       	breq	.+32     	; 0x105c <__fixsfsi+0x92>
    103c:	30 95       	com	r19
    103e:	20 95       	com	r18
    1040:	10 95       	com	r17
    1042:	01 95       	neg	r16
    1044:	1f 4f       	sbci	r17, 0xFF	; 255
    1046:	2f 4f       	sbci	r18, 0xFF	; 255
    1048:	3f 4f       	sbci	r19, 0xFF	; 255
    104a:	08 c0       	rjmp	.+16     	; 0x105c <__fixsfsi+0x92>
    104c:	0f ef       	ldi	r16, 0xFF	; 255
    104e:	1f ef       	ldi	r17, 0xFF	; 255
    1050:	2f ef       	ldi	r18, 0xFF	; 255
    1052:	3f e7       	ldi	r19, 0x7F	; 127
    1054:	03 c0       	rjmp	.+6      	; 0x105c <__fixsfsi+0x92>
    1056:	00 e0       	ldi	r16, 0x00	; 0
    1058:	10 e0       	ldi	r17, 0x00	; 0
    105a:	98 01       	movw	r18, r16
    105c:	b8 01       	movw	r22, r16
    105e:	c9 01       	movw	r24, r18
    1060:	2c 96       	adiw	r28, 0x0c	; 12
    1062:	e4 e0       	ldi	r30, 0x04	; 4
    1064:	0c 94 48 0a 	jmp	0x1490	; 0x1490 <__epilogue_restores__+0x1c>

00001068 <__pack_f>:
    1068:	0f 93       	push	r16
    106a:	1f 93       	push	r17
    106c:	cf 93       	push	r28
    106e:	df 93       	push	r29
    1070:	dc 01       	movw	r26, r24
    1072:	14 96       	adiw	r26, 0x04	; 4
    1074:	4d 91       	ld	r20, X+
    1076:	5d 91       	ld	r21, X+
    1078:	6d 91       	ld	r22, X+
    107a:	7c 91       	ld	r23, X
    107c:	17 97       	sbiw	r26, 0x07	; 7
    107e:	11 96       	adiw	r26, 0x01	; 1
    1080:	ec 91       	ld	r30, X
    1082:	11 97       	sbiw	r26, 0x01	; 1
    1084:	8c 91       	ld	r24, X
    1086:	82 30       	cpi	r24, 0x02	; 2
    1088:	20 f4       	brcc	.+8      	; 0x1092 <__pack_f+0x2a>
    108a:	60 61       	ori	r22, 0x10	; 16
    108c:	8f ef       	ldi	r24, 0xFF	; 255
    108e:	90 e0       	ldi	r25, 0x00	; 0
    1090:	a6 c0       	rjmp	.+332    	; 0x11de <__pack_f+0x176>
    1092:	84 30       	cpi	r24, 0x04	; 4
    1094:	09 f4       	brne	.+2      	; 0x1098 <__pack_f+0x30>
    1096:	9e c0       	rjmp	.+316    	; 0x11d4 <__pack_f+0x16c>
    1098:	82 30       	cpi	r24, 0x02	; 2
    109a:	09 f4       	brne	.+2      	; 0x109e <__pack_f+0x36>
    109c:	95 c0       	rjmp	.+298    	; 0x11c8 <__pack_f+0x160>
    109e:	41 15       	cp	r20, r1
    10a0:	51 05       	cpc	r21, r1
    10a2:	61 05       	cpc	r22, r1
    10a4:	71 05       	cpc	r23, r1
    10a6:	09 f4       	brne	.+2      	; 0x10aa <__pack_f+0x42>
    10a8:	92 c0       	rjmp	.+292    	; 0x11ce <__pack_f+0x166>
    10aa:	12 96       	adiw	r26, 0x02	; 2
    10ac:	2d 91       	ld	r18, X+
    10ae:	3c 91       	ld	r19, X
    10b0:	13 97       	sbiw	r26, 0x03	; 3
    10b2:	22 38       	cpi	r18, 0x82	; 130
    10b4:	8f ef       	ldi	r24, 0xFF	; 255
    10b6:	38 07       	cpc	r19, r24
    10b8:	0c f0       	brlt	.+2      	; 0x10bc <__pack_f+0x54>
    10ba:	58 c0       	rjmp	.+176    	; 0x116c <__pack_f+0x104>
    10bc:	c2 e8       	ldi	r28, 0x82	; 130
    10be:	df ef       	ldi	r29, 0xFF	; 255
    10c0:	c2 1b       	sub	r28, r18
    10c2:	d3 0b       	sbc	r29, r19
    10c4:	ca 31       	cpi	r28, 0x1A	; 26
    10c6:	d1 05       	cpc	r29, r1
    10c8:	6c f5       	brge	.+90     	; 0x1124 <__pack_f+0xbc>
    10ca:	8a 01       	movw	r16, r20
    10cc:	9b 01       	movw	r18, r22
    10ce:	0c 2e       	mov	r0, r28
    10d0:	04 c0       	rjmp	.+8      	; 0x10da <__pack_f+0x72>
    10d2:	36 95       	lsr	r19
    10d4:	27 95       	ror	r18
    10d6:	17 95       	ror	r17
    10d8:	07 95       	ror	r16
    10da:	0a 94       	dec	r0
    10dc:	d2 f7       	brpl	.-12     	; 0x10d2 <__pack_f+0x6a>
    10de:	81 e0       	ldi	r24, 0x01	; 1
    10e0:	90 e0       	ldi	r25, 0x00	; 0
    10e2:	a0 e0       	ldi	r26, 0x00	; 0
    10e4:	b0 e0       	ldi	r27, 0x00	; 0
    10e6:	0c 2e       	mov	r0, r28
    10e8:	04 c0       	rjmp	.+8      	; 0x10f2 <__pack_f+0x8a>
    10ea:	88 0f       	add	r24, r24
    10ec:	99 1f       	adc	r25, r25
    10ee:	aa 1f       	adc	r26, r26
    10f0:	bb 1f       	adc	r27, r27
    10f2:	0a 94       	dec	r0
    10f4:	d2 f7       	brpl	.-12     	; 0x10ea <__pack_f+0x82>
    10f6:	01 97       	sbiw	r24, 0x01	; 1
    10f8:	a1 09       	sbc	r26, r1
    10fa:	b1 09       	sbc	r27, r1
    10fc:	84 23       	and	r24, r20
    10fe:	95 23       	and	r25, r21
    1100:	a6 23       	and	r26, r22
    1102:	b7 23       	and	r27, r23
    1104:	41 e0       	ldi	r20, 0x01	; 1
    1106:	50 e0       	ldi	r21, 0x00	; 0
    1108:	60 e0       	ldi	r22, 0x00	; 0
    110a:	70 e0       	ldi	r23, 0x00	; 0
    110c:	89 2b       	or	r24, r25
    110e:	8a 2b       	or	r24, r26
    1110:	8b 2b       	or	r24, r27
    1112:	19 f4       	brne	.+6      	; 0x111a <__pack_f+0xb2>
    1114:	40 e0       	ldi	r20, 0x00	; 0
    1116:	50 e0       	ldi	r21, 0x00	; 0
    1118:	ba 01       	movw	r22, r20
    111a:	40 2b       	or	r20, r16
    111c:	51 2b       	or	r21, r17
    111e:	62 2b       	or	r22, r18
    1120:	73 2b       	or	r23, r19
    1122:	03 c0       	rjmp	.+6      	; 0x112a <__pack_f+0xc2>
    1124:	40 e0       	ldi	r20, 0x00	; 0
    1126:	50 e0       	ldi	r21, 0x00	; 0
    1128:	ba 01       	movw	r22, r20
    112a:	db 01       	movw	r26, r22
    112c:	ca 01       	movw	r24, r20
    112e:	8f 77       	andi	r24, 0x7F	; 127
    1130:	99 27       	eor	r25, r25
    1132:	aa 27       	eor	r26, r26
    1134:	bb 27       	eor	r27, r27
    1136:	80 34       	cpi	r24, 0x40	; 64
    1138:	91 05       	cpc	r25, r1
    113a:	a1 05       	cpc	r26, r1
    113c:	b1 05       	cpc	r27, r1
    113e:	39 f4       	brne	.+14     	; 0x114e <__pack_f+0xe6>
    1140:	47 ff       	sbrs	r20, 7
    1142:	09 c0       	rjmp	.+18     	; 0x1156 <__pack_f+0xee>
    1144:	40 5c       	subi	r20, 0xC0	; 192
    1146:	5f 4f       	sbci	r21, 0xFF	; 255
    1148:	6f 4f       	sbci	r22, 0xFF	; 255
    114a:	7f 4f       	sbci	r23, 0xFF	; 255
    114c:	04 c0       	rjmp	.+8      	; 0x1156 <__pack_f+0xee>
    114e:	41 5c       	subi	r20, 0xC1	; 193
    1150:	5f 4f       	sbci	r21, 0xFF	; 255
    1152:	6f 4f       	sbci	r22, 0xFF	; 255
    1154:	7f 4f       	sbci	r23, 0xFF	; 255
    1156:	81 e0       	ldi	r24, 0x01	; 1
    1158:	90 e0       	ldi	r25, 0x00	; 0
    115a:	41 15       	cp	r20, r1
    115c:	51 05       	cpc	r21, r1
    115e:	61 05       	cpc	r22, r1
    1160:	20 e4       	ldi	r18, 0x40	; 64
    1162:	72 07       	cpc	r23, r18
    1164:	48 f5       	brcc	.+82     	; 0x11b8 <__pack_f+0x150>
    1166:	80 e0       	ldi	r24, 0x00	; 0
    1168:	90 e0       	ldi	r25, 0x00	; 0
    116a:	26 c0       	rjmp	.+76     	; 0x11b8 <__pack_f+0x150>
    116c:	20 38       	cpi	r18, 0x80	; 128
    116e:	31 05       	cpc	r19, r1
    1170:	8c f5       	brge	.+98     	; 0x11d4 <__pack_f+0x16c>
    1172:	db 01       	movw	r26, r22
    1174:	ca 01       	movw	r24, r20
    1176:	8f 77       	andi	r24, 0x7F	; 127
    1178:	99 27       	eor	r25, r25
    117a:	aa 27       	eor	r26, r26
    117c:	bb 27       	eor	r27, r27
    117e:	80 34       	cpi	r24, 0x40	; 64
    1180:	91 05       	cpc	r25, r1
    1182:	a1 05       	cpc	r26, r1
    1184:	b1 05       	cpc	r27, r1
    1186:	39 f4       	brne	.+14     	; 0x1196 <__pack_f+0x12e>
    1188:	47 ff       	sbrs	r20, 7
    118a:	09 c0       	rjmp	.+18     	; 0x119e <__pack_f+0x136>
    118c:	40 5c       	subi	r20, 0xC0	; 192
    118e:	5f 4f       	sbci	r21, 0xFF	; 255
    1190:	6f 4f       	sbci	r22, 0xFF	; 255
    1192:	7f 4f       	sbci	r23, 0xFF	; 255
    1194:	04 c0       	rjmp	.+8      	; 0x119e <__pack_f+0x136>
    1196:	41 5c       	subi	r20, 0xC1	; 193
    1198:	5f 4f       	sbci	r21, 0xFF	; 255
    119a:	6f 4f       	sbci	r22, 0xFF	; 255
    119c:	7f 4f       	sbci	r23, 0xFF	; 255
    119e:	77 fd       	sbrc	r23, 7
    11a0:	04 c0       	rjmp	.+8      	; 0x11aa <__pack_f+0x142>
    11a2:	c9 01       	movw	r24, r18
    11a4:	81 58       	subi	r24, 0x81	; 129
    11a6:	9f 4f       	sbci	r25, 0xFF	; 255
    11a8:	07 c0       	rjmp	.+14     	; 0x11b8 <__pack_f+0x150>
    11aa:	76 95       	lsr	r23
    11ac:	67 95       	ror	r22
    11ae:	57 95       	ror	r21
    11b0:	47 95       	ror	r20
    11b2:	c9 01       	movw	r24, r18
    11b4:	80 58       	subi	r24, 0x80	; 128
    11b6:	9f 4f       	sbci	r25, 0xFF	; 255
    11b8:	97 e0       	ldi	r25, 0x07	; 7
    11ba:	76 95       	lsr	r23
    11bc:	67 95       	ror	r22
    11be:	57 95       	ror	r21
    11c0:	47 95       	ror	r20
    11c2:	9a 95       	dec	r25
    11c4:	d1 f7       	brne	.-12     	; 0x11ba <__pack_f+0x152>
    11c6:	0b c0       	rjmp	.+22     	; 0x11de <__pack_f+0x176>
    11c8:	80 e0       	ldi	r24, 0x00	; 0
    11ca:	90 e0       	ldi	r25, 0x00	; 0
    11cc:	05 c0       	rjmp	.+10     	; 0x11d8 <__pack_f+0x170>
    11ce:	80 e0       	ldi	r24, 0x00	; 0
    11d0:	90 e0       	ldi	r25, 0x00	; 0
    11d2:	05 c0       	rjmp	.+10     	; 0x11de <__pack_f+0x176>
    11d4:	8f ef       	ldi	r24, 0xFF	; 255
    11d6:	90 e0       	ldi	r25, 0x00	; 0
    11d8:	40 e0       	ldi	r20, 0x00	; 0
    11da:	50 e0       	ldi	r21, 0x00	; 0
    11dc:	ba 01       	movw	r22, r20
    11de:	98 2f       	mov	r25, r24
    11e0:	96 95       	lsr	r25
    11e2:	e0 fb       	bst	r30, 0
    11e4:	97 f9       	bld	r25, 7
    11e6:	36 2f       	mov	r19, r22
    11e8:	80 fb       	bst	r24, 0
    11ea:	37 f9       	bld	r19, 7
    11ec:	64 2f       	mov	r22, r20
    11ee:	75 2f       	mov	r23, r21
    11f0:	83 2f       	mov	r24, r19
    11f2:	df 91       	pop	r29
    11f4:	cf 91       	pop	r28
    11f6:	1f 91       	pop	r17
    11f8:	0f 91       	pop	r16
    11fa:	08 95       	ret

000011fc <__unpack_f>:
    11fc:	cf 92       	push	r12
    11fe:	df 92       	push	r13
    1200:	ef 92       	push	r14
    1202:	dc 01       	movw	r26, r24
    1204:	fb 01       	movw	r30, r22
    1206:	cc 90       	ld	r12, X
    1208:	11 96       	adiw	r26, 0x01	; 1
    120a:	dc 90       	ld	r13, X
    120c:	11 97       	sbiw	r26, 0x01	; 1
    120e:	12 96       	adiw	r26, 0x02	; 2
    1210:	8c 91       	ld	r24, X
    1212:	12 97       	sbiw	r26, 0x02	; 2
    1214:	3f e7       	ldi	r19, 0x7F	; 127
    1216:	e3 2e       	mov	r14, r19
    1218:	e8 22       	and	r14, r24
    121a:	6e 2d       	mov	r22, r14
    121c:	a6 01       	movw	r20, r12
    121e:	70 e0       	ldi	r23, 0x00	; 0
    1220:	98 2f       	mov	r25, r24
    1222:	99 1f       	adc	r25, r25
    1224:	99 27       	eor	r25, r25
    1226:	99 1f       	adc	r25, r25
    1228:	13 96       	adiw	r26, 0x03	; 3
    122a:	2c 91       	ld	r18, X
    122c:	82 2f       	mov	r24, r18
    122e:	88 0f       	add	r24, r24
    1230:	89 2b       	or	r24, r25
    1232:	90 e0       	ldi	r25, 0x00	; 0
    1234:	27 fb       	bst	r18, 7
    1236:	22 27       	eor	r18, r18
    1238:	20 f9       	bld	r18, 0
    123a:	21 83       	std	Z+1, r18	; 0x01
    123c:	00 97       	sbiw	r24, 0x00	; 0
    123e:	29 f5       	brne	.+74     	; 0x128a <__unpack_f+0x8e>
    1240:	41 15       	cp	r20, r1
    1242:	51 05       	cpc	r21, r1
    1244:	61 05       	cpc	r22, r1
    1246:	71 05       	cpc	r23, r1
    1248:	11 f4       	brne	.+4      	; 0x124e <__unpack_f+0x52>
    124a:	82 e0       	ldi	r24, 0x02	; 2
    124c:	27 c0       	rjmp	.+78     	; 0x129c <__unpack_f+0xa0>
    124e:	82 e8       	ldi	r24, 0x82	; 130
    1250:	9f ef       	ldi	r25, 0xFF	; 255
    1252:	93 83       	std	Z+3, r25	; 0x03
    1254:	82 83       	std	Z+2, r24	; 0x02
    1256:	27 e0       	ldi	r18, 0x07	; 7
    1258:	44 0f       	add	r20, r20
    125a:	55 1f       	adc	r21, r21
    125c:	66 1f       	adc	r22, r22
    125e:	77 1f       	adc	r23, r23
    1260:	2a 95       	dec	r18
    1262:	d1 f7       	brne	.-12     	; 0x1258 <__unpack_f+0x5c>
    1264:	83 e0       	ldi	r24, 0x03	; 3
    1266:	80 83       	st	Z, r24
    1268:	09 c0       	rjmp	.+18     	; 0x127c <__unpack_f+0x80>
    126a:	44 0f       	add	r20, r20
    126c:	55 1f       	adc	r21, r21
    126e:	66 1f       	adc	r22, r22
    1270:	77 1f       	adc	r23, r23
    1272:	82 81       	ldd	r24, Z+2	; 0x02
    1274:	93 81       	ldd	r25, Z+3	; 0x03
    1276:	01 97       	sbiw	r24, 0x01	; 1
    1278:	93 83       	std	Z+3, r25	; 0x03
    127a:	82 83       	std	Z+2, r24	; 0x02
    127c:	41 15       	cp	r20, r1
    127e:	51 05       	cpc	r21, r1
    1280:	61 05       	cpc	r22, r1
    1282:	80 e4       	ldi	r24, 0x40	; 64
    1284:	78 07       	cpc	r23, r24
    1286:	88 f3       	brcs	.-30     	; 0x126a <__unpack_f+0x6e>
    1288:	20 c0       	rjmp	.+64     	; 0x12ca <__unpack_f+0xce>
    128a:	8f 3f       	cpi	r24, 0xFF	; 255
    128c:	91 05       	cpc	r25, r1
    128e:	79 f4       	brne	.+30     	; 0x12ae <__unpack_f+0xb2>
    1290:	41 15       	cp	r20, r1
    1292:	51 05       	cpc	r21, r1
    1294:	61 05       	cpc	r22, r1
    1296:	71 05       	cpc	r23, r1
    1298:	19 f4       	brne	.+6      	; 0x12a0 <__unpack_f+0xa4>
    129a:	84 e0       	ldi	r24, 0x04	; 4
    129c:	80 83       	st	Z, r24
    129e:	19 c0       	rjmp	.+50     	; 0x12d2 <__unpack_f+0xd6>
    12a0:	e4 fe       	sbrs	r14, 4
    12a2:	03 c0       	rjmp	.+6      	; 0x12aa <__unpack_f+0xae>
    12a4:	81 e0       	ldi	r24, 0x01	; 1
    12a6:	80 83       	st	Z, r24
    12a8:	10 c0       	rjmp	.+32     	; 0x12ca <__unpack_f+0xce>
    12aa:	10 82       	st	Z, r1
    12ac:	0e c0       	rjmp	.+28     	; 0x12ca <__unpack_f+0xce>
    12ae:	8f 57       	subi	r24, 0x7F	; 127
    12b0:	91 09       	sbc	r25, r1
    12b2:	93 83       	std	Z+3, r25	; 0x03
    12b4:	82 83       	std	Z+2, r24	; 0x02
    12b6:	83 e0       	ldi	r24, 0x03	; 3
    12b8:	80 83       	st	Z, r24
    12ba:	87 e0       	ldi	r24, 0x07	; 7
    12bc:	44 0f       	add	r20, r20
    12be:	55 1f       	adc	r21, r21
    12c0:	66 1f       	adc	r22, r22
    12c2:	77 1f       	adc	r23, r23
    12c4:	8a 95       	dec	r24
    12c6:	d1 f7       	brne	.-12     	; 0x12bc <__unpack_f+0xc0>
    12c8:	70 64       	ori	r23, 0x40	; 64
    12ca:	44 83       	std	Z+4, r20	; 0x04
    12cc:	55 83       	std	Z+5, r21	; 0x05
    12ce:	66 83       	std	Z+6, r22	; 0x06
    12d0:	77 83       	std	Z+7, r23	; 0x07
    12d2:	ef 90       	pop	r14
    12d4:	df 90       	pop	r13
    12d6:	cf 90       	pop	r12
    12d8:	08 95       	ret

000012da <__fpcmp_parts_f>:
    12da:	cf 93       	push	r28
    12dc:	fc 01       	movw	r30, r24
    12de:	db 01       	movw	r26, r22
    12e0:	90 81       	ld	r25, Z
    12e2:	92 30       	cpi	r25, 0x02	; 2
    12e4:	08 f4       	brcc	.+2      	; 0x12e8 <__fpcmp_parts_f+0xe>
    12e6:	52 c0       	rjmp	.+164    	; 0x138c <__fpcmp_parts_f+0xb2>
    12e8:	8c 91       	ld	r24, X
    12ea:	82 30       	cpi	r24, 0x02	; 2
    12ec:	08 f4       	brcc	.+2      	; 0x12f0 <__fpcmp_parts_f+0x16>
    12ee:	4e c0       	rjmp	.+156    	; 0x138c <__fpcmp_parts_f+0xb2>
    12f0:	94 30       	cpi	r25, 0x04	; 4
    12f2:	71 f4       	brne	.+28     	; 0x1310 <__fpcmp_parts_f+0x36>
    12f4:	84 30       	cpi	r24, 0x04	; 4
    12f6:	39 f4       	brne	.+14     	; 0x1306 <__fpcmp_parts_f+0x2c>
    12f8:	11 96       	adiw	r26, 0x01	; 1
    12fa:	2c 91       	ld	r18, X
    12fc:	30 e0       	ldi	r19, 0x00	; 0
    12fe:	81 81       	ldd	r24, Z+1	; 0x01
    1300:	28 1b       	sub	r18, r24
    1302:	31 09       	sbc	r19, r1
    1304:	48 c0       	rjmp	.+144    	; 0x1396 <__fpcmp_parts_f+0xbc>
    1306:	81 81       	ldd	r24, Z+1	; 0x01
    1308:	88 23       	and	r24, r24
    130a:	09 f4       	brne	.+2      	; 0x130e <__fpcmp_parts_f+0x34>
    130c:	3f c0       	rjmp	.+126    	; 0x138c <__fpcmp_parts_f+0xb2>
    130e:	3b c0       	rjmp	.+118    	; 0x1386 <__fpcmp_parts_f+0xac>
    1310:	84 30       	cpi	r24, 0x04	; 4
    1312:	29 f4       	brne	.+10     	; 0x131e <__fpcmp_parts_f+0x44>
    1314:	11 96       	adiw	r26, 0x01	; 1
    1316:	8c 91       	ld	r24, X
    1318:	81 11       	cpse	r24, r1
    131a:	38 c0       	rjmp	.+112    	; 0x138c <__fpcmp_parts_f+0xb2>
    131c:	34 c0       	rjmp	.+104    	; 0x1386 <__fpcmp_parts_f+0xac>
    131e:	92 30       	cpi	r25, 0x02	; 2
    1320:	19 f4       	brne	.+6      	; 0x1328 <__fpcmp_parts_f+0x4e>
    1322:	82 30       	cpi	r24, 0x02	; 2
    1324:	b9 f7       	brne	.-18     	; 0x1314 <__fpcmp_parts_f+0x3a>
    1326:	35 c0       	rjmp	.+106    	; 0x1392 <__fpcmp_parts_f+0xb8>
    1328:	82 30       	cpi	r24, 0x02	; 2
    132a:	69 f3       	breq	.-38     	; 0x1306 <__fpcmp_parts_f+0x2c>
    132c:	c1 81       	ldd	r28, Z+1	; 0x01
    132e:	11 96       	adiw	r26, 0x01	; 1
    1330:	8c 91       	ld	r24, X
    1332:	11 97       	sbiw	r26, 0x01	; 1
    1334:	c8 13       	cpse	r28, r24
    1336:	1d c0       	rjmp	.+58     	; 0x1372 <__fpcmp_parts_f+0x98>
    1338:	22 81       	ldd	r18, Z+2	; 0x02
    133a:	33 81       	ldd	r19, Z+3	; 0x03
    133c:	12 96       	adiw	r26, 0x02	; 2
    133e:	8d 91       	ld	r24, X+
    1340:	9c 91       	ld	r25, X
    1342:	13 97       	sbiw	r26, 0x03	; 3
    1344:	82 17       	cp	r24, r18
    1346:	93 07       	cpc	r25, r19
    1348:	0c f4       	brge	.+2      	; 0x134c <__fpcmp_parts_f+0x72>
    134a:	13 c0       	rjmp	.+38     	; 0x1372 <__fpcmp_parts_f+0x98>
    134c:	28 17       	cp	r18, r24
    134e:	39 07       	cpc	r19, r25
    1350:	0c f4       	brge	.+2      	; 0x1354 <__fpcmp_parts_f+0x7a>
    1352:	17 c0       	rjmp	.+46     	; 0x1382 <__fpcmp_parts_f+0xa8>
    1354:	44 81       	ldd	r20, Z+4	; 0x04
    1356:	55 81       	ldd	r21, Z+5	; 0x05
    1358:	66 81       	ldd	r22, Z+6	; 0x06
    135a:	77 81       	ldd	r23, Z+7	; 0x07
    135c:	14 96       	adiw	r26, 0x04	; 4
    135e:	8d 91       	ld	r24, X+
    1360:	9d 91       	ld	r25, X+
    1362:	0d 90       	ld	r0, X+
    1364:	bc 91       	ld	r27, X
    1366:	a0 2d       	mov	r26, r0
    1368:	84 17       	cp	r24, r20
    136a:	95 07       	cpc	r25, r21
    136c:	a6 07       	cpc	r26, r22
    136e:	b7 07       	cpc	r27, r23
    1370:	18 f4       	brcc	.+6      	; 0x1378 <__fpcmp_parts_f+0x9e>
    1372:	c1 11       	cpse	r28, r1
    1374:	08 c0       	rjmp	.+16     	; 0x1386 <__fpcmp_parts_f+0xac>
    1376:	0a c0       	rjmp	.+20     	; 0x138c <__fpcmp_parts_f+0xb2>
    1378:	48 17       	cp	r20, r24
    137a:	59 07       	cpc	r21, r25
    137c:	6a 07       	cpc	r22, r26
    137e:	7b 07       	cpc	r23, r27
    1380:	40 f4       	brcc	.+16     	; 0x1392 <__fpcmp_parts_f+0xb8>
    1382:	c1 11       	cpse	r28, r1
    1384:	03 c0       	rjmp	.+6      	; 0x138c <__fpcmp_parts_f+0xb2>
    1386:	2f ef       	ldi	r18, 0xFF	; 255
    1388:	3f ef       	ldi	r19, 0xFF	; 255
    138a:	05 c0       	rjmp	.+10     	; 0x1396 <__fpcmp_parts_f+0xbc>
    138c:	21 e0       	ldi	r18, 0x01	; 1
    138e:	30 e0       	ldi	r19, 0x00	; 0
    1390:	02 c0       	rjmp	.+4      	; 0x1396 <__fpcmp_parts_f+0xbc>
    1392:	20 e0       	ldi	r18, 0x00	; 0
    1394:	30 e0       	ldi	r19, 0x00	; 0
    1396:	c9 01       	movw	r24, r18
    1398:	cf 91       	pop	r28
    139a:	08 95       	ret

0000139c <main>:
}

int main(void) {
  // Init port B to show keyboard result
  DDRB = 0xff;
    139c:	8f ef       	ldi	r24, 0xFF	; 255
    139e:	84 b9       	out	0x04, r24	; 4
  // and turn out the LEDs
  PORTB = 0xff;   
    13a0:	85 b9       	out	0x05, r24	; 5
  
  // init the UART
  uart_init();
    13a2:	0e 94 d5 01 	call	0x3aa	; 0x3aa <uart_init>
  stdout = stdin = stderr = &uart_str;
    13a6:	80 e0       	ldi	r24, 0x00	; 0
    13a8:	91 e0       	ldi	r25, 0x01	; 1
    13aa:	90 93 29 04 	sts	0x0429, r25
    13ae:	80 93 28 04 	sts	0x0428, r24
    13b2:	90 93 25 04 	sts	0x0425, r25
    13b6:	80 93 24 04 	sts	0x0424, r24
    13ba:	90 93 27 04 	sts	0x0427, r25
    13be:	80 93 26 04 	sts	0x0426, r24
  fprintf(stdout, "Starting...\n\r");
    13c2:	bc 01       	movw	r22, r24
    13c4:	8e e6       	ldi	r24, 0x6E	; 110
    13c6:	91 e0       	ldi	r25, 0x01	; 1
    13c8:	0e 94 65 0a 	call	0x14ca	; 0x14ca <fputs>
  initialize();
    13cc:	0e 94 bb 01 	call	0x376	; 0x376 <initialize>
	
  //endless loop to read keyboard
  while(1) {
	// Used for keeping track of time.
	if( count <= 0){
		count = COUNTMS;
    13d0:	ce e3       	ldi	r28, 0x3E	; 62
  //play(1336, 852);
	
  //endless loop to read keyboard
  while(1) {
	// Used for keeping track of time.
	if( count <= 0){
    13d2:	80 91 f9 01 	lds	r24, 0x01F9
    13d6:	81 11       	cpse	r24, r1
    13d8:	0b c0       	rjmp	.+22     	; 0x13f0 <main+0x54>
		count = COUNTMS;
    13da:	c0 93 f9 01 	sts	0x01F9, r28
		time1++;
    13de:	80 91 f2 01 	lds	r24, 0x01F2
    13e2:	90 91 f3 01 	lds	r25, 0x01F3
    13e6:	01 96       	adiw	r24, 0x01	; 1
    13e8:	90 93 f3 01 	sts	0x01F3, r25
    13ec:	80 93 f2 01 	sts	0x01F2, r24
	}
	update_status_variables();
    13f0:	0e 94 6c 04 	call	0x8d8	; 0x8d8 <update_status_variables>
	//Used for debouncing
    if (time1>=t1) {
    13f4:	80 91 f2 01 	lds	r24, 0x01F2
    13f8:	90 91 f3 01 	lds	r25, 0x01F3
    13fc:	44 97       	sbiw	r24, 0x14	; 20
    13fe:	48 f3       	brcs	.-46     	; 0x13d2 <main+0x36>
		task1();
    1400:	0e 94 76 00 	call	0xec	; 0xec <task1>
    1404:	e6 cf       	rjmp	.-52     	; 0x13d2 <main+0x36>

00001406 <__clzsi2>:
    1406:	0e 94 0c 0a 	call	0x1418	; 0x1418 <__clzhi2>
    140a:	84 ff       	sbrs	r24, 4
    140c:	08 95       	ret
    140e:	cb 01       	movw	r24, r22
    1410:	0e 94 0c 0a 	call	0x1418	; 0x1418 <__clzhi2>
    1414:	80 5f       	subi	r24, 0xF0	; 240
    1416:	08 95       	ret

00001418 <__clzhi2>:
    1418:	aa 27       	eor	r26, r26
    141a:	99 23       	and	r25, r25
    141c:	29 f4       	brne	.+10     	; 0x1428 <__clzhi2+0x10>
    141e:	a8 5f       	subi	r26, 0xF8	; 248
    1420:	98 2b       	or	r25, r24
    1422:	11 f4       	brne	.+4      	; 0x1428 <__clzhi2+0x10>
    1424:	80 e1       	ldi	r24, 0x10	; 16
    1426:	08 95       	ret
    1428:	90 31       	cpi	r25, 0x10	; 16
    142a:	18 f4       	brcc	.+6      	; 0x1432 <__clzhi2+0x1a>
    142c:	ad 5f       	subi	r26, 0xFD	; 253
    142e:	92 95       	swap	r25
    1430:	a3 95       	inc	r26
    1432:	99 0f       	add	r25, r25
    1434:	e8 f7       	brcc	.-6      	; 0x1430 <__clzhi2+0x18>
    1436:	8a 2f       	mov	r24, r26
    1438:	99 27       	eor	r25, r25
    143a:	08 95       	ret

0000143c <__prologue_saves__>:
    143c:	2f 92       	push	r2
    143e:	3f 92       	push	r3
    1440:	4f 92       	push	r4
    1442:	5f 92       	push	r5
    1444:	6f 92       	push	r6
    1446:	7f 92       	push	r7
    1448:	8f 92       	push	r8
    144a:	9f 92       	push	r9
    144c:	af 92       	push	r10
    144e:	bf 92       	push	r11
    1450:	cf 92       	push	r12
    1452:	df 92       	push	r13
    1454:	ef 92       	push	r14
    1456:	ff 92       	push	r15
    1458:	0f 93       	push	r16
    145a:	1f 93       	push	r17
    145c:	cf 93       	push	r28
    145e:	df 93       	push	r29
    1460:	cd b7       	in	r28, 0x3d	; 61
    1462:	de b7       	in	r29, 0x3e	; 62
    1464:	ca 1b       	sub	r28, r26
    1466:	db 0b       	sbc	r29, r27
    1468:	0f b6       	in	r0, 0x3f	; 63
    146a:	f8 94       	cli
    146c:	de bf       	out	0x3e, r29	; 62
    146e:	0f be       	out	0x3f, r0	; 63
    1470:	cd bf       	out	0x3d, r28	; 61
    1472:	09 94       	ijmp

00001474 <__epilogue_restores__>:
    1474:	2a 88       	ldd	r2, Y+18	; 0x12
    1476:	39 88       	ldd	r3, Y+17	; 0x11
    1478:	48 88       	ldd	r4, Y+16	; 0x10
    147a:	5f 84       	ldd	r5, Y+15	; 0x0f
    147c:	6e 84       	ldd	r6, Y+14	; 0x0e
    147e:	7d 84       	ldd	r7, Y+13	; 0x0d
    1480:	8c 84       	ldd	r8, Y+12	; 0x0c
    1482:	9b 84       	ldd	r9, Y+11	; 0x0b
    1484:	aa 84       	ldd	r10, Y+10	; 0x0a
    1486:	b9 84       	ldd	r11, Y+9	; 0x09
    1488:	c8 84       	ldd	r12, Y+8	; 0x08
    148a:	df 80       	ldd	r13, Y+7	; 0x07
    148c:	ee 80       	ldd	r14, Y+6	; 0x06
    148e:	fd 80       	ldd	r15, Y+5	; 0x05
    1490:	0c 81       	ldd	r16, Y+4	; 0x04
    1492:	1b 81       	ldd	r17, Y+3	; 0x03
    1494:	aa 81       	ldd	r26, Y+2	; 0x02
    1496:	b9 81       	ldd	r27, Y+1	; 0x01
    1498:	ce 0f       	add	r28, r30
    149a:	d1 1d       	adc	r29, r1
    149c:	0f b6       	in	r0, 0x3f	; 63
    149e:	f8 94       	cli
    14a0:	de bf       	out	0x3e, r29	; 62
    14a2:	0f be       	out	0x3f, r0	; 63
    14a4:	cd bf       	out	0x3d, r28	; 61
    14a6:	ed 01       	movw	r28, r26
    14a8:	08 95       	ret

000014aa <fprintf>:
    14aa:	cf 93       	push	r28
    14ac:	df 93       	push	r29
    14ae:	cd b7       	in	r28, 0x3d	; 61
    14b0:	de b7       	in	r29, 0x3e	; 62
    14b2:	ce 01       	movw	r24, r28
    14b4:	09 96       	adiw	r24, 0x09	; 9
    14b6:	ac 01       	movw	r20, r24
    14b8:	6f 81       	ldd	r22, Y+7	; 0x07
    14ba:	78 85       	ldd	r23, Y+8	; 0x08
    14bc:	8d 81       	ldd	r24, Y+5	; 0x05
    14be:	9e 81       	ldd	r25, Y+6	; 0x06
    14c0:	0e 94 96 0a 	call	0x152c	; 0x152c <vfprintf>
    14c4:	df 91       	pop	r29
    14c6:	cf 91       	pop	r28
    14c8:	08 95       	ret

000014ca <fputs>:
    14ca:	ef 92       	push	r14
    14cc:	ff 92       	push	r15
    14ce:	0f 93       	push	r16
    14d0:	1f 93       	push	r17
    14d2:	cf 93       	push	r28
    14d4:	df 93       	push	r29
    14d6:	7c 01       	movw	r14, r24
    14d8:	8b 01       	movw	r16, r22
    14da:	db 01       	movw	r26, r22
    14dc:	13 96       	adiw	r26, 0x03	; 3
    14de:	8c 91       	ld	r24, X
    14e0:	81 ff       	sbrs	r24, 1
    14e2:	14 c0       	rjmp	.+40     	; 0x150c <fputs+0x42>
    14e4:	c0 e0       	ldi	r28, 0x00	; 0
    14e6:	d0 e0       	ldi	r29, 0x00	; 0
    14e8:	0b c0       	rjmp	.+22     	; 0x1500 <fputs+0x36>
    14ea:	d8 01       	movw	r26, r16
    14ec:	18 96       	adiw	r26, 0x08	; 8
    14ee:	ed 91       	ld	r30, X+
    14f0:	fc 91       	ld	r31, X
    14f2:	19 97       	sbiw	r26, 0x09	; 9
    14f4:	b8 01       	movw	r22, r16
    14f6:	09 95       	icall
    14f8:	89 2b       	or	r24, r25
    14fa:	11 f0       	breq	.+4      	; 0x1500 <fputs+0x36>
    14fc:	cf ef       	ldi	r28, 0xFF	; 255
    14fe:	df ef       	ldi	r29, 0xFF	; 255
    1500:	f7 01       	movw	r30, r14
    1502:	81 91       	ld	r24, Z+
    1504:	7f 01       	movw	r14, r30
    1506:	81 11       	cpse	r24, r1
    1508:	f0 cf       	rjmp	.-32     	; 0x14ea <fputs+0x20>
    150a:	02 c0       	rjmp	.+4      	; 0x1510 <fputs+0x46>
    150c:	cf ef       	ldi	r28, 0xFF	; 255
    150e:	df ef       	ldi	r29, 0xFF	; 255
    1510:	ce 01       	movw	r24, r28
    1512:	df 91       	pop	r29
    1514:	cf 91       	pop	r28
    1516:	1f 91       	pop	r17
    1518:	0f 91       	pop	r16
    151a:	ff 90       	pop	r15
    151c:	ef 90       	pop	r14
    151e:	08 95       	ret

00001520 <sin>:
    1520:	9f 93       	push	r25
    1522:	aa d2       	rcall	.+1364   	; 0x1a78 <__fp_rempio2>
    1524:	0f 90       	pop	r0
    1526:	07 fc       	sbrc	r0, 7
    1528:	ee 5f       	subi	r30, 0xFE	; 254
    152a:	cd c2       	rjmp	.+1434   	; 0x1ac6 <__fp_sinus>

0000152c <vfprintf>:
    152c:	2f 92       	push	r2
    152e:	3f 92       	push	r3
    1530:	4f 92       	push	r4
    1532:	5f 92       	push	r5
    1534:	6f 92       	push	r6
    1536:	7f 92       	push	r7
    1538:	8f 92       	push	r8
    153a:	9f 92       	push	r9
    153c:	af 92       	push	r10
    153e:	bf 92       	push	r11
    1540:	cf 92       	push	r12
    1542:	df 92       	push	r13
    1544:	ef 92       	push	r14
    1546:	ff 92       	push	r15
    1548:	0f 93       	push	r16
    154a:	1f 93       	push	r17
    154c:	cf 93       	push	r28
    154e:	df 93       	push	r29
    1550:	cd b7       	in	r28, 0x3d	; 61
    1552:	de b7       	in	r29, 0x3e	; 62
    1554:	2c 97       	sbiw	r28, 0x0c	; 12
    1556:	0f b6       	in	r0, 0x3f	; 63
    1558:	f8 94       	cli
    155a:	de bf       	out	0x3e, r29	; 62
    155c:	0f be       	out	0x3f, r0	; 63
    155e:	cd bf       	out	0x3d, r28	; 61
    1560:	7c 01       	movw	r14, r24
    1562:	6b 01       	movw	r12, r22
    1564:	8a 01       	movw	r16, r20
    1566:	fc 01       	movw	r30, r24
    1568:	17 82       	std	Z+7, r1	; 0x07
    156a:	16 82       	std	Z+6, r1	; 0x06
    156c:	83 81       	ldd	r24, Z+3	; 0x03
    156e:	81 ff       	sbrs	r24, 1
    1570:	c6 c1       	rjmp	.+908    	; 0x18fe <vfprintf+0x3d2>
    1572:	88 24       	eor	r8, r8
    1574:	83 94       	inc	r8
    1576:	91 2c       	mov	r9, r1
    1578:	8c 0e       	add	r8, r28
    157a:	9d 1e       	adc	r9, r29
    157c:	f7 01       	movw	r30, r14
    157e:	93 81       	ldd	r25, Z+3	; 0x03
    1580:	f6 01       	movw	r30, r12
    1582:	93 fd       	sbrc	r25, 3
    1584:	85 91       	lpm	r24, Z+
    1586:	93 ff       	sbrs	r25, 3
    1588:	81 91       	ld	r24, Z+
    158a:	6f 01       	movw	r12, r30
    158c:	88 23       	and	r24, r24
    158e:	09 f4       	brne	.+2      	; 0x1592 <vfprintf+0x66>
    1590:	b2 c1       	rjmp	.+868    	; 0x18f6 <vfprintf+0x3ca>
    1592:	85 32       	cpi	r24, 0x25	; 37
    1594:	39 f4       	brne	.+14     	; 0x15a4 <vfprintf+0x78>
    1596:	93 fd       	sbrc	r25, 3
    1598:	85 91       	lpm	r24, Z+
    159a:	93 ff       	sbrs	r25, 3
    159c:	81 91       	ld	r24, Z+
    159e:	6f 01       	movw	r12, r30
    15a0:	85 32       	cpi	r24, 0x25	; 37
    15a2:	29 f4       	brne	.+10     	; 0x15ae <vfprintf+0x82>
    15a4:	b7 01       	movw	r22, r14
    15a6:	90 e0       	ldi	r25, 0x00	; 0
    15a8:	0e 94 b1 0c 	call	0x1962	; 0x1962 <fputc>
    15ac:	e7 cf       	rjmp	.-50     	; 0x157c <vfprintf+0x50>
    15ae:	51 2c       	mov	r5, r1
    15b0:	31 2c       	mov	r3, r1
    15b2:	20 e0       	ldi	r18, 0x00	; 0
    15b4:	20 32       	cpi	r18, 0x20	; 32
    15b6:	a8 f4       	brcc	.+42     	; 0x15e2 <vfprintf+0xb6>
    15b8:	8b 32       	cpi	r24, 0x2B	; 43
    15ba:	61 f0       	breq	.+24     	; 0x15d4 <vfprintf+0xa8>
    15bc:	28 f4       	brcc	.+10     	; 0x15c8 <vfprintf+0x9c>
    15be:	80 32       	cpi	r24, 0x20	; 32
    15c0:	51 f0       	breq	.+20     	; 0x15d6 <vfprintf+0xaa>
    15c2:	83 32       	cpi	r24, 0x23	; 35
    15c4:	71 f4       	brne	.+28     	; 0x15e2 <vfprintf+0xb6>
    15c6:	0b c0       	rjmp	.+22     	; 0x15de <vfprintf+0xb2>
    15c8:	8d 32       	cpi	r24, 0x2D	; 45
    15ca:	39 f0       	breq	.+14     	; 0x15da <vfprintf+0xae>
    15cc:	80 33       	cpi	r24, 0x30	; 48
    15ce:	49 f4       	brne	.+18     	; 0x15e2 <vfprintf+0xb6>
    15d0:	21 60       	ori	r18, 0x01	; 1
    15d2:	28 c0       	rjmp	.+80     	; 0x1624 <vfprintf+0xf8>
    15d4:	22 60       	ori	r18, 0x02	; 2
    15d6:	24 60       	ori	r18, 0x04	; 4
    15d8:	25 c0       	rjmp	.+74     	; 0x1624 <vfprintf+0xf8>
    15da:	28 60       	ori	r18, 0x08	; 8
    15dc:	23 c0       	rjmp	.+70     	; 0x1624 <vfprintf+0xf8>
    15de:	20 61       	ori	r18, 0x10	; 16
    15e0:	21 c0       	rjmp	.+66     	; 0x1624 <vfprintf+0xf8>
    15e2:	27 fd       	sbrc	r18, 7
    15e4:	27 c0       	rjmp	.+78     	; 0x1634 <vfprintf+0x108>
    15e6:	38 2f       	mov	r19, r24
    15e8:	30 53       	subi	r19, 0x30	; 48
    15ea:	3a 30       	cpi	r19, 0x0A	; 10
    15ec:	78 f4       	brcc	.+30     	; 0x160c <vfprintf+0xe0>
    15ee:	26 ff       	sbrs	r18, 6
    15f0:	06 c0       	rjmp	.+12     	; 0x15fe <vfprintf+0xd2>
    15f2:	fa e0       	ldi	r31, 0x0A	; 10
    15f4:	5f 9e       	mul	r5, r31
    15f6:	30 0d       	add	r19, r0
    15f8:	11 24       	eor	r1, r1
    15fa:	53 2e       	mov	r5, r19
    15fc:	13 c0       	rjmp	.+38     	; 0x1624 <vfprintf+0xf8>
    15fe:	8a e0       	ldi	r24, 0x0A	; 10
    1600:	38 9e       	mul	r3, r24
    1602:	30 0d       	add	r19, r0
    1604:	11 24       	eor	r1, r1
    1606:	33 2e       	mov	r3, r19
    1608:	20 62       	ori	r18, 0x20	; 32
    160a:	0c c0       	rjmp	.+24     	; 0x1624 <vfprintf+0xf8>
    160c:	8e 32       	cpi	r24, 0x2E	; 46
    160e:	21 f4       	brne	.+8      	; 0x1618 <vfprintf+0xec>
    1610:	26 fd       	sbrc	r18, 6
    1612:	71 c1       	rjmp	.+738    	; 0x18f6 <vfprintf+0x3ca>
    1614:	20 64       	ori	r18, 0x40	; 64
    1616:	06 c0       	rjmp	.+12     	; 0x1624 <vfprintf+0xf8>
    1618:	8c 36       	cpi	r24, 0x6C	; 108
    161a:	11 f4       	brne	.+4      	; 0x1620 <vfprintf+0xf4>
    161c:	20 68       	ori	r18, 0x80	; 128
    161e:	02 c0       	rjmp	.+4      	; 0x1624 <vfprintf+0xf8>
    1620:	88 36       	cpi	r24, 0x68	; 104
    1622:	41 f4       	brne	.+16     	; 0x1634 <vfprintf+0x108>
    1624:	f6 01       	movw	r30, r12
    1626:	93 fd       	sbrc	r25, 3
    1628:	85 91       	lpm	r24, Z+
    162a:	93 ff       	sbrs	r25, 3
    162c:	81 91       	ld	r24, Z+
    162e:	6f 01       	movw	r12, r30
    1630:	81 11       	cpse	r24, r1
    1632:	c0 cf       	rjmp	.-128    	; 0x15b4 <vfprintf+0x88>
    1634:	98 2f       	mov	r25, r24
    1636:	95 54       	subi	r25, 0x45	; 69
    1638:	93 30       	cpi	r25, 0x03	; 3
    163a:	18 f0       	brcs	.+6      	; 0x1642 <vfprintf+0x116>
    163c:	90 52       	subi	r25, 0x20	; 32
    163e:	93 30       	cpi	r25, 0x03	; 3
    1640:	28 f4       	brcc	.+10     	; 0x164c <vfprintf+0x120>
    1642:	0c 5f       	subi	r16, 0xFC	; 252
    1644:	1f 4f       	sbci	r17, 0xFF	; 255
    1646:	ff e3       	ldi	r31, 0x3F	; 63
    1648:	f9 83       	std	Y+1, r31	; 0x01
    164a:	0d c0       	rjmp	.+26     	; 0x1666 <vfprintf+0x13a>
    164c:	83 36       	cpi	r24, 0x63	; 99
    164e:	31 f0       	breq	.+12     	; 0x165c <vfprintf+0x130>
    1650:	83 37       	cpi	r24, 0x73	; 115
    1652:	71 f0       	breq	.+28     	; 0x1670 <vfprintf+0x144>
    1654:	83 35       	cpi	r24, 0x53	; 83
    1656:	09 f0       	breq	.+2      	; 0x165a <vfprintf+0x12e>
    1658:	5e c0       	rjmp	.+188    	; 0x1716 <vfprintf+0x1ea>
    165a:	23 c0       	rjmp	.+70     	; 0x16a2 <vfprintf+0x176>
    165c:	f8 01       	movw	r30, r16
    165e:	80 81       	ld	r24, Z
    1660:	89 83       	std	Y+1, r24	; 0x01
    1662:	0e 5f       	subi	r16, 0xFE	; 254
    1664:	1f 4f       	sbci	r17, 0xFF	; 255
    1666:	44 24       	eor	r4, r4
    1668:	43 94       	inc	r4
    166a:	51 2c       	mov	r5, r1
    166c:	54 01       	movw	r10, r8
    166e:	15 c0       	rjmp	.+42     	; 0x169a <vfprintf+0x16e>
    1670:	38 01       	movw	r6, r16
    1672:	f2 e0       	ldi	r31, 0x02	; 2
    1674:	6f 0e       	add	r6, r31
    1676:	71 1c       	adc	r7, r1
    1678:	f8 01       	movw	r30, r16
    167a:	a0 80       	ld	r10, Z
    167c:	b1 80       	ldd	r11, Z+1	; 0x01
    167e:	26 ff       	sbrs	r18, 6
    1680:	03 c0       	rjmp	.+6      	; 0x1688 <vfprintf+0x15c>
    1682:	65 2d       	mov	r22, r5
    1684:	70 e0       	ldi	r23, 0x00	; 0
    1686:	02 c0       	rjmp	.+4      	; 0x168c <vfprintf+0x160>
    1688:	6f ef       	ldi	r22, 0xFF	; 255
    168a:	7f ef       	ldi	r23, 0xFF	; 255
    168c:	c5 01       	movw	r24, r10
    168e:	2c 87       	std	Y+12, r18	; 0x0c
    1690:	0e 94 a6 0c 	call	0x194c	; 0x194c <strnlen>
    1694:	2c 01       	movw	r4, r24
    1696:	83 01       	movw	r16, r6
    1698:	2c 85       	ldd	r18, Y+12	; 0x0c
    169a:	6f e7       	ldi	r22, 0x7F	; 127
    169c:	26 2e       	mov	r2, r22
    169e:	22 22       	and	r2, r18
    16a0:	18 c0       	rjmp	.+48     	; 0x16d2 <vfprintf+0x1a6>
    16a2:	38 01       	movw	r6, r16
    16a4:	f2 e0       	ldi	r31, 0x02	; 2
    16a6:	6f 0e       	add	r6, r31
    16a8:	71 1c       	adc	r7, r1
    16aa:	f8 01       	movw	r30, r16
    16ac:	a0 80       	ld	r10, Z
    16ae:	b1 80       	ldd	r11, Z+1	; 0x01
    16b0:	26 ff       	sbrs	r18, 6
    16b2:	03 c0       	rjmp	.+6      	; 0x16ba <vfprintf+0x18e>
    16b4:	65 2d       	mov	r22, r5
    16b6:	70 e0       	ldi	r23, 0x00	; 0
    16b8:	02 c0       	rjmp	.+4      	; 0x16be <vfprintf+0x192>
    16ba:	6f ef       	ldi	r22, 0xFF	; 255
    16bc:	7f ef       	ldi	r23, 0xFF	; 255
    16be:	c5 01       	movw	r24, r10
    16c0:	2c 87       	std	Y+12, r18	; 0x0c
    16c2:	0e 94 9b 0c 	call	0x1936	; 0x1936 <strnlen_P>
    16c6:	2c 01       	movw	r4, r24
    16c8:	2c 85       	ldd	r18, Y+12	; 0x0c
    16ca:	50 e8       	ldi	r21, 0x80	; 128
    16cc:	25 2e       	mov	r2, r21
    16ce:	22 2a       	or	r2, r18
    16d0:	83 01       	movw	r16, r6
    16d2:	23 fc       	sbrc	r2, 3
    16d4:	1c c0       	rjmp	.+56     	; 0x170e <vfprintf+0x1e2>
    16d6:	06 c0       	rjmp	.+12     	; 0x16e4 <vfprintf+0x1b8>
    16d8:	b7 01       	movw	r22, r14
    16da:	80 e2       	ldi	r24, 0x20	; 32
    16dc:	90 e0       	ldi	r25, 0x00	; 0
    16de:	0e 94 b1 0c 	call	0x1962	; 0x1962 <fputc>
    16e2:	3a 94       	dec	r3
    16e4:	83 2d       	mov	r24, r3
    16e6:	90 e0       	ldi	r25, 0x00	; 0
    16e8:	48 16       	cp	r4, r24
    16ea:	59 06       	cpc	r5, r25
    16ec:	a8 f3       	brcs	.-22     	; 0x16d8 <vfprintf+0x1ac>
    16ee:	0f c0       	rjmp	.+30     	; 0x170e <vfprintf+0x1e2>
    16f0:	f5 01       	movw	r30, r10
    16f2:	27 fc       	sbrc	r2, 7
    16f4:	85 91       	lpm	r24, Z+
    16f6:	27 fe       	sbrs	r2, 7
    16f8:	81 91       	ld	r24, Z+
    16fa:	5f 01       	movw	r10, r30
    16fc:	b7 01       	movw	r22, r14
    16fe:	90 e0       	ldi	r25, 0x00	; 0
    1700:	0e 94 b1 0c 	call	0x1962	; 0x1962 <fputc>
    1704:	31 10       	cpse	r3, r1
    1706:	3a 94       	dec	r3
    1708:	f1 e0       	ldi	r31, 0x01	; 1
    170a:	4f 1a       	sub	r4, r31
    170c:	51 08       	sbc	r5, r1
    170e:	41 14       	cp	r4, r1
    1710:	51 04       	cpc	r5, r1
    1712:	71 f7       	brne	.-36     	; 0x16f0 <vfprintf+0x1c4>
    1714:	ed c0       	rjmp	.+474    	; 0x18f0 <vfprintf+0x3c4>
    1716:	84 36       	cpi	r24, 0x64	; 100
    1718:	11 f0       	breq	.+4      	; 0x171e <vfprintf+0x1f2>
    171a:	89 36       	cpi	r24, 0x69	; 105
    171c:	41 f5       	brne	.+80     	; 0x176e <vfprintf+0x242>
    171e:	f8 01       	movw	r30, r16
    1720:	27 ff       	sbrs	r18, 7
    1722:	07 c0       	rjmp	.+14     	; 0x1732 <vfprintf+0x206>
    1724:	60 81       	ld	r22, Z
    1726:	71 81       	ldd	r23, Z+1	; 0x01
    1728:	82 81       	ldd	r24, Z+2	; 0x02
    172a:	93 81       	ldd	r25, Z+3	; 0x03
    172c:	0c 5f       	subi	r16, 0xFC	; 252
    172e:	1f 4f       	sbci	r17, 0xFF	; 255
    1730:	08 c0       	rjmp	.+16     	; 0x1742 <vfprintf+0x216>
    1732:	60 81       	ld	r22, Z
    1734:	71 81       	ldd	r23, Z+1	; 0x01
    1736:	88 27       	eor	r24, r24
    1738:	77 fd       	sbrc	r23, 7
    173a:	80 95       	com	r24
    173c:	98 2f       	mov	r25, r24
    173e:	0e 5f       	subi	r16, 0xFE	; 254
    1740:	1f 4f       	sbci	r17, 0xFF	; 255
    1742:	4f e6       	ldi	r20, 0x6F	; 111
    1744:	b4 2e       	mov	r11, r20
    1746:	b2 22       	and	r11, r18
    1748:	97 ff       	sbrs	r25, 7
    174a:	09 c0       	rjmp	.+18     	; 0x175e <vfprintf+0x232>
    174c:	90 95       	com	r25
    174e:	80 95       	com	r24
    1750:	70 95       	com	r23
    1752:	61 95       	neg	r22
    1754:	7f 4f       	sbci	r23, 0xFF	; 255
    1756:	8f 4f       	sbci	r24, 0xFF	; 255
    1758:	9f 4f       	sbci	r25, 0xFF	; 255
    175a:	f0 e8       	ldi	r31, 0x80	; 128
    175c:	bf 2a       	or	r11, r31
    175e:	2a e0       	ldi	r18, 0x0A	; 10
    1760:	30 e0       	ldi	r19, 0x00	; 0
    1762:	a4 01       	movw	r20, r8
    1764:	0e 94 dd 0c 	call	0x19ba	; 0x19ba <__ultoa_invert>
    1768:	a8 2e       	mov	r10, r24
    176a:	a8 18       	sub	r10, r8
    176c:	43 c0       	rjmp	.+134    	; 0x17f4 <vfprintf+0x2c8>
    176e:	85 37       	cpi	r24, 0x75	; 117
    1770:	31 f4       	brne	.+12     	; 0x177e <vfprintf+0x252>
    1772:	3f ee       	ldi	r19, 0xEF	; 239
    1774:	b3 2e       	mov	r11, r19
    1776:	b2 22       	and	r11, r18
    1778:	2a e0       	ldi	r18, 0x0A	; 10
    177a:	30 e0       	ldi	r19, 0x00	; 0
    177c:	24 c0       	rjmp	.+72     	; 0x17c6 <vfprintf+0x29a>
    177e:	99 ef       	ldi	r25, 0xF9	; 249
    1780:	b9 2e       	mov	r11, r25
    1782:	b2 22       	and	r11, r18
    1784:	8f 36       	cpi	r24, 0x6F	; 111
    1786:	b9 f0       	breq	.+46     	; 0x17b6 <vfprintf+0x28a>
    1788:	20 f4       	brcc	.+8      	; 0x1792 <vfprintf+0x266>
    178a:	88 35       	cpi	r24, 0x58	; 88
    178c:	09 f0       	breq	.+2      	; 0x1790 <vfprintf+0x264>
    178e:	b3 c0       	rjmp	.+358    	; 0x18f6 <vfprintf+0x3ca>
    1790:	0d c0       	rjmp	.+26     	; 0x17ac <vfprintf+0x280>
    1792:	80 37       	cpi	r24, 0x70	; 112
    1794:	21 f0       	breq	.+8      	; 0x179e <vfprintf+0x272>
    1796:	88 37       	cpi	r24, 0x78	; 120
    1798:	09 f0       	breq	.+2      	; 0x179c <vfprintf+0x270>
    179a:	ad c0       	rjmp	.+346    	; 0x18f6 <vfprintf+0x3ca>
    179c:	02 c0       	rjmp	.+4      	; 0x17a2 <vfprintf+0x276>
    179e:	20 e1       	ldi	r18, 0x10	; 16
    17a0:	b2 2a       	or	r11, r18
    17a2:	b4 fe       	sbrs	r11, 4
    17a4:	0b c0       	rjmp	.+22     	; 0x17bc <vfprintf+0x290>
    17a6:	84 e0       	ldi	r24, 0x04	; 4
    17a8:	b8 2a       	or	r11, r24
    17aa:	08 c0       	rjmp	.+16     	; 0x17bc <vfprintf+0x290>
    17ac:	24 ff       	sbrs	r18, 4
    17ae:	09 c0       	rjmp	.+18     	; 0x17c2 <vfprintf+0x296>
    17b0:	e6 e0       	ldi	r30, 0x06	; 6
    17b2:	be 2a       	or	r11, r30
    17b4:	06 c0       	rjmp	.+12     	; 0x17c2 <vfprintf+0x296>
    17b6:	28 e0       	ldi	r18, 0x08	; 8
    17b8:	30 e0       	ldi	r19, 0x00	; 0
    17ba:	05 c0       	rjmp	.+10     	; 0x17c6 <vfprintf+0x29a>
    17bc:	20 e1       	ldi	r18, 0x10	; 16
    17be:	30 e0       	ldi	r19, 0x00	; 0
    17c0:	02 c0       	rjmp	.+4      	; 0x17c6 <vfprintf+0x29a>
    17c2:	20 e1       	ldi	r18, 0x10	; 16
    17c4:	32 e0       	ldi	r19, 0x02	; 2
    17c6:	f8 01       	movw	r30, r16
    17c8:	b7 fe       	sbrs	r11, 7
    17ca:	07 c0       	rjmp	.+14     	; 0x17da <vfprintf+0x2ae>
    17cc:	60 81       	ld	r22, Z
    17ce:	71 81       	ldd	r23, Z+1	; 0x01
    17d0:	82 81       	ldd	r24, Z+2	; 0x02
    17d2:	93 81       	ldd	r25, Z+3	; 0x03
    17d4:	0c 5f       	subi	r16, 0xFC	; 252
    17d6:	1f 4f       	sbci	r17, 0xFF	; 255
    17d8:	06 c0       	rjmp	.+12     	; 0x17e6 <vfprintf+0x2ba>
    17da:	60 81       	ld	r22, Z
    17dc:	71 81       	ldd	r23, Z+1	; 0x01
    17de:	80 e0       	ldi	r24, 0x00	; 0
    17e0:	90 e0       	ldi	r25, 0x00	; 0
    17e2:	0e 5f       	subi	r16, 0xFE	; 254
    17e4:	1f 4f       	sbci	r17, 0xFF	; 255
    17e6:	a4 01       	movw	r20, r8
    17e8:	0e 94 dd 0c 	call	0x19ba	; 0x19ba <__ultoa_invert>
    17ec:	a8 2e       	mov	r10, r24
    17ee:	a8 18       	sub	r10, r8
    17f0:	ff e7       	ldi	r31, 0x7F	; 127
    17f2:	bf 22       	and	r11, r31
    17f4:	b6 fe       	sbrs	r11, 6
    17f6:	0b c0       	rjmp	.+22     	; 0x180e <vfprintf+0x2e2>
    17f8:	2b 2d       	mov	r18, r11
    17fa:	2e 7f       	andi	r18, 0xFE	; 254
    17fc:	a5 14       	cp	r10, r5
    17fe:	50 f4       	brcc	.+20     	; 0x1814 <vfprintf+0x2e8>
    1800:	b4 fe       	sbrs	r11, 4
    1802:	0a c0       	rjmp	.+20     	; 0x1818 <vfprintf+0x2ec>
    1804:	b2 fc       	sbrc	r11, 2
    1806:	08 c0       	rjmp	.+16     	; 0x1818 <vfprintf+0x2ec>
    1808:	2b 2d       	mov	r18, r11
    180a:	2e 7e       	andi	r18, 0xEE	; 238
    180c:	05 c0       	rjmp	.+10     	; 0x1818 <vfprintf+0x2ec>
    180e:	7a 2c       	mov	r7, r10
    1810:	2b 2d       	mov	r18, r11
    1812:	03 c0       	rjmp	.+6      	; 0x181a <vfprintf+0x2ee>
    1814:	7a 2c       	mov	r7, r10
    1816:	01 c0       	rjmp	.+2      	; 0x181a <vfprintf+0x2ee>
    1818:	75 2c       	mov	r7, r5
    181a:	24 ff       	sbrs	r18, 4
    181c:	0d c0       	rjmp	.+26     	; 0x1838 <vfprintf+0x30c>
    181e:	fe 01       	movw	r30, r28
    1820:	ea 0d       	add	r30, r10
    1822:	f1 1d       	adc	r31, r1
    1824:	80 81       	ld	r24, Z
    1826:	80 33       	cpi	r24, 0x30	; 48
    1828:	11 f4       	brne	.+4      	; 0x182e <vfprintf+0x302>
    182a:	29 7e       	andi	r18, 0xE9	; 233
    182c:	09 c0       	rjmp	.+18     	; 0x1840 <vfprintf+0x314>
    182e:	22 ff       	sbrs	r18, 2
    1830:	06 c0       	rjmp	.+12     	; 0x183e <vfprintf+0x312>
    1832:	73 94       	inc	r7
    1834:	73 94       	inc	r7
    1836:	04 c0       	rjmp	.+8      	; 0x1840 <vfprintf+0x314>
    1838:	82 2f       	mov	r24, r18
    183a:	86 78       	andi	r24, 0x86	; 134
    183c:	09 f0       	breq	.+2      	; 0x1840 <vfprintf+0x314>
    183e:	73 94       	inc	r7
    1840:	23 fd       	sbrc	r18, 3
    1842:	14 c0       	rjmp	.+40     	; 0x186c <vfprintf+0x340>
    1844:	20 ff       	sbrs	r18, 0
    1846:	0f c0       	rjmp	.+30     	; 0x1866 <vfprintf+0x33a>
    1848:	5a 2c       	mov	r5, r10
    184a:	73 14       	cp	r7, r3
    184c:	60 f4       	brcc	.+24     	; 0x1866 <vfprintf+0x33a>
    184e:	53 0c       	add	r5, r3
    1850:	57 18       	sub	r5, r7
    1852:	73 2c       	mov	r7, r3
    1854:	08 c0       	rjmp	.+16     	; 0x1866 <vfprintf+0x33a>
    1856:	b7 01       	movw	r22, r14
    1858:	80 e2       	ldi	r24, 0x20	; 32
    185a:	90 e0       	ldi	r25, 0x00	; 0
    185c:	2c 87       	std	Y+12, r18	; 0x0c
    185e:	0e 94 b1 0c 	call	0x1962	; 0x1962 <fputc>
    1862:	73 94       	inc	r7
    1864:	2c 85       	ldd	r18, Y+12	; 0x0c
    1866:	73 14       	cp	r7, r3
    1868:	b0 f3       	brcs	.-20     	; 0x1856 <vfprintf+0x32a>
    186a:	04 c0       	rjmp	.+8      	; 0x1874 <vfprintf+0x348>
    186c:	73 14       	cp	r7, r3
    186e:	10 f4       	brcc	.+4      	; 0x1874 <vfprintf+0x348>
    1870:	37 18       	sub	r3, r7
    1872:	01 c0       	rjmp	.+2      	; 0x1876 <vfprintf+0x34a>
    1874:	31 2c       	mov	r3, r1
    1876:	24 ff       	sbrs	r18, 4
    1878:	12 c0       	rjmp	.+36     	; 0x189e <vfprintf+0x372>
    187a:	b7 01       	movw	r22, r14
    187c:	80 e3       	ldi	r24, 0x30	; 48
    187e:	90 e0       	ldi	r25, 0x00	; 0
    1880:	2c 87       	std	Y+12, r18	; 0x0c
    1882:	0e 94 b1 0c 	call	0x1962	; 0x1962 <fputc>
    1886:	2c 85       	ldd	r18, Y+12	; 0x0c
    1888:	22 ff       	sbrs	r18, 2
    188a:	1e c0       	rjmp	.+60     	; 0x18c8 <vfprintf+0x39c>
    188c:	21 ff       	sbrs	r18, 1
    188e:	03 c0       	rjmp	.+6      	; 0x1896 <vfprintf+0x36a>
    1890:	88 e5       	ldi	r24, 0x58	; 88
    1892:	90 e0       	ldi	r25, 0x00	; 0
    1894:	02 c0       	rjmp	.+4      	; 0x189a <vfprintf+0x36e>
    1896:	88 e7       	ldi	r24, 0x78	; 120
    1898:	90 e0       	ldi	r25, 0x00	; 0
    189a:	b7 01       	movw	r22, r14
    189c:	0c c0       	rjmp	.+24     	; 0x18b6 <vfprintf+0x38a>
    189e:	82 2f       	mov	r24, r18
    18a0:	86 78       	andi	r24, 0x86	; 134
    18a2:	91 f0       	breq	.+36     	; 0x18c8 <vfprintf+0x39c>
    18a4:	21 fd       	sbrc	r18, 1
    18a6:	02 c0       	rjmp	.+4      	; 0x18ac <vfprintf+0x380>
    18a8:	80 e2       	ldi	r24, 0x20	; 32
    18aa:	01 c0       	rjmp	.+2      	; 0x18ae <vfprintf+0x382>
    18ac:	8b e2       	ldi	r24, 0x2B	; 43
    18ae:	27 fd       	sbrc	r18, 7
    18b0:	8d e2       	ldi	r24, 0x2D	; 45
    18b2:	b7 01       	movw	r22, r14
    18b4:	90 e0       	ldi	r25, 0x00	; 0
    18b6:	0e 94 b1 0c 	call	0x1962	; 0x1962 <fputc>
    18ba:	06 c0       	rjmp	.+12     	; 0x18c8 <vfprintf+0x39c>
    18bc:	b7 01       	movw	r22, r14
    18be:	80 e3       	ldi	r24, 0x30	; 48
    18c0:	90 e0       	ldi	r25, 0x00	; 0
    18c2:	0e 94 b1 0c 	call	0x1962	; 0x1962 <fputc>
    18c6:	5a 94       	dec	r5
    18c8:	a5 14       	cp	r10, r5
    18ca:	c0 f3       	brcs	.-16     	; 0x18bc <vfprintf+0x390>
    18cc:	aa 94       	dec	r10
    18ce:	f4 01       	movw	r30, r8
    18d0:	ea 0d       	add	r30, r10
    18d2:	f1 1d       	adc	r31, r1
    18d4:	b7 01       	movw	r22, r14
    18d6:	80 81       	ld	r24, Z
    18d8:	90 e0       	ldi	r25, 0x00	; 0
    18da:	0e 94 b1 0c 	call	0x1962	; 0x1962 <fputc>
    18de:	a1 10       	cpse	r10, r1
    18e0:	f5 cf       	rjmp	.-22     	; 0x18cc <vfprintf+0x3a0>
    18e2:	06 c0       	rjmp	.+12     	; 0x18f0 <vfprintf+0x3c4>
    18e4:	b7 01       	movw	r22, r14
    18e6:	80 e2       	ldi	r24, 0x20	; 32
    18e8:	90 e0       	ldi	r25, 0x00	; 0
    18ea:	0e 94 b1 0c 	call	0x1962	; 0x1962 <fputc>
    18ee:	3a 94       	dec	r3
    18f0:	31 10       	cpse	r3, r1
    18f2:	f8 cf       	rjmp	.-16     	; 0x18e4 <vfprintf+0x3b8>
    18f4:	43 ce       	rjmp	.-890    	; 0x157c <vfprintf+0x50>
    18f6:	f7 01       	movw	r30, r14
    18f8:	26 81       	ldd	r18, Z+6	; 0x06
    18fa:	37 81       	ldd	r19, Z+7	; 0x07
    18fc:	02 c0       	rjmp	.+4      	; 0x1902 <vfprintf+0x3d6>
    18fe:	2f ef       	ldi	r18, 0xFF	; 255
    1900:	3f ef       	ldi	r19, 0xFF	; 255
    1902:	c9 01       	movw	r24, r18
    1904:	2c 96       	adiw	r28, 0x0c	; 12
    1906:	0f b6       	in	r0, 0x3f	; 63
    1908:	f8 94       	cli
    190a:	de bf       	out	0x3e, r29	; 62
    190c:	0f be       	out	0x3f, r0	; 63
    190e:	cd bf       	out	0x3d, r28	; 61
    1910:	df 91       	pop	r29
    1912:	cf 91       	pop	r28
    1914:	1f 91       	pop	r17
    1916:	0f 91       	pop	r16
    1918:	ff 90       	pop	r15
    191a:	ef 90       	pop	r14
    191c:	df 90       	pop	r13
    191e:	cf 90       	pop	r12
    1920:	bf 90       	pop	r11
    1922:	af 90       	pop	r10
    1924:	9f 90       	pop	r9
    1926:	8f 90       	pop	r8
    1928:	7f 90       	pop	r7
    192a:	6f 90       	pop	r6
    192c:	5f 90       	pop	r5
    192e:	4f 90       	pop	r4
    1930:	3f 90       	pop	r3
    1932:	2f 90       	pop	r2
    1934:	08 95       	ret

00001936 <strnlen_P>:
    1936:	fc 01       	movw	r30, r24
    1938:	05 90       	lpm	r0, Z+
    193a:	61 50       	subi	r22, 0x01	; 1
    193c:	70 40       	sbci	r23, 0x00	; 0
    193e:	01 10       	cpse	r0, r1
    1940:	d8 f7       	brcc	.-10     	; 0x1938 <strnlen_P+0x2>
    1942:	80 95       	com	r24
    1944:	90 95       	com	r25
    1946:	8e 0f       	add	r24, r30
    1948:	9f 1f       	adc	r25, r31
    194a:	08 95       	ret

0000194c <strnlen>:
    194c:	fc 01       	movw	r30, r24
    194e:	61 50       	subi	r22, 0x01	; 1
    1950:	70 40       	sbci	r23, 0x00	; 0
    1952:	01 90       	ld	r0, Z+
    1954:	01 10       	cpse	r0, r1
    1956:	d8 f7       	brcc	.-10     	; 0x194e <strnlen+0x2>
    1958:	80 95       	com	r24
    195a:	90 95       	com	r25
    195c:	8e 0f       	add	r24, r30
    195e:	9f 1f       	adc	r25, r31
    1960:	08 95       	ret

00001962 <fputc>:
    1962:	0f 93       	push	r16
    1964:	1f 93       	push	r17
    1966:	cf 93       	push	r28
    1968:	df 93       	push	r29
    196a:	8c 01       	movw	r16, r24
    196c:	eb 01       	movw	r28, r22
    196e:	8b 81       	ldd	r24, Y+3	; 0x03
    1970:	81 fd       	sbrc	r24, 1
    1972:	03 c0       	rjmp	.+6      	; 0x197a <fputc+0x18>
    1974:	0f ef       	ldi	r16, 0xFF	; 255
    1976:	1f ef       	ldi	r17, 0xFF	; 255
    1978:	1a c0       	rjmp	.+52     	; 0x19ae <fputc+0x4c>
    197a:	82 ff       	sbrs	r24, 2
    197c:	0d c0       	rjmp	.+26     	; 0x1998 <fputc+0x36>
    197e:	2e 81       	ldd	r18, Y+6	; 0x06
    1980:	3f 81       	ldd	r19, Y+7	; 0x07
    1982:	8c 81       	ldd	r24, Y+4	; 0x04
    1984:	9d 81       	ldd	r25, Y+5	; 0x05
    1986:	28 17       	cp	r18, r24
    1988:	39 07       	cpc	r19, r25
    198a:	64 f4       	brge	.+24     	; 0x19a4 <fputc+0x42>
    198c:	e8 81       	ld	r30, Y
    198e:	f9 81       	ldd	r31, Y+1	; 0x01
    1990:	01 93       	st	Z+, r16
    1992:	f9 83       	std	Y+1, r31	; 0x01
    1994:	e8 83       	st	Y, r30
    1996:	06 c0       	rjmp	.+12     	; 0x19a4 <fputc+0x42>
    1998:	e8 85       	ldd	r30, Y+8	; 0x08
    199a:	f9 85       	ldd	r31, Y+9	; 0x09
    199c:	80 2f       	mov	r24, r16
    199e:	09 95       	icall
    19a0:	89 2b       	or	r24, r25
    19a2:	41 f7       	brne	.-48     	; 0x1974 <fputc+0x12>
    19a4:	8e 81       	ldd	r24, Y+6	; 0x06
    19a6:	9f 81       	ldd	r25, Y+7	; 0x07
    19a8:	01 96       	adiw	r24, 0x01	; 1
    19aa:	9f 83       	std	Y+7, r25	; 0x07
    19ac:	8e 83       	std	Y+6, r24	; 0x06
    19ae:	c8 01       	movw	r24, r16
    19b0:	df 91       	pop	r29
    19b2:	cf 91       	pop	r28
    19b4:	1f 91       	pop	r17
    19b6:	0f 91       	pop	r16
    19b8:	08 95       	ret

000019ba <__ultoa_invert>:
    19ba:	fa 01       	movw	r30, r20
    19bc:	aa 27       	eor	r26, r26
    19be:	28 30       	cpi	r18, 0x08	; 8
    19c0:	51 f1       	breq	.+84     	; 0x1a16 <__ultoa_invert+0x5c>
    19c2:	20 31       	cpi	r18, 0x10	; 16
    19c4:	81 f1       	breq	.+96     	; 0x1a26 <__ultoa_invert+0x6c>
    19c6:	e8 94       	clt
    19c8:	6f 93       	push	r22
    19ca:	6e 7f       	andi	r22, 0xFE	; 254
    19cc:	6e 5f       	subi	r22, 0xFE	; 254
    19ce:	7f 4f       	sbci	r23, 0xFF	; 255
    19d0:	8f 4f       	sbci	r24, 0xFF	; 255
    19d2:	9f 4f       	sbci	r25, 0xFF	; 255
    19d4:	af 4f       	sbci	r26, 0xFF	; 255
    19d6:	b1 e0       	ldi	r27, 0x01	; 1
    19d8:	3e d0       	rcall	.+124    	; 0x1a56 <__ultoa_invert+0x9c>
    19da:	b4 e0       	ldi	r27, 0x04	; 4
    19dc:	3c d0       	rcall	.+120    	; 0x1a56 <__ultoa_invert+0x9c>
    19de:	67 0f       	add	r22, r23
    19e0:	78 1f       	adc	r23, r24
    19e2:	89 1f       	adc	r24, r25
    19e4:	9a 1f       	adc	r25, r26
    19e6:	a1 1d       	adc	r26, r1
    19e8:	68 0f       	add	r22, r24
    19ea:	79 1f       	adc	r23, r25
    19ec:	8a 1f       	adc	r24, r26
    19ee:	91 1d       	adc	r25, r1
    19f0:	a1 1d       	adc	r26, r1
    19f2:	6a 0f       	add	r22, r26
    19f4:	71 1d       	adc	r23, r1
    19f6:	81 1d       	adc	r24, r1
    19f8:	91 1d       	adc	r25, r1
    19fa:	a1 1d       	adc	r26, r1
    19fc:	20 d0       	rcall	.+64     	; 0x1a3e <__ultoa_invert+0x84>
    19fe:	09 f4       	brne	.+2      	; 0x1a02 <__ultoa_invert+0x48>
    1a00:	68 94       	set
    1a02:	3f 91       	pop	r19
    1a04:	2a e0       	ldi	r18, 0x0A	; 10
    1a06:	26 9f       	mul	r18, r22
    1a08:	11 24       	eor	r1, r1
    1a0a:	30 19       	sub	r19, r0
    1a0c:	30 5d       	subi	r19, 0xD0	; 208
    1a0e:	31 93       	st	Z+, r19
    1a10:	de f6       	brtc	.-74     	; 0x19c8 <__ultoa_invert+0xe>
    1a12:	cf 01       	movw	r24, r30
    1a14:	08 95       	ret
    1a16:	46 2f       	mov	r20, r22
    1a18:	47 70       	andi	r20, 0x07	; 7
    1a1a:	40 5d       	subi	r20, 0xD0	; 208
    1a1c:	41 93       	st	Z+, r20
    1a1e:	b3 e0       	ldi	r27, 0x03	; 3
    1a20:	0f d0       	rcall	.+30     	; 0x1a40 <__ultoa_invert+0x86>
    1a22:	c9 f7       	brne	.-14     	; 0x1a16 <__ultoa_invert+0x5c>
    1a24:	f6 cf       	rjmp	.-20     	; 0x1a12 <__ultoa_invert+0x58>
    1a26:	46 2f       	mov	r20, r22
    1a28:	4f 70       	andi	r20, 0x0F	; 15
    1a2a:	40 5d       	subi	r20, 0xD0	; 208
    1a2c:	4a 33       	cpi	r20, 0x3A	; 58
    1a2e:	18 f0       	brcs	.+6      	; 0x1a36 <__ultoa_invert+0x7c>
    1a30:	49 5d       	subi	r20, 0xD9	; 217
    1a32:	31 fd       	sbrc	r19, 1
    1a34:	40 52       	subi	r20, 0x20	; 32
    1a36:	41 93       	st	Z+, r20
    1a38:	02 d0       	rcall	.+4      	; 0x1a3e <__ultoa_invert+0x84>
    1a3a:	a9 f7       	brne	.-22     	; 0x1a26 <__ultoa_invert+0x6c>
    1a3c:	ea cf       	rjmp	.-44     	; 0x1a12 <__ultoa_invert+0x58>
    1a3e:	b4 e0       	ldi	r27, 0x04	; 4
    1a40:	a6 95       	lsr	r26
    1a42:	97 95       	ror	r25
    1a44:	87 95       	ror	r24
    1a46:	77 95       	ror	r23
    1a48:	67 95       	ror	r22
    1a4a:	ba 95       	dec	r27
    1a4c:	c9 f7       	brne	.-14     	; 0x1a40 <__ultoa_invert+0x86>
    1a4e:	00 97       	sbiw	r24, 0x00	; 0
    1a50:	61 05       	cpc	r22, r1
    1a52:	71 05       	cpc	r23, r1
    1a54:	08 95       	ret
    1a56:	9b 01       	movw	r18, r22
    1a58:	ac 01       	movw	r20, r24
    1a5a:	0a 2e       	mov	r0, r26
    1a5c:	06 94       	lsr	r0
    1a5e:	57 95       	ror	r21
    1a60:	47 95       	ror	r20
    1a62:	37 95       	ror	r19
    1a64:	27 95       	ror	r18
    1a66:	ba 95       	dec	r27
    1a68:	c9 f7       	brne	.-14     	; 0x1a5c <__ultoa_invert+0xa2>
    1a6a:	62 0f       	add	r22, r18
    1a6c:	73 1f       	adc	r23, r19
    1a6e:	84 1f       	adc	r24, r20
    1a70:	95 1f       	adc	r25, r21
    1a72:	a0 1d       	adc	r26, r0
    1a74:	08 95       	ret
    1a76:	ce c0       	rjmp	.+412    	; 0x1c14 <__fp_nan>

00001a78 <__fp_rempio2>:
    1a78:	3f d0       	rcall	.+126    	; 0x1af8 <__fp_splitA>
    1a7a:	e8 f3       	brcs	.-6      	; 0x1a76 <__ultoa_invert+0xbc>
    1a7c:	e8 94       	clt
    1a7e:	e0 e0       	ldi	r30, 0x00	; 0
    1a80:	bb 27       	eor	r27, r27
    1a82:	9f 57       	subi	r25, 0x7F	; 127
    1a84:	f0 f0       	brcs	.+60     	; 0x1ac2 <__fp_rempio2+0x4a>
    1a86:	2a ed       	ldi	r18, 0xDA	; 218
    1a88:	3f e0       	ldi	r19, 0x0F	; 15
    1a8a:	49 ec       	ldi	r20, 0xC9	; 201
    1a8c:	06 c0       	rjmp	.+12     	; 0x1a9a <__fp_rempio2+0x22>
    1a8e:	ee 0f       	add	r30, r30
    1a90:	bb 0f       	add	r27, r27
    1a92:	66 1f       	adc	r22, r22
    1a94:	77 1f       	adc	r23, r23
    1a96:	88 1f       	adc	r24, r24
    1a98:	28 f0       	brcs	.+10     	; 0x1aa4 <__fp_rempio2+0x2c>
    1a9a:	b2 3a       	cpi	r27, 0xA2	; 162
    1a9c:	62 07       	cpc	r22, r18
    1a9e:	73 07       	cpc	r23, r19
    1aa0:	84 07       	cpc	r24, r20
    1aa2:	28 f0       	brcs	.+10     	; 0x1aae <__fp_rempio2+0x36>
    1aa4:	b2 5a       	subi	r27, 0xA2	; 162
    1aa6:	62 0b       	sbc	r22, r18
    1aa8:	73 0b       	sbc	r23, r19
    1aaa:	84 0b       	sbc	r24, r20
    1aac:	e3 95       	inc	r30
    1aae:	9a 95       	dec	r25
    1ab0:	72 f7       	brpl	.-36     	; 0x1a8e <__fp_rempio2+0x16>
    1ab2:	80 38       	cpi	r24, 0x80	; 128
    1ab4:	30 f4       	brcc	.+12     	; 0x1ac2 <__fp_rempio2+0x4a>
    1ab6:	9a 95       	dec	r25
    1ab8:	bb 0f       	add	r27, r27
    1aba:	66 1f       	adc	r22, r22
    1abc:	77 1f       	adc	r23, r23
    1abe:	88 1f       	adc	r24, r24
    1ac0:	d2 f7       	brpl	.-12     	; 0x1ab6 <__fp_rempio2+0x3e>
    1ac2:	90 48       	sbci	r25, 0x80	; 128
    1ac4:	9b c0       	rjmp	.+310    	; 0x1bfc <__fp_mpack_finite>

00001ac6 <__fp_sinus>:
    1ac6:	ef 93       	push	r30
    1ac8:	e0 ff       	sbrs	r30, 0
    1aca:	06 c0       	rjmp	.+12     	; 0x1ad8 <__fp_sinus+0x12>
    1acc:	a2 ea       	ldi	r26, 0xA2	; 162
    1ace:	2a ed       	ldi	r18, 0xDA	; 218
    1ad0:	3f e0       	ldi	r19, 0x0F	; 15
    1ad2:	49 ec       	ldi	r20, 0xC9	; 201
    1ad4:	5f eb       	ldi	r21, 0xBF	; 191
    1ad6:	37 d0       	rcall	.+110    	; 0x1b46 <__addsf3x>
    1ad8:	bf d0       	rcall	.+382    	; 0x1c58 <__fp_round>
    1ada:	0f 90       	pop	r0
    1adc:	03 94       	inc	r0
    1ade:	01 fc       	sbrc	r0, 1
    1ae0:	90 58       	subi	r25, 0x80	; 128
    1ae2:	ec e8       	ldi	r30, 0x8C	; 140
    1ae4:	f0 e0       	ldi	r31, 0x00	; 0
    1ae6:	99 c0       	rjmp	.+306    	; 0x1c1a <__fp_powsodd>

00001ae8 <__fp_split3>:
    1ae8:	57 fd       	sbrc	r21, 7
    1aea:	90 58       	subi	r25, 0x80	; 128
    1aec:	44 0f       	add	r20, r20
    1aee:	55 1f       	adc	r21, r21
    1af0:	59 f0       	breq	.+22     	; 0x1b08 <__fp_splitA+0x10>
    1af2:	5f 3f       	cpi	r21, 0xFF	; 255
    1af4:	71 f0       	breq	.+28     	; 0x1b12 <__fp_splitA+0x1a>
    1af6:	47 95       	ror	r20

00001af8 <__fp_splitA>:
    1af8:	88 0f       	add	r24, r24
    1afa:	97 fb       	bst	r25, 7
    1afc:	99 1f       	adc	r25, r25
    1afe:	61 f0       	breq	.+24     	; 0x1b18 <__fp_splitA+0x20>
    1b00:	9f 3f       	cpi	r25, 0xFF	; 255
    1b02:	79 f0       	breq	.+30     	; 0x1b22 <__fp_splitA+0x2a>
    1b04:	87 95       	ror	r24
    1b06:	08 95       	ret
    1b08:	12 16       	cp	r1, r18
    1b0a:	13 06       	cpc	r1, r19
    1b0c:	14 06       	cpc	r1, r20
    1b0e:	55 1f       	adc	r21, r21
    1b10:	f2 cf       	rjmp	.-28     	; 0x1af6 <__fp_split3+0xe>
    1b12:	46 95       	lsr	r20
    1b14:	f1 df       	rcall	.-30     	; 0x1af8 <__fp_splitA>
    1b16:	08 c0       	rjmp	.+16     	; 0x1b28 <__fp_splitA+0x30>
    1b18:	16 16       	cp	r1, r22
    1b1a:	17 06       	cpc	r1, r23
    1b1c:	18 06       	cpc	r1, r24
    1b1e:	99 1f       	adc	r25, r25
    1b20:	f1 cf       	rjmp	.-30     	; 0x1b04 <__fp_splitA+0xc>
    1b22:	86 95       	lsr	r24
    1b24:	71 05       	cpc	r23, r1
    1b26:	61 05       	cpc	r22, r1
    1b28:	08 94       	sec
    1b2a:	08 95       	ret
    1b2c:	87 d0       	rcall	.+270    	; 0x1c3c <__fp_pscA>
    1b2e:	30 f0       	brcs	.+12     	; 0x1b3c <__fp_splitA+0x44>
    1b30:	8c d0       	rcall	.+280    	; 0x1c4a <__fp_pscB>
    1b32:	20 f0       	brcs	.+8      	; 0x1b3c <__fp_splitA+0x44>
    1b34:	31 f4       	brne	.+12     	; 0x1b42 <__fp_splitA+0x4a>
    1b36:	9f 3f       	cpi	r25, 0xFF	; 255
    1b38:	11 f4       	brne	.+4      	; 0x1b3e <__fp_splitA+0x46>
    1b3a:	1e f4       	brtc	.+6      	; 0x1b42 <__fp_splitA+0x4a>
    1b3c:	6b c0       	rjmp	.+214    	; 0x1c14 <__fp_nan>
    1b3e:	0e f4       	brtc	.+2      	; 0x1b42 <__fp_splitA+0x4a>
    1b40:	e0 95       	com	r30
    1b42:	e7 fb       	bst	r30, 7
    1b44:	53 c0       	rjmp	.+166    	; 0x1bec <__fp_inf>

00001b46 <__addsf3x>:
    1b46:	e9 2f       	mov	r30, r25
    1b48:	cf df       	rcall	.-98     	; 0x1ae8 <__fp_split3>
    1b4a:	80 f3       	brcs	.-32     	; 0x1b2c <__fp_splitA+0x34>
    1b4c:	ba 17       	cp	r27, r26
    1b4e:	62 07       	cpc	r22, r18
    1b50:	73 07       	cpc	r23, r19
    1b52:	84 07       	cpc	r24, r20
    1b54:	95 07       	cpc	r25, r21
    1b56:	18 f0       	brcs	.+6      	; 0x1b5e <__addsf3x+0x18>
    1b58:	71 f4       	brne	.+28     	; 0x1b76 <__addsf3x+0x30>
    1b5a:	9e f5       	brtc	.+102    	; 0x1bc2 <__addsf3x+0x7c>
    1b5c:	8e c0       	rjmp	.+284    	; 0x1c7a <__fp_zero>
    1b5e:	0e f4       	brtc	.+2      	; 0x1b62 <__addsf3x+0x1c>
    1b60:	e0 95       	com	r30
    1b62:	0b 2e       	mov	r0, r27
    1b64:	ba 2f       	mov	r27, r26
    1b66:	a0 2d       	mov	r26, r0
    1b68:	0b 01       	movw	r0, r22
    1b6a:	b9 01       	movw	r22, r18
    1b6c:	90 01       	movw	r18, r0
    1b6e:	0c 01       	movw	r0, r24
    1b70:	ca 01       	movw	r24, r20
    1b72:	a0 01       	movw	r20, r0
    1b74:	11 24       	eor	r1, r1
    1b76:	ff 27       	eor	r31, r31
    1b78:	59 1b       	sub	r21, r25
    1b7a:	99 f0       	breq	.+38     	; 0x1ba2 <__addsf3x+0x5c>
    1b7c:	59 3f       	cpi	r21, 0xF9	; 249
    1b7e:	50 f4       	brcc	.+20     	; 0x1b94 <__addsf3x+0x4e>
    1b80:	50 3e       	cpi	r21, 0xE0	; 224
    1b82:	68 f1       	brcs	.+90     	; 0x1bde <__addsf3x+0x98>
    1b84:	1a 16       	cp	r1, r26
    1b86:	f0 40       	sbci	r31, 0x00	; 0
    1b88:	a2 2f       	mov	r26, r18
    1b8a:	23 2f       	mov	r18, r19
    1b8c:	34 2f       	mov	r19, r20
    1b8e:	44 27       	eor	r20, r20
    1b90:	58 5f       	subi	r21, 0xF8	; 248
    1b92:	f3 cf       	rjmp	.-26     	; 0x1b7a <__addsf3x+0x34>
    1b94:	46 95       	lsr	r20
    1b96:	37 95       	ror	r19
    1b98:	27 95       	ror	r18
    1b9a:	a7 95       	ror	r26
    1b9c:	f0 40       	sbci	r31, 0x00	; 0
    1b9e:	53 95       	inc	r21
    1ba0:	c9 f7       	brne	.-14     	; 0x1b94 <__addsf3x+0x4e>
    1ba2:	7e f4       	brtc	.+30     	; 0x1bc2 <__addsf3x+0x7c>
    1ba4:	1f 16       	cp	r1, r31
    1ba6:	ba 0b       	sbc	r27, r26
    1ba8:	62 0b       	sbc	r22, r18
    1baa:	73 0b       	sbc	r23, r19
    1bac:	84 0b       	sbc	r24, r20
    1bae:	ba f0       	brmi	.+46     	; 0x1bde <__addsf3x+0x98>
    1bb0:	91 50       	subi	r25, 0x01	; 1
    1bb2:	a1 f0       	breq	.+40     	; 0x1bdc <__addsf3x+0x96>
    1bb4:	ff 0f       	add	r31, r31
    1bb6:	bb 1f       	adc	r27, r27
    1bb8:	66 1f       	adc	r22, r22
    1bba:	77 1f       	adc	r23, r23
    1bbc:	88 1f       	adc	r24, r24
    1bbe:	c2 f7       	brpl	.-16     	; 0x1bb0 <__addsf3x+0x6a>
    1bc0:	0e c0       	rjmp	.+28     	; 0x1bde <__addsf3x+0x98>
    1bc2:	ba 0f       	add	r27, r26
    1bc4:	62 1f       	adc	r22, r18
    1bc6:	73 1f       	adc	r23, r19
    1bc8:	84 1f       	adc	r24, r20
    1bca:	48 f4       	brcc	.+18     	; 0x1bde <__addsf3x+0x98>
    1bcc:	87 95       	ror	r24
    1bce:	77 95       	ror	r23
    1bd0:	67 95       	ror	r22
    1bd2:	b7 95       	ror	r27
    1bd4:	f7 95       	ror	r31
    1bd6:	9e 3f       	cpi	r25, 0xFE	; 254
    1bd8:	08 f0       	brcs	.+2      	; 0x1bdc <__addsf3x+0x96>
    1bda:	b3 cf       	rjmp	.-154    	; 0x1b42 <__fp_splitA+0x4a>
    1bdc:	93 95       	inc	r25
    1bde:	88 0f       	add	r24, r24
    1be0:	08 f0       	brcs	.+2      	; 0x1be4 <__addsf3x+0x9e>
    1be2:	99 27       	eor	r25, r25
    1be4:	ee 0f       	add	r30, r30
    1be6:	97 95       	ror	r25
    1be8:	87 95       	ror	r24
    1bea:	08 95       	ret

00001bec <__fp_inf>:
    1bec:	97 f9       	bld	r25, 7
    1bee:	9f 67       	ori	r25, 0x7F	; 127
    1bf0:	80 e8       	ldi	r24, 0x80	; 128
    1bf2:	70 e0       	ldi	r23, 0x00	; 0
    1bf4:	60 e0       	ldi	r22, 0x00	; 0
    1bf6:	08 95       	ret

00001bf8 <__fp_mpack>:
    1bf8:	9f 3f       	cpi	r25, 0xFF	; 255
    1bfa:	31 f0       	breq	.+12     	; 0x1c08 <__fp_mpack_finite+0xc>

00001bfc <__fp_mpack_finite>:
    1bfc:	91 50       	subi	r25, 0x01	; 1
    1bfe:	20 f4       	brcc	.+8      	; 0x1c08 <__fp_mpack_finite+0xc>
    1c00:	87 95       	ror	r24
    1c02:	77 95       	ror	r23
    1c04:	67 95       	ror	r22
    1c06:	b7 95       	ror	r27
    1c08:	88 0f       	add	r24, r24
    1c0a:	91 1d       	adc	r25, r1
    1c0c:	96 95       	lsr	r25
    1c0e:	87 95       	ror	r24
    1c10:	97 f9       	bld	r25, 7
    1c12:	08 95       	ret

00001c14 <__fp_nan>:
    1c14:	9f ef       	ldi	r25, 0xFF	; 255
    1c16:	80 ec       	ldi	r24, 0xC0	; 192
    1c18:	08 95       	ret

00001c1a <__fp_powsodd>:
    1c1a:	9f 93       	push	r25
    1c1c:	8f 93       	push	r24
    1c1e:	7f 93       	push	r23
    1c20:	6f 93       	push	r22
    1c22:	ff 93       	push	r31
    1c24:	ef 93       	push	r30
    1c26:	9b 01       	movw	r18, r22
    1c28:	ac 01       	movw	r20, r24
    1c2a:	5f d8       	rcall	.-3906   	; 0xcea <__mulsf3>
    1c2c:	ef 91       	pop	r30
    1c2e:	ff 91       	pop	r31
    1c30:	2b d0       	rcall	.+86     	; 0x1c88 <__fp_powser>
    1c32:	2f 91       	pop	r18
    1c34:	3f 91       	pop	r19
    1c36:	4f 91       	pop	r20
    1c38:	5f 91       	pop	r21
    1c3a:	57 c8       	rjmp	.-3922   	; 0xcea <__mulsf3>

00001c3c <__fp_pscA>:
    1c3c:	00 24       	eor	r0, r0
    1c3e:	0a 94       	dec	r0
    1c40:	16 16       	cp	r1, r22
    1c42:	17 06       	cpc	r1, r23
    1c44:	18 06       	cpc	r1, r24
    1c46:	09 06       	cpc	r0, r25
    1c48:	08 95       	ret

00001c4a <__fp_pscB>:
    1c4a:	00 24       	eor	r0, r0
    1c4c:	0a 94       	dec	r0
    1c4e:	12 16       	cp	r1, r18
    1c50:	13 06       	cpc	r1, r19
    1c52:	14 06       	cpc	r1, r20
    1c54:	05 06       	cpc	r0, r21
    1c56:	08 95       	ret

00001c58 <__fp_round>:
    1c58:	09 2e       	mov	r0, r25
    1c5a:	03 94       	inc	r0
    1c5c:	00 0c       	add	r0, r0
    1c5e:	11 f4       	brne	.+4      	; 0x1c64 <__fp_round+0xc>
    1c60:	88 23       	and	r24, r24
    1c62:	52 f0       	brmi	.+20     	; 0x1c78 <__fp_round+0x20>
    1c64:	bb 0f       	add	r27, r27
    1c66:	40 f4       	brcc	.+16     	; 0x1c78 <__fp_round+0x20>
    1c68:	bf 2b       	or	r27, r31
    1c6a:	11 f4       	brne	.+4      	; 0x1c70 <__fp_round+0x18>
    1c6c:	60 ff       	sbrs	r22, 0
    1c6e:	04 c0       	rjmp	.+8      	; 0x1c78 <__fp_round+0x20>
    1c70:	6f 5f       	subi	r22, 0xFF	; 255
    1c72:	7f 4f       	sbci	r23, 0xFF	; 255
    1c74:	8f 4f       	sbci	r24, 0xFF	; 255
    1c76:	9f 4f       	sbci	r25, 0xFF	; 255
    1c78:	08 95       	ret

00001c7a <__fp_zero>:
    1c7a:	e8 94       	clt

00001c7c <__fp_szero>:
    1c7c:	bb 27       	eor	r27, r27
    1c7e:	66 27       	eor	r22, r22
    1c80:	77 27       	eor	r23, r23
    1c82:	cb 01       	movw	r24, r22
    1c84:	97 f9       	bld	r25, 7
    1c86:	08 95       	ret

00001c88 <__fp_powser>:
    1c88:	df 93       	push	r29
    1c8a:	cf 93       	push	r28
    1c8c:	1f 93       	push	r17
    1c8e:	0f 93       	push	r16
    1c90:	ff 92       	push	r15
    1c92:	ef 92       	push	r14
    1c94:	df 92       	push	r13
    1c96:	7b 01       	movw	r14, r22
    1c98:	8c 01       	movw	r16, r24
    1c9a:	68 94       	set
    1c9c:	05 c0       	rjmp	.+10     	; 0x1ca8 <__fp_powser+0x20>
    1c9e:	da 2e       	mov	r13, r26
    1ca0:	ef 01       	movw	r28, r30
    1ca2:	21 d0       	rcall	.+66     	; 0x1ce6 <__mulsf3x>
    1ca4:	fe 01       	movw	r30, r28
    1ca6:	e8 94       	clt
    1ca8:	a5 91       	lpm	r26, Z+
    1caa:	25 91       	lpm	r18, Z+
    1cac:	35 91       	lpm	r19, Z+
    1cae:	45 91       	lpm	r20, Z+
    1cb0:	55 91       	lpm	r21, Z+
    1cb2:	ae f3       	brts	.-22     	; 0x1c9e <__fp_powser+0x16>
    1cb4:	ef 01       	movw	r28, r30
    1cb6:	47 df       	rcall	.-370    	; 0x1b46 <__addsf3x>
    1cb8:	fe 01       	movw	r30, r28
    1cba:	97 01       	movw	r18, r14
    1cbc:	a8 01       	movw	r20, r16
    1cbe:	da 94       	dec	r13
    1cc0:	79 f7       	brne	.-34     	; 0x1ca0 <__fp_powser+0x18>
    1cc2:	df 90       	pop	r13
    1cc4:	ef 90       	pop	r14
    1cc6:	ff 90       	pop	r15
    1cc8:	0f 91       	pop	r16
    1cca:	1f 91       	pop	r17
    1ccc:	cf 91       	pop	r28
    1cce:	df 91       	pop	r29
    1cd0:	08 95       	ret
    1cd2:	b4 df       	rcall	.-152    	; 0x1c3c <__fp_pscA>
    1cd4:	28 f0       	brcs	.+10     	; 0x1ce0 <__fp_powser+0x58>
    1cd6:	b9 df       	rcall	.-142    	; 0x1c4a <__fp_pscB>
    1cd8:	18 f0       	brcs	.+6      	; 0x1ce0 <__fp_powser+0x58>
    1cda:	95 23       	and	r25, r21
    1cdc:	09 f0       	breq	.+2      	; 0x1ce0 <__fp_powser+0x58>
    1cde:	86 cf       	rjmp	.-244    	; 0x1bec <__fp_inf>
    1ce0:	99 cf       	rjmp	.-206    	; 0x1c14 <__fp_nan>
    1ce2:	11 24       	eor	r1, r1
    1ce4:	cb cf       	rjmp	.-106    	; 0x1c7c <__fp_szero>

00001ce6 <__mulsf3x>:
    1ce6:	00 df       	rcall	.-512    	; 0x1ae8 <__fp_split3>
    1ce8:	a0 f3       	brcs	.-24     	; 0x1cd2 <__fp_powser+0x4a>

00001cea <__mulsf3_pse>:
    1cea:	95 9f       	mul	r25, r21
    1cec:	d1 f3       	breq	.-12     	; 0x1ce2 <__fp_powser+0x5a>
    1cee:	95 0f       	add	r25, r21
    1cf0:	50 e0       	ldi	r21, 0x00	; 0
    1cf2:	55 1f       	adc	r21, r21
    1cf4:	62 9f       	mul	r22, r18
    1cf6:	f0 01       	movw	r30, r0
    1cf8:	72 9f       	mul	r23, r18
    1cfa:	bb 27       	eor	r27, r27
    1cfc:	f0 0d       	add	r31, r0
    1cfe:	b1 1d       	adc	r27, r1
    1d00:	63 9f       	mul	r22, r19
    1d02:	aa 27       	eor	r26, r26
    1d04:	f0 0d       	add	r31, r0
    1d06:	b1 1d       	adc	r27, r1
    1d08:	aa 1f       	adc	r26, r26
    1d0a:	64 9f       	mul	r22, r20
    1d0c:	66 27       	eor	r22, r22
    1d0e:	b0 0d       	add	r27, r0
    1d10:	a1 1d       	adc	r26, r1
    1d12:	66 1f       	adc	r22, r22
    1d14:	82 9f       	mul	r24, r18
    1d16:	22 27       	eor	r18, r18
    1d18:	b0 0d       	add	r27, r0
    1d1a:	a1 1d       	adc	r26, r1
    1d1c:	62 1f       	adc	r22, r18
    1d1e:	73 9f       	mul	r23, r19
    1d20:	b0 0d       	add	r27, r0
    1d22:	a1 1d       	adc	r26, r1
    1d24:	62 1f       	adc	r22, r18
    1d26:	83 9f       	mul	r24, r19
    1d28:	a0 0d       	add	r26, r0
    1d2a:	61 1d       	adc	r22, r1
    1d2c:	22 1f       	adc	r18, r18
    1d2e:	74 9f       	mul	r23, r20
    1d30:	33 27       	eor	r19, r19
    1d32:	a0 0d       	add	r26, r0
    1d34:	61 1d       	adc	r22, r1
    1d36:	23 1f       	adc	r18, r19
    1d38:	84 9f       	mul	r24, r20
    1d3a:	60 0d       	add	r22, r0
    1d3c:	21 1d       	adc	r18, r1
    1d3e:	82 2f       	mov	r24, r18
    1d40:	76 2f       	mov	r23, r22
    1d42:	6a 2f       	mov	r22, r26
    1d44:	11 24       	eor	r1, r1
    1d46:	9f 57       	subi	r25, 0x7F	; 127
    1d48:	50 40       	sbci	r21, 0x00	; 0
    1d4a:	8a f0       	brmi	.+34     	; 0x1d6e <__mulsf3_pse+0x84>
    1d4c:	e1 f0       	breq	.+56     	; 0x1d86 <__mulsf3_pse+0x9c>
    1d4e:	88 23       	and	r24, r24
    1d50:	4a f0       	brmi	.+18     	; 0x1d64 <__mulsf3_pse+0x7a>
    1d52:	ee 0f       	add	r30, r30
    1d54:	ff 1f       	adc	r31, r31
    1d56:	bb 1f       	adc	r27, r27
    1d58:	66 1f       	adc	r22, r22
    1d5a:	77 1f       	adc	r23, r23
    1d5c:	88 1f       	adc	r24, r24
    1d5e:	91 50       	subi	r25, 0x01	; 1
    1d60:	50 40       	sbci	r21, 0x00	; 0
    1d62:	a9 f7       	brne	.-22     	; 0x1d4e <__mulsf3_pse+0x64>
    1d64:	9e 3f       	cpi	r25, 0xFE	; 254
    1d66:	51 05       	cpc	r21, r1
    1d68:	70 f0       	brcs	.+28     	; 0x1d86 <__mulsf3_pse+0x9c>
    1d6a:	40 cf       	rjmp	.-384    	; 0x1bec <__fp_inf>
    1d6c:	87 cf       	rjmp	.-242    	; 0x1c7c <__fp_szero>
    1d6e:	5f 3f       	cpi	r21, 0xFF	; 255
    1d70:	ec f3       	brlt	.-6      	; 0x1d6c <__mulsf3_pse+0x82>
    1d72:	98 3e       	cpi	r25, 0xE8	; 232
    1d74:	dc f3       	brlt	.-10     	; 0x1d6c <__mulsf3_pse+0x82>
    1d76:	86 95       	lsr	r24
    1d78:	77 95       	ror	r23
    1d7a:	67 95       	ror	r22
    1d7c:	b7 95       	ror	r27
    1d7e:	f7 95       	ror	r31
    1d80:	e7 95       	ror	r30
    1d82:	9f 5f       	subi	r25, 0xFF	; 255
    1d84:	c1 f7       	brne	.-16     	; 0x1d76 <__mulsf3_pse+0x8c>
    1d86:	fe 2b       	or	r31, r30
    1d88:	88 0f       	add	r24, r24
    1d8a:	91 1d       	adc	r25, r1
    1d8c:	96 95       	lsr	r25
    1d8e:	87 95       	ror	r24
    1d90:	97 f9       	bld	r25, 7
    1d92:	08 95       	ret

00001d94 <_exit>:
    1d94:	f8 94       	cli

00001d96 <__stop_program>:
    1d96:	ff cf       	rjmp	.-2      	; 0x1d96 <__stop_program>
