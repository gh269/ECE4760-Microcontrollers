
Lab2_DTMF.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000070  00800100  00001fba  0000204e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001fba  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000002a9  00800170  00800170  000020be  2**0
                  ALLOC
  3 .stab         000022a4  00000000  00000000  000020c0  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000008d1  00000000  00000000  00004364  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000002f  00000000  00000000  00004c35  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 00000238  00000000  00000000  00004c64  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   0000342f  00000000  00000000  00004e9c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000019b7  00000000  00000000  000082cb  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000013ea  00000000  00000000  00009c82  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000004f4  00000000  00000000  0000b06c  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000855  00000000  00000000  0000b560  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00001936  00000000  00000000  0000bdb5  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 000000a0  00000000  00000000  0000d6eb  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 55 00 	jmp	0xaa	; 0xaa <__ctors_end>
       4:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
       8:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
       c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      10:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      14:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      18:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      1c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      20:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      24:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      28:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      2c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      30:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      34:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      38:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      3c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      40:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      44:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      48:	0c 94 ca 02 	jmp	0x594	; 0x594 <__vector_18>
      4c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      50:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      54:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      58:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      5c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      60:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      64:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      68:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      6c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      70:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      74:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      78:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      7c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      80:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      84:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      88:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
      8c:	05 a8       	ldd	r0, Z+53	; 0x35
      8e:	4c cd       	rjmp	.-1384   	; 0xfffffb28 <__eeprom_end+0xff7efb28>
      90:	b2 d4       	rcall	.+2404   	; 0x9f6 <play+0x2c>
      92:	4e b9       	out	0x0e, r20	; 14
      94:	38 36       	cpi	r19, 0x68	; 104
      96:	a9 02       	muls	r26, r25
      98:	0c 50       	subi	r16, 0x0C	; 12
      9a:	b9 91       	ld	r27, Y+
      9c:	86 88       	ldd	r8, Z+22	; 0x16
      9e:	08 3c       	cpi	r16, 0xC8	; 200
      a0:	a6 aa       	std	Z+54, r10	; 0x36
      a2:	aa 2a       	or	r10, r26
      a4:	be 00       	.word	0x00be	; ????
      a6:	00 00       	nop
      a8:	80 3f       	cpi	r24, 0xF0	; 240

000000aa <__ctors_end>:
      aa:	11 24       	eor	r1, r1
      ac:	1f be       	out	0x3f, r1	; 63
      ae:	cf ef       	ldi	r28, 0xFF	; 255
      b0:	d0 e4       	ldi	r29, 0x40	; 64
      b2:	de bf       	out	0x3e, r29	; 62
      b4:	cd bf       	out	0x3d, r28	; 61

000000b6 <__do_copy_data>:
      b6:	11 e0       	ldi	r17, 0x01	; 1
      b8:	a0 e0       	ldi	r26, 0x00	; 0
      ba:	b1 e0       	ldi	r27, 0x01	; 1
      bc:	ea eb       	ldi	r30, 0xBA	; 186
      be:	ff e1       	ldi	r31, 0x1F	; 31
      c0:	00 e0       	ldi	r16, 0x00	; 0
      c2:	0b bf       	out	0x3b, r16	; 59
      c4:	02 c0       	rjmp	.+4      	; 0xca <__do_copy_data+0x14>
      c6:	07 90       	elpm	r0, Z+
      c8:	0d 92       	st	X+, r0
      ca:	a0 37       	cpi	r26, 0x70	; 112
      cc:	b1 07       	cpc	r27, r17
      ce:	d9 f7       	brne	.-10     	; 0xc6 <__do_copy_data+0x10>

000000d0 <__do_clear_bss>:
      d0:	24 e0       	ldi	r18, 0x04	; 4
      d2:	a0 e7       	ldi	r26, 0x70	; 112
      d4:	b1 e0       	ldi	r27, 0x01	; 1
      d6:	01 c0       	rjmp	.+2      	; 0xda <.do_clear_bss_start>

000000d8 <.do_clear_bss_loop>:
      d8:	1d 92       	st	X+, r1

000000da <.do_clear_bss_start>:
      da:	a9 31       	cpi	r26, 0x19	; 25
      dc:	b2 07       	cpc	r27, r18
      de:	e1 f7       	brne	.-8      	; 0xd8 <.do_clear_bss_loop>
      e0:	0e 94 df 0a 	call	0x15be	; 0x15be <main>
      e4:	0c 94 db 0f 	jmp	0x1fb6	; 0x1fb6 <_exit>

000000e8 <__bad_interrupt>:
      e8:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ec <task1>:
*/

 
//******************************* 
//Task 1  
void task1(void) {
      ec:	0f 93       	push	r16
      ee:	1f 93       	push	r17
      f0:	cf 93       	push	r28
      f2:	df 93       	push	r29
	time1=0;  //reset the task timer
      f4:	10 92 df 01 	sts	0x01DF, r1
      f8:	10 92 de 01 	sts	0x01DE, r1

	//get lower nibble
	PORTDIR = 0x0f;
      fc:	8f e0       	ldi	r24, 0x0F	; 15
      fe:	81 b9       	out	0x01, r24	; 1
	PORTDATA = 0xf0; 
     100:	90 ef       	ldi	r25, 0xF0	; 240
     102:	92 b9       	out	0x02, r25	; 2
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     104:	2a e1       	ldi	r18, 0x1A	; 26
     106:	2a 95       	dec	r18
     108:	f1 f7       	brne	.-4      	; 0x106 <task1+0x1a>
     10a:	00 c0       	rjmp	.+0      	; 0x10c <task1+0x20>
	_delay_us(5);
	key = PORTIN;
     10c:	20 b1       	in	r18, 0x00	; 0
     10e:	20 93 e2 01 	sts	0x01E2, r18
  
	//get upper nibble
	PORTDIR = 0xf0;
     112:	91 b9       	out	0x01, r25	; 1
	PORTDATA = 0x0f; 
     114:	82 b9       	out	0x02, r24	; 2
     116:	8a e1       	ldi	r24, 0x1A	; 26
     118:	8a 95       	dec	r24
     11a:	f1 f7       	brne	.-4      	; 0x118 <task1+0x2c>
     11c:	00 c0       	rjmp	.+0      	; 0x11e <task1+0x32>
	_delay_us(5);
	key = key | PORTIN;
     11e:	90 b1       	in	r25, 0x00	; 0
     120:	80 91 e2 01 	lds	r24, 0x01E2
     124:	98 2b       	or	r25, r24
     126:	90 93 e2 01 	sts	0x01E2, r25
  
	//find matching keycode in keytbl
	if (key != 0xff) {
     12a:	9f 3f       	cpi	r25, 0xFF	; 255
     12c:	a9 f0       	breq	.+42     	; 0x158 <task1+0x6c>
	  for (butnum=0; butnum<maxkeys; butnum++) {   
     12e:	80 e0       	ldi	r24, 0x00	; 0
     130:	0a c0       	rjmp	.+20     	; 0x146 <task1+0x5a>
     132:	28 2f       	mov	r18, r24
     134:	2f 5f       	subi	r18, 0xFF	; 255
	  	if (keytbl[butnum]==key)  break;   
     136:	e8 2f       	mov	r30, r24
     138:	f0 e0       	ldi	r31, 0x00	; 0
     13a:	e2 5c       	subi	r30, 0xC2	; 194
     13c:	fe 4f       	sbci	r31, 0xFE	; 254
     13e:	30 81       	ld	r19, Z
     140:	39 17       	cp	r19, r25
     142:	31 f0       	breq	.+12     	; 0x150 <task1+0x64>
     144:	82 2f       	mov	r24, r18
	_delay_us(5);
	key = key | PORTIN;
  
	//find matching keycode in keytbl
	if (key != 0xff) {
	  for (butnum=0; butnum<maxkeys; butnum++) {   
     146:	8c 30       	cpi	r24, 0x0C	; 12
     148:	a0 f3       	brcs	.-24     	; 0x132 <task1+0x46>
	  	if (keytbl[butnum]==key)  break;   
	  }

	  if (butnum==maxkeys) butnum=0;
     14a:	8c 30       	cpi	r24, 0x0C	; 12
     14c:	09 f4       	brne	.+2      	; 0x150 <task1+0x64>
     14e:	04 c0       	rjmp	.+8      	; 0x158 <task1+0x6c>
	  else butnum++;	   //adjust by one to make range 1-16
     150:	8f 5f       	subi	r24, 0xFF	; 255
     152:	80 93 da 01 	sts	0x01DA, r24
     156:	02 c0       	rjmp	.+4      	; 0x15c <task1+0x70>
	}
	else butnum=0;
     158:	10 92 da 01 	sts	0x01DA, r1
	
	// Switching in the finite state machine.
	switch (PushState) {
     15c:	80 91 e5 01 	lds	r24, 0x01E5
     160:	82 30       	cpi	r24, 0x02	; 2
     162:	91 f0       	breq	.+36     	; 0x188 <task1+0x9c>
     164:	20 f4       	brcc	.+8      	; 0x16e <task1+0x82>
     166:	81 30       	cpi	r24, 0x01	; 1
     168:	09 f0       	breq	.+2      	; 0x16c <task1+0x80>
     16a:	77 c0       	rjmp	.+238    	; 0x25a <task1+0x16e>
     16c:	06 c0       	rjmp	.+12     	; 0x17a <task1+0x8e>
     16e:	83 30       	cpi	r24, 0x03	; 3
     170:	d1 f0       	breq	.+52     	; 0x1a6 <task1+0xba>
     172:	84 30       	cpi	r24, 0x04	; 4
     174:	09 f0       	breq	.+2      	; 0x178 <task1+0x8c>
     176:	71 c0       	rjmp	.+226    	; 0x25a <task1+0x16e>
     178:	63 c0       	rjmp	.+198    	; 0x240 <task1+0x154>
     case NoPush: 
        if (butnum != 0) PushState=MaybePush;
     17a:	80 91 da 01 	lds	r24, 0x01DA
     17e:	88 23       	and	r24, r24
     180:	09 f4       	brne	.+2      	; 0x184 <task1+0x98>
     182:	6b c0       	rjmp	.+214    	; 0x25a <task1+0x16e>
     184:	82 e0       	ldi	r24, 0x02	; 2
     186:	61 c0       	rjmp	.+194    	; 0x24a <task1+0x15e>
        else PushState=NoPush;
        break;
     case MaybePush:
        if (butnum != 0) {
     188:	80 91 da 01 	lds	r24, 0x01DA
     18c:	88 23       	and	r24, r24
     18e:	49 f0       	breq	.+18     	; 0x1a2 <task1+0xb6>
           	PushState=Pushed; 
     190:	83 e0       	ldi	r24, 0x03	; 3
     192:	80 93 e5 01 	sts	0x01E5, r24
			PushFlag=1;
     196:	81 e0       	ldi	r24, 0x01	; 1
     198:	80 93 db 01 	sts	0x01DB, r24
			//Test mode override
			if (~PINB & 0x01) {
     19c:	18 99       	sbic	0x03, 0	; 3
     19e:	5d c0       	rjmp	.+186    	; 0x25a <task1+0x16e>
     1a0:	5a c0       	rjmp	.+180    	; 0x256 <task1+0x16a>
		 		PushFlag=0;			
		   	}  
        }
        else PushState=NoPush;
     1a2:	81 e0       	ldi	r24, 0x01	; 1
     1a4:	52 c0       	rjmp	.+164    	; 0x24a <task1+0x15e>
        break;
     case Pushed:  
        if (butnum != 0) {
     1a6:	80 91 da 01 	lds	r24, 0x01DA
     1aa:	88 23       	and	r24, r24
     1ac:	09 f4       	brne	.+2      	; 0x1b0 <task1+0xc4>
     1ae:	46 c0       	rjmp	.+140    	; 0x23c <task1+0x150>
			PushState=Pushed;
			//Test mode override
			if (~PINB & 0x01) {
     1b0:	18 99       	sbic	0x03, 0	; 3
     1b2:	53 c0       	rjmp	.+166    	; 0x25a <task1+0x16e>
		 		switch (butnum) {
     1b4:	84 30       	cpi	r24, 0x04	; 4
     1b6:	21 f1       	breq	.+72     	; 0x200 <task1+0x114>
     1b8:	38 f4       	brcc	.+14     	; 0x1c8 <task1+0xdc>
     1ba:	82 30       	cpi	r24, 0x02	; 2
     1bc:	99 f0       	breq	.+38     	; 0x1e4 <task1+0xf8>
     1be:	c8 f4       	brcc	.+50     	; 0x1f2 <task1+0x106>
     1c0:	81 30       	cpi	r24, 0x01	; 1
     1c2:	09 f0       	breq	.+2      	; 0x1c6 <task1+0xda>
     1c4:	4a c0       	rjmp	.+148    	; 0x25a <task1+0x16e>
     1c6:	07 c0       	rjmp	.+14     	; 0x1d6 <task1+0xea>
     1c8:	86 30       	cpi	r24, 0x06	; 6
     1ca:	41 f1       	breq	.+80     	; 0x21c <task1+0x130>
     1cc:	00 f1       	brcs	.+64     	; 0x20e <task1+0x122>
     1ce:	87 30       	cpi	r24, 0x07	; 7
     1d0:	09 f0       	breq	.+2      	; 0x1d4 <task1+0xe8>
     1d2:	43 c0       	rjmp	.+134    	; 0x25a <task1+0x16e>
     1d4:	2a c0       	rjmp	.+84     	; 0x22a <task1+0x13e>
					case 1: 
						play(697, 0, 100);
     1d6:	44 e6       	ldi	r20, 0x64	; 100
     1d8:	50 e0       	ldi	r21, 0x00	; 0
     1da:	60 e0       	ldi	r22, 0x00	; 0
     1dc:	70 e0       	ldi	r23, 0x00	; 0
     1de:	89 eb       	ldi	r24, 0xB9	; 185
     1e0:	92 e0       	ldi	r25, 0x02	; 2
     1e2:	29 c0       	rjmp	.+82     	; 0x236 <task1+0x14a>
						break;
					case 2: 
						play(770, 0, 100);
     1e4:	44 e6       	ldi	r20, 0x64	; 100
     1e6:	50 e0       	ldi	r21, 0x00	; 0
     1e8:	60 e0       	ldi	r22, 0x00	; 0
     1ea:	70 e0       	ldi	r23, 0x00	; 0
     1ec:	82 e0       	ldi	r24, 0x02	; 2
     1ee:	93 e0       	ldi	r25, 0x03	; 3
     1f0:	22 c0       	rjmp	.+68     	; 0x236 <task1+0x14a>
						break;
					case 3: 
						play(852, 0, 100);
     1f2:	44 e6       	ldi	r20, 0x64	; 100
     1f4:	50 e0       	ldi	r21, 0x00	; 0
     1f6:	60 e0       	ldi	r22, 0x00	; 0
     1f8:	70 e0       	ldi	r23, 0x00	; 0
     1fa:	84 e5       	ldi	r24, 0x54	; 84
     1fc:	93 e0       	ldi	r25, 0x03	; 3
     1fe:	1b c0       	rjmp	.+54     	; 0x236 <task1+0x14a>
						break;
					case 4: 
						play(941, 0, 100);
     200:	44 e6       	ldi	r20, 0x64	; 100
     202:	50 e0       	ldi	r21, 0x00	; 0
     204:	60 e0       	ldi	r22, 0x00	; 0
     206:	70 e0       	ldi	r23, 0x00	; 0
     208:	8d ea       	ldi	r24, 0xAD	; 173
     20a:	93 e0       	ldi	r25, 0x03	; 3
     20c:	14 c0       	rjmp	.+40     	; 0x236 <task1+0x14a>
						break;
					case 5:
						play(1209, 0, 100);
     20e:	44 e6       	ldi	r20, 0x64	; 100
     210:	50 e0       	ldi	r21, 0x00	; 0
     212:	60 e0       	ldi	r22, 0x00	; 0
     214:	70 e0       	ldi	r23, 0x00	; 0
     216:	89 eb       	ldi	r24, 0xB9	; 185
     218:	94 e0       	ldi	r25, 0x04	; 4
     21a:	0d c0       	rjmp	.+26     	; 0x236 <task1+0x14a>
						break;
					case 6:
						play(1336, 0, 100);
     21c:	44 e6       	ldi	r20, 0x64	; 100
     21e:	50 e0       	ldi	r21, 0x00	; 0
     220:	60 e0       	ldi	r22, 0x00	; 0
     222:	70 e0       	ldi	r23, 0x00	; 0
     224:	88 e3       	ldi	r24, 0x38	; 56
     226:	95 e0       	ldi	r25, 0x05	; 5
     228:	06 c0       	rjmp	.+12     	; 0x236 <task1+0x14a>
						break;
					case 7: 
						play(1477, 0, 100);
     22a:	44 e6       	ldi	r20, 0x64	; 100
     22c:	50 e0       	ldi	r21, 0x00	; 0
     22e:	60 e0       	ldi	r22, 0x00	; 0
     230:	70 e0       	ldi	r23, 0x00	; 0
     232:	85 ec       	ldi	r24, 0xC5	; 197
     234:	95 e0       	ldi	r25, 0x05	; 5
     236:	0e 94 e5 04 	call	0x9ca	; 0x9ca <play>
						break;
     23a:	0f c0       	rjmp	.+30     	; 0x25a <task1+0x16e>
					default:
						break;
				}	
		   	}  
		}
        else PushState=MaybeNoPush;    
     23c:	84 e0       	ldi	r24, 0x04	; 4
     23e:	05 c0       	rjmp	.+10     	; 0x24a <task1+0x15e>
        break;
     case MaybeNoPush:
        if (butnum != 0) PushState=Pushed; 
     240:	80 91 da 01 	lds	r24, 0x01DA
     244:	88 23       	and	r24, r24
     246:	21 f0       	breq	.+8      	; 0x250 <task1+0x164>
     248:	83 e0       	ldi	r24, 0x03	; 3
     24a:	80 93 e5 01 	sts	0x01E5, r24
     24e:	05 c0       	rjmp	.+10     	; 0x25a <task1+0x16e>
        else {
           PushState=NoPush;
     250:	81 e0       	ldi	r24, 0x01	; 1
     252:	80 93 e5 01 	sts	0x01E5, r24
           PushFlag=0;
     256:	10 92 db 01 	sts	0x01DB, r1
        }    
        break;
  	}

	if (PushFlag) {
     25a:	80 91 db 01 	lds	r24, 0x01DB
     25e:	88 23       	and	r24, r24
     260:	09 f4       	brne	.+2      	; 0x264 <task1+0x178>
     262:	87 c0       	rjmp	.+270    	; 0x372 <task1+0x286>
		PushFlag = 0;
     264:	10 92 db 01 	sts	0x01DB, r1
		// The * button was pressed. Clear all memory.
		if (butnum == 10) {
     268:	80 91 da 01 	lds	r24, 0x01DA
     26c:	8a 30       	cpi	r24, 0x0A	; 10
     26e:	89 f4       	brne	.+34     	; 0x292 <task1+0x1a6>
     270:	e0 e7       	ldi	r30, 0x70	; 112
     272:	f1 e0       	ldi	r31, 0x01	; 1
			for (int i = 0; i < 12; i++) {
				mem[i] = 0;
     274:	11 92       	st	Z+, r1
     276:	11 92       	st	Z+, r1

	if (PushFlag) {
		PushFlag = 0;
		// The * button was pressed. Clear all memory.
		if (butnum == 10) {
			for (int i = 0; i < 12; i++) {
     278:	21 e0       	ldi	r18, 0x01	; 1
     27a:	e8 38       	cpi	r30, 0x88	; 136
     27c:	f2 07       	cpc	r31, r18
     27e:	d1 f7       	brne	.-12     	; 0x274 <task1+0x188>
				mem[i] = 0;
			}
			mem_index = 0;
     280:	10 92 e4 01 	sts	0x01E4, r1
     284:	10 92 e3 01 	sts	0x01E3, r1
     288:	c0 e7       	ldi	r28, 0x70	; 112
     28a:	d1 e0       	ldi	r29, 0x01	; 1
				play(high_freq[butnum], low_freq[butnum], 1000);
			}		
		}
		// For debugging purposes without sound.
		for (int i = 0; i < 12; i++) {
			fprintf(stdout, "%d ", mem[i]);
     28c:	06 e5       	ldi	r16, 0x56	; 86
     28e:	11 e0       	ldi	r17, 0x01	; 1
     290:	4b c0       	rjmp	.+150    	; 0x328 <task1+0x23c>
				mem[i] = 0;
			}
			mem_index = 0;
		}
		// The # button was pressed. Play all sounds in memory.
		else if (butnum == 12) {
     292:	8c 30       	cpi	r24, 0x0C	; 12
     294:	19 f5       	brne	.+70     	; 0x2dc <task1+0x1f0>
     296:	c0 e7       	ldi	r28, 0x70	; 112
     298:	d1 e0       	ldi	r29, 0x01	; 1
			for (int i = 0; i < 12; i++) {
				if (mem[i] != 0) {
     29a:	89 91       	ld	r24, Y+
     29c:	99 91       	ld	r25, Y+
     29e:	00 97       	sbiw	r24, 0x00	; 0
     2a0:	c1 f0       	breq	.+48     	; 0x2d2 <task1+0x1e6>
					//fprintf(stdout, "%u\n\r", mem[i]);
					play(high_freq[mem[i]], low_freq[mem[i]], 1000);
     2a2:	88 0f       	add	r24, r24
     2a4:	99 1f       	adc	r25, r25
     2a6:	fc 01       	movw	r30, r24
     2a8:	e2 5f       	subi	r30, 0xF2	; 242
     2aa:	fe 4f       	sbci	r31, 0xFE	; 254
     2ac:	60 81       	ld	r22, Z
     2ae:	71 81       	ldd	r23, Z+1	; 0x01
     2b0:	fc 01       	movw	r30, r24
     2b2:	ea 5d       	subi	r30, 0xDA	; 218
     2b4:	fe 4f       	sbci	r31, 0xFE	; 254
     2b6:	48 ee       	ldi	r20, 0xE8	; 232
     2b8:	53 e0       	ldi	r21, 0x03	; 3
     2ba:	80 81       	ld	r24, Z
     2bc:	91 81       	ldd	r25, Z+1	; 0x01
     2be:	0e 94 e5 04 	call	0x9ca	; 0x9ca <play>
					play(0, 0, 30);
     2c2:	4e e1       	ldi	r20, 0x1E	; 30
     2c4:	50 e0       	ldi	r21, 0x00	; 0
     2c6:	60 e0       	ldi	r22, 0x00	; 0
     2c8:	70 e0       	ldi	r23, 0x00	; 0
     2ca:	80 e0       	ldi	r24, 0x00	; 0
     2cc:	90 e0       	ldi	r25, 0x00	; 0
     2ce:	0e 94 e5 04 	call	0x9ca	; 0x9ca <play>
			}
			mem_index = 0;
		}
		// The # button was pressed. Play all sounds in memory.
		else if (butnum == 12) {
			for (int i = 0; i < 12; i++) {
     2d2:	81 e0       	ldi	r24, 0x01	; 1
     2d4:	c8 38       	cpi	r28, 0x88	; 136
     2d6:	d8 07       	cpc	r29, r24
     2d8:	01 f7       	brne	.-64     	; 0x29a <task1+0x1ae>
     2da:	d6 cf       	rjmp	.-84     	; 0x288 <task1+0x19c>
				}
			}
		}
		// A normal button press. 
		else {
			if (mem_index < 12) {
     2dc:	20 91 e3 01 	lds	r18, 0x01E3
     2e0:	30 91 e4 01 	lds	r19, 0x01E4
     2e4:	2c 30       	cpi	r18, 0x0C	; 12
     2e6:	31 05       	cpc	r19, r1
     2e8:	78 f6       	brcc	.-98     	; 0x288 <task1+0x19c>
				mem[mem_index] = butnum;
     2ea:	f9 01       	movw	r30, r18
     2ec:	ee 0f       	add	r30, r30
     2ee:	ff 1f       	adc	r31, r31
     2f0:	e0 59       	subi	r30, 0x90	; 144
     2f2:	fe 4f       	sbci	r31, 0xFE	; 254
     2f4:	80 83       	st	Z, r24
     2f6:	11 82       	std	Z+1, r1	; 0x01
				mem_index++;
     2f8:	2f 5f       	subi	r18, 0xFF	; 255
     2fa:	3f 4f       	sbci	r19, 0xFF	; 255
     2fc:	30 93 e4 01 	sts	0x01E4, r19
     300:	20 93 e3 01 	sts	0x01E3, r18
				play(high_freq[butnum], low_freq[butnum], 1000);
     304:	90 e0       	ldi	r25, 0x00	; 0
     306:	88 0f       	add	r24, r24
     308:	99 1f       	adc	r25, r25
     30a:	fc 01       	movw	r30, r24
     30c:	e2 5f       	subi	r30, 0xF2	; 242
     30e:	fe 4f       	sbci	r31, 0xFE	; 254
     310:	60 81       	ld	r22, Z
     312:	71 81       	ldd	r23, Z+1	; 0x01
     314:	fc 01       	movw	r30, r24
     316:	ea 5d       	subi	r30, 0xDA	; 218
     318:	fe 4f       	sbci	r31, 0xFE	; 254
     31a:	48 ee       	ldi	r20, 0xE8	; 232
     31c:	53 e0       	ldi	r21, 0x03	; 3
     31e:	80 81       	ld	r24, Z
     320:	91 81       	ldd	r25, Z+1	; 0x01
     322:	0e 94 e5 04 	call	0x9ca	; 0x9ca <play>
     326:	b0 cf       	rjmp	.-160    	; 0x288 <task1+0x19c>
			}		
		}
		// For debugging purposes without sound.
		for (int i = 0; i < 12; i++) {
			fprintf(stdout, "%d ", mem[i]);
     328:	88 81       	ld	r24, Y
     32a:	99 81       	ldd	r25, Y+1	; 0x01
     32c:	22 96       	adiw	r28, 0x02	; 2
     32e:	9f 93       	push	r25
     330:	8f 93       	push	r24
     332:	1f 93       	push	r17
     334:	0f 93       	push	r16
     336:	80 91 16 04 	lds	r24, 0x0416
     33a:	8f 93       	push	r24
     33c:	80 91 15 04 	lds	r24, 0x0415
     340:	8f 93       	push	r24
     342:	0e 94 66 0b 	call	0x16cc	; 0x16cc <fprintf>
				mem_index++;
				play(high_freq[butnum], low_freq[butnum], 1000);
			}		
		}
		// For debugging purposes without sound.
		for (int i = 0; i < 12; i++) {
     346:	0f 90       	pop	r0
     348:	0f 90       	pop	r0
     34a:	0f 90       	pop	r0
     34c:	0f 90       	pop	r0
     34e:	0f 90       	pop	r0
     350:	0f 90       	pop	r0
     352:	21 e0       	ldi	r18, 0x01	; 1
     354:	c8 38       	cpi	r28, 0x88	; 136
     356:	d2 07       	cpc	r29, r18
     358:	39 f7       	brne	.-50     	; 0x328 <task1+0x23c>
			fprintf(stdout, "%d ", mem[i]);
		}
		fprintf(stdout, "\n\r");
     35a:	60 91 15 04 	lds	r22, 0x0415
     35e:	70 91 16 04 	lds	r23, 0x0416
     362:	85 e6       	ldi	r24, 0x65	; 101
     364:	91 e0       	ldi	r25, 0x01	; 1
	}
} 
     366:	df 91       	pop	r29
     368:	cf 91       	pop	r28
     36a:	1f 91       	pop	r17
     36c:	0f 91       	pop	r16
		}
		// For debugging purposes without sound.
		for (int i = 0; i < 12; i++) {
			fprintf(stdout, "%d ", mem[i]);
		}
		fprintf(stdout, "\n\r");
     36e:	0c 94 76 0b 	jmp	0x16ec	; 0x16ec <fputs>
	}
} 
     372:	df 91       	pop	r29
     374:	cf 91       	pop	r28
     376:	1f 91       	pop	r17
     378:	0f 91       	pop	r16
     37a:	08 95       	ret

0000037c <initialize>:
 
//Initialization used for the timer interrupts for debouncing
void initialize(void) {
	//set up timer 0 for 1 mSec timebase 
	OCR0A = 249;  		//set the compare re to 250 time ticks
     37c:	89 ef       	ldi	r24, 0xF9	; 249
     37e:	87 bd       	out	0x27, r24	; 39
	TIMSK0= (1<<OCIE0A);	//turn on timer 0 cmp match ISR 
     380:	82 e0       	ldi	r24, 0x02	; 2
     382:	80 93 6e 00 	sts	0x006E, r24
	//set prescalar to divide by 64 
	TCCR0B= 3; //0b00000011;	
     386:	93 e0       	ldi	r25, 0x03	; 3
     388:	95 bd       	out	0x25, r25	; 37
	// turn on clear-on-match
	TCCR0A= (1<<WGM01) ;
     38a:	84 bd       	out	0x24, r24	; 36

	//init the task timers
	time1=0;  
     38c:	10 92 df 01 	sts	0x01DF, r1
     390:	10 92 de 01 	sts	0x01DE, r1
	// PORT B is an input
	DDRB = 0x00;
     394:	14 b8       	out	0x04, r1	; 4
	//for no button push
	PushFlag = 0;
     396:	10 92 db 01 	sts	0x01DB, r1
	//init the state machine
	PushState = NoPush;
     39a:	81 e0       	ldi	r24, 0x01	; 1
     39c:	80 93 e5 01 	sts	0x01E5, r24

	mem_index = 0;
     3a0:	10 92 e4 01 	sts	0x01E4, r1
     3a4:	10 92 e3 01 	sts	0x01E3, r1

	init_dtmf();
     3a8:	0e 94 81 04 	call	0x902	; 0x902 <init_dtmf>
	//crank up the ISRs
	sei() ;
     3ac:	78 94       	sei
     3ae:	08 95       	ret

000003b0 <uart_init>:
{
#if F_CPU < 2000000UL && defined(U2X)
  UCSR0A = _BV(U2X);             /* improve baud rate error by using 2x clk */
  UBRR0L = (F_CPU / (8UL * UART_BAUD)) - 1;
#else
  UBRR0L = (F_CPU / (16UL * UART_BAUD)) - 1;
     3b0:	87 e6       	ldi	r24, 0x67	; 103
     3b2:	80 93 c4 00 	sts	0x00C4, r24
#endif
  UCSR0B = _BV(TXEN0) | _BV(RXEN0); /* tx/rx enable */
     3b6:	88 e1       	ldi	r24, 0x18	; 24
     3b8:	80 93 c1 00 	sts	0x00C1, r24
     3bc:	08 95       	ret

000003be <uart_putchar>:
 * Send character c down the UART Tx, wait until tx holding register
 * is empty.
 */
int
uart_putchar(char c, FILE *stream)
{
     3be:	cf 93       	push	r28
     3c0:	c8 2f       	mov	r28, r24

  if (c == '\a')
     3c2:	87 30       	cpi	r24, 0x07	; 7
     3c4:	49 f4       	brne	.+18     	; 0x3d8 <uart_putchar+0x1a>
    {
      fputs("*ring*\n", stderr);
     3c6:	60 91 17 04 	lds	r22, 0x0417
     3ca:	70 91 18 04 	lds	r23, 0x0418
     3ce:	88 e6       	ldi	r24, 0x68	; 104
     3d0:	91 e0       	ldi	r25, 0x01	; 1
     3d2:	0e 94 76 0b 	call	0x16ec	; 0x16ec <fputs>
     3d6:	0b c0       	rjmp	.+22     	; 0x3ee <uart_putchar+0x30>
      return 0;
    }

  if (c == '\n')
     3d8:	8a 30       	cpi	r24, 0x0A	; 10
     3da:	19 f4       	brne	.+6      	; 0x3e2 <uart_putchar+0x24>
    uart_putchar('\r', stream);
     3dc:	8d e0       	ldi	r24, 0x0D	; 13
     3de:	0e 94 df 01 	call	0x3be	; 0x3be <uart_putchar>
  loop_until_bit_is_set(UCSR0A, UDRE0);
     3e2:	80 91 c0 00 	lds	r24, 0x00C0
     3e6:	85 ff       	sbrs	r24, 5
     3e8:	fc cf       	rjmp	.-8      	; 0x3e2 <uart_putchar+0x24>
  UDR0 = c;
     3ea:	c0 93 c6 00 	sts	0x00C6, r28

  return 0;
}
     3ee:	80 e0       	ldi	r24, 0x00	; 0
     3f0:	90 e0       	ldi	r25, 0x00	; 0
     3f2:	cf 91       	pop	r28
     3f4:	08 95       	ret

000003f6 <uart_getchar>:
 * Successive calls to uart_getchar() will be satisfied from the
 * internal buffer until that buffer is emptied again.
 */
int
uart_getchar(FILE *stream)
{
     3f6:	ef 92       	push	r14
     3f8:	ff 92       	push	r15
     3fa:	0f 93       	push	r16
     3fc:	1f 93       	push	r17
     3fe:	cf 93       	push	r28
     400:	df 93       	push	r29
     402:	8c 01       	movw	r16, r24
  uint8_t c;
  char *cp, *cp2;
  static char b[RX_BUFSIZE];
  static char *rxp;

  if (rxp == 0)
     404:	80 91 88 01 	lds	r24, 0x0188
     408:	90 91 89 01 	lds	r25, 0x0189
     40c:	89 2b       	or	r24, r25
     40e:	09 f0       	breq	.+2      	; 0x412 <uart_getchar+0x1c>
     410:	a1 c0       	rjmp	.+322    	; 0x554 <uart_getchar+0x15e>
     412:	ca e8       	ldi	r28, 0x8A	; 138
     414:	d1 e0       	ldi	r29, 0x01	; 1
    for (cp = b;;)
      {
	loop_until_bit_is_set(UCSR0A, RXC0);
     416:	80 91 c0 00 	lds	r24, 0x00C0
     41a:	87 ff       	sbrs	r24, 7
     41c:	fc cf       	rjmp	.-8      	; 0x416 <uart_getchar+0x20>
	if (UCSR0A & _BV(FE0))
     41e:	80 91 c0 00 	lds	r24, 0x00C0
     422:	84 fd       	sbrc	r24, 4
     424:	aa c0       	rjmp	.+340    	; 0x57a <uart_getchar+0x184>
	  return _FDEV_EOF;
	if (UCSR0A & _BV(DOR0))
     426:	80 91 c0 00 	lds	r24, 0x00C0
     42a:	83 fd       	sbrc	r24, 3
     42c:	a9 c0       	rjmp	.+338    	; 0x580 <uart_getchar+0x18a>
	  return _FDEV_ERR;
	c = UDR0;
     42e:	80 91 c6 00 	lds	r24, 0x00C6
	/* behaviour similar to Unix stty ICRNL */
	if (c == '\r')
     432:	8d 30       	cpi	r24, 0x0D	; 13
     434:	61 f4       	brne	.+24     	; 0x44e <uart_getchar+0x58>
	  c = '\n';
	if (c == '\n')
	  {
	    *cp = c;
     436:	8a e0       	ldi	r24, 0x0A	; 10
     438:	88 83       	st	Y, r24
	    uart_putchar(c, stream);
     43a:	b8 01       	movw	r22, r16
     43c:	0e 94 df 01 	call	0x3be	; 0x3be <uart_putchar>
	    rxp = b;
     440:	8a e8       	ldi	r24, 0x8A	; 138
     442:	91 e0       	ldi	r25, 0x01	; 1
     444:	90 93 89 01 	sts	0x0189, r25
     448:	80 93 88 01 	sts	0x0188, r24
	    break;
     44c:	83 c0       	rjmp	.+262    	; 0x554 <uart_getchar+0x15e>
	  return _FDEV_ERR;
	c = UDR0;
	/* behaviour similar to Unix stty ICRNL */
	if (c == '\r')
	  c = '\n';
	if (c == '\n')
     44e:	8a 30       	cpi	r24, 0x0A	; 10
     450:	91 f3       	breq	.-28     	; 0x436 <uart_getchar+0x40>
	    *cp = c;
	    uart_putchar(c, stream);
	    rxp = b;
	    break;
	  }
	else if (c == '\t')
     452:	89 30       	cpi	r24, 0x09	; 9
     454:	09 f4       	brne	.+2      	; 0x458 <uart_getchar+0x62>
	  c = ' ';
     456:	80 e2       	ldi	r24, 0x20	; 32

	if ((c >= (uint8_t)' ' && c <= (uint8_t)'\x7e') ||
     458:	98 2f       	mov	r25, r24
     45a:	90 52       	subi	r25, 0x20	; 32
     45c:	9f 35       	cpi	r25, 0x5F	; 95
     45e:	10 f0       	brcs	.+4      	; 0x464 <uart_getchar+0x6e>
     460:	80 3a       	cpi	r24, 0xA0	; 160
     462:	90 f0       	brcs	.+36     	; 0x488 <uart_getchar+0x92>
	    c >= (uint8_t)'\xa0')
	  {
	    if (cp == b + RX_BUFSIZE - 1)
     464:	91 e0       	ldi	r25, 0x01	; 1
     466:	c9 3d       	cpi	r28, 0xD9	; 217
     468:	d9 07       	cpc	r29, r25
     46a:	49 f4       	brne	.+18     	; 0x47e <uart_getchar+0x88>
uart_putchar(char c, FILE *stream)
{

  if (c == '\a')
    {
      fputs("*ring*\n", stderr);
     46c:	60 91 17 04 	lds	r22, 0x0417
     470:	70 91 18 04 	lds	r23, 0x0418
     474:	88 e6       	ldi	r24, 0x68	; 104
     476:	91 e0       	ldi	r25, 0x01	; 1
     478:	0e 94 76 0b 	call	0x16ec	; 0x16ec <fputs>
     47c:	cc cf       	rjmp	.-104    	; 0x416 <uart_getchar+0x20>
	  {
	    if (cp == b + RX_BUFSIZE - 1)
	      uart_putchar('\a', stream);
	    else
	      {
		*cp++ = c;
     47e:	89 93       	st	Y+, r24
		uart_putchar(c, stream);
     480:	b8 01       	movw	r22, r16
     482:	0e 94 df 01 	call	0x3be	; 0x3be <uart_putchar>
     486:	c7 cf       	rjmp	.-114    	; 0x416 <uart_getchar+0x20>
	      }
	    continue;
	  }

	switch (c)
     488:	82 31       	cpi	r24, 0x12	; 18
     48a:	29 f1       	breq	.+74     	; 0x4d6 <uart_getchar+0xe0>
     48c:	38 f4       	brcc	.+14     	; 0x49c <uart_getchar+0xa6>
     48e:	83 30       	cpi	r24, 0x03	; 3
     490:	09 f4       	brne	.+2      	; 0x494 <uart_getchar+0x9e>
     492:	76 c0       	rjmp	.+236    	; 0x580 <uart_getchar+0x18a>
     494:	88 30       	cpi	r24, 0x08	; 8
     496:	09 f0       	breq	.+2      	; 0x49a <uart_getchar+0xa4>
     498:	be cf       	rjmp	.-132    	; 0x416 <uart_getchar+0x20>
     49a:	09 c0       	rjmp	.+18     	; 0x4ae <uart_getchar+0xb8>
     49c:	87 31       	cpi	r24, 0x17	; 23
     49e:	09 f4       	brne	.+2      	; 0x4a2 <uart_getchar+0xac>
     4a0:	4d c0       	rjmp	.+154    	; 0x53c <uart_getchar+0x146>
     4a2:	8f 37       	cpi	r24, 0x7F	; 127
     4a4:	21 f0       	breq	.+8      	; 0x4ae <uart_getchar+0xb8>
     4a6:	85 31       	cpi	r24, 0x15	; 21
     4a8:	09 f0       	breq	.+2      	; 0x4ac <uart_getchar+0xb6>
     4aa:	b5 cf       	rjmp	.-150    	; 0x416 <uart_getchar+0x20>
     4ac:	34 c0       	rjmp	.+104    	; 0x516 <uart_getchar+0x120>
	  case 'c' & 0x1f:
	    return -1;

	  case '\b':
	  case '\x7f':
	    if (cp > b)
     4ae:	e1 e0       	ldi	r30, 0x01	; 1
     4b0:	ca 38       	cpi	r28, 0x8A	; 138
     4b2:	de 07       	cpc	r29, r30
     4b4:	09 f0       	breq	.+2      	; 0x4b8 <uart_getchar+0xc2>
     4b6:	08 f4       	brcc	.+2      	; 0x4ba <uart_getchar+0xc4>
     4b8:	ae cf       	rjmp	.-164    	; 0x416 <uart_getchar+0x20>
	      {
		uart_putchar('\b', stream);
     4ba:	b8 01       	movw	r22, r16
     4bc:	88 e0       	ldi	r24, 0x08	; 8
     4be:	0e 94 df 01 	call	0x3be	; 0x3be <uart_putchar>
		uart_putchar(' ', stream);
     4c2:	b8 01       	movw	r22, r16
     4c4:	80 e2       	ldi	r24, 0x20	; 32
     4c6:	0e 94 df 01 	call	0x3be	; 0x3be <uart_putchar>
		uart_putchar('\b', stream);
     4ca:	b8 01       	movw	r22, r16
     4cc:	88 e0       	ldi	r24, 0x08	; 8
     4ce:	0e 94 df 01 	call	0x3be	; 0x3be <uart_putchar>
		cp--;
     4d2:	21 97       	sbiw	r28, 0x01	; 1
     4d4:	a0 cf       	rjmp	.-192    	; 0x416 <uart_getchar+0x20>
	      }
	    break;

	  case 'r' & 0x1f:
	    uart_putchar('\r', stream);
     4d6:	b8 01       	movw	r22, r16
     4d8:	8d e0       	ldi	r24, 0x0D	; 13
     4da:	0e 94 df 01 	call	0x3be	; 0x3be <uart_putchar>
	    for (cp2 = b; cp2 < cp; cp2++)
     4de:	8a e8       	ldi	r24, 0x8A	; 138
     4e0:	e8 2e       	mov	r14, r24
     4e2:	81 e0       	ldi	r24, 0x01	; 1
     4e4:	f8 2e       	mov	r15, r24
     4e6:	06 c0       	rjmp	.+12     	; 0x4f4 <uart_getchar+0xfe>
	      uart_putchar(*cp2, stream);
     4e8:	b8 01       	movw	r22, r16
     4ea:	f7 01       	movw	r30, r14
     4ec:	81 91       	ld	r24, Z+
     4ee:	7f 01       	movw	r14, r30
     4f0:	0e 94 df 01 	call	0x3be	; 0x3be <uart_putchar>
	      }
	    break;

	  case 'r' & 0x1f:
	    uart_putchar('\r', stream);
	    for (cp2 = b; cp2 < cp; cp2++)
     4f4:	ec 16       	cp	r14, r28
     4f6:	fd 06       	cpc	r15, r29
     4f8:	b8 f3       	brcs	.-18     	; 0x4e8 <uart_getchar+0xf2>
     4fa:	8d cf       	rjmp	.-230    	; 0x416 <uart_getchar+0x20>
	    break;

	  case 'u' & 0x1f:
	    while (cp > b)
	      {
		uart_putchar('\b', stream);
     4fc:	b8 01       	movw	r22, r16
     4fe:	88 e0       	ldi	r24, 0x08	; 8
     500:	0e 94 df 01 	call	0x3be	; 0x3be <uart_putchar>
		uart_putchar(' ', stream);
     504:	b8 01       	movw	r22, r16
     506:	80 e2       	ldi	r24, 0x20	; 32
     508:	0e 94 df 01 	call	0x3be	; 0x3be <uart_putchar>
		uart_putchar('\b', stream);
     50c:	b8 01       	movw	r22, r16
     50e:	88 e0       	ldi	r24, 0x08	; 8
     510:	0e 94 df 01 	call	0x3be	; 0x3be <uart_putchar>
		cp--;
     514:	21 97       	sbiw	r28, 0x01	; 1
	    for (cp2 = b; cp2 < cp; cp2++)
	      uart_putchar(*cp2, stream);
	    break;

	  case 'u' & 0x1f:
	    while (cp > b)
     516:	f1 e0       	ldi	r31, 0x01	; 1
     518:	ca 38       	cpi	r28, 0x8A	; 138
     51a:	df 07       	cpc	r29, r31
     51c:	09 f0       	breq	.+2      	; 0x520 <uart_getchar+0x12a>
     51e:	70 f7       	brcc	.-36     	; 0x4fc <uart_getchar+0x106>
     520:	7a cf       	rjmp	.-268    	; 0x416 <uart_getchar+0x20>
	    break;

	  case 'w' & 0x1f:
	    while (cp > b && cp[-1] != ' ')
	      {
		uart_putchar('\b', stream);
     522:	b8 01       	movw	r22, r16
     524:	88 e0       	ldi	r24, 0x08	; 8
     526:	0e 94 df 01 	call	0x3be	; 0x3be <uart_putchar>
		uart_putchar(' ', stream);
     52a:	b8 01       	movw	r22, r16
     52c:	80 e2       	ldi	r24, 0x20	; 32
     52e:	0e 94 df 01 	call	0x3be	; 0x3be <uart_putchar>
		uart_putchar('\b', stream);
     532:	b8 01       	movw	r22, r16
     534:	88 e0       	ldi	r24, 0x08	; 8
     536:	0e 94 df 01 	call	0x3be	; 0x3be <uart_putchar>
		cp--;
     53a:	e7 01       	movw	r28, r14
		cp--;
	      }
	    break;

	  case 'w' & 0x1f:
	    while (cp > b && cp[-1] != ' ')
     53c:	81 e0       	ldi	r24, 0x01	; 1
     53e:	ca 38       	cpi	r28, 0x8A	; 138
     540:	d8 07       	cpc	r29, r24
     542:	09 f0       	breq	.+2      	; 0x546 <uart_getchar+0x150>
     544:	08 f4       	brcc	.+2      	; 0x548 <uart_getchar+0x152>
     546:	67 cf       	rjmp	.-306    	; 0x416 <uart_getchar+0x20>
     548:	fe 01       	movw	r30, r28
     54a:	82 91       	ld	r24, -Z
     54c:	7f 01       	movw	r14, r30
     54e:	80 32       	cpi	r24, 0x20	; 32
     550:	41 f7       	brne	.-48     	; 0x522 <uart_getchar+0x12c>
     552:	61 cf       	rjmp	.-318    	; 0x416 <uart_getchar+0x20>
	      }
	    break;
	  }
      }

  c = *rxp++;
     554:	e0 91 88 01 	lds	r30, 0x0188
     558:	f0 91 89 01 	lds	r31, 0x0189
     55c:	20 81       	ld	r18, Z
  if (c == '\n')
     55e:	2a 30       	cpi	r18, 0x0A	; 10
     560:	31 f0       	breq	.+12     	; 0x56e <uart_getchar+0x178>
	      }
	    break;
	  }
      }

  c = *rxp++;
     562:	31 96       	adiw	r30, 0x01	; 1
     564:	f0 93 89 01 	sts	0x0189, r31
     568:	e0 93 88 01 	sts	0x0188, r30
     56c:	04 c0       	rjmp	.+8      	; 0x576 <uart_getchar+0x180>
  if (c == '\n')
    rxp = 0;
     56e:	10 92 89 01 	sts	0x0189, r1
     572:	10 92 88 01 	sts	0x0188, r1

  return c;
     576:	30 e0       	ldi	r19, 0x00	; 0
     578:	05 c0       	rjmp	.+10     	; 0x584 <uart_getchar+0x18e>
  if (rxp == 0)
    for (cp = b;;)
      {
	loop_until_bit_is_set(UCSR0A, RXC0);
	if (UCSR0A & _BV(FE0))
	  return _FDEV_EOF;
     57a:	2e ef       	ldi	r18, 0xFE	; 254
     57c:	3f ef       	ldi	r19, 0xFF	; 255
     57e:	02 c0       	rjmp	.+4      	; 0x584 <uart_getchar+0x18e>
	  }

	switch (c)
	  {
	  case 'c' & 0x1f:
	    return -1;
     580:	2f ef       	ldi	r18, 0xFF	; 255
     582:	3f ef       	ldi	r19, 0xFF	; 255
  c = *rxp++;
  if (c == '\n')
    rxp = 0;

  return c;
}
     584:	c9 01       	movw	r24, r18
     586:	df 91       	pop	r29
     588:	cf 91       	pop	r28
     58a:	1f 91       	pop	r17
     58c:	0f 91       	pop	r16
     58e:	ff 90       	pop	r15
     590:	ef 90       	pop	r14
     592:	08 95       	ret

00000594 <__vector_18>:
*/

volatile unsigned long accumulator ;

volatile unsigned long increment;
ISR( TIMER0_OVF_vect){
     594:	1f 92       	push	r1
     596:	0f 92       	push	r0
     598:	0f b6       	in	r0, 0x3f	; 63
     59a:	0f 92       	push	r0
     59c:	11 24       	eor	r1, r1
     59e:	0b b6       	in	r0, 0x3b	; 59
     5a0:	0f 92       	push	r0
     5a2:	2f 93       	push	r18
     5a4:	3f 93       	push	r19
     5a6:	4f 93       	push	r20
     5a8:	5f 93       	push	r21
     5aa:	6f 93       	push	r22
     5ac:	7f 93       	push	r23
     5ae:	8f 93       	push	r24
     5b0:	9f 93       	push	r25
     5b2:	af 93       	push	r26
     5b4:	bf 93       	push	r27
     5b6:	ef 93       	push	r30
     5b8:	ff 93       	push	r31

	accumulator_a += increment_a;
     5ba:	80 91 f4 03 	lds	r24, 0x03F4
     5be:	90 91 f5 03 	lds	r25, 0x03F5
     5c2:	a0 91 f6 03 	lds	r26, 0x03F6
     5c6:	b0 91 f7 03 	lds	r27, 0x03F7
     5ca:	40 91 e7 01 	lds	r20, 0x01E7
     5ce:	50 91 e8 01 	lds	r21, 0x01E8
     5d2:	60 91 e9 01 	lds	r22, 0x01E9
     5d6:	70 91 ea 01 	lds	r23, 0x01EA
     5da:	84 0f       	add	r24, r20
     5dc:	95 1f       	adc	r25, r21
     5de:	a6 1f       	adc	r26, r22
     5e0:	b7 1f       	adc	r27, r23
     5e2:	80 93 f4 03 	sts	0x03F4, r24
     5e6:	90 93 f5 03 	sts	0x03F5, r25
     5ea:	a0 93 f6 03 	sts	0x03F6, r26
     5ee:	b0 93 f7 03 	sts	0x03F7, r27
	accumulator_b += increment_b;
     5f2:	80 91 00 04 	lds	r24, 0x0400
     5f6:	90 91 01 04 	lds	r25, 0x0401
     5fa:	a0 91 02 04 	lds	r26, 0x0402
     5fe:	b0 91 03 04 	lds	r27, 0x0403
     602:	40 91 0a 04 	lds	r20, 0x040A
     606:	50 91 0b 04 	lds	r21, 0x040B
     60a:	60 91 0c 04 	lds	r22, 0x040C
     60e:	70 91 0d 04 	lds	r23, 0x040D
     612:	84 0f       	add	r24, r20
     614:	95 1f       	adc	r25, r21
     616:	a6 1f       	adc	r26, r22
     618:	b7 1f       	adc	r27, r23
     61a:	80 93 00 04 	sts	0x0400, r24
     61e:	90 93 01 04 	sts	0x0401, r25
     622:	a0 93 02 04 	sts	0x0402, r26
     626:	b0 93 03 04 	sts	0x0403, r27

	highbyte_a = (char) (accumulator_a >> 24);
     62a:	80 91 f4 03 	lds	r24, 0x03F4
     62e:	90 91 f5 03 	lds	r25, 0x03F5
     632:	a0 91 f6 03 	lds	r26, 0x03F6
     636:	b0 91 f7 03 	lds	r27, 0x03F7
     63a:	8b 2f       	mov	r24, r27
     63c:	99 27       	eor	r25, r25
     63e:	aa 27       	eor	r26, r26
     640:	bb 27       	eor	r27, r27
     642:	80 93 04 04 	sts	0x0404, r24
	highbyte_b = (char) (accumulator_b >> 24);
     646:	80 91 00 04 	lds	r24, 0x0400
     64a:	90 91 01 04 	lds	r25, 0x0401
     64e:	a0 91 02 04 	lds	r26, 0x0402
     652:	b0 91 03 04 	lds	r27, 0x0403
     656:	8b 2f       	mov	r24, r27
     658:	99 27       	eor	r25, r25
     65a:	aa 27       	eor	r26, r26
     65c:	bb 27       	eor	r27, r27
     65e:	80 93 0e 04 	sts	0x040E, r24
	
	sineA = (sineTable[highbyte_a] * rampTable[rampCount] ) >> 7 ;
     662:	e0 91 04 04 	lds	r30, 0x0404
     666:	f0 e0       	ldi	r31, 0x00	; 0
     668:	ec 50       	subi	r30, 0x0C	; 12
     66a:	fd 4f       	sbci	r31, 0xFD	; 253
     66c:	20 81       	ld	r18, Z
     66e:	80 91 fc 03 	lds	r24, 0x03FC
     672:	90 91 fd 03 	lds	r25, 0x03FD
     676:	a0 91 fe 03 	lds	r26, 0x03FE
     67a:	b0 91 ff 03 	lds	r27, 0x03FF
     67e:	fc 01       	movw	r30, r24
     680:	e5 51       	subi	r30, 0x15	; 21
     682:	fe 4f       	sbci	r31, 0xFE	; 254
     684:	30 81       	ld	r19, Z
     686:	23 03       	mulsu	r18, r19
     688:	c0 01       	movw	r24, r0
     68a:	11 24       	eor	r1, r1
     68c:	88 0f       	add	r24, r24
     68e:	89 2f       	mov	r24, r25
     690:	88 1f       	adc	r24, r24
     692:	99 0b       	sbc	r25, r25
     694:	aa 27       	eor	r26, r26
     696:	97 fd       	sbrc	r25, 7
     698:	a0 95       	com	r26
     69a:	ba 2f       	mov	r27, r26
     69c:	80 93 06 04 	sts	0x0406, r24
     6a0:	90 93 07 04 	sts	0x0407, r25
     6a4:	a0 93 08 04 	sts	0x0408, r26
     6a8:	b0 93 09 04 	sts	0x0409, r27
	sineB = (sineTable[highbyte_b] * rampTable[rampCount] ) >> 7 ;
     6ac:	e0 91 0e 04 	lds	r30, 0x040E
     6b0:	f0 e0       	ldi	r31, 0x00	; 0
     6b2:	ec 50       	subi	r30, 0x0C	; 12
     6b4:	fd 4f       	sbci	r31, 0xFD	; 253
     6b6:	20 81       	ld	r18, Z
     6b8:	80 91 fc 03 	lds	r24, 0x03FC
     6bc:	90 91 fd 03 	lds	r25, 0x03FD
     6c0:	a0 91 fe 03 	lds	r26, 0x03FE
     6c4:	b0 91 ff 03 	lds	r27, 0x03FF
     6c8:	fc 01       	movw	r30, r24
     6ca:	e5 51       	subi	r30, 0x15	; 21
     6cc:	fe 4f       	sbci	r31, 0xFE	; 254
     6ce:	30 81       	ld	r19, Z
     6d0:	23 03       	mulsu	r18, r19
     6d2:	c0 01       	movw	r24, r0
     6d4:	11 24       	eor	r1, r1
     6d6:	88 0f       	add	r24, r24
     6d8:	89 2f       	mov	r24, r25
     6da:	88 1f       	adc	r24, r24
     6dc:	99 0b       	sbc	r25, r25
     6de:	aa 27       	eor	r26, r26
     6e0:	97 fd       	sbrc	r25, 7
     6e2:	a0 95       	com	r26
     6e4:	ba 2f       	mov	r27, r26
     6e6:	80 93 f8 03 	sts	0x03F8, r24
     6ea:	90 93 f9 03 	sts	0x03F9, r25
     6ee:	a0 93 fa 03 	sts	0x03FA, r26
     6f2:	b0 93 fb 03 	sts	0x03FB, r27

	accumulator = accumulator + increment ;
     6f6:	40 91 eb 02 	lds	r20, 0x02EB
     6fa:	50 91 ec 02 	lds	r21, 0x02EC
     6fe:	60 91 ed 02 	lds	r22, 0x02ED
     702:	70 91 ee 02 	lds	r23, 0x02EE
     706:	80 91 ef 02 	lds	r24, 0x02EF
     70a:	90 91 f0 02 	lds	r25, 0x02F0
     70e:	a0 91 f1 02 	lds	r26, 0x02F1
     712:	b0 91 f2 02 	lds	r27, 0x02F2
     716:	84 0f       	add	r24, r20
     718:	95 1f       	adc	r25, r21
     71a:	a6 1f       	adc	r26, r22
     71c:	b7 1f       	adc	r27, r23
     71e:	80 93 eb 02 	sts	0x02EB, r24
     722:	90 93 ec 02 	sts	0x02EC, r25
     726:	a0 93 ed 02 	sts	0x02ED, r26
     72a:	b0 93 ee 02 	sts	0x02EE, r27

	highbyte = (char)(accumulator >> 24) ;
     72e:	80 91 eb 02 	lds	r24, 0x02EB
     732:	90 91 ec 02 	lds	r25, 0x02EC
     736:	a0 91 ed 02 	lds	r26, 0x02ED
     73a:	b0 91 ee 02 	lds	r27, 0x02EE
     73e:	8b 2f       	mov	r24, r27
     740:	99 27       	eor	r25, r25
     742:	aa 27       	eor	r26, r26
     744:	bb 27       	eor	r27, r27
     746:	80 93 f3 02 	sts	0x02F3, r24
	
	// output the wavefrom sample
	OCR0A = 128 + ((sineTable[highbyte] * rampTable[rampCount])>>7) ;
     74a:	e8 2f       	mov	r30, r24
     74c:	f0 e0       	ldi	r31, 0x00	; 0
     74e:	ec 50       	subi	r30, 0x0C	; 12
     750:	fd 4f       	sbci	r31, 0xFD	; 253
     752:	20 81       	ld	r18, Z
     754:	80 91 fc 03 	lds	r24, 0x03FC
     758:	90 91 fd 03 	lds	r25, 0x03FD
     75c:	a0 91 fe 03 	lds	r26, 0x03FE
     760:	b0 91 ff 03 	lds	r27, 0x03FF
     764:	fc 01       	movw	r30, r24
     766:	e5 51       	subi	r30, 0x15	; 21
     768:	fe 4f       	sbci	r31, 0xFE	; 254
     76a:	30 81       	ld	r19, Z
     76c:	23 03       	mulsu	r18, r19
     76e:	c0 01       	movw	r24, r0
     770:	11 24       	eor	r1, r1
     772:	88 0f       	add	r24, r24
     774:	89 2f       	mov	r24, r25
     776:	88 1f       	adc	r24, r24
     778:	99 0b       	sbc	r25, r25
     77a:	80 58       	subi	r24, 0x80	; 128
     77c:	87 bd       	out	0x27, r24	; 39
	   	   sineA + sineB
	   	 ) >> 1
	   );
	
	*/
	sample++;
     77e:	80 91 0f 04 	lds	r24, 0x040F
     782:	90 91 10 04 	lds	r25, 0x0410
     786:	a0 91 11 04 	lds	r26, 0x0411
     78a:	b0 91 12 04 	lds	r27, 0x0412
     78e:	01 96       	adiw	r24, 0x01	; 1
     790:	a1 1d       	adc	r26, r1
     792:	b1 1d       	adc	r27, r1
     794:	80 93 0f 04 	sts	0x040F, r24
     798:	90 93 10 04 	sts	0x0410, r25
     79c:	a0 93 11 04 	sts	0x0411, r26
     7a0:	b0 93 12 04 	sts	0x0412, r27

	//ramping up
	if( sample <= RAMPUPEND )
     7a4:	80 91 0f 04 	lds	r24, 0x040F
     7a8:	90 91 10 04 	lds	r25, 0x0410
     7ac:	a0 91 11 04 	lds	r26, 0x0411
     7b0:	b0 91 12 04 	lds	r27, 0x0412
     7b4:	8b 3f       	cpi	r24, 0xFB	; 251
     7b6:	91 05       	cpc	r25, r1
     7b8:	a1 05       	cpc	r26, r1
     7ba:	b1 05       	cpc	r27, r1
     7bc:	98 f4       	brcc	.+38     	; 0x7e4 <__vector_18+0x250>
		rampCount++;
     7be:	80 91 fc 03 	lds	r24, 0x03FC
     7c2:	90 91 fd 03 	lds	r25, 0x03FD
     7c6:	a0 91 fe 03 	lds	r26, 0x03FE
     7ca:	b0 91 ff 03 	lds	r27, 0x03FF
     7ce:	01 96       	adiw	r24, 0x01	; 1
     7d0:	a1 1d       	adc	r26, r1
     7d2:	b1 1d       	adc	r27, r1
     7d4:	80 93 fc 03 	sts	0x03FC, r24
     7d8:	90 93 fd 03 	sts	0x03FD, r25
     7dc:	a0 93 fe 03 	sts	0x03FE, r26
     7e0:	b0 93 ff 03 	sts	0x03FF, r27
	//holdsteady the max value 
	if( sample > RAMPUPEND && sample <= RAMPDOWNSTART)
     7e4:	80 91 0f 04 	lds	r24, 0x040F
     7e8:	90 91 10 04 	lds	r25, 0x0410
     7ec:	a0 91 11 04 	lds	r26, 0x0411
     7f0:	b0 91 12 04 	lds	r27, 0x0412
     7f4:	8b 3f       	cpi	r24, 0xFB	; 251
     7f6:	91 05       	cpc	r25, r1
     7f8:	a1 05       	cpc	r26, r1
     7fa:	b1 05       	cpc	r27, r1
     7fc:	c8 f0       	brcs	.+50     	; 0x830 <__vector_18+0x29c>
     7fe:	80 91 0f 04 	lds	r24, 0x040F
     802:	90 91 10 04 	lds	r25, 0x0410
     806:	a0 91 11 04 	lds	r26, 0x0411
     80a:	b0 91 12 04 	lds	r27, 0x0412
     80e:	82 37       	cpi	r24, 0x72	; 114
     810:	92 40       	sbci	r25, 0x02	; 2
     812:	a1 05       	cpc	r26, r1
     814:	b1 05       	cpc	r27, r1
     816:	60 f4       	brcc	.+24     	; 0x830 <__vector_18+0x29c>
		rampCount = 256 - 1;
     818:	8f ef       	ldi	r24, 0xFF	; 255
     81a:	90 e0       	ldi	r25, 0x00	; 0
     81c:	a0 e0       	ldi	r26, 0x00	; 0
     81e:	b0 e0       	ldi	r27, 0x00	; 0
     820:	80 93 fc 03 	sts	0x03FC, r24
     824:	90 93 fd 03 	sts	0x03FD, r25
     828:	a0 93 fe 03 	sts	0x03FE, r26
     82c:	b0 93 ff 03 	sts	0x03FF, r27
	//begin rampdown
	if( sample > RAMPDOWNSTART && sample <= RAMPDOWNEND)
     830:	80 91 0f 04 	lds	r24, 0x040F
     834:	90 91 10 04 	lds	r25, 0x0410
     838:	a0 91 11 04 	lds	r26, 0x0411
     83c:	b0 91 12 04 	lds	r27, 0x0412
     840:	82 37       	cpi	r24, 0x72	; 114
     842:	92 40       	sbci	r25, 0x02	; 2
     844:	a1 05       	cpc	r26, r1
     846:	b1 05       	cpc	r27, r1
     848:	00 f1       	brcs	.+64     	; 0x88a <__vector_18+0x2f6>
     84a:	80 91 0f 04 	lds	r24, 0x040F
     84e:	90 91 10 04 	lds	r25, 0x0410
     852:	a0 91 11 04 	lds	r26, 0x0411
     856:	b0 91 12 04 	lds	r27, 0x0412
     85a:	8c 36       	cpi	r24, 0x6C	; 108
     85c:	93 40       	sbci	r25, 0x03	; 3
     85e:	a1 05       	cpc	r26, r1
     860:	b1 05       	cpc	r27, r1
     862:	98 f4       	brcc	.+38     	; 0x88a <__vector_18+0x2f6>
		rampCount--;
     864:	80 91 fc 03 	lds	r24, 0x03FC
     868:	90 91 fd 03 	lds	r25, 0x03FD
     86c:	a0 91 fe 03 	lds	r26, 0x03FE
     870:	b0 91 ff 03 	lds	r27, 0x03FF
     874:	01 97       	sbiw	r24, 0x01	; 1
     876:	a1 09       	sbc	r26, r1
     878:	b1 09       	sbc	r27, r1
     87a:	80 93 fc 03 	sts	0x03FC, r24
     87e:	90 93 fd 03 	sts	0x03FD, r25
     882:	a0 93 fe 03 	sts	0x03FE, r26
     886:	b0 93 ff 03 	sts	0x03FF, r27
	//finished ramping
	if(sample > RAMPDOWNEND){
     88a:	80 91 0f 04 	lds	r24, 0x040F
     88e:	90 91 10 04 	lds	r25, 0x0410
     892:	a0 91 11 04 	lds	r26, 0x0411
     896:	b0 91 12 04 	lds	r27, 0x0412
     89a:	8c 36       	cpi	r24, 0x6C	; 108
     89c:	93 40       	sbci	r25, 0x03	; 3
     89e:	a1 05       	cpc	r26, r1
     8a0:	b1 05       	cpc	r27, r1
     8a2:	80 f0       	brcs	.+32     	; 0x8c4 <__vector_18+0x330>
		rampCount = 0;
     8a4:	10 92 fc 03 	sts	0x03FC, r1
     8a8:	10 92 fd 03 	sts	0x03FD, r1
     8ac:	10 92 fe 03 	sts	0x03FE, r1
     8b0:	10 92 ff 03 	sts	0x03FF, r1
		sample = 0;
     8b4:	10 92 0f 04 	sts	0x040F, r1
     8b8:	10 92 10 04 	sts	0x0410, r1
     8bc:	10 92 11 04 	sts	0x0411, r1
     8c0:	10 92 12 04 	sts	0x0412, r1
		
	}

	//generates a 1 ms timebase
	count--;
     8c4:	80 91 05 04 	lds	r24, 0x0405
     8c8:	81 50       	subi	r24, 0x01	; 1
     8ca:	80 93 05 04 	sts	0x0405, r24
	if( count == 0){
     8ce:	80 91 05 04 	lds	r24, 0x0405
     8d2:	81 11       	cpse	r24, r1
     8d4:	03 c0       	rjmp	.+6      	; 0x8dc <__vector_18+0x348>
		count = COUNTMS;
     8d6:	8e e3       	ldi	r24, 0x3E	; 62
     8d8:	80 93 05 04 	sts	0x0405, r24
		//time++;
		//time1++;
	}

	
}
     8dc:	ff 91       	pop	r31
     8de:	ef 91       	pop	r30
     8e0:	bf 91       	pop	r27
     8e2:	af 91       	pop	r26
     8e4:	9f 91       	pop	r25
     8e6:	8f 91       	pop	r24
     8e8:	7f 91       	pop	r23
     8ea:	6f 91       	pop	r22
     8ec:	5f 91       	pop	r21
     8ee:	4f 91       	pop	r20
     8f0:	3f 91       	pop	r19
     8f2:	2f 91       	pop	r18
     8f4:	0f 90       	pop	r0
     8f6:	0b be       	out	0x3b, r0	; 59
     8f8:	0f 90       	pop	r0
     8fa:	0f be       	out	0x3f, r0	; 63
     8fc:	0f 90       	pop	r0
     8fe:	1f 90       	pop	r1
     900:	18 95       	reti

00000902 <init_dtmf>:


void init_dtmf(){
     902:	ef 92       	push	r14
     904:	ff 92       	push	r15
     906:	0f 93       	push	r16
     908:	1f 93       	push	r17
     90a:	cf 93       	push	r28
     90c:	df 93       	push	r29
	DDRB = 0;
     90e:	14 b8       	out	0x04, r1	; 4
	DDRB |= OUTPUT_PIN;
     910:	23 9a       	sbi	0x04, 3	; 4
     912:	f4 ef       	ldi	r31, 0xF4	; 244
     914:	ef 2e       	mov	r14, r31
     916:	f2 e0       	ldi	r31, 0x02	; 2
     918:	ff 2e       	mov	r15, r31
     91a:	0b ee       	ldi	r16, 0xEB	; 235
     91c:	11 e0       	ldi	r17, 0x01	; 1
	int i;
	for (i=0; i<256; i++){
     91e:	c0 e0       	ldi	r28, 0x00	; 0
     920:	d0 e0       	ldi	r29, 0x00	; 0
		sineTable[i] = (char)(127.0 * sin(6.283*((float)i)/256.0)) ;
     922:	be 01       	movw	r22, r28
     924:	88 27       	eor	r24, r24
     926:	77 fd       	sbrc	r23, 7
     928:	80 95       	com	r24
     92a:	98 2f       	mov	r25, r24
     92c:	0e 94 9a 08 	call	0x1134	; 0x1134 <__floatsisf>
     930:	26 e5       	ldi	r18, 0x56	; 86
     932:	3e e0       	ldi	r19, 0x0E	; 14
     934:	49 ec       	ldi	r20, 0xC9	; 201
     936:	50 e4       	ldi	r21, 0x40	; 64
     938:	0e 94 86 07 	call	0xf0c	; 0xf0c <__mulsf3>
     93c:	20 e0       	ldi	r18, 0x00	; 0
     93e:	30 e0       	ldi	r19, 0x00	; 0
     940:	40 e8       	ldi	r20, 0x80	; 128
     942:	5b e3       	ldi	r21, 0x3B	; 59
     944:	0e 94 86 07 	call	0xf0c	; 0xf0c <__mulsf3>
     948:	0e 94 a1 0b 	call	0x1742	; 0x1742 <sin>
     94c:	20 e0       	ldi	r18, 0x00	; 0
     94e:	30 e0       	ldi	r19, 0x00	; 0
     950:	4e ef       	ldi	r20, 0xFE	; 254
     952:	52 e4       	ldi	r21, 0x42	; 66
     954:	0e 94 86 07 	call	0xf0c	; 0xf0c <__mulsf3>
     958:	0e 94 a1 05 	call	0xb42	; 0xb42 <__fixunssfsi>
     95c:	f7 01       	movw	r30, r14
     95e:	61 93       	st	Z+, r22
     960:	7f 01       	movw	r14, r30
		// the following table needs 
		// rampTable[0]=0 and rampTable[255]=127
		rampTable[i] = i>>1 ;
     962:	ce 01       	movw	r24, r28
     964:	95 95       	asr	r25
     966:	87 95       	ror	r24
     968:	f8 01       	movw	r30, r16
     96a:	81 93       	st	Z+, r24
     96c:	8f 01       	movw	r16, r30

void init_dtmf(){
	DDRB = 0;
	DDRB |= OUTPUT_PIN;
	int i;
	for (i=0; i<256; i++){
     96e:	21 96       	adiw	r28, 0x01	; 1
     970:	c1 15       	cp	r28, r1
     972:	f1 e0       	ldi	r31, 0x01	; 1
     974:	df 07       	cpc	r29, r31
     976:	a9 f6       	brne	.-86     	; 0x922 <init_dtmf+0x20>
		sineTable[i] = (char)(127.0 * sin(6.283*((float)i)/256.0)) ;
		// the following table needs 
		// rampTable[0]=0 and rampTable[255]=127
		rampTable[i] = i>>1 ;
	}
	time = 0;
     978:	10 92 e1 01 	sts	0x01E1, r1
     97c:	10 92 e0 01 	sts	0x01E0, r1

	TCCR0B = 0;
     980:	15 bc       	out	0x25, r1	; 37
	//set divider to 1, run T0 at 16 MHz 
	TCCR0B |= T0_CS00;
     982:	85 b5       	in	r24, 0x25	; 37
     984:	81 60       	ori	r24, 0x01	; 1
     986:	85 bd       	out	0x25, r24	; 37

	TIMSK0 = 0;
     988:	10 92 6e 00 	sts	0x006E, r1
	TIMSK0 |= TIMER0_OVERFLOW_INTERRUPT_ENABLE;
     98c:	80 91 6e 00 	lds	r24, 0x006E
     990:	81 60       	ori	r24, 0x01	; 1
     992:	80 93 6e 00 	sts	0x006E, r24
	//turn on fast PWM and OC0A - output 
	TCCR0A = 0;
     996:	14 bc       	out	0x24, r1	; 36
	TCCR0A |= WAVE_GEN_M00 + WAVE_GEN_M01 + COMPARE_MATCH_OUTPUT_A0 + COMPARE_MATCH_OUTPUT_A1; 
     998:	84 b5       	in	r24, 0x24	; 36
     99a:	83 6c       	ori	r24, 0xC3	; 195
     99c:	84 bd       	out	0x24, r24	; 36
	OCR0A = 128;
     99e:	80 e8       	ldi	r24, 0x80	; 128
     9a0:	87 bd       	out	0x27, r24	; 39
	increment = INCREMENT_941;
     9a2:	83 e0       	ldi	r24, 0x03	; 3
     9a4:	94 eb       	ldi	r25, 0xB4	; 180
     9a6:	aa ed       	ldi	r26, 0xDA	; 218
     9a8:	b3 e0       	ldi	r27, 0x03	; 3
     9aa:	80 93 ef 02 	sts	0x02EF, r24
     9ae:	90 93 f0 02 	sts	0x02F0, r25
     9b2:	a0 93 f1 02 	sts	0x02F1, r26
     9b6:	b0 93 f2 02 	sts	0x02F2, r27
	//increment_a = INCREMENT_941;
	//increment_b = INCREMENT_941;
	sei();
     9ba:	78 94       	sei
}
     9bc:	df 91       	pop	r29
     9be:	cf 91       	pop	r28
     9c0:	1f 91       	pop	r17
     9c2:	0f 91       	pop	r16
     9c4:	ff 90       	pop	r15
     9c6:	ef 90       	pop	r14
     9c8:	08 95       	ret

000009ca <play>:

//plays fA and fB for a duration of duration ms
void play(int fA, int fB, int duration){
	//if( !is_playing ){
		//is_playing = TRUE;
		switch( fA){
     9ca:	89 3b       	cpi	r24, 0xB9	; 185
     9cc:	24 e0       	ldi	r18, 0x04	; 4
     9ce:	92 07       	cpc	r25, r18
     9d0:	89 f0       	breq	.+34     	; 0x9f4 <play+0x2a>
     9d2:	44 f4       	brge	.+16     	; 0x9e4 <play+0x1a>
     9d4:	89 3b       	cpi	r24, 0xB9	; 185
     9d6:	22 e0       	ldi	r18, 0x02	; 2
     9d8:	92 07       	cpc	r25, r18
     9da:	19 f1       	breq	.+70     	; 0xa22 <play+0x58>
     9dc:	8d 3a       	cpi	r24, 0xAD	; 173
     9de:	93 40       	sbci	r25, 0x03	; 3
     9e0:	51 f5       	brne	.+84     	; 0xa36 <play+0x6c>
     9e2:	24 c0       	rjmp	.+72     	; 0xa2c <play+0x62>
     9e4:	88 33       	cpi	r24, 0x38	; 56
     9e6:	25 e0       	ldi	r18, 0x05	; 5
     9e8:	92 07       	cpc	r25, r18
     9ea:	49 f0       	breq	.+18     	; 0x9fe <play+0x34>
     9ec:	85 3c       	cpi	r24, 0xC5	; 197
     9ee:	95 40       	sbci	r25, 0x05	; 5
     9f0:	11 f5       	brne	.+68     	; 0xa36 <play+0x6c>
     9f2:	12 c0       	rjmp	.+36     	; 0xa18 <play+0x4e>
			case 1209: increment_a = INCREMENT_1209; break;
     9f4:	87 e3       	ldi	r24, 0x37	; 55
     9f6:	98 eb       	ldi	r25, 0xB8	; 184
     9f8:	a3 ef       	ldi	r26, 0xF3	; 243
     9fa:	b4 e0       	ldi	r27, 0x04	; 4
     9fc:	04 c0       	rjmp	.+8      	; 0xa06 <play+0x3c>
			case 1336: increment_a = INCREMENT_1336; break;
     9fe:	88 e4       	ldi	r24, 0x48	; 72
     a00:	93 ee       	ldi	r25, 0xE3	; 227
     a02:	a8 e7       	ldi	r26, 0x78	; 120
     a04:	b5 e0       	ldi	r27, 0x05	; 5
     a06:	80 93 e7 01 	sts	0x01E7, r24
     a0a:	90 93 e8 01 	sts	0x01E8, r25
     a0e:	a0 93 e9 01 	sts	0x01E9, r26
     a12:	b0 93 ea 01 	sts	0x01EA, r27
     a16:	17 c0       	rjmp	.+46     	; 0xa46 <play+0x7c>
			case 1477: increment_a = INCREMENT_1477; break;
     a18:	8b e6       	ldi	r24, 0x6B	; 107
     a1a:	9c eb       	ldi	r25, 0xBC	; 188
     a1c:	ac e0       	ldi	r26, 0x0C	; 12
     a1e:	b6 e0       	ldi	r27, 0x06	; 6
     a20:	f2 cf       	rjmp	.-28     	; 0xa06 <play+0x3c>
			case 697:  increment_a = INCREMENT_697; break;
     a22:	87 e3       	ldi	r24, 0x37	; 55
     a24:	9a ed       	ldi	r25, 0xDA	; 218
     a26:	aa ed       	ldi	r26, 0xDA	; 218
     a28:	b2 e0       	ldi	r27, 0x02	; 2
     a2a:	ed cf       	rjmp	.-38     	; 0xa06 <play+0x3c>
			case 941: increment_a = INCREMENT_941; break;
     a2c:	83 e0       	ldi	r24, 0x03	; 3
     a2e:	94 eb       	ldi	r25, 0xB4	; 180
     a30:	aa ed       	ldi	r26, 0xDA	; 218
     a32:	b3 e0       	ldi	r27, 0x03	; 3
     a34:	e8 cf       	rjmp	.-48     	; 0xa06 <play+0x3c>
			default: increment_a = 0; break;
     a36:	10 92 e7 01 	sts	0x01E7, r1
     a3a:	10 92 e8 01 	sts	0x01E8, r1
     a3e:	10 92 e9 01 	sts	0x01E9, r1
     a42:	10 92 ea 01 	sts	0x01EA, r1
		}

		switch ( fB) {
     a46:	69 33       	cpi	r22, 0x39	; 57
     a48:	83 e0       	ldi	r24, 0x03	; 3
     a4a:	78 07       	cpc	r23, r24
     a4c:	19 f1       	breq	.+70     	; 0xa94 <play+0xca>
     a4e:	44 f4       	brge	.+16     	; 0xa60 <play+0x96>
     a50:	69 3b       	cpi	r22, 0xB9	; 185
     a52:	82 e0       	ldi	r24, 0x02	; 2
     a54:	78 07       	cpc	r23, r24
     a56:	61 f0       	breq	.+24     	; 0xa70 <play+0xa6>
     a58:	62 30       	cpi	r22, 0x02	; 2
     a5a:	73 40       	sbci	r23, 0x03	; 3
     a5c:	91 f5       	brne	.+100    	; 0xac2 <play+0xf8>
     a5e:	0d c0       	rjmp	.+26     	; 0xa7a <play+0xb0>
     a60:	6d 3a       	cpi	r22, 0xAD	; 173
     a62:	83 e0       	ldi	r24, 0x03	; 3
     a64:	78 07       	cpc	r23, r24
     a66:	d9 f0       	breq	.+54     	; 0xa9e <play+0xd4>
     a68:	69 3b       	cpi	r22, 0xB9	; 185
     a6a:	74 40       	sbci	r23, 0x04	; 4
     a6c:	51 f5       	brne	.+84     	; 0xac2 <play+0xf8>
     a6e:	1c c0       	rjmp	.+56     	; 0xaa8 <play+0xde>
			case 697: increment_b = INCREMENT_697; break;
     a70:	87 e3       	ldi	r24, 0x37	; 55
     a72:	9a ed       	ldi	r25, 0xDA	; 218
     a74:	aa ed       	ldi	r26, 0xDA	; 218
     a76:	b2 e0       	ldi	r27, 0x02	; 2
     a78:	04 c0       	rjmp	.+8      	; 0xa82 <play+0xb8>
			case 770: increment_b = INCREMENT_770; break;
     a7a:	8e ed       	ldi	r24, 0xDE	; 222
     a7c:	95 e6       	ldi	r25, 0x65	; 101
     a7e:	a7 e2       	ldi	r26, 0x27	; 39
     a80:	b3 e0       	ldi	r27, 0x03	; 3
     a82:	80 93 0a 04 	sts	0x040A, r24
     a86:	90 93 0b 04 	sts	0x040B, r25
     a8a:	a0 93 0c 04 	sts	0x040C, r26
     a8e:	b0 93 0d 04 	sts	0x040D, r27
     a92:	1f c0       	rjmp	.+62     	; 0xad2 <play+0x108>
			case 825: increment_b = INCREMENT_825; break;
     a94:	87 eb       	ldi	r24, 0xB7	; 183
     a96:	91 e1       	ldi	r25, 0x11	; 17
     a98:	a1 e6       	ldi	r26, 0x61	; 97
     a9a:	b3 e0       	ldi	r27, 0x03	; 3
     a9c:	f2 cf       	rjmp	.-28     	; 0xa82 <play+0xb8>
			case 941: increment_b = INCREMENT_941; break;
     a9e:	83 e0       	ldi	r24, 0x03	; 3
     aa0:	94 eb       	ldi	r25, 0xB4	; 180
     aa2:	aa ed       	ldi	r26, 0xDA	; 218
     aa4:	b3 e0       	ldi	r27, 0x03	; 3
     aa6:	ed cf       	rjmp	.-38     	; 0xa82 <play+0xb8>
			case 1209: increment_a = INCREMENT_1209; break;
     aa8:	87 e3       	ldi	r24, 0x37	; 55
     aaa:	98 eb       	ldi	r25, 0xB8	; 184
     aac:	a3 ef       	ldi	r26, 0xF3	; 243
     aae:	b4 e0       	ldi	r27, 0x04	; 4
     ab0:	80 93 e7 01 	sts	0x01E7, r24
     ab4:	90 93 e8 01 	sts	0x01E8, r25
     ab8:	a0 93 e9 01 	sts	0x01E9, r26
     abc:	b0 93 ea 01 	sts	0x01EA, r27
     ac0:	08 c0       	rjmp	.+16     	; 0xad2 <play+0x108>
			default: increment_b = 0; break;
     ac2:	10 92 0a 04 	sts	0x040A, r1
     ac6:	10 92 0b 04 	sts	0x040B, r1
     aca:	10 92 0c 04 	sts	0x040C, r1
     ace:	10 92 0d 04 	sts	0x040D, r1
		}
		dds_duration = duration;
     ad2:	50 93 dd 01 	sts	0x01DD, r21
     ad6:	40 93 dc 01 	sts	0x01DC, r20
     ada:	08 95       	ret

00000adc <stop_playing>:


}

void stop_playing(){
	is_playing = FALSE;
     adc:	10 92 e6 01 	sts	0x01E6, r1
	sample = 0;
     ae0:	10 92 0f 04 	sts	0x040F, r1
     ae4:	10 92 10 04 	sts	0x0410, r1
     ae8:	10 92 11 04 	sts	0x0411, r1
     aec:	10 92 12 04 	sts	0x0412, r1
	rampCount = 0;
     af0:	10 92 fc 03 	sts	0x03FC, r1
     af4:	10 92 fd 03 	sts	0x03FD, r1
     af8:	10 92 fe 03 	sts	0x03FE, r1
     afc:	10 92 ff 03 	sts	0x03FF, r1
	increment_a = increment_b = 0;
     b00:	10 92 0a 04 	sts	0x040A, r1
     b04:	10 92 0b 04 	sts	0x040B, r1
     b08:	10 92 0c 04 	sts	0x040C, r1
     b0c:	10 92 0d 04 	sts	0x040D, r1
     b10:	10 92 e7 01 	sts	0x01E7, r1
     b14:	10 92 e8 01 	sts	0x01E8, r1
     b18:	10 92 e9 01 	sts	0x01E9, r1
     b1c:	10 92 ea 01 	sts	0x01EA, r1
	accumulator_a = accumulator_b = 0;
     b20:	10 92 00 04 	sts	0x0400, r1
     b24:	10 92 01 04 	sts	0x0401, r1
     b28:	10 92 02 04 	sts	0x0402, r1
     b2c:	10 92 03 04 	sts	0x0403, r1
     b30:	10 92 f4 03 	sts	0x03F4, r1
     b34:	10 92 f5 03 	sts	0x03F5, r1
     b38:	10 92 f6 03 	sts	0x03F6, r1
     b3c:	10 92 f7 03 	sts	0x03F7, r1
     b40:	08 95       	ret

00000b42 <__fixunssfsi>:
     b42:	cf 92       	push	r12
     b44:	df 92       	push	r13
     b46:	ef 92       	push	r14
     b48:	ff 92       	push	r15
     b4a:	0f 93       	push	r16
     b4c:	1f 93       	push	r17
     b4e:	6b 01       	movw	r12, r22
     b50:	7c 01       	movw	r14, r24
     b52:	20 e0       	ldi	r18, 0x00	; 0
     b54:	30 e0       	ldi	r19, 0x00	; 0
     b56:	40 e0       	ldi	r20, 0x00	; 0
     b58:	5f e4       	ldi	r21, 0x4F	; 79
     b5a:	0e 94 6b 08 	call	0x10d6	; 0x10d6 <__gesf2>
     b5e:	87 fd       	sbrc	r24, 7
     b60:	0e c0       	rjmp	.+28     	; 0xb7e <__fixunssfsi+0x3c>
     b62:	20 e0       	ldi	r18, 0x00	; 0
     b64:	30 e0       	ldi	r19, 0x00	; 0
     b66:	40 e0       	ldi	r20, 0x00	; 0
     b68:	5f e4       	ldi	r21, 0x4F	; 79
     b6a:	c7 01       	movw	r24, r14
     b6c:	b6 01       	movw	r22, r12
     b6e:	0e 94 56 07 	call	0xeac	; 0xeac <__subsf3>
     b72:	0e 94 f6 08 	call	0x11ec	; 0x11ec <__fixsfsi>
     b76:	8b 01       	movw	r16, r22
     b78:	9c 01       	movw	r18, r24
     b7a:	30 58       	subi	r19, 0x80	; 128
     b7c:	06 c0       	rjmp	.+12     	; 0xb8a <__fixunssfsi+0x48>
     b7e:	c7 01       	movw	r24, r14
     b80:	b6 01       	movw	r22, r12
     b82:	0e 94 f6 08 	call	0x11ec	; 0x11ec <__fixsfsi>
     b86:	8b 01       	movw	r16, r22
     b88:	9c 01       	movw	r18, r24
     b8a:	b8 01       	movw	r22, r16
     b8c:	c9 01       	movw	r24, r18
     b8e:	1f 91       	pop	r17
     b90:	0f 91       	pop	r16
     b92:	ff 90       	pop	r15
     b94:	ef 90       	pop	r14
     b96:	df 90       	pop	r13
     b98:	cf 90       	pop	r12
     b9a:	08 95       	ret

00000b9c <_fpadd_parts>:
     b9c:	a4 e0       	ldi	r26, 0x04	; 4
     b9e:	b0 e0       	ldi	r27, 0x00	; 0
     ba0:	e4 ed       	ldi	r30, 0xD4	; 212
     ba2:	f5 e0       	ldi	r31, 0x05	; 5
     ba4:	0c 94 31 0b 	jmp	0x1662	; 0x1662 <__prologue_saves__+0x4>
     ba8:	7c 01       	movw	r14, r24
     baa:	6a 01       	movw	r12, r20
     bac:	fc 01       	movw	r30, r24
     bae:	80 81       	ld	r24, Z
     bb0:	82 30       	cpi	r24, 0x02	; 2
     bb2:	08 f4       	brcc	.+2      	; 0xbb6 <_fpadd_parts+0x1a>
     bb4:	4a c1       	rjmp	.+660    	; 0xe4a <_fpadd_parts+0x2ae>
     bb6:	fb 01       	movw	r30, r22
     bb8:	90 81       	ld	r25, Z
     bba:	92 30       	cpi	r25, 0x02	; 2
     bbc:	08 f4       	brcc	.+2      	; 0xbc0 <_fpadd_parts+0x24>
     bbe:	42 c1       	rjmp	.+644    	; 0xe44 <_fpadd_parts+0x2a8>
     bc0:	84 30       	cpi	r24, 0x04	; 4
     bc2:	79 f4       	brne	.+30     	; 0xbe2 <_fpadd_parts+0x46>
     bc4:	94 30       	cpi	r25, 0x04	; 4
     bc6:	09 f0       	breq	.+2      	; 0xbca <_fpadd_parts+0x2e>
     bc8:	40 c1       	rjmp	.+640    	; 0xe4a <_fpadd_parts+0x2ae>
     bca:	f7 01       	movw	r30, r14
     bcc:	91 81       	ldd	r25, Z+1	; 0x01
     bce:	fb 01       	movw	r30, r22
     bd0:	81 81       	ldd	r24, Z+1	; 0x01
     bd2:	98 17       	cp	r25, r24
     bd4:	09 f4       	brne	.+2      	; 0xbd8 <_fpadd_parts+0x3c>
     bd6:	39 c1       	rjmp	.+626    	; 0xe4a <_fpadd_parts+0x2ae>
     bd8:	ae e4       	ldi	r26, 0x4E	; 78
     bda:	ea 2e       	mov	r14, r26
     bdc:	a1 e0       	ldi	r26, 0x01	; 1
     bde:	fa 2e       	mov	r15, r26
     be0:	34 c1       	rjmp	.+616    	; 0xe4a <_fpadd_parts+0x2ae>
     be2:	94 30       	cpi	r25, 0x04	; 4
     be4:	09 f4       	brne	.+2      	; 0xbe8 <_fpadd_parts+0x4c>
     be6:	2e c1       	rjmp	.+604    	; 0xe44 <_fpadd_parts+0x2a8>
     be8:	92 30       	cpi	r25, 0x02	; 2
     bea:	91 f4       	brne	.+36     	; 0xc10 <_fpadd_parts+0x74>
     bec:	82 30       	cpi	r24, 0x02	; 2
     bee:	09 f0       	breq	.+2      	; 0xbf2 <_fpadd_parts+0x56>
     bf0:	2c c1       	rjmp	.+600    	; 0xe4a <_fpadd_parts+0x2ae>
     bf2:	88 e0       	ldi	r24, 0x08	; 8
     bf4:	f7 01       	movw	r30, r14
     bf6:	da 01       	movw	r26, r20
     bf8:	01 90       	ld	r0, Z+
     bfa:	0d 92       	st	X+, r0
     bfc:	8a 95       	dec	r24
     bfe:	e1 f7       	brne	.-8      	; 0xbf8 <_fpadd_parts+0x5c>
     c00:	fb 01       	movw	r30, r22
     c02:	81 81       	ldd	r24, Z+1	; 0x01
     c04:	f7 01       	movw	r30, r14
     c06:	91 81       	ldd	r25, Z+1	; 0x01
     c08:	89 23       	and	r24, r25
     c0a:	fa 01       	movw	r30, r20
     c0c:	81 83       	std	Z+1, r24	; 0x01
     c0e:	1c c1       	rjmp	.+568    	; 0xe48 <_fpadd_parts+0x2ac>
     c10:	82 30       	cpi	r24, 0x02	; 2
     c12:	09 f4       	brne	.+2      	; 0xc16 <_fpadd_parts+0x7a>
     c14:	17 c1       	rjmp	.+558    	; 0xe44 <_fpadd_parts+0x2a8>
     c16:	f7 01       	movw	r30, r14
     c18:	82 81       	ldd	r24, Z+2	; 0x02
     c1a:	93 81       	ldd	r25, Z+3	; 0x03
     c1c:	fb 01       	movw	r30, r22
     c1e:	a2 81       	ldd	r26, Z+2	; 0x02
     c20:	b3 81       	ldd	r27, Z+3	; 0x03
     c22:	f7 01       	movw	r30, r14
     c24:	04 81       	ldd	r16, Z+4	; 0x04
     c26:	15 81       	ldd	r17, Z+5	; 0x05
     c28:	26 81       	ldd	r18, Z+6	; 0x06
     c2a:	37 81       	ldd	r19, Z+7	; 0x07
     c2c:	fb 01       	movw	r30, r22
     c2e:	84 80       	ldd	r8, Z+4	; 0x04
     c30:	95 80       	ldd	r9, Z+5	; 0x05
     c32:	a6 80       	ldd	r10, Z+6	; 0x06
     c34:	b7 80       	ldd	r11, Z+7	; 0x07
     c36:	fc 01       	movw	r30, r24
     c38:	ea 1b       	sub	r30, r26
     c3a:	fb 0b       	sbc	r31, r27
     c3c:	af 01       	movw	r20, r30
     c3e:	f7 ff       	sbrs	r31, 7
     c40:	04 c0       	rjmp	.+8      	; 0xc4a <_fpadd_parts+0xae>
     c42:	44 27       	eor	r20, r20
     c44:	55 27       	eor	r21, r21
     c46:	4e 1b       	sub	r20, r30
     c48:	5f 0b       	sbc	r21, r31
     c4a:	40 32       	cpi	r20, 0x20	; 32
     c4c:	51 05       	cpc	r21, r1
     c4e:	0c f0       	brlt	.+2      	; 0xc52 <_fpadd_parts+0xb6>
     c50:	74 c0       	rjmp	.+232    	; 0xd3a <_fpadd_parts+0x19e>
     c52:	1e 16       	cp	r1, r30
     c54:	1f 06       	cpc	r1, r31
     c56:	b4 f5       	brge	.+108    	; 0xcc4 <_fpadd_parts+0x128>
     c58:	24 01       	movw	r4, r8
     c5a:	35 01       	movw	r6, r10
     c5c:	04 2e       	mov	r0, r20
     c5e:	04 c0       	rjmp	.+8      	; 0xc68 <_fpadd_parts+0xcc>
     c60:	76 94       	lsr	r7
     c62:	67 94       	ror	r6
     c64:	57 94       	ror	r5
     c66:	47 94       	ror	r4
     c68:	0a 94       	dec	r0
     c6a:	d2 f7       	brpl	.-12     	; 0xc60 <_fpadd_parts+0xc4>
     c6c:	49 82       	std	Y+1, r4	; 0x01
     c6e:	5a 82       	std	Y+2, r5	; 0x02
     c70:	6b 82       	std	Y+3, r6	; 0x03
     c72:	7c 82       	std	Y+4, r7	; 0x04
     c74:	41 2c       	mov	r4, r1
     c76:	51 2c       	mov	r5, r1
     c78:	32 01       	movw	r6, r4
     c7a:	43 94       	inc	r4
     c7c:	04 c0       	rjmp	.+8      	; 0xc86 <_fpadd_parts+0xea>
     c7e:	44 0c       	add	r4, r4
     c80:	55 1c       	adc	r5, r5
     c82:	66 1c       	adc	r6, r6
     c84:	77 1c       	adc	r7, r7
     c86:	4a 95       	dec	r20
     c88:	d2 f7       	brpl	.-12     	; 0xc7e <_fpadd_parts+0xe2>
     c8a:	41 e0       	ldi	r20, 0x01	; 1
     c8c:	44 1a       	sub	r4, r20
     c8e:	51 08       	sbc	r5, r1
     c90:	61 08       	sbc	r6, r1
     c92:	71 08       	sbc	r7, r1
     c94:	48 20       	and	r4, r8
     c96:	59 20       	and	r5, r9
     c98:	6a 20       	and	r6, r10
     c9a:	7b 20       	and	r7, r11
     c9c:	81 2c       	mov	r8, r1
     c9e:	91 2c       	mov	r9, r1
     ca0:	54 01       	movw	r10, r8
     ca2:	83 94       	inc	r8
     ca4:	45 28       	or	r4, r5
     ca6:	46 28       	or	r4, r6
     ca8:	47 28       	or	r4, r7
     caa:	19 f4       	brne	.+6      	; 0xcb2 <_fpadd_parts+0x116>
     cac:	81 2c       	mov	r8, r1
     cae:	91 2c       	mov	r9, r1
     cb0:	54 01       	movw	r10, r8
     cb2:	49 80       	ldd	r4, Y+1	; 0x01
     cb4:	5a 80       	ldd	r5, Y+2	; 0x02
     cb6:	6b 80       	ldd	r6, Y+3	; 0x03
     cb8:	7c 80       	ldd	r7, Y+4	; 0x04
     cba:	84 28       	or	r8, r4
     cbc:	95 28       	or	r9, r5
     cbe:	a6 28       	or	r10, r6
     cc0:	b7 28       	or	r11, r7
     cc2:	46 c0       	rjmp	.+140    	; 0xd50 <_fpadd_parts+0x1b4>
     cc4:	ef 2b       	or	r30, r31
     cc6:	09 f4       	brne	.+2      	; 0xcca <_fpadd_parts+0x12e>
     cc8:	43 c0       	rjmp	.+134    	; 0xd50 <_fpadd_parts+0x1b4>
     cca:	84 0f       	add	r24, r20
     ccc:	95 1f       	adc	r25, r21
     cce:	28 01       	movw	r4, r16
     cd0:	39 01       	movw	r6, r18
     cd2:	04 2e       	mov	r0, r20
     cd4:	04 c0       	rjmp	.+8      	; 0xcde <_fpadd_parts+0x142>
     cd6:	76 94       	lsr	r7
     cd8:	67 94       	ror	r6
     cda:	57 94       	ror	r5
     cdc:	47 94       	ror	r4
     cde:	0a 94       	dec	r0
     ce0:	d2 f7       	brpl	.-12     	; 0xcd6 <_fpadd_parts+0x13a>
     ce2:	49 82       	std	Y+1, r4	; 0x01
     ce4:	5a 82       	std	Y+2, r5	; 0x02
     ce6:	6b 82       	std	Y+3, r6	; 0x03
     ce8:	7c 82       	std	Y+4, r7	; 0x04
     cea:	41 2c       	mov	r4, r1
     cec:	51 2c       	mov	r5, r1
     cee:	32 01       	movw	r6, r4
     cf0:	43 94       	inc	r4
     cf2:	04 c0       	rjmp	.+8      	; 0xcfc <_fpadd_parts+0x160>
     cf4:	44 0c       	add	r4, r4
     cf6:	55 1c       	adc	r5, r5
     cf8:	66 1c       	adc	r6, r6
     cfa:	77 1c       	adc	r7, r7
     cfc:	4a 95       	dec	r20
     cfe:	d2 f7       	brpl	.-12     	; 0xcf4 <_fpadd_parts+0x158>
     d00:	41 e0       	ldi	r20, 0x01	; 1
     d02:	44 1a       	sub	r4, r20
     d04:	51 08       	sbc	r5, r1
     d06:	61 08       	sbc	r6, r1
     d08:	71 08       	sbc	r7, r1
     d0a:	40 22       	and	r4, r16
     d0c:	51 22       	and	r5, r17
     d0e:	62 22       	and	r6, r18
     d10:	73 22       	and	r7, r19
     d12:	01 e0       	ldi	r16, 0x01	; 1
     d14:	10 e0       	ldi	r17, 0x00	; 0
     d16:	20 e0       	ldi	r18, 0x00	; 0
     d18:	30 e0       	ldi	r19, 0x00	; 0
     d1a:	45 28       	or	r4, r5
     d1c:	46 28       	or	r4, r6
     d1e:	47 28       	or	r4, r7
     d20:	19 f4       	brne	.+6      	; 0xd28 <_fpadd_parts+0x18c>
     d22:	00 e0       	ldi	r16, 0x00	; 0
     d24:	10 e0       	ldi	r17, 0x00	; 0
     d26:	98 01       	movw	r18, r16
     d28:	49 80       	ldd	r4, Y+1	; 0x01
     d2a:	5a 80       	ldd	r5, Y+2	; 0x02
     d2c:	6b 80       	ldd	r6, Y+3	; 0x03
     d2e:	7c 80       	ldd	r7, Y+4	; 0x04
     d30:	04 29       	or	r16, r4
     d32:	15 29       	or	r17, r5
     d34:	26 29       	or	r18, r6
     d36:	37 29       	or	r19, r7
     d38:	0b c0       	rjmp	.+22     	; 0xd50 <_fpadd_parts+0x1b4>
     d3a:	a8 17       	cp	r26, r24
     d3c:	b9 07       	cpc	r27, r25
     d3e:	24 f4       	brge	.+8      	; 0xd48 <_fpadd_parts+0x1ac>
     d40:	81 2c       	mov	r8, r1
     d42:	91 2c       	mov	r9, r1
     d44:	54 01       	movw	r10, r8
     d46:	04 c0       	rjmp	.+8      	; 0xd50 <_fpadd_parts+0x1b4>
     d48:	cd 01       	movw	r24, r26
     d4a:	00 e0       	ldi	r16, 0x00	; 0
     d4c:	10 e0       	ldi	r17, 0x00	; 0
     d4e:	98 01       	movw	r18, r16
     d50:	f7 01       	movw	r30, r14
     d52:	41 81       	ldd	r20, Z+1	; 0x01
     d54:	fb 01       	movw	r30, r22
     d56:	51 81       	ldd	r21, Z+1	; 0x01
     d58:	45 17       	cp	r20, r21
     d5a:	09 f4       	brne	.+2      	; 0xd5e <_fpadd_parts+0x1c2>
     d5c:	46 c0       	rjmp	.+140    	; 0xdea <_fpadd_parts+0x24e>
     d5e:	44 23       	and	r20, r20
     d60:	49 f0       	breq	.+18     	; 0xd74 <_fpadd_parts+0x1d8>
     d62:	24 01       	movw	r4, r8
     d64:	35 01       	movw	r6, r10
     d66:	40 1a       	sub	r4, r16
     d68:	51 0a       	sbc	r5, r17
     d6a:	62 0a       	sbc	r6, r18
     d6c:	73 0a       	sbc	r7, r19
     d6e:	93 01       	movw	r18, r6
     d70:	82 01       	movw	r16, r4
     d72:	04 c0       	rjmp	.+8      	; 0xd7c <_fpadd_parts+0x1e0>
     d74:	08 19       	sub	r16, r8
     d76:	19 09       	sbc	r17, r9
     d78:	2a 09       	sbc	r18, r10
     d7a:	3b 09       	sbc	r19, r11
     d7c:	37 fd       	sbrc	r19, 7
     d7e:	05 c0       	rjmp	.+10     	; 0xd8a <_fpadd_parts+0x1ee>
     d80:	f6 01       	movw	r30, r12
     d82:	11 82       	std	Z+1, r1	; 0x01
     d84:	93 83       	std	Z+3, r25	; 0x03
     d86:	82 83       	std	Z+2, r24	; 0x02
     d88:	0c c0       	rjmp	.+24     	; 0xda2 <_fpadd_parts+0x206>
     d8a:	41 e0       	ldi	r20, 0x01	; 1
     d8c:	f6 01       	movw	r30, r12
     d8e:	41 83       	std	Z+1, r20	; 0x01
     d90:	93 83       	std	Z+3, r25	; 0x03
     d92:	82 83       	std	Z+2, r24	; 0x02
     d94:	30 95       	com	r19
     d96:	20 95       	com	r18
     d98:	10 95       	com	r17
     d9a:	01 95       	neg	r16
     d9c:	1f 4f       	sbci	r17, 0xFF	; 255
     d9e:	2f 4f       	sbci	r18, 0xFF	; 255
     da0:	3f 4f       	sbci	r19, 0xFF	; 255
     da2:	04 83       	std	Z+4, r16	; 0x04
     da4:	15 83       	std	Z+5, r17	; 0x05
     da6:	26 83       	std	Z+6, r18	; 0x06
     da8:	37 83       	std	Z+7, r19	; 0x07
     daa:	0e c0       	rjmp	.+28     	; 0xdc8 <_fpadd_parts+0x22c>
     dac:	88 0f       	add	r24, r24
     dae:	99 1f       	adc	r25, r25
     db0:	aa 1f       	adc	r26, r26
     db2:	bb 1f       	adc	r27, r27
     db4:	f6 01       	movw	r30, r12
     db6:	84 83       	std	Z+4, r24	; 0x04
     db8:	95 83       	std	Z+5, r25	; 0x05
     dba:	a6 83       	std	Z+6, r26	; 0x06
     dbc:	b7 83       	std	Z+7, r27	; 0x07
     dbe:	82 81       	ldd	r24, Z+2	; 0x02
     dc0:	93 81       	ldd	r25, Z+3	; 0x03
     dc2:	01 97       	sbiw	r24, 0x01	; 1
     dc4:	93 83       	std	Z+3, r25	; 0x03
     dc6:	82 83       	std	Z+2, r24	; 0x02
     dc8:	f6 01       	movw	r30, r12
     dca:	84 81       	ldd	r24, Z+4	; 0x04
     dcc:	95 81       	ldd	r25, Z+5	; 0x05
     dce:	a6 81       	ldd	r26, Z+6	; 0x06
     dd0:	b7 81       	ldd	r27, Z+7	; 0x07
     dd2:	ac 01       	movw	r20, r24
     dd4:	bd 01       	movw	r22, r26
     dd6:	41 50       	subi	r20, 0x01	; 1
     dd8:	51 09       	sbc	r21, r1
     dda:	61 09       	sbc	r22, r1
     ddc:	71 09       	sbc	r23, r1
     dde:	4f 3f       	cpi	r20, 0xFF	; 255
     de0:	5f 4f       	sbci	r21, 0xFF	; 255
     de2:	6f 4f       	sbci	r22, 0xFF	; 255
     de4:	7f 43       	sbci	r23, 0x3F	; 63
     de6:	10 f3       	brcs	.-60     	; 0xdac <_fpadd_parts+0x210>
     de8:	0c c0       	rjmp	.+24     	; 0xe02 <_fpadd_parts+0x266>
     dea:	f6 01       	movw	r30, r12
     dec:	41 83       	std	Z+1, r20	; 0x01
     dee:	93 83       	std	Z+3, r25	; 0x03
     df0:	82 83       	std	Z+2, r24	; 0x02
     df2:	08 0d       	add	r16, r8
     df4:	19 1d       	adc	r17, r9
     df6:	2a 1d       	adc	r18, r10
     df8:	3b 1d       	adc	r19, r11
     dfa:	04 83       	std	Z+4, r16	; 0x04
     dfc:	15 83       	std	Z+5, r17	; 0x05
     dfe:	26 83       	std	Z+6, r18	; 0x06
     e00:	37 83       	std	Z+7, r19	; 0x07
     e02:	83 e0       	ldi	r24, 0x03	; 3
     e04:	f6 01       	movw	r30, r12
     e06:	80 83       	st	Z, r24
     e08:	44 81       	ldd	r20, Z+4	; 0x04
     e0a:	55 81       	ldd	r21, Z+5	; 0x05
     e0c:	66 81       	ldd	r22, Z+6	; 0x06
     e0e:	77 81       	ldd	r23, Z+7	; 0x07
     e10:	77 ff       	sbrs	r23, 7
     e12:	1a c0       	rjmp	.+52     	; 0xe48 <_fpadd_parts+0x2ac>
     e14:	db 01       	movw	r26, r22
     e16:	ca 01       	movw	r24, r20
     e18:	81 70       	andi	r24, 0x01	; 1
     e1a:	99 27       	eor	r25, r25
     e1c:	aa 27       	eor	r26, r26
     e1e:	bb 27       	eor	r27, r27
     e20:	76 95       	lsr	r23
     e22:	67 95       	ror	r22
     e24:	57 95       	ror	r21
     e26:	47 95       	ror	r20
     e28:	84 2b       	or	r24, r20
     e2a:	95 2b       	or	r25, r21
     e2c:	a6 2b       	or	r26, r22
     e2e:	b7 2b       	or	r27, r23
     e30:	84 83       	std	Z+4, r24	; 0x04
     e32:	95 83       	std	Z+5, r25	; 0x05
     e34:	a6 83       	std	Z+6, r26	; 0x06
     e36:	b7 83       	std	Z+7, r27	; 0x07
     e38:	82 81       	ldd	r24, Z+2	; 0x02
     e3a:	93 81       	ldd	r25, Z+3	; 0x03
     e3c:	01 96       	adiw	r24, 0x01	; 1
     e3e:	93 83       	std	Z+3, r25	; 0x03
     e40:	82 83       	std	Z+2, r24	; 0x02
     e42:	02 c0       	rjmp	.+4      	; 0xe48 <_fpadd_parts+0x2ac>
     e44:	7b 01       	movw	r14, r22
     e46:	01 c0       	rjmp	.+2      	; 0xe4a <_fpadd_parts+0x2ae>
     e48:	76 01       	movw	r14, r12
     e4a:	c7 01       	movw	r24, r14
     e4c:	24 96       	adiw	r28, 0x04	; 4
     e4e:	e0 e1       	ldi	r30, 0x10	; 16
     e50:	0c 94 4d 0b 	jmp	0x169a	; 0x169a <__epilogue_restores__+0x4>

00000e54 <__addsf3>:
     e54:	a0 e2       	ldi	r26, 0x20	; 32
     e56:	b0 e0       	ldi	r27, 0x00	; 0
     e58:	e0 e3       	ldi	r30, 0x30	; 48
     e5a:	f7 e0       	ldi	r31, 0x07	; 7
     e5c:	0c 94 3f 0b 	jmp	0x167e	; 0x167e <__prologue_saves__+0x20>
     e60:	6d 8f       	std	Y+29, r22	; 0x1d
     e62:	7e 8f       	std	Y+30, r23	; 0x1e
     e64:	8f 8f       	std	Y+31, r24	; 0x1f
     e66:	98 a3       	std	Y+32, r25	; 0x20
     e68:	29 8f       	std	Y+25, r18	; 0x19
     e6a:	3a 8f       	std	Y+26, r19	; 0x1a
     e6c:	4b 8f       	std	Y+27, r20	; 0x1b
     e6e:	5c 8f       	std	Y+28, r21	; 0x1c
     e70:	be 01       	movw	r22, r28
     e72:	6f 5e       	subi	r22, 0xEF	; 239
     e74:	7f 4f       	sbci	r23, 0xFF	; 255
     e76:	ce 01       	movw	r24, r28
     e78:	4d 96       	adiw	r24, 0x1d	; 29
     e7a:	0e 94 0f 0a 	call	0x141e	; 0x141e <__unpack_f>
     e7e:	be 01       	movw	r22, r28
     e80:	67 5f       	subi	r22, 0xF7	; 247
     e82:	7f 4f       	sbci	r23, 0xFF	; 255
     e84:	ce 01       	movw	r24, r28
     e86:	49 96       	adiw	r24, 0x19	; 25
     e88:	0e 94 0f 0a 	call	0x141e	; 0x141e <__unpack_f>
     e8c:	ae 01       	movw	r20, r28
     e8e:	4f 5f       	subi	r20, 0xFF	; 255
     e90:	5f 4f       	sbci	r21, 0xFF	; 255
     e92:	be 01       	movw	r22, r28
     e94:	67 5f       	subi	r22, 0xF7	; 247
     e96:	7f 4f       	sbci	r23, 0xFF	; 255
     e98:	ce 01       	movw	r24, r28
     e9a:	41 96       	adiw	r24, 0x11	; 17
     e9c:	0e 94 ce 05 	call	0xb9c	; 0xb9c <_fpadd_parts>
     ea0:	0e 94 45 09 	call	0x128a	; 0x128a <__pack_f>
     ea4:	a0 96       	adiw	r28, 0x20	; 32
     ea6:	e2 e0       	ldi	r30, 0x02	; 2
     ea8:	0c 94 5b 0b 	jmp	0x16b6	; 0x16b6 <__epilogue_restores__+0x20>

00000eac <__subsf3>:
     eac:	a0 e2       	ldi	r26, 0x20	; 32
     eae:	b0 e0       	ldi	r27, 0x00	; 0
     eb0:	ec e5       	ldi	r30, 0x5C	; 92
     eb2:	f7 e0       	ldi	r31, 0x07	; 7
     eb4:	0c 94 3f 0b 	jmp	0x167e	; 0x167e <__prologue_saves__+0x20>
     eb8:	6d 8f       	std	Y+29, r22	; 0x1d
     eba:	7e 8f       	std	Y+30, r23	; 0x1e
     ebc:	8f 8f       	std	Y+31, r24	; 0x1f
     ebe:	98 a3       	std	Y+32, r25	; 0x20
     ec0:	29 8f       	std	Y+25, r18	; 0x19
     ec2:	3a 8f       	std	Y+26, r19	; 0x1a
     ec4:	4b 8f       	std	Y+27, r20	; 0x1b
     ec6:	5c 8f       	std	Y+28, r21	; 0x1c
     ec8:	be 01       	movw	r22, r28
     eca:	6f 5e       	subi	r22, 0xEF	; 239
     ecc:	7f 4f       	sbci	r23, 0xFF	; 255
     ece:	ce 01       	movw	r24, r28
     ed0:	4d 96       	adiw	r24, 0x1d	; 29
     ed2:	0e 94 0f 0a 	call	0x141e	; 0x141e <__unpack_f>
     ed6:	be 01       	movw	r22, r28
     ed8:	67 5f       	subi	r22, 0xF7	; 247
     eda:	7f 4f       	sbci	r23, 0xFF	; 255
     edc:	ce 01       	movw	r24, r28
     ede:	49 96       	adiw	r24, 0x19	; 25
     ee0:	0e 94 0f 0a 	call	0x141e	; 0x141e <__unpack_f>
     ee4:	8a 85       	ldd	r24, Y+10	; 0x0a
     ee6:	91 e0       	ldi	r25, 0x01	; 1
     ee8:	89 27       	eor	r24, r25
     eea:	8a 87       	std	Y+10, r24	; 0x0a
     eec:	ae 01       	movw	r20, r28
     eee:	4f 5f       	subi	r20, 0xFF	; 255
     ef0:	5f 4f       	sbci	r21, 0xFF	; 255
     ef2:	be 01       	movw	r22, r28
     ef4:	67 5f       	subi	r22, 0xF7	; 247
     ef6:	7f 4f       	sbci	r23, 0xFF	; 255
     ef8:	ce 01       	movw	r24, r28
     efa:	41 96       	adiw	r24, 0x11	; 17
     efc:	0e 94 ce 05 	call	0xb9c	; 0xb9c <_fpadd_parts>
     f00:	0e 94 45 09 	call	0x128a	; 0x128a <__pack_f>
     f04:	a0 96       	adiw	r28, 0x20	; 32
     f06:	e2 e0       	ldi	r30, 0x02	; 2
     f08:	0c 94 5b 0b 	jmp	0x16b6	; 0x16b6 <__epilogue_restores__+0x20>

00000f0c <__mulsf3>:
     f0c:	a0 e2       	ldi	r26, 0x20	; 32
     f0e:	b0 e0       	ldi	r27, 0x00	; 0
     f10:	ec e8       	ldi	r30, 0x8C	; 140
     f12:	f7 e0       	ldi	r31, 0x07	; 7
     f14:	0c 94 31 0b 	jmp	0x1662	; 0x1662 <__prologue_saves__+0x4>
     f18:	6d 8f       	std	Y+29, r22	; 0x1d
     f1a:	7e 8f       	std	Y+30, r23	; 0x1e
     f1c:	8f 8f       	std	Y+31, r24	; 0x1f
     f1e:	98 a3       	std	Y+32, r25	; 0x20
     f20:	29 8f       	std	Y+25, r18	; 0x19
     f22:	3a 8f       	std	Y+26, r19	; 0x1a
     f24:	4b 8f       	std	Y+27, r20	; 0x1b
     f26:	5c 8f       	std	Y+28, r21	; 0x1c
     f28:	be 01       	movw	r22, r28
     f2a:	6f 5e       	subi	r22, 0xEF	; 239
     f2c:	7f 4f       	sbci	r23, 0xFF	; 255
     f2e:	ce 01       	movw	r24, r28
     f30:	4d 96       	adiw	r24, 0x1d	; 29
     f32:	0e 94 0f 0a 	call	0x141e	; 0x141e <__unpack_f>
     f36:	be 01       	movw	r22, r28
     f38:	67 5f       	subi	r22, 0xF7	; 247
     f3a:	7f 4f       	sbci	r23, 0xFF	; 255
     f3c:	ce 01       	movw	r24, r28
     f3e:	49 96       	adiw	r24, 0x19	; 25
     f40:	0e 94 0f 0a 	call	0x141e	; 0x141e <__unpack_f>
     f44:	99 89       	ldd	r25, Y+17	; 0x11
     f46:	92 30       	cpi	r25, 0x02	; 2
     f48:	08 f4       	brcc	.+2      	; 0xf4c <__mulsf3+0x40>
     f4a:	12 c0       	rjmp	.+36     	; 0xf70 <__mulsf3+0x64>
     f4c:	89 85       	ldd	r24, Y+9	; 0x09
     f4e:	82 30       	cpi	r24, 0x02	; 2
     f50:	08 f4       	brcc	.+2      	; 0xf54 <__mulsf3+0x48>
     f52:	1a c0       	rjmp	.+52     	; 0xf88 <__mulsf3+0x7c>
     f54:	94 30       	cpi	r25, 0x04	; 4
     f56:	21 f4       	brne	.+8      	; 0xf60 <__mulsf3+0x54>
     f58:	82 30       	cpi	r24, 0x02	; 2
     f5a:	09 f4       	brne	.+2      	; 0xf5e <__mulsf3+0x52>
     f5c:	b4 c0       	rjmp	.+360    	; 0x10c6 <__mulsf3+0x1ba>
     f5e:	08 c0       	rjmp	.+16     	; 0xf70 <__mulsf3+0x64>
     f60:	84 30       	cpi	r24, 0x04	; 4
     f62:	21 f4       	brne	.+8      	; 0xf6c <__mulsf3+0x60>
     f64:	92 30       	cpi	r25, 0x02	; 2
     f66:	09 f4       	brne	.+2      	; 0xf6a <__mulsf3+0x5e>
     f68:	ae c0       	rjmp	.+348    	; 0x10c6 <__mulsf3+0x1ba>
     f6a:	0e c0       	rjmp	.+28     	; 0xf88 <__mulsf3+0x7c>
     f6c:	92 30       	cpi	r25, 0x02	; 2
     f6e:	51 f4       	brne	.+20     	; 0xf84 <__mulsf3+0x78>
     f70:	81 e0       	ldi	r24, 0x01	; 1
     f72:	2a 89       	ldd	r18, Y+18	; 0x12
     f74:	9a 85       	ldd	r25, Y+10	; 0x0a
     f76:	29 13       	cpse	r18, r25
     f78:	01 c0       	rjmp	.+2      	; 0xf7c <__mulsf3+0x70>
     f7a:	80 e0       	ldi	r24, 0x00	; 0
     f7c:	8a 8b       	std	Y+18, r24	; 0x12
     f7e:	ce 01       	movw	r24, r28
     f80:	41 96       	adiw	r24, 0x11	; 17
     f82:	a3 c0       	rjmp	.+326    	; 0x10ca <__mulsf3+0x1be>
     f84:	82 30       	cpi	r24, 0x02	; 2
     f86:	51 f4       	brne	.+20     	; 0xf9c <__mulsf3+0x90>
     f88:	81 e0       	ldi	r24, 0x01	; 1
     f8a:	2a 89       	ldd	r18, Y+18	; 0x12
     f8c:	9a 85       	ldd	r25, Y+10	; 0x0a
     f8e:	29 13       	cpse	r18, r25
     f90:	01 c0       	rjmp	.+2      	; 0xf94 <__mulsf3+0x88>
     f92:	80 e0       	ldi	r24, 0x00	; 0
     f94:	8a 87       	std	Y+10, r24	; 0x0a
     f96:	ce 01       	movw	r24, r28
     f98:	09 96       	adiw	r24, 0x09	; 9
     f9a:	97 c0       	rjmp	.+302    	; 0x10ca <__mulsf3+0x1be>
     f9c:	8d 88       	ldd	r8, Y+21	; 0x15
     f9e:	9e 88       	ldd	r9, Y+22	; 0x16
     fa0:	af 88       	ldd	r10, Y+23	; 0x17
     fa2:	b8 8c       	ldd	r11, Y+24	; 0x18
     fa4:	0d 85       	ldd	r16, Y+13	; 0x0d
     fa6:	1e 85       	ldd	r17, Y+14	; 0x0e
     fa8:	2f 85       	ldd	r18, Y+15	; 0x0f
     faa:	38 89       	ldd	r19, Y+16	; 0x10
     fac:	e0 e2       	ldi	r30, 0x20	; 32
     fae:	f0 e0       	ldi	r31, 0x00	; 0
     fb0:	80 e0       	ldi	r24, 0x00	; 0
     fb2:	90 e0       	ldi	r25, 0x00	; 0
     fb4:	dc 01       	movw	r26, r24
     fb6:	c1 2c       	mov	r12, r1
     fb8:	d1 2c       	mov	r13, r1
     fba:	76 01       	movw	r14, r12
     fbc:	40 e0       	ldi	r20, 0x00	; 0
     fbe:	50 e0       	ldi	r21, 0x00	; 0
     fc0:	ba 01       	movw	r22, r20
     fc2:	80 fe       	sbrs	r8, 0
     fc4:	18 c0       	rjmp	.+48     	; 0xff6 <__mulsf3+0xea>
     fc6:	40 0f       	add	r20, r16
     fc8:	51 1f       	adc	r21, r17
     fca:	62 1f       	adc	r22, r18
     fcc:	73 1f       	adc	r23, r19
     fce:	8c 0d       	add	r24, r12
     fd0:	9d 1d       	adc	r25, r13
     fd2:	ae 1d       	adc	r26, r14
     fd4:	bf 1d       	adc	r27, r15
     fd6:	41 2c       	mov	r4, r1
     fd8:	51 2c       	mov	r5, r1
     fda:	32 01       	movw	r6, r4
     fdc:	43 94       	inc	r4
     fde:	40 17       	cp	r20, r16
     fe0:	51 07       	cpc	r21, r17
     fe2:	62 07       	cpc	r22, r18
     fe4:	73 07       	cpc	r23, r19
     fe6:	18 f0       	brcs	.+6      	; 0xfee <__mulsf3+0xe2>
     fe8:	41 2c       	mov	r4, r1
     fea:	51 2c       	mov	r5, r1
     fec:	32 01       	movw	r6, r4
     fee:	84 0d       	add	r24, r4
     ff0:	95 1d       	adc	r25, r5
     ff2:	a6 1d       	adc	r26, r6
     ff4:	b7 1d       	adc	r27, r7
     ff6:	cc 0c       	add	r12, r12
     ff8:	dd 1c       	adc	r13, r13
     ffa:	ee 1c       	adc	r14, r14
     ffc:	ff 1c       	adc	r15, r15
     ffe:	37 ff       	sbrs	r19, 7
    1000:	02 c0       	rjmp	.+4      	; 0x1006 <__mulsf3+0xfa>
    1002:	68 94       	set
    1004:	c0 f8       	bld	r12, 0
    1006:	00 0f       	add	r16, r16
    1008:	11 1f       	adc	r17, r17
    100a:	22 1f       	adc	r18, r18
    100c:	33 1f       	adc	r19, r19
    100e:	b6 94       	lsr	r11
    1010:	a7 94       	ror	r10
    1012:	97 94       	ror	r9
    1014:	87 94       	ror	r8
    1016:	31 97       	sbiw	r30, 0x01	; 1
    1018:	a1 f6       	brne	.-88     	; 0xfc2 <__mulsf3+0xb6>
    101a:	2b 89       	ldd	r18, Y+19	; 0x13
    101c:	3c 89       	ldd	r19, Y+20	; 0x14
    101e:	eb 85       	ldd	r30, Y+11	; 0x0b
    1020:	fc 85       	ldd	r31, Y+12	; 0x0c
    1022:	2e 0f       	add	r18, r30
    1024:	3f 1f       	adc	r19, r31
    1026:	2e 5f       	subi	r18, 0xFE	; 254
    1028:	3f 4f       	sbci	r19, 0xFF	; 255
    102a:	3c 83       	std	Y+4, r19	; 0x04
    102c:	2b 83       	std	Y+3, r18	; 0x03
    102e:	21 e0       	ldi	r18, 0x01	; 1
    1030:	ea 89       	ldd	r30, Y+18	; 0x12
    1032:	3a 85       	ldd	r19, Y+10	; 0x0a
    1034:	e3 13       	cpse	r30, r19
    1036:	01 c0       	rjmp	.+2      	; 0x103a <__mulsf3+0x12e>
    1038:	20 e0       	ldi	r18, 0x00	; 0
    103a:	2a 83       	std	Y+2, r18	; 0x02
    103c:	eb 81       	ldd	r30, Y+3	; 0x03
    103e:	fc 81       	ldd	r31, Y+4	; 0x04
    1040:	0c c0       	rjmp	.+24     	; 0x105a <__mulsf3+0x14e>
    1042:	80 ff       	sbrs	r24, 0
    1044:	05 c0       	rjmp	.+10     	; 0x1050 <__mulsf3+0x144>
    1046:	76 95       	lsr	r23
    1048:	67 95       	ror	r22
    104a:	57 95       	ror	r21
    104c:	47 95       	ror	r20
    104e:	70 68       	ori	r23, 0x80	; 128
    1050:	b6 95       	lsr	r27
    1052:	a7 95       	ror	r26
    1054:	97 95       	ror	r25
    1056:	87 95       	ror	r24
    1058:	31 96       	adiw	r30, 0x01	; 1
    105a:	b7 fd       	sbrc	r27, 7
    105c:	f2 cf       	rjmp	.-28     	; 0x1042 <__mulsf3+0x136>
    105e:	9f 01       	movw	r18, r30
    1060:	0c c0       	rjmp	.+24     	; 0x107a <__mulsf3+0x16e>
    1062:	88 0f       	add	r24, r24
    1064:	99 1f       	adc	r25, r25
    1066:	aa 1f       	adc	r26, r26
    1068:	bb 1f       	adc	r27, r27
    106a:	77 fd       	sbrc	r23, 7
    106c:	81 60       	ori	r24, 0x01	; 1
    106e:	44 0f       	add	r20, r20
    1070:	55 1f       	adc	r21, r21
    1072:	66 1f       	adc	r22, r22
    1074:	77 1f       	adc	r23, r23
    1076:	21 50       	subi	r18, 0x01	; 1
    1078:	31 09       	sbc	r19, r1
    107a:	00 97       	sbiw	r24, 0x00	; 0
    107c:	a1 05       	cpc	r26, r1
    107e:	e0 e4       	ldi	r30, 0x40	; 64
    1080:	be 07       	cpc	r27, r30
    1082:	78 f3       	brcs	.-34     	; 0x1062 <__mulsf3+0x156>
    1084:	2b 83       	std	Y+3, r18	; 0x03
    1086:	3c 83       	std	Y+4, r19	; 0x04
    1088:	8c 01       	movw	r16, r24
    108a:	9d 01       	movw	r18, r26
    108c:	0f 77       	andi	r16, 0x7F	; 127
    108e:	11 27       	eor	r17, r17
    1090:	22 27       	eor	r18, r18
    1092:	33 27       	eor	r19, r19
    1094:	00 34       	cpi	r16, 0x40	; 64
    1096:	11 05       	cpc	r17, r1
    1098:	21 05       	cpc	r18, r1
    109a:	31 05       	cpc	r19, r1
    109c:	59 f4       	brne	.+22     	; 0x10b4 <__mulsf3+0x1a8>
    109e:	87 fd       	sbrc	r24, 7
    10a0:	09 c0       	rjmp	.+18     	; 0x10b4 <__mulsf3+0x1a8>
    10a2:	45 2b       	or	r20, r21
    10a4:	46 2b       	or	r20, r22
    10a6:	47 2b       	or	r20, r23
    10a8:	29 f0       	breq	.+10     	; 0x10b4 <__mulsf3+0x1a8>
    10aa:	80 5c       	subi	r24, 0xC0	; 192
    10ac:	9f 4f       	sbci	r25, 0xFF	; 255
    10ae:	af 4f       	sbci	r26, 0xFF	; 255
    10b0:	bf 4f       	sbci	r27, 0xFF	; 255
    10b2:	80 78       	andi	r24, 0x80	; 128
    10b4:	8d 83       	std	Y+5, r24	; 0x05
    10b6:	9e 83       	std	Y+6, r25	; 0x06
    10b8:	af 83       	std	Y+7, r26	; 0x07
    10ba:	b8 87       	std	Y+8, r27	; 0x08
    10bc:	83 e0       	ldi	r24, 0x03	; 3
    10be:	89 83       	std	Y+1, r24	; 0x01
    10c0:	ce 01       	movw	r24, r28
    10c2:	01 96       	adiw	r24, 0x01	; 1
    10c4:	02 c0       	rjmp	.+4      	; 0x10ca <__mulsf3+0x1be>
    10c6:	8e e4       	ldi	r24, 0x4E	; 78
    10c8:	91 e0       	ldi	r25, 0x01	; 1
    10ca:	0e 94 45 09 	call	0x128a	; 0x128a <__pack_f>
    10ce:	a0 96       	adiw	r28, 0x20	; 32
    10d0:	e0 e1       	ldi	r30, 0x10	; 16
    10d2:	0c 94 4d 0b 	jmp	0x169a	; 0x169a <__epilogue_restores__+0x4>

000010d6 <__gesf2>:
    10d6:	a8 e1       	ldi	r26, 0x18	; 24
    10d8:	b0 e0       	ldi	r27, 0x00	; 0
    10da:	e1 e7       	ldi	r30, 0x71	; 113
    10dc:	f8 e0       	ldi	r31, 0x08	; 8
    10de:	0c 94 3f 0b 	jmp	0x167e	; 0x167e <__prologue_saves__+0x20>
    10e2:	6d 8b       	std	Y+21, r22	; 0x15
    10e4:	7e 8b       	std	Y+22, r23	; 0x16
    10e6:	8f 8b       	std	Y+23, r24	; 0x17
    10e8:	98 8f       	std	Y+24, r25	; 0x18
    10ea:	29 8b       	std	Y+17, r18	; 0x11
    10ec:	3a 8b       	std	Y+18, r19	; 0x12
    10ee:	4b 8b       	std	Y+19, r20	; 0x13
    10f0:	5c 8b       	std	Y+20, r21	; 0x14
    10f2:	be 01       	movw	r22, r28
    10f4:	67 5f       	subi	r22, 0xF7	; 247
    10f6:	7f 4f       	sbci	r23, 0xFF	; 255
    10f8:	ce 01       	movw	r24, r28
    10fa:	45 96       	adiw	r24, 0x15	; 21
    10fc:	0e 94 0f 0a 	call	0x141e	; 0x141e <__unpack_f>
    1100:	be 01       	movw	r22, r28
    1102:	6f 5f       	subi	r22, 0xFF	; 255
    1104:	7f 4f       	sbci	r23, 0xFF	; 255
    1106:	ce 01       	movw	r24, r28
    1108:	41 96       	adiw	r24, 0x11	; 17
    110a:	0e 94 0f 0a 	call	0x141e	; 0x141e <__unpack_f>
    110e:	89 85       	ldd	r24, Y+9	; 0x09
    1110:	82 30       	cpi	r24, 0x02	; 2
    1112:	58 f0       	brcs	.+22     	; 0x112a <__gesf2+0x54>
    1114:	89 81       	ldd	r24, Y+1	; 0x01
    1116:	82 30       	cpi	r24, 0x02	; 2
    1118:	40 f0       	brcs	.+16     	; 0x112a <__gesf2+0x54>
    111a:	be 01       	movw	r22, r28
    111c:	6f 5f       	subi	r22, 0xFF	; 255
    111e:	7f 4f       	sbci	r23, 0xFF	; 255
    1120:	ce 01       	movw	r24, r28
    1122:	09 96       	adiw	r24, 0x09	; 9
    1124:	0e 94 7e 0a 	call	0x14fc	; 0x14fc <__fpcmp_parts_f>
    1128:	01 c0       	rjmp	.+2      	; 0x112c <__gesf2+0x56>
    112a:	8f ef       	ldi	r24, 0xFF	; 255
    112c:	68 96       	adiw	r28, 0x18	; 24
    112e:	e2 e0       	ldi	r30, 0x02	; 2
    1130:	0c 94 5b 0b 	jmp	0x16b6	; 0x16b6 <__epilogue_restores__+0x20>

00001134 <__floatsisf>:
    1134:	a8 e0       	ldi	r26, 0x08	; 8
    1136:	b0 e0       	ldi	r27, 0x00	; 0
    1138:	e0 ea       	ldi	r30, 0xA0	; 160
    113a:	f8 e0       	ldi	r31, 0x08	; 8
    113c:	0c 94 3d 0b 	jmp	0x167a	; 0x167a <__prologue_saves__+0x1c>
    1140:	23 e0       	ldi	r18, 0x03	; 3
    1142:	29 83       	std	Y+1, r18	; 0x01
    1144:	8b 01       	movw	r16, r22
    1146:	9c 01       	movw	r18, r24
    1148:	00 27       	eor	r16, r16
    114a:	37 fd       	sbrc	r19, 7
    114c:	03 95       	inc	r16
    114e:	11 27       	eor	r17, r17
    1150:	22 27       	eor	r18, r18
    1152:	33 27       	eor	r19, r19
    1154:	40 2f       	mov	r20, r16
    1156:	0a 83       	std	Y+2, r16	; 0x02
    1158:	61 15       	cp	r22, r1
    115a:	71 05       	cpc	r23, r1
    115c:	81 05       	cpc	r24, r1
    115e:	91 05       	cpc	r25, r1
    1160:	19 f4       	brne	.+6      	; 0x1168 <__floatsisf+0x34>
    1162:	82 e0       	ldi	r24, 0x02	; 2
    1164:	89 83       	std	Y+1, r24	; 0x01
    1166:	35 c0       	rjmp	.+106    	; 0x11d2 <__floatsisf+0x9e>
    1168:	2e e1       	ldi	r18, 0x1E	; 30
    116a:	30 e0       	ldi	r19, 0x00	; 0
    116c:	3c 83       	std	Y+4, r19	; 0x04
    116e:	2b 83       	std	Y+3, r18	; 0x03
    1170:	44 23       	and	r20, r20
    1172:	71 f0       	breq	.+28     	; 0x1190 <__floatsisf+0x5c>
    1174:	61 15       	cp	r22, r1
    1176:	71 05       	cpc	r23, r1
    1178:	81 05       	cpc	r24, r1
    117a:	20 e8       	ldi	r18, 0x80	; 128
    117c:	92 07       	cpc	r25, r18
    117e:	71 f1       	breq	.+92     	; 0x11dc <__floatsisf+0xa8>
    1180:	00 27       	eor	r16, r16
    1182:	11 27       	eor	r17, r17
    1184:	98 01       	movw	r18, r16
    1186:	06 1b       	sub	r16, r22
    1188:	17 0b       	sbc	r17, r23
    118a:	28 0b       	sbc	r18, r24
    118c:	39 0b       	sbc	r19, r25
    118e:	02 c0       	rjmp	.+4      	; 0x1194 <__floatsisf+0x60>
    1190:	8b 01       	movw	r16, r22
    1192:	9c 01       	movw	r18, r24
    1194:	c9 01       	movw	r24, r18
    1196:	b8 01       	movw	r22, r16
    1198:	0e 94 14 0b 	call	0x1628	; 0x1628 <__clzsi2>
    119c:	01 97       	sbiw	r24, 0x01	; 1
    119e:	18 16       	cp	r1, r24
    11a0:	19 06       	cpc	r1, r25
    11a2:	2c f0       	brlt	.+10     	; 0x11ae <__floatsisf+0x7a>
    11a4:	0d 83       	std	Y+5, r16	; 0x05
    11a6:	1e 83       	std	Y+6, r17	; 0x06
    11a8:	2f 83       	std	Y+7, r18	; 0x07
    11aa:	38 87       	std	Y+8, r19	; 0x08
    11ac:	12 c0       	rjmp	.+36     	; 0x11d2 <__floatsisf+0x9e>
    11ae:	08 2e       	mov	r0, r24
    11b0:	04 c0       	rjmp	.+8      	; 0x11ba <__floatsisf+0x86>
    11b2:	00 0f       	add	r16, r16
    11b4:	11 1f       	adc	r17, r17
    11b6:	22 1f       	adc	r18, r18
    11b8:	33 1f       	adc	r19, r19
    11ba:	0a 94       	dec	r0
    11bc:	d2 f7       	brpl	.-12     	; 0x11b2 <__floatsisf+0x7e>
    11be:	0d 83       	std	Y+5, r16	; 0x05
    11c0:	1e 83       	std	Y+6, r17	; 0x06
    11c2:	2f 83       	std	Y+7, r18	; 0x07
    11c4:	38 87       	std	Y+8, r19	; 0x08
    11c6:	2e e1       	ldi	r18, 0x1E	; 30
    11c8:	30 e0       	ldi	r19, 0x00	; 0
    11ca:	28 1b       	sub	r18, r24
    11cc:	39 0b       	sbc	r19, r25
    11ce:	3c 83       	std	Y+4, r19	; 0x04
    11d0:	2b 83       	std	Y+3, r18	; 0x03
    11d2:	ce 01       	movw	r24, r28
    11d4:	01 96       	adiw	r24, 0x01	; 1
    11d6:	0e 94 45 09 	call	0x128a	; 0x128a <__pack_f>
    11da:	04 c0       	rjmp	.+8      	; 0x11e4 <__floatsisf+0xb0>
    11dc:	60 e0       	ldi	r22, 0x00	; 0
    11de:	70 e0       	ldi	r23, 0x00	; 0
    11e0:	80 e0       	ldi	r24, 0x00	; 0
    11e2:	9f ec       	ldi	r25, 0xCF	; 207
    11e4:	28 96       	adiw	r28, 0x08	; 8
    11e6:	e4 e0       	ldi	r30, 0x04	; 4
    11e8:	0c 94 59 0b 	jmp	0x16b2	; 0x16b2 <__epilogue_restores__+0x1c>

000011ec <__fixsfsi>:
    11ec:	ac e0       	ldi	r26, 0x0C	; 12
    11ee:	b0 e0       	ldi	r27, 0x00	; 0
    11f0:	ec ef       	ldi	r30, 0xFC	; 252
    11f2:	f8 e0       	ldi	r31, 0x08	; 8
    11f4:	0c 94 3d 0b 	jmp	0x167a	; 0x167a <__prologue_saves__+0x1c>
    11f8:	69 87       	std	Y+9, r22	; 0x09
    11fa:	7a 87       	std	Y+10, r23	; 0x0a
    11fc:	8b 87       	std	Y+11, r24	; 0x0b
    11fe:	9c 87       	std	Y+12, r25	; 0x0c
    1200:	be 01       	movw	r22, r28
    1202:	6f 5f       	subi	r22, 0xFF	; 255
    1204:	7f 4f       	sbci	r23, 0xFF	; 255
    1206:	ce 01       	movw	r24, r28
    1208:	09 96       	adiw	r24, 0x09	; 9
    120a:	0e 94 0f 0a 	call	0x141e	; 0x141e <__unpack_f>
    120e:	89 81       	ldd	r24, Y+1	; 0x01
    1210:	82 30       	cpi	r24, 0x02	; 2
    1212:	91 f1       	breq	.+100    	; 0x1278 <__fixsfsi+0x8c>
    1214:	82 30       	cpi	r24, 0x02	; 2
    1216:	80 f1       	brcs	.+96     	; 0x1278 <__fixsfsi+0x8c>
    1218:	84 30       	cpi	r24, 0x04	; 4
    121a:	41 f4       	brne	.+16     	; 0x122c <__fixsfsi+0x40>
    121c:	8a 81       	ldd	r24, Y+2	; 0x02
    121e:	88 23       	and	r24, r24
    1220:	31 f1       	breq	.+76     	; 0x126e <__fixsfsi+0x82>
    1222:	00 e0       	ldi	r16, 0x00	; 0
    1224:	10 e0       	ldi	r17, 0x00	; 0
    1226:	20 e0       	ldi	r18, 0x00	; 0
    1228:	30 e8       	ldi	r19, 0x80	; 128
    122a:	29 c0       	rjmp	.+82     	; 0x127e <__fixsfsi+0x92>
    122c:	2b 81       	ldd	r18, Y+3	; 0x03
    122e:	3c 81       	ldd	r19, Y+4	; 0x04
    1230:	37 fd       	sbrc	r19, 7
    1232:	22 c0       	rjmp	.+68     	; 0x1278 <__fixsfsi+0x8c>
    1234:	2f 31       	cpi	r18, 0x1F	; 31
    1236:	31 05       	cpc	r19, r1
    1238:	8c f7       	brge	.-30     	; 0x121c <__fixsfsi+0x30>
    123a:	8e e1       	ldi	r24, 0x1E	; 30
    123c:	90 e0       	ldi	r25, 0x00	; 0
    123e:	82 1b       	sub	r24, r18
    1240:	93 0b       	sbc	r25, r19
    1242:	0d 81       	ldd	r16, Y+5	; 0x05
    1244:	1e 81       	ldd	r17, Y+6	; 0x06
    1246:	2f 81       	ldd	r18, Y+7	; 0x07
    1248:	38 85       	ldd	r19, Y+8	; 0x08
    124a:	04 c0       	rjmp	.+8      	; 0x1254 <__fixsfsi+0x68>
    124c:	36 95       	lsr	r19
    124e:	27 95       	ror	r18
    1250:	17 95       	ror	r17
    1252:	07 95       	ror	r16
    1254:	8a 95       	dec	r24
    1256:	d2 f7       	brpl	.-12     	; 0x124c <__fixsfsi+0x60>
    1258:	8a 81       	ldd	r24, Y+2	; 0x02
    125a:	88 23       	and	r24, r24
    125c:	81 f0       	breq	.+32     	; 0x127e <__fixsfsi+0x92>
    125e:	30 95       	com	r19
    1260:	20 95       	com	r18
    1262:	10 95       	com	r17
    1264:	01 95       	neg	r16
    1266:	1f 4f       	sbci	r17, 0xFF	; 255
    1268:	2f 4f       	sbci	r18, 0xFF	; 255
    126a:	3f 4f       	sbci	r19, 0xFF	; 255
    126c:	08 c0       	rjmp	.+16     	; 0x127e <__fixsfsi+0x92>
    126e:	0f ef       	ldi	r16, 0xFF	; 255
    1270:	1f ef       	ldi	r17, 0xFF	; 255
    1272:	2f ef       	ldi	r18, 0xFF	; 255
    1274:	3f e7       	ldi	r19, 0x7F	; 127
    1276:	03 c0       	rjmp	.+6      	; 0x127e <__fixsfsi+0x92>
    1278:	00 e0       	ldi	r16, 0x00	; 0
    127a:	10 e0       	ldi	r17, 0x00	; 0
    127c:	98 01       	movw	r18, r16
    127e:	b8 01       	movw	r22, r16
    1280:	c9 01       	movw	r24, r18
    1282:	2c 96       	adiw	r28, 0x0c	; 12
    1284:	e4 e0       	ldi	r30, 0x04	; 4
    1286:	0c 94 59 0b 	jmp	0x16b2	; 0x16b2 <__epilogue_restores__+0x1c>

0000128a <__pack_f>:
    128a:	0f 93       	push	r16
    128c:	1f 93       	push	r17
    128e:	cf 93       	push	r28
    1290:	df 93       	push	r29
    1292:	dc 01       	movw	r26, r24
    1294:	14 96       	adiw	r26, 0x04	; 4
    1296:	4d 91       	ld	r20, X+
    1298:	5d 91       	ld	r21, X+
    129a:	6d 91       	ld	r22, X+
    129c:	7c 91       	ld	r23, X
    129e:	17 97       	sbiw	r26, 0x07	; 7
    12a0:	11 96       	adiw	r26, 0x01	; 1
    12a2:	ec 91       	ld	r30, X
    12a4:	11 97       	sbiw	r26, 0x01	; 1
    12a6:	8c 91       	ld	r24, X
    12a8:	82 30       	cpi	r24, 0x02	; 2
    12aa:	20 f4       	brcc	.+8      	; 0x12b4 <__pack_f+0x2a>
    12ac:	60 61       	ori	r22, 0x10	; 16
    12ae:	8f ef       	ldi	r24, 0xFF	; 255
    12b0:	90 e0       	ldi	r25, 0x00	; 0
    12b2:	a6 c0       	rjmp	.+332    	; 0x1400 <__pack_f+0x176>
    12b4:	84 30       	cpi	r24, 0x04	; 4
    12b6:	09 f4       	brne	.+2      	; 0x12ba <__pack_f+0x30>
    12b8:	9e c0       	rjmp	.+316    	; 0x13f6 <__pack_f+0x16c>
    12ba:	82 30       	cpi	r24, 0x02	; 2
    12bc:	09 f4       	brne	.+2      	; 0x12c0 <__pack_f+0x36>
    12be:	95 c0       	rjmp	.+298    	; 0x13ea <__pack_f+0x160>
    12c0:	41 15       	cp	r20, r1
    12c2:	51 05       	cpc	r21, r1
    12c4:	61 05       	cpc	r22, r1
    12c6:	71 05       	cpc	r23, r1
    12c8:	09 f4       	brne	.+2      	; 0x12cc <__pack_f+0x42>
    12ca:	92 c0       	rjmp	.+292    	; 0x13f0 <__pack_f+0x166>
    12cc:	12 96       	adiw	r26, 0x02	; 2
    12ce:	2d 91       	ld	r18, X+
    12d0:	3c 91       	ld	r19, X
    12d2:	13 97       	sbiw	r26, 0x03	; 3
    12d4:	22 38       	cpi	r18, 0x82	; 130
    12d6:	8f ef       	ldi	r24, 0xFF	; 255
    12d8:	38 07       	cpc	r19, r24
    12da:	0c f0       	brlt	.+2      	; 0x12de <__pack_f+0x54>
    12dc:	58 c0       	rjmp	.+176    	; 0x138e <__pack_f+0x104>
    12de:	c2 e8       	ldi	r28, 0x82	; 130
    12e0:	df ef       	ldi	r29, 0xFF	; 255
    12e2:	c2 1b       	sub	r28, r18
    12e4:	d3 0b       	sbc	r29, r19
    12e6:	ca 31       	cpi	r28, 0x1A	; 26
    12e8:	d1 05       	cpc	r29, r1
    12ea:	6c f5       	brge	.+90     	; 0x1346 <__pack_f+0xbc>
    12ec:	8a 01       	movw	r16, r20
    12ee:	9b 01       	movw	r18, r22
    12f0:	0c 2e       	mov	r0, r28
    12f2:	04 c0       	rjmp	.+8      	; 0x12fc <__pack_f+0x72>
    12f4:	36 95       	lsr	r19
    12f6:	27 95       	ror	r18
    12f8:	17 95       	ror	r17
    12fa:	07 95       	ror	r16
    12fc:	0a 94       	dec	r0
    12fe:	d2 f7       	brpl	.-12     	; 0x12f4 <__pack_f+0x6a>
    1300:	81 e0       	ldi	r24, 0x01	; 1
    1302:	90 e0       	ldi	r25, 0x00	; 0
    1304:	a0 e0       	ldi	r26, 0x00	; 0
    1306:	b0 e0       	ldi	r27, 0x00	; 0
    1308:	0c 2e       	mov	r0, r28
    130a:	04 c0       	rjmp	.+8      	; 0x1314 <__pack_f+0x8a>
    130c:	88 0f       	add	r24, r24
    130e:	99 1f       	adc	r25, r25
    1310:	aa 1f       	adc	r26, r26
    1312:	bb 1f       	adc	r27, r27
    1314:	0a 94       	dec	r0
    1316:	d2 f7       	brpl	.-12     	; 0x130c <__pack_f+0x82>
    1318:	01 97       	sbiw	r24, 0x01	; 1
    131a:	a1 09       	sbc	r26, r1
    131c:	b1 09       	sbc	r27, r1
    131e:	84 23       	and	r24, r20
    1320:	95 23       	and	r25, r21
    1322:	a6 23       	and	r26, r22
    1324:	b7 23       	and	r27, r23
    1326:	41 e0       	ldi	r20, 0x01	; 1
    1328:	50 e0       	ldi	r21, 0x00	; 0
    132a:	60 e0       	ldi	r22, 0x00	; 0
    132c:	70 e0       	ldi	r23, 0x00	; 0
    132e:	89 2b       	or	r24, r25
    1330:	8a 2b       	or	r24, r26
    1332:	8b 2b       	or	r24, r27
    1334:	19 f4       	brne	.+6      	; 0x133c <__pack_f+0xb2>
    1336:	40 e0       	ldi	r20, 0x00	; 0
    1338:	50 e0       	ldi	r21, 0x00	; 0
    133a:	ba 01       	movw	r22, r20
    133c:	40 2b       	or	r20, r16
    133e:	51 2b       	or	r21, r17
    1340:	62 2b       	or	r22, r18
    1342:	73 2b       	or	r23, r19
    1344:	03 c0       	rjmp	.+6      	; 0x134c <__pack_f+0xc2>
    1346:	40 e0       	ldi	r20, 0x00	; 0
    1348:	50 e0       	ldi	r21, 0x00	; 0
    134a:	ba 01       	movw	r22, r20
    134c:	db 01       	movw	r26, r22
    134e:	ca 01       	movw	r24, r20
    1350:	8f 77       	andi	r24, 0x7F	; 127
    1352:	99 27       	eor	r25, r25
    1354:	aa 27       	eor	r26, r26
    1356:	bb 27       	eor	r27, r27
    1358:	80 34       	cpi	r24, 0x40	; 64
    135a:	91 05       	cpc	r25, r1
    135c:	a1 05       	cpc	r26, r1
    135e:	b1 05       	cpc	r27, r1
    1360:	39 f4       	brne	.+14     	; 0x1370 <__pack_f+0xe6>
    1362:	47 ff       	sbrs	r20, 7
    1364:	09 c0       	rjmp	.+18     	; 0x1378 <__pack_f+0xee>
    1366:	40 5c       	subi	r20, 0xC0	; 192
    1368:	5f 4f       	sbci	r21, 0xFF	; 255
    136a:	6f 4f       	sbci	r22, 0xFF	; 255
    136c:	7f 4f       	sbci	r23, 0xFF	; 255
    136e:	04 c0       	rjmp	.+8      	; 0x1378 <__pack_f+0xee>
    1370:	41 5c       	subi	r20, 0xC1	; 193
    1372:	5f 4f       	sbci	r21, 0xFF	; 255
    1374:	6f 4f       	sbci	r22, 0xFF	; 255
    1376:	7f 4f       	sbci	r23, 0xFF	; 255
    1378:	81 e0       	ldi	r24, 0x01	; 1
    137a:	90 e0       	ldi	r25, 0x00	; 0
    137c:	41 15       	cp	r20, r1
    137e:	51 05       	cpc	r21, r1
    1380:	61 05       	cpc	r22, r1
    1382:	20 e4       	ldi	r18, 0x40	; 64
    1384:	72 07       	cpc	r23, r18
    1386:	48 f5       	brcc	.+82     	; 0x13da <__pack_f+0x150>
    1388:	80 e0       	ldi	r24, 0x00	; 0
    138a:	90 e0       	ldi	r25, 0x00	; 0
    138c:	26 c0       	rjmp	.+76     	; 0x13da <__pack_f+0x150>
    138e:	20 38       	cpi	r18, 0x80	; 128
    1390:	31 05       	cpc	r19, r1
    1392:	8c f5       	brge	.+98     	; 0x13f6 <__pack_f+0x16c>
    1394:	db 01       	movw	r26, r22
    1396:	ca 01       	movw	r24, r20
    1398:	8f 77       	andi	r24, 0x7F	; 127
    139a:	99 27       	eor	r25, r25
    139c:	aa 27       	eor	r26, r26
    139e:	bb 27       	eor	r27, r27
    13a0:	80 34       	cpi	r24, 0x40	; 64
    13a2:	91 05       	cpc	r25, r1
    13a4:	a1 05       	cpc	r26, r1
    13a6:	b1 05       	cpc	r27, r1
    13a8:	39 f4       	brne	.+14     	; 0x13b8 <__pack_f+0x12e>
    13aa:	47 ff       	sbrs	r20, 7
    13ac:	09 c0       	rjmp	.+18     	; 0x13c0 <__pack_f+0x136>
    13ae:	40 5c       	subi	r20, 0xC0	; 192
    13b0:	5f 4f       	sbci	r21, 0xFF	; 255
    13b2:	6f 4f       	sbci	r22, 0xFF	; 255
    13b4:	7f 4f       	sbci	r23, 0xFF	; 255
    13b6:	04 c0       	rjmp	.+8      	; 0x13c0 <__pack_f+0x136>
    13b8:	41 5c       	subi	r20, 0xC1	; 193
    13ba:	5f 4f       	sbci	r21, 0xFF	; 255
    13bc:	6f 4f       	sbci	r22, 0xFF	; 255
    13be:	7f 4f       	sbci	r23, 0xFF	; 255
    13c0:	77 fd       	sbrc	r23, 7
    13c2:	04 c0       	rjmp	.+8      	; 0x13cc <__pack_f+0x142>
    13c4:	c9 01       	movw	r24, r18
    13c6:	81 58       	subi	r24, 0x81	; 129
    13c8:	9f 4f       	sbci	r25, 0xFF	; 255
    13ca:	07 c0       	rjmp	.+14     	; 0x13da <__pack_f+0x150>
    13cc:	76 95       	lsr	r23
    13ce:	67 95       	ror	r22
    13d0:	57 95       	ror	r21
    13d2:	47 95       	ror	r20
    13d4:	c9 01       	movw	r24, r18
    13d6:	80 58       	subi	r24, 0x80	; 128
    13d8:	9f 4f       	sbci	r25, 0xFF	; 255
    13da:	97 e0       	ldi	r25, 0x07	; 7
    13dc:	76 95       	lsr	r23
    13de:	67 95       	ror	r22
    13e0:	57 95       	ror	r21
    13e2:	47 95       	ror	r20
    13e4:	9a 95       	dec	r25
    13e6:	d1 f7       	brne	.-12     	; 0x13dc <__pack_f+0x152>
    13e8:	0b c0       	rjmp	.+22     	; 0x1400 <__pack_f+0x176>
    13ea:	80 e0       	ldi	r24, 0x00	; 0
    13ec:	90 e0       	ldi	r25, 0x00	; 0
    13ee:	05 c0       	rjmp	.+10     	; 0x13fa <__pack_f+0x170>
    13f0:	80 e0       	ldi	r24, 0x00	; 0
    13f2:	90 e0       	ldi	r25, 0x00	; 0
    13f4:	05 c0       	rjmp	.+10     	; 0x1400 <__pack_f+0x176>
    13f6:	8f ef       	ldi	r24, 0xFF	; 255
    13f8:	90 e0       	ldi	r25, 0x00	; 0
    13fa:	40 e0       	ldi	r20, 0x00	; 0
    13fc:	50 e0       	ldi	r21, 0x00	; 0
    13fe:	ba 01       	movw	r22, r20
    1400:	98 2f       	mov	r25, r24
    1402:	96 95       	lsr	r25
    1404:	e0 fb       	bst	r30, 0
    1406:	97 f9       	bld	r25, 7
    1408:	36 2f       	mov	r19, r22
    140a:	80 fb       	bst	r24, 0
    140c:	37 f9       	bld	r19, 7
    140e:	64 2f       	mov	r22, r20
    1410:	75 2f       	mov	r23, r21
    1412:	83 2f       	mov	r24, r19
    1414:	df 91       	pop	r29
    1416:	cf 91       	pop	r28
    1418:	1f 91       	pop	r17
    141a:	0f 91       	pop	r16
    141c:	08 95       	ret

0000141e <__unpack_f>:
    141e:	cf 92       	push	r12
    1420:	df 92       	push	r13
    1422:	ef 92       	push	r14
    1424:	dc 01       	movw	r26, r24
    1426:	fb 01       	movw	r30, r22
    1428:	cc 90       	ld	r12, X
    142a:	11 96       	adiw	r26, 0x01	; 1
    142c:	dc 90       	ld	r13, X
    142e:	11 97       	sbiw	r26, 0x01	; 1
    1430:	12 96       	adiw	r26, 0x02	; 2
    1432:	8c 91       	ld	r24, X
    1434:	12 97       	sbiw	r26, 0x02	; 2
    1436:	3f e7       	ldi	r19, 0x7F	; 127
    1438:	e3 2e       	mov	r14, r19
    143a:	e8 22       	and	r14, r24
    143c:	6e 2d       	mov	r22, r14
    143e:	a6 01       	movw	r20, r12
    1440:	70 e0       	ldi	r23, 0x00	; 0
    1442:	98 2f       	mov	r25, r24
    1444:	99 1f       	adc	r25, r25
    1446:	99 27       	eor	r25, r25
    1448:	99 1f       	adc	r25, r25
    144a:	13 96       	adiw	r26, 0x03	; 3
    144c:	2c 91       	ld	r18, X
    144e:	82 2f       	mov	r24, r18
    1450:	88 0f       	add	r24, r24
    1452:	89 2b       	or	r24, r25
    1454:	90 e0       	ldi	r25, 0x00	; 0
    1456:	27 fb       	bst	r18, 7
    1458:	22 27       	eor	r18, r18
    145a:	20 f9       	bld	r18, 0
    145c:	21 83       	std	Z+1, r18	; 0x01
    145e:	00 97       	sbiw	r24, 0x00	; 0
    1460:	29 f5       	brne	.+74     	; 0x14ac <__unpack_f+0x8e>
    1462:	41 15       	cp	r20, r1
    1464:	51 05       	cpc	r21, r1
    1466:	61 05       	cpc	r22, r1
    1468:	71 05       	cpc	r23, r1
    146a:	11 f4       	brne	.+4      	; 0x1470 <__unpack_f+0x52>
    146c:	82 e0       	ldi	r24, 0x02	; 2
    146e:	27 c0       	rjmp	.+78     	; 0x14be <__unpack_f+0xa0>
    1470:	82 e8       	ldi	r24, 0x82	; 130
    1472:	9f ef       	ldi	r25, 0xFF	; 255
    1474:	93 83       	std	Z+3, r25	; 0x03
    1476:	82 83       	std	Z+2, r24	; 0x02
    1478:	27 e0       	ldi	r18, 0x07	; 7
    147a:	44 0f       	add	r20, r20
    147c:	55 1f       	adc	r21, r21
    147e:	66 1f       	adc	r22, r22
    1480:	77 1f       	adc	r23, r23
    1482:	2a 95       	dec	r18
    1484:	d1 f7       	brne	.-12     	; 0x147a <__unpack_f+0x5c>
    1486:	83 e0       	ldi	r24, 0x03	; 3
    1488:	80 83       	st	Z, r24
    148a:	09 c0       	rjmp	.+18     	; 0x149e <__unpack_f+0x80>
    148c:	44 0f       	add	r20, r20
    148e:	55 1f       	adc	r21, r21
    1490:	66 1f       	adc	r22, r22
    1492:	77 1f       	adc	r23, r23
    1494:	82 81       	ldd	r24, Z+2	; 0x02
    1496:	93 81       	ldd	r25, Z+3	; 0x03
    1498:	01 97       	sbiw	r24, 0x01	; 1
    149a:	93 83       	std	Z+3, r25	; 0x03
    149c:	82 83       	std	Z+2, r24	; 0x02
    149e:	41 15       	cp	r20, r1
    14a0:	51 05       	cpc	r21, r1
    14a2:	61 05       	cpc	r22, r1
    14a4:	80 e4       	ldi	r24, 0x40	; 64
    14a6:	78 07       	cpc	r23, r24
    14a8:	88 f3       	brcs	.-30     	; 0x148c <__unpack_f+0x6e>
    14aa:	20 c0       	rjmp	.+64     	; 0x14ec <__unpack_f+0xce>
    14ac:	8f 3f       	cpi	r24, 0xFF	; 255
    14ae:	91 05       	cpc	r25, r1
    14b0:	79 f4       	brne	.+30     	; 0x14d0 <__unpack_f+0xb2>
    14b2:	41 15       	cp	r20, r1
    14b4:	51 05       	cpc	r21, r1
    14b6:	61 05       	cpc	r22, r1
    14b8:	71 05       	cpc	r23, r1
    14ba:	19 f4       	brne	.+6      	; 0x14c2 <__unpack_f+0xa4>
    14bc:	84 e0       	ldi	r24, 0x04	; 4
    14be:	80 83       	st	Z, r24
    14c0:	19 c0       	rjmp	.+50     	; 0x14f4 <__unpack_f+0xd6>
    14c2:	e4 fe       	sbrs	r14, 4
    14c4:	03 c0       	rjmp	.+6      	; 0x14cc <__unpack_f+0xae>
    14c6:	81 e0       	ldi	r24, 0x01	; 1
    14c8:	80 83       	st	Z, r24
    14ca:	10 c0       	rjmp	.+32     	; 0x14ec <__unpack_f+0xce>
    14cc:	10 82       	st	Z, r1
    14ce:	0e c0       	rjmp	.+28     	; 0x14ec <__unpack_f+0xce>
    14d0:	8f 57       	subi	r24, 0x7F	; 127
    14d2:	91 09       	sbc	r25, r1
    14d4:	93 83       	std	Z+3, r25	; 0x03
    14d6:	82 83       	std	Z+2, r24	; 0x02
    14d8:	83 e0       	ldi	r24, 0x03	; 3
    14da:	80 83       	st	Z, r24
    14dc:	87 e0       	ldi	r24, 0x07	; 7
    14de:	44 0f       	add	r20, r20
    14e0:	55 1f       	adc	r21, r21
    14e2:	66 1f       	adc	r22, r22
    14e4:	77 1f       	adc	r23, r23
    14e6:	8a 95       	dec	r24
    14e8:	d1 f7       	brne	.-12     	; 0x14de <__unpack_f+0xc0>
    14ea:	70 64       	ori	r23, 0x40	; 64
    14ec:	44 83       	std	Z+4, r20	; 0x04
    14ee:	55 83       	std	Z+5, r21	; 0x05
    14f0:	66 83       	std	Z+6, r22	; 0x06
    14f2:	77 83       	std	Z+7, r23	; 0x07
    14f4:	ef 90       	pop	r14
    14f6:	df 90       	pop	r13
    14f8:	cf 90       	pop	r12
    14fa:	08 95       	ret

000014fc <__fpcmp_parts_f>:
    14fc:	cf 93       	push	r28
    14fe:	fc 01       	movw	r30, r24
    1500:	db 01       	movw	r26, r22
    1502:	90 81       	ld	r25, Z
    1504:	92 30       	cpi	r25, 0x02	; 2
    1506:	08 f4       	brcc	.+2      	; 0x150a <__fpcmp_parts_f+0xe>
    1508:	52 c0       	rjmp	.+164    	; 0x15ae <__fpcmp_parts_f+0xb2>
    150a:	8c 91       	ld	r24, X
    150c:	82 30       	cpi	r24, 0x02	; 2
    150e:	08 f4       	brcc	.+2      	; 0x1512 <__fpcmp_parts_f+0x16>
    1510:	4e c0       	rjmp	.+156    	; 0x15ae <__fpcmp_parts_f+0xb2>
    1512:	94 30       	cpi	r25, 0x04	; 4
    1514:	71 f4       	brne	.+28     	; 0x1532 <__fpcmp_parts_f+0x36>
    1516:	84 30       	cpi	r24, 0x04	; 4
    1518:	39 f4       	brne	.+14     	; 0x1528 <__fpcmp_parts_f+0x2c>
    151a:	11 96       	adiw	r26, 0x01	; 1
    151c:	2c 91       	ld	r18, X
    151e:	30 e0       	ldi	r19, 0x00	; 0
    1520:	81 81       	ldd	r24, Z+1	; 0x01
    1522:	28 1b       	sub	r18, r24
    1524:	31 09       	sbc	r19, r1
    1526:	48 c0       	rjmp	.+144    	; 0x15b8 <__fpcmp_parts_f+0xbc>
    1528:	81 81       	ldd	r24, Z+1	; 0x01
    152a:	88 23       	and	r24, r24
    152c:	09 f4       	brne	.+2      	; 0x1530 <__fpcmp_parts_f+0x34>
    152e:	3f c0       	rjmp	.+126    	; 0x15ae <__fpcmp_parts_f+0xb2>
    1530:	3b c0       	rjmp	.+118    	; 0x15a8 <__fpcmp_parts_f+0xac>
    1532:	84 30       	cpi	r24, 0x04	; 4
    1534:	29 f4       	brne	.+10     	; 0x1540 <__fpcmp_parts_f+0x44>
    1536:	11 96       	adiw	r26, 0x01	; 1
    1538:	8c 91       	ld	r24, X
    153a:	81 11       	cpse	r24, r1
    153c:	38 c0       	rjmp	.+112    	; 0x15ae <__fpcmp_parts_f+0xb2>
    153e:	34 c0       	rjmp	.+104    	; 0x15a8 <__fpcmp_parts_f+0xac>
    1540:	92 30       	cpi	r25, 0x02	; 2
    1542:	19 f4       	brne	.+6      	; 0x154a <__fpcmp_parts_f+0x4e>
    1544:	82 30       	cpi	r24, 0x02	; 2
    1546:	b9 f7       	brne	.-18     	; 0x1536 <__fpcmp_parts_f+0x3a>
    1548:	35 c0       	rjmp	.+106    	; 0x15b4 <__fpcmp_parts_f+0xb8>
    154a:	82 30       	cpi	r24, 0x02	; 2
    154c:	69 f3       	breq	.-38     	; 0x1528 <__fpcmp_parts_f+0x2c>
    154e:	c1 81       	ldd	r28, Z+1	; 0x01
    1550:	11 96       	adiw	r26, 0x01	; 1
    1552:	8c 91       	ld	r24, X
    1554:	11 97       	sbiw	r26, 0x01	; 1
    1556:	c8 13       	cpse	r28, r24
    1558:	1d c0       	rjmp	.+58     	; 0x1594 <__fpcmp_parts_f+0x98>
    155a:	22 81       	ldd	r18, Z+2	; 0x02
    155c:	33 81       	ldd	r19, Z+3	; 0x03
    155e:	12 96       	adiw	r26, 0x02	; 2
    1560:	8d 91       	ld	r24, X+
    1562:	9c 91       	ld	r25, X
    1564:	13 97       	sbiw	r26, 0x03	; 3
    1566:	82 17       	cp	r24, r18
    1568:	93 07       	cpc	r25, r19
    156a:	0c f4       	brge	.+2      	; 0x156e <__fpcmp_parts_f+0x72>
    156c:	13 c0       	rjmp	.+38     	; 0x1594 <__fpcmp_parts_f+0x98>
    156e:	28 17       	cp	r18, r24
    1570:	39 07       	cpc	r19, r25
    1572:	0c f4       	brge	.+2      	; 0x1576 <__fpcmp_parts_f+0x7a>
    1574:	17 c0       	rjmp	.+46     	; 0x15a4 <__fpcmp_parts_f+0xa8>
    1576:	44 81       	ldd	r20, Z+4	; 0x04
    1578:	55 81       	ldd	r21, Z+5	; 0x05
    157a:	66 81       	ldd	r22, Z+6	; 0x06
    157c:	77 81       	ldd	r23, Z+7	; 0x07
    157e:	14 96       	adiw	r26, 0x04	; 4
    1580:	8d 91       	ld	r24, X+
    1582:	9d 91       	ld	r25, X+
    1584:	0d 90       	ld	r0, X+
    1586:	bc 91       	ld	r27, X
    1588:	a0 2d       	mov	r26, r0
    158a:	84 17       	cp	r24, r20
    158c:	95 07       	cpc	r25, r21
    158e:	a6 07       	cpc	r26, r22
    1590:	b7 07       	cpc	r27, r23
    1592:	18 f4       	brcc	.+6      	; 0x159a <__fpcmp_parts_f+0x9e>
    1594:	c1 11       	cpse	r28, r1
    1596:	08 c0       	rjmp	.+16     	; 0x15a8 <__fpcmp_parts_f+0xac>
    1598:	0a c0       	rjmp	.+20     	; 0x15ae <__fpcmp_parts_f+0xb2>
    159a:	48 17       	cp	r20, r24
    159c:	59 07       	cpc	r21, r25
    159e:	6a 07       	cpc	r22, r26
    15a0:	7b 07       	cpc	r23, r27
    15a2:	40 f4       	brcc	.+16     	; 0x15b4 <__fpcmp_parts_f+0xb8>
    15a4:	c1 11       	cpse	r28, r1
    15a6:	03 c0       	rjmp	.+6      	; 0x15ae <__fpcmp_parts_f+0xb2>
    15a8:	2f ef       	ldi	r18, 0xFF	; 255
    15aa:	3f ef       	ldi	r19, 0xFF	; 255
    15ac:	05 c0       	rjmp	.+10     	; 0x15b8 <__fpcmp_parts_f+0xbc>
    15ae:	21 e0       	ldi	r18, 0x01	; 1
    15b0:	30 e0       	ldi	r19, 0x00	; 0
    15b2:	02 c0       	rjmp	.+4      	; 0x15b8 <__fpcmp_parts_f+0xbc>
    15b4:	20 e0       	ldi	r18, 0x00	; 0
    15b6:	30 e0       	ldi	r19, 0x00	; 0
    15b8:	c9 01       	movw	r24, r18
    15ba:	cf 91       	pop	r28
    15bc:	08 95       	ret

000015be <main>:
}

int main(void) {
  // Init port B to show keyboard result
  DDRB = 0xff;
    15be:	8f ef       	ldi	r24, 0xFF	; 255
    15c0:	84 b9       	out	0x04, r24	; 4
  // and turn out the LEDs
  PORTB = 0xff;   
    15c2:	85 b9       	out	0x05, r24	; 5
  
  // init the UART
  uart_init();
    15c4:	0e 94 d8 01 	call	0x3b0	; 0x3b0 <uart_init>
  stdout = stdin = stderr = &uart_str;
    15c8:	80 e0       	ldi	r24, 0x00	; 0
    15ca:	91 e0       	ldi	r25, 0x01	; 1
    15cc:	90 93 18 04 	sts	0x0418, r25
    15d0:	80 93 17 04 	sts	0x0417, r24
    15d4:	90 93 14 04 	sts	0x0414, r25
    15d8:	80 93 13 04 	sts	0x0413, r24
    15dc:	90 93 16 04 	sts	0x0416, r25
    15e0:	80 93 15 04 	sts	0x0415, r24
  fprintf(stdout, "Starting...\n\r");
    15e4:	bc 01       	movw	r22, r24
    15e6:	8a e5       	ldi	r24, 0x5A	; 90
    15e8:	91 e0       	ldi	r25, 0x01	; 1
    15ea:	0e 94 76 0b 	call	0x16ec	; 0x16ec <fputs>

  initialize();
    15ee:	0e 94 be 01 	call	0x37c	; 0x37c <initialize>

  //endless loop to read keyboard
  while(1) {
	//Used for debouncing
	//fprintf(stdout, "%u\n\r", time1);
    if (time1>=t1) {
    15f2:	80 91 de 01 	lds	r24, 0x01DE
    15f6:	90 91 df 01 	lds	r25, 0x01DF
    15fa:	44 97       	sbiw	r24, 0x14	; 20
    15fc:	10 f0       	brcs	.+4      	; 0x1602 <main+0x44>
	  	//fprintf(stdout, "Entering task1...\n\r");	
		task1();
    15fe:	0e 94 76 00 	call	0xec	; 0xec <task1>
	}
	if(time >= dds_duration){
    1602:	20 91 e0 01 	lds	r18, 0x01E0
    1606:	30 91 e1 01 	lds	r19, 0x01E1
    160a:	80 91 dc 01 	lds	r24, 0x01DC
    160e:	90 91 dd 01 	lds	r25, 0x01DD
    1612:	28 17       	cp	r18, r24
    1614:	39 07       	cpc	r19, r25
    1616:	68 f3       	brcs	.-38     	; 0x15f2 <main+0x34>
		time = 0;
    1618:	10 92 e1 01 	sts	0x01E1, r1
    161c:	10 92 e0 01 	sts	0x01E0, r1
		OCR0A = 0;
    1620:	17 bc       	out	0x27, r1	; 39
		stop_playing();
    1622:	0e 94 6e 05 	call	0xadc	; 0xadc <stop_playing>
    1626:	e5 cf       	rjmp	.-54     	; 0x15f2 <main+0x34>

00001628 <__clzsi2>:
    1628:	0e 94 1d 0b 	call	0x163a	; 0x163a <__clzhi2>
    162c:	84 ff       	sbrs	r24, 4
    162e:	08 95       	ret
    1630:	cb 01       	movw	r24, r22
    1632:	0e 94 1d 0b 	call	0x163a	; 0x163a <__clzhi2>
    1636:	80 5f       	subi	r24, 0xF0	; 240
    1638:	08 95       	ret

0000163a <__clzhi2>:
    163a:	aa 27       	eor	r26, r26
    163c:	99 23       	and	r25, r25
    163e:	29 f4       	brne	.+10     	; 0x164a <__clzhi2+0x10>
    1640:	a8 5f       	subi	r26, 0xF8	; 248
    1642:	98 2b       	or	r25, r24
    1644:	11 f4       	brne	.+4      	; 0x164a <__clzhi2+0x10>
    1646:	80 e1       	ldi	r24, 0x10	; 16
    1648:	08 95       	ret
    164a:	90 31       	cpi	r25, 0x10	; 16
    164c:	18 f4       	brcc	.+6      	; 0x1654 <__clzhi2+0x1a>
    164e:	ad 5f       	subi	r26, 0xFD	; 253
    1650:	92 95       	swap	r25
    1652:	a3 95       	inc	r26
    1654:	99 0f       	add	r25, r25
    1656:	e8 f7       	brcc	.-6      	; 0x1652 <__clzhi2+0x18>
    1658:	8a 2f       	mov	r24, r26
    165a:	99 27       	eor	r25, r25
    165c:	08 95       	ret

0000165e <__prologue_saves__>:
    165e:	2f 92       	push	r2
    1660:	3f 92       	push	r3
    1662:	4f 92       	push	r4
    1664:	5f 92       	push	r5
    1666:	6f 92       	push	r6
    1668:	7f 92       	push	r7
    166a:	8f 92       	push	r8
    166c:	9f 92       	push	r9
    166e:	af 92       	push	r10
    1670:	bf 92       	push	r11
    1672:	cf 92       	push	r12
    1674:	df 92       	push	r13
    1676:	ef 92       	push	r14
    1678:	ff 92       	push	r15
    167a:	0f 93       	push	r16
    167c:	1f 93       	push	r17
    167e:	cf 93       	push	r28
    1680:	df 93       	push	r29
    1682:	cd b7       	in	r28, 0x3d	; 61
    1684:	de b7       	in	r29, 0x3e	; 62
    1686:	ca 1b       	sub	r28, r26
    1688:	db 0b       	sbc	r29, r27
    168a:	0f b6       	in	r0, 0x3f	; 63
    168c:	f8 94       	cli
    168e:	de bf       	out	0x3e, r29	; 62
    1690:	0f be       	out	0x3f, r0	; 63
    1692:	cd bf       	out	0x3d, r28	; 61
    1694:	09 94       	ijmp

00001696 <__epilogue_restores__>:
    1696:	2a 88       	ldd	r2, Y+18	; 0x12
    1698:	39 88       	ldd	r3, Y+17	; 0x11
    169a:	48 88       	ldd	r4, Y+16	; 0x10
    169c:	5f 84       	ldd	r5, Y+15	; 0x0f
    169e:	6e 84       	ldd	r6, Y+14	; 0x0e
    16a0:	7d 84       	ldd	r7, Y+13	; 0x0d
    16a2:	8c 84       	ldd	r8, Y+12	; 0x0c
    16a4:	9b 84       	ldd	r9, Y+11	; 0x0b
    16a6:	aa 84       	ldd	r10, Y+10	; 0x0a
    16a8:	b9 84       	ldd	r11, Y+9	; 0x09
    16aa:	c8 84       	ldd	r12, Y+8	; 0x08
    16ac:	df 80       	ldd	r13, Y+7	; 0x07
    16ae:	ee 80       	ldd	r14, Y+6	; 0x06
    16b0:	fd 80       	ldd	r15, Y+5	; 0x05
    16b2:	0c 81       	ldd	r16, Y+4	; 0x04
    16b4:	1b 81       	ldd	r17, Y+3	; 0x03
    16b6:	aa 81       	ldd	r26, Y+2	; 0x02
    16b8:	b9 81       	ldd	r27, Y+1	; 0x01
    16ba:	ce 0f       	add	r28, r30
    16bc:	d1 1d       	adc	r29, r1
    16be:	0f b6       	in	r0, 0x3f	; 63
    16c0:	f8 94       	cli
    16c2:	de bf       	out	0x3e, r29	; 62
    16c4:	0f be       	out	0x3f, r0	; 63
    16c6:	cd bf       	out	0x3d, r28	; 61
    16c8:	ed 01       	movw	r28, r26
    16ca:	08 95       	ret

000016cc <fprintf>:
    16cc:	cf 93       	push	r28
    16ce:	df 93       	push	r29
    16d0:	cd b7       	in	r28, 0x3d	; 61
    16d2:	de b7       	in	r29, 0x3e	; 62
    16d4:	ce 01       	movw	r24, r28
    16d6:	09 96       	adiw	r24, 0x09	; 9
    16d8:	ac 01       	movw	r20, r24
    16da:	6f 81       	ldd	r22, Y+7	; 0x07
    16dc:	78 85       	ldd	r23, Y+8	; 0x08
    16de:	8d 81       	ldd	r24, Y+5	; 0x05
    16e0:	9e 81       	ldd	r25, Y+6	; 0x06
    16e2:	0e 94 a7 0b 	call	0x174e	; 0x174e <vfprintf>
    16e6:	df 91       	pop	r29
    16e8:	cf 91       	pop	r28
    16ea:	08 95       	ret

000016ec <fputs>:
    16ec:	ef 92       	push	r14
    16ee:	ff 92       	push	r15
    16f0:	0f 93       	push	r16
    16f2:	1f 93       	push	r17
    16f4:	cf 93       	push	r28
    16f6:	df 93       	push	r29
    16f8:	7c 01       	movw	r14, r24
    16fa:	8b 01       	movw	r16, r22
    16fc:	db 01       	movw	r26, r22
    16fe:	13 96       	adiw	r26, 0x03	; 3
    1700:	8c 91       	ld	r24, X
    1702:	81 ff       	sbrs	r24, 1
    1704:	14 c0       	rjmp	.+40     	; 0x172e <fputs+0x42>
    1706:	c0 e0       	ldi	r28, 0x00	; 0
    1708:	d0 e0       	ldi	r29, 0x00	; 0
    170a:	0b c0       	rjmp	.+22     	; 0x1722 <fputs+0x36>
    170c:	d8 01       	movw	r26, r16
    170e:	18 96       	adiw	r26, 0x08	; 8
    1710:	ed 91       	ld	r30, X+
    1712:	fc 91       	ld	r31, X
    1714:	19 97       	sbiw	r26, 0x09	; 9
    1716:	b8 01       	movw	r22, r16
    1718:	09 95       	icall
    171a:	89 2b       	or	r24, r25
    171c:	11 f0       	breq	.+4      	; 0x1722 <fputs+0x36>
    171e:	cf ef       	ldi	r28, 0xFF	; 255
    1720:	df ef       	ldi	r29, 0xFF	; 255
    1722:	f7 01       	movw	r30, r14
    1724:	81 91       	ld	r24, Z+
    1726:	7f 01       	movw	r14, r30
    1728:	81 11       	cpse	r24, r1
    172a:	f0 cf       	rjmp	.-32     	; 0x170c <fputs+0x20>
    172c:	02 c0       	rjmp	.+4      	; 0x1732 <fputs+0x46>
    172e:	cf ef       	ldi	r28, 0xFF	; 255
    1730:	df ef       	ldi	r29, 0xFF	; 255
    1732:	ce 01       	movw	r24, r28
    1734:	df 91       	pop	r29
    1736:	cf 91       	pop	r28
    1738:	1f 91       	pop	r17
    173a:	0f 91       	pop	r16
    173c:	ff 90       	pop	r15
    173e:	ef 90       	pop	r14
    1740:	08 95       	ret

00001742 <sin>:
    1742:	9f 93       	push	r25
    1744:	aa d2       	rcall	.+1364   	; 0x1c9a <__fp_rempio2>
    1746:	0f 90       	pop	r0
    1748:	07 fc       	sbrc	r0, 7
    174a:	ee 5f       	subi	r30, 0xFE	; 254
    174c:	cd c2       	rjmp	.+1434   	; 0x1ce8 <__fp_sinus>

0000174e <vfprintf>:
    174e:	2f 92       	push	r2
    1750:	3f 92       	push	r3
    1752:	4f 92       	push	r4
    1754:	5f 92       	push	r5
    1756:	6f 92       	push	r6
    1758:	7f 92       	push	r7
    175a:	8f 92       	push	r8
    175c:	9f 92       	push	r9
    175e:	af 92       	push	r10
    1760:	bf 92       	push	r11
    1762:	cf 92       	push	r12
    1764:	df 92       	push	r13
    1766:	ef 92       	push	r14
    1768:	ff 92       	push	r15
    176a:	0f 93       	push	r16
    176c:	1f 93       	push	r17
    176e:	cf 93       	push	r28
    1770:	df 93       	push	r29
    1772:	cd b7       	in	r28, 0x3d	; 61
    1774:	de b7       	in	r29, 0x3e	; 62
    1776:	2c 97       	sbiw	r28, 0x0c	; 12
    1778:	0f b6       	in	r0, 0x3f	; 63
    177a:	f8 94       	cli
    177c:	de bf       	out	0x3e, r29	; 62
    177e:	0f be       	out	0x3f, r0	; 63
    1780:	cd bf       	out	0x3d, r28	; 61
    1782:	7c 01       	movw	r14, r24
    1784:	6b 01       	movw	r12, r22
    1786:	8a 01       	movw	r16, r20
    1788:	fc 01       	movw	r30, r24
    178a:	17 82       	std	Z+7, r1	; 0x07
    178c:	16 82       	std	Z+6, r1	; 0x06
    178e:	83 81       	ldd	r24, Z+3	; 0x03
    1790:	81 ff       	sbrs	r24, 1
    1792:	c6 c1       	rjmp	.+908    	; 0x1b20 <vfprintf+0x3d2>
    1794:	88 24       	eor	r8, r8
    1796:	83 94       	inc	r8
    1798:	91 2c       	mov	r9, r1
    179a:	8c 0e       	add	r8, r28
    179c:	9d 1e       	adc	r9, r29
    179e:	f7 01       	movw	r30, r14
    17a0:	93 81       	ldd	r25, Z+3	; 0x03
    17a2:	f6 01       	movw	r30, r12
    17a4:	93 fd       	sbrc	r25, 3
    17a6:	85 91       	lpm	r24, Z+
    17a8:	93 ff       	sbrs	r25, 3
    17aa:	81 91       	ld	r24, Z+
    17ac:	6f 01       	movw	r12, r30
    17ae:	88 23       	and	r24, r24
    17b0:	09 f4       	brne	.+2      	; 0x17b4 <vfprintf+0x66>
    17b2:	b2 c1       	rjmp	.+868    	; 0x1b18 <vfprintf+0x3ca>
    17b4:	85 32       	cpi	r24, 0x25	; 37
    17b6:	39 f4       	brne	.+14     	; 0x17c6 <vfprintf+0x78>
    17b8:	93 fd       	sbrc	r25, 3
    17ba:	85 91       	lpm	r24, Z+
    17bc:	93 ff       	sbrs	r25, 3
    17be:	81 91       	ld	r24, Z+
    17c0:	6f 01       	movw	r12, r30
    17c2:	85 32       	cpi	r24, 0x25	; 37
    17c4:	29 f4       	brne	.+10     	; 0x17d0 <vfprintf+0x82>
    17c6:	b7 01       	movw	r22, r14
    17c8:	90 e0       	ldi	r25, 0x00	; 0
    17ca:	0e 94 c2 0d 	call	0x1b84	; 0x1b84 <fputc>
    17ce:	e7 cf       	rjmp	.-50     	; 0x179e <vfprintf+0x50>
    17d0:	51 2c       	mov	r5, r1
    17d2:	31 2c       	mov	r3, r1
    17d4:	20 e0       	ldi	r18, 0x00	; 0
    17d6:	20 32       	cpi	r18, 0x20	; 32
    17d8:	a8 f4       	brcc	.+42     	; 0x1804 <vfprintf+0xb6>
    17da:	8b 32       	cpi	r24, 0x2B	; 43
    17dc:	61 f0       	breq	.+24     	; 0x17f6 <vfprintf+0xa8>
    17de:	28 f4       	brcc	.+10     	; 0x17ea <vfprintf+0x9c>
    17e0:	80 32       	cpi	r24, 0x20	; 32
    17e2:	51 f0       	breq	.+20     	; 0x17f8 <vfprintf+0xaa>
    17e4:	83 32       	cpi	r24, 0x23	; 35
    17e6:	71 f4       	brne	.+28     	; 0x1804 <vfprintf+0xb6>
    17e8:	0b c0       	rjmp	.+22     	; 0x1800 <vfprintf+0xb2>
    17ea:	8d 32       	cpi	r24, 0x2D	; 45
    17ec:	39 f0       	breq	.+14     	; 0x17fc <vfprintf+0xae>
    17ee:	80 33       	cpi	r24, 0x30	; 48
    17f0:	49 f4       	brne	.+18     	; 0x1804 <vfprintf+0xb6>
    17f2:	21 60       	ori	r18, 0x01	; 1
    17f4:	28 c0       	rjmp	.+80     	; 0x1846 <vfprintf+0xf8>
    17f6:	22 60       	ori	r18, 0x02	; 2
    17f8:	24 60       	ori	r18, 0x04	; 4
    17fa:	25 c0       	rjmp	.+74     	; 0x1846 <vfprintf+0xf8>
    17fc:	28 60       	ori	r18, 0x08	; 8
    17fe:	23 c0       	rjmp	.+70     	; 0x1846 <vfprintf+0xf8>
    1800:	20 61       	ori	r18, 0x10	; 16
    1802:	21 c0       	rjmp	.+66     	; 0x1846 <vfprintf+0xf8>
    1804:	27 fd       	sbrc	r18, 7
    1806:	27 c0       	rjmp	.+78     	; 0x1856 <vfprintf+0x108>
    1808:	38 2f       	mov	r19, r24
    180a:	30 53       	subi	r19, 0x30	; 48
    180c:	3a 30       	cpi	r19, 0x0A	; 10
    180e:	78 f4       	brcc	.+30     	; 0x182e <vfprintf+0xe0>
    1810:	26 ff       	sbrs	r18, 6
    1812:	06 c0       	rjmp	.+12     	; 0x1820 <vfprintf+0xd2>
    1814:	fa e0       	ldi	r31, 0x0A	; 10
    1816:	5f 9e       	mul	r5, r31
    1818:	30 0d       	add	r19, r0
    181a:	11 24       	eor	r1, r1
    181c:	53 2e       	mov	r5, r19
    181e:	13 c0       	rjmp	.+38     	; 0x1846 <vfprintf+0xf8>
    1820:	8a e0       	ldi	r24, 0x0A	; 10
    1822:	38 9e       	mul	r3, r24
    1824:	30 0d       	add	r19, r0
    1826:	11 24       	eor	r1, r1
    1828:	33 2e       	mov	r3, r19
    182a:	20 62       	ori	r18, 0x20	; 32
    182c:	0c c0       	rjmp	.+24     	; 0x1846 <vfprintf+0xf8>
    182e:	8e 32       	cpi	r24, 0x2E	; 46
    1830:	21 f4       	brne	.+8      	; 0x183a <vfprintf+0xec>
    1832:	26 fd       	sbrc	r18, 6
    1834:	71 c1       	rjmp	.+738    	; 0x1b18 <vfprintf+0x3ca>
    1836:	20 64       	ori	r18, 0x40	; 64
    1838:	06 c0       	rjmp	.+12     	; 0x1846 <vfprintf+0xf8>
    183a:	8c 36       	cpi	r24, 0x6C	; 108
    183c:	11 f4       	brne	.+4      	; 0x1842 <vfprintf+0xf4>
    183e:	20 68       	ori	r18, 0x80	; 128
    1840:	02 c0       	rjmp	.+4      	; 0x1846 <vfprintf+0xf8>
    1842:	88 36       	cpi	r24, 0x68	; 104
    1844:	41 f4       	brne	.+16     	; 0x1856 <vfprintf+0x108>
    1846:	f6 01       	movw	r30, r12
    1848:	93 fd       	sbrc	r25, 3
    184a:	85 91       	lpm	r24, Z+
    184c:	93 ff       	sbrs	r25, 3
    184e:	81 91       	ld	r24, Z+
    1850:	6f 01       	movw	r12, r30
    1852:	81 11       	cpse	r24, r1
    1854:	c0 cf       	rjmp	.-128    	; 0x17d6 <vfprintf+0x88>
    1856:	98 2f       	mov	r25, r24
    1858:	95 54       	subi	r25, 0x45	; 69
    185a:	93 30       	cpi	r25, 0x03	; 3
    185c:	18 f0       	brcs	.+6      	; 0x1864 <vfprintf+0x116>
    185e:	90 52       	subi	r25, 0x20	; 32
    1860:	93 30       	cpi	r25, 0x03	; 3
    1862:	28 f4       	brcc	.+10     	; 0x186e <vfprintf+0x120>
    1864:	0c 5f       	subi	r16, 0xFC	; 252
    1866:	1f 4f       	sbci	r17, 0xFF	; 255
    1868:	ff e3       	ldi	r31, 0x3F	; 63
    186a:	f9 83       	std	Y+1, r31	; 0x01
    186c:	0d c0       	rjmp	.+26     	; 0x1888 <vfprintf+0x13a>
    186e:	83 36       	cpi	r24, 0x63	; 99
    1870:	31 f0       	breq	.+12     	; 0x187e <vfprintf+0x130>
    1872:	83 37       	cpi	r24, 0x73	; 115
    1874:	71 f0       	breq	.+28     	; 0x1892 <vfprintf+0x144>
    1876:	83 35       	cpi	r24, 0x53	; 83
    1878:	09 f0       	breq	.+2      	; 0x187c <vfprintf+0x12e>
    187a:	5e c0       	rjmp	.+188    	; 0x1938 <vfprintf+0x1ea>
    187c:	23 c0       	rjmp	.+70     	; 0x18c4 <vfprintf+0x176>
    187e:	f8 01       	movw	r30, r16
    1880:	80 81       	ld	r24, Z
    1882:	89 83       	std	Y+1, r24	; 0x01
    1884:	0e 5f       	subi	r16, 0xFE	; 254
    1886:	1f 4f       	sbci	r17, 0xFF	; 255
    1888:	44 24       	eor	r4, r4
    188a:	43 94       	inc	r4
    188c:	51 2c       	mov	r5, r1
    188e:	54 01       	movw	r10, r8
    1890:	15 c0       	rjmp	.+42     	; 0x18bc <vfprintf+0x16e>
    1892:	38 01       	movw	r6, r16
    1894:	f2 e0       	ldi	r31, 0x02	; 2
    1896:	6f 0e       	add	r6, r31
    1898:	71 1c       	adc	r7, r1
    189a:	f8 01       	movw	r30, r16
    189c:	a0 80       	ld	r10, Z
    189e:	b1 80       	ldd	r11, Z+1	; 0x01
    18a0:	26 ff       	sbrs	r18, 6
    18a2:	03 c0       	rjmp	.+6      	; 0x18aa <vfprintf+0x15c>
    18a4:	65 2d       	mov	r22, r5
    18a6:	70 e0       	ldi	r23, 0x00	; 0
    18a8:	02 c0       	rjmp	.+4      	; 0x18ae <vfprintf+0x160>
    18aa:	6f ef       	ldi	r22, 0xFF	; 255
    18ac:	7f ef       	ldi	r23, 0xFF	; 255
    18ae:	c5 01       	movw	r24, r10
    18b0:	2c 87       	std	Y+12, r18	; 0x0c
    18b2:	0e 94 b7 0d 	call	0x1b6e	; 0x1b6e <strnlen>
    18b6:	2c 01       	movw	r4, r24
    18b8:	83 01       	movw	r16, r6
    18ba:	2c 85       	ldd	r18, Y+12	; 0x0c
    18bc:	6f e7       	ldi	r22, 0x7F	; 127
    18be:	26 2e       	mov	r2, r22
    18c0:	22 22       	and	r2, r18
    18c2:	18 c0       	rjmp	.+48     	; 0x18f4 <vfprintf+0x1a6>
    18c4:	38 01       	movw	r6, r16
    18c6:	f2 e0       	ldi	r31, 0x02	; 2
    18c8:	6f 0e       	add	r6, r31
    18ca:	71 1c       	adc	r7, r1
    18cc:	f8 01       	movw	r30, r16
    18ce:	a0 80       	ld	r10, Z
    18d0:	b1 80       	ldd	r11, Z+1	; 0x01
    18d2:	26 ff       	sbrs	r18, 6
    18d4:	03 c0       	rjmp	.+6      	; 0x18dc <vfprintf+0x18e>
    18d6:	65 2d       	mov	r22, r5
    18d8:	70 e0       	ldi	r23, 0x00	; 0
    18da:	02 c0       	rjmp	.+4      	; 0x18e0 <vfprintf+0x192>
    18dc:	6f ef       	ldi	r22, 0xFF	; 255
    18de:	7f ef       	ldi	r23, 0xFF	; 255
    18e0:	c5 01       	movw	r24, r10
    18e2:	2c 87       	std	Y+12, r18	; 0x0c
    18e4:	0e 94 ac 0d 	call	0x1b58	; 0x1b58 <strnlen_P>
    18e8:	2c 01       	movw	r4, r24
    18ea:	2c 85       	ldd	r18, Y+12	; 0x0c
    18ec:	50 e8       	ldi	r21, 0x80	; 128
    18ee:	25 2e       	mov	r2, r21
    18f0:	22 2a       	or	r2, r18
    18f2:	83 01       	movw	r16, r6
    18f4:	23 fc       	sbrc	r2, 3
    18f6:	1c c0       	rjmp	.+56     	; 0x1930 <vfprintf+0x1e2>
    18f8:	06 c0       	rjmp	.+12     	; 0x1906 <vfprintf+0x1b8>
    18fa:	b7 01       	movw	r22, r14
    18fc:	80 e2       	ldi	r24, 0x20	; 32
    18fe:	90 e0       	ldi	r25, 0x00	; 0
    1900:	0e 94 c2 0d 	call	0x1b84	; 0x1b84 <fputc>
    1904:	3a 94       	dec	r3
    1906:	83 2d       	mov	r24, r3
    1908:	90 e0       	ldi	r25, 0x00	; 0
    190a:	48 16       	cp	r4, r24
    190c:	59 06       	cpc	r5, r25
    190e:	a8 f3       	brcs	.-22     	; 0x18fa <vfprintf+0x1ac>
    1910:	0f c0       	rjmp	.+30     	; 0x1930 <vfprintf+0x1e2>
    1912:	f5 01       	movw	r30, r10
    1914:	27 fc       	sbrc	r2, 7
    1916:	85 91       	lpm	r24, Z+
    1918:	27 fe       	sbrs	r2, 7
    191a:	81 91       	ld	r24, Z+
    191c:	5f 01       	movw	r10, r30
    191e:	b7 01       	movw	r22, r14
    1920:	90 e0       	ldi	r25, 0x00	; 0
    1922:	0e 94 c2 0d 	call	0x1b84	; 0x1b84 <fputc>
    1926:	31 10       	cpse	r3, r1
    1928:	3a 94       	dec	r3
    192a:	f1 e0       	ldi	r31, 0x01	; 1
    192c:	4f 1a       	sub	r4, r31
    192e:	51 08       	sbc	r5, r1
    1930:	41 14       	cp	r4, r1
    1932:	51 04       	cpc	r5, r1
    1934:	71 f7       	brne	.-36     	; 0x1912 <vfprintf+0x1c4>
    1936:	ed c0       	rjmp	.+474    	; 0x1b12 <vfprintf+0x3c4>
    1938:	84 36       	cpi	r24, 0x64	; 100
    193a:	11 f0       	breq	.+4      	; 0x1940 <vfprintf+0x1f2>
    193c:	89 36       	cpi	r24, 0x69	; 105
    193e:	41 f5       	brne	.+80     	; 0x1990 <vfprintf+0x242>
    1940:	f8 01       	movw	r30, r16
    1942:	27 ff       	sbrs	r18, 7
    1944:	07 c0       	rjmp	.+14     	; 0x1954 <vfprintf+0x206>
    1946:	60 81       	ld	r22, Z
    1948:	71 81       	ldd	r23, Z+1	; 0x01
    194a:	82 81       	ldd	r24, Z+2	; 0x02
    194c:	93 81       	ldd	r25, Z+3	; 0x03
    194e:	0c 5f       	subi	r16, 0xFC	; 252
    1950:	1f 4f       	sbci	r17, 0xFF	; 255
    1952:	08 c0       	rjmp	.+16     	; 0x1964 <vfprintf+0x216>
    1954:	60 81       	ld	r22, Z
    1956:	71 81       	ldd	r23, Z+1	; 0x01
    1958:	88 27       	eor	r24, r24
    195a:	77 fd       	sbrc	r23, 7
    195c:	80 95       	com	r24
    195e:	98 2f       	mov	r25, r24
    1960:	0e 5f       	subi	r16, 0xFE	; 254
    1962:	1f 4f       	sbci	r17, 0xFF	; 255
    1964:	4f e6       	ldi	r20, 0x6F	; 111
    1966:	b4 2e       	mov	r11, r20
    1968:	b2 22       	and	r11, r18
    196a:	97 ff       	sbrs	r25, 7
    196c:	09 c0       	rjmp	.+18     	; 0x1980 <vfprintf+0x232>
    196e:	90 95       	com	r25
    1970:	80 95       	com	r24
    1972:	70 95       	com	r23
    1974:	61 95       	neg	r22
    1976:	7f 4f       	sbci	r23, 0xFF	; 255
    1978:	8f 4f       	sbci	r24, 0xFF	; 255
    197a:	9f 4f       	sbci	r25, 0xFF	; 255
    197c:	f0 e8       	ldi	r31, 0x80	; 128
    197e:	bf 2a       	or	r11, r31
    1980:	2a e0       	ldi	r18, 0x0A	; 10
    1982:	30 e0       	ldi	r19, 0x00	; 0
    1984:	a4 01       	movw	r20, r8
    1986:	0e 94 ee 0d 	call	0x1bdc	; 0x1bdc <__ultoa_invert>
    198a:	a8 2e       	mov	r10, r24
    198c:	a8 18       	sub	r10, r8
    198e:	43 c0       	rjmp	.+134    	; 0x1a16 <vfprintf+0x2c8>
    1990:	85 37       	cpi	r24, 0x75	; 117
    1992:	31 f4       	brne	.+12     	; 0x19a0 <vfprintf+0x252>
    1994:	3f ee       	ldi	r19, 0xEF	; 239
    1996:	b3 2e       	mov	r11, r19
    1998:	b2 22       	and	r11, r18
    199a:	2a e0       	ldi	r18, 0x0A	; 10
    199c:	30 e0       	ldi	r19, 0x00	; 0
    199e:	24 c0       	rjmp	.+72     	; 0x19e8 <vfprintf+0x29a>
    19a0:	99 ef       	ldi	r25, 0xF9	; 249
    19a2:	b9 2e       	mov	r11, r25
    19a4:	b2 22       	and	r11, r18
    19a6:	8f 36       	cpi	r24, 0x6F	; 111
    19a8:	b9 f0       	breq	.+46     	; 0x19d8 <vfprintf+0x28a>
    19aa:	20 f4       	brcc	.+8      	; 0x19b4 <vfprintf+0x266>
    19ac:	88 35       	cpi	r24, 0x58	; 88
    19ae:	09 f0       	breq	.+2      	; 0x19b2 <vfprintf+0x264>
    19b0:	b3 c0       	rjmp	.+358    	; 0x1b18 <vfprintf+0x3ca>
    19b2:	0d c0       	rjmp	.+26     	; 0x19ce <vfprintf+0x280>
    19b4:	80 37       	cpi	r24, 0x70	; 112
    19b6:	21 f0       	breq	.+8      	; 0x19c0 <vfprintf+0x272>
    19b8:	88 37       	cpi	r24, 0x78	; 120
    19ba:	09 f0       	breq	.+2      	; 0x19be <vfprintf+0x270>
    19bc:	ad c0       	rjmp	.+346    	; 0x1b18 <vfprintf+0x3ca>
    19be:	02 c0       	rjmp	.+4      	; 0x19c4 <vfprintf+0x276>
    19c0:	20 e1       	ldi	r18, 0x10	; 16
    19c2:	b2 2a       	or	r11, r18
    19c4:	b4 fe       	sbrs	r11, 4
    19c6:	0b c0       	rjmp	.+22     	; 0x19de <vfprintf+0x290>
    19c8:	84 e0       	ldi	r24, 0x04	; 4
    19ca:	b8 2a       	or	r11, r24
    19cc:	08 c0       	rjmp	.+16     	; 0x19de <vfprintf+0x290>
    19ce:	24 ff       	sbrs	r18, 4
    19d0:	09 c0       	rjmp	.+18     	; 0x19e4 <vfprintf+0x296>
    19d2:	e6 e0       	ldi	r30, 0x06	; 6
    19d4:	be 2a       	or	r11, r30
    19d6:	06 c0       	rjmp	.+12     	; 0x19e4 <vfprintf+0x296>
    19d8:	28 e0       	ldi	r18, 0x08	; 8
    19da:	30 e0       	ldi	r19, 0x00	; 0
    19dc:	05 c0       	rjmp	.+10     	; 0x19e8 <vfprintf+0x29a>
    19de:	20 e1       	ldi	r18, 0x10	; 16
    19e0:	30 e0       	ldi	r19, 0x00	; 0
    19e2:	02 c0       	rjmp	.+4      	; 0x19e8 <vfprintf+0x29a>
    19e4:	20 e1       	ldi	r18, 0x10	; 16
    19e6:	32 e0       	ldi	r19, 0x02	; 2
    19e8:	f8 01       	movw	r30, r16
    19ea:	b7 fe       	sbrs	r11, 7
    19ec:	07 c0       	rjmp	.+14     	; 0x19fc <vfprintf+0x2ae>
    19ee:	60 81       	ld	r22, Z
    19f0:	71 81       	ldd	r23, Z+1	; 0x01
    19f2:	82 81       	ldd	r24, Z+2	; 0x02
    19f4:	93 81       	ldd	r25, Z+3	; 0x03
    19f6:	0c 5f       	subi	r16, 0xFC	; 252
    19f8:	1f 4f       	sbci	r17, 0xFF	; 255
    19fa:	06 c0       	rjmp	.+12     	; 0x1a08 <vfprintf+0x2ba>
    19fc:	60 81       	ld	r22, Z
    19fe:	71 81       	ldd	r23, Z+1	; 0x01
    1a00:	80 e0       	ldi	r24, 0x00	; 0
    1a02:	90 e0       	ldi	r25, 0x00	; 0
    1a04:	0e 5f       	subi	r16, 0xFE	; 254
    1a06:	1f 4f       	sbci	r17, 0xFF	; 255
    1a08:	a4 01       	movw	r20, r8
    1a0a:	0e 94 ee 0d 	call	0x1bdc	; 0x1bdc <__ultoa_invert>
    1a0e:	a8 2e       	mov	r10, r24
    1a10:	a8 18       	sub	r10, r8
    1a12:	ff e7       	ldi	r31, 0x7F	; 127
    1a14:	bf 22       	and	r11, r31
    1a16:	b6 fe       	sbrs	r11, 6
    1a18:	0b c0       	rjmp	.+22     	; 0x1a30 <vfprintf+0x2e2>
    1a1a:	2b 2d       	mov	r18, r11
    1a1c:	2e 7f       	andi	r18, 0xFE	; 254
    1a1e:	a5 14       	cp	r10, r5
    1a20:	50 f4       	brcc	.+20     	; 0x1a36 <vfprintf+0x2e8>
    1a22:	b4 fe       	sbrs	r11, 4
    1a24:	0a c0       	rjmp	.+20     	; 0x1a3a <vfprintf+0x2ec>
    1a26:	b2 fc       	sbrc	r11, 2
    1a28:	08 c0       	rjmp	.+16     	; 0x1a3a <vfprintf+0x2ec>
    1a2a:	2b 2d       	mov	r18, r11
    1a2c:	2e 7e       	andi	r18, 0xEE	; 238
    1a2e:	05 c0       	rjmp	.+10     	; 0x1a3a <vfprintf+0x2ec>
    1a30:	7a 2c       	mov	r7, r10
    1a32:	2b 2d       	mov	r18, r11
    1a34:	03 c0       	rjmp	.+6      	; 0x1a3c <vfprintf+0x2ee>
    1a36:	7a 2c       	mov	r7, r10
    1a38:	01 c0       	rjmp	.+2      	; 0x1a3c <vfprintf+0x2ee>
    1a3a:	75 2c       	mov	r7, r5
    1a3c:	24 ff       	sbrs	r18, 4
    1a3e:	0d c0       	rjmp	.+26     	; 0x1a5a <vfprintf+0x30c>
    1a40:	fe 01       	movw	r30, r28
    1a42:	ea 0d       	add	r30, r10
    1a44:	f1 1d       	adc	r31, r1
    1a46:	80 81       	ld	r24, Z
    1a48:	80 33       	cpi	r24, 0x30	; 48
    1a4a:	11 f4       	brne	.+4      	; 0x1a50 <vfprintf+0x302>
    1a4c:	29 7e       	andi	r18, 0xE9	; 233
    1a4e:	09 c0       	rjmp	.+18     	; 0x1a62 <vfprintf+0x314>
    1a50:	22 ff       	sbrs	r18, 2
    1a52:	06 c0       	rjmp	.+12     	; 0x1a60 <vfprintf+0x312>
    1a54:	73 94       	inc	r7
    1a56:	73 94       	inc	r7
    1a58:	04 c0       	rjmp	.+8      	; 0x1a62 <vfprintf+0x314>
    1a5a:	82 2f       	mov	r24, r18
    1a5c:	86 78       	andi	r24, 0x86	; 134
    1a5e:	09 f0       	breq	.+2      	; 0x1a62 <vfprintf+0x314>
    1a60:	73 94       	inc	r7
    1a62:	23 fd       	sbrc	r18, 3
    1a64:	14 c0       	rjmp	.+40     	; 0x1a8e <vfprintf+0x340>
    1a66:	20 ff       	sbrs	r18, 0
    1a68:	0f c0       	rjmp	.+30     	; 0x1a88 <vfprintf+0x33a>
    1a6a:	5a 2c       	mov	r5, r10
    1a6c:	73 14       	cp	r7, r3
    1a6e:	60 f4       	brcc	.+24     	; 0x1a88 <vfprintf+0x33a>
    1a70:	53 0c       	add	r5, r3
    1a72:	57 18       	sub	r5, r7
    1a74:	73 2c       	mov	r7, r3
    1a76:	08 c0       	rjmp	.+16     	; 0x1a88 <vfprintf+0x33a>
    1a78:	b7 01       	movw	r22, r14
    1a7a:	80 e2       	ldi	r24, 0x20	; 32
    1a7c:	90 e0       	ldi	r25, 0x00	; 0
    1a7e:	2c 87       	std	Y+12, r18	; 0x0c
    1a80:	0e 94 c2 0d 	call	0x1b84	; 0x1b84 <fputc>
    1a84:	73 94       	inc	r7
    1a86:	2c 85       	ldd	r18, Y+12	; 0x0c
    1a88:	73 14       	cp	r7, r3
    1a8a:	b0 f3       	brcs	.-20     	; 0x1a78 <vfprintf+0x32a>
    1a8c:	04 c0       	rjmp	.+8      	; 0x1a96 <vfprintf+0x348>
    1a8e:	73 14       	cp	r7, r3
    1a90:	10 f4       	brcc	.+4      	; 0x1a96 <vfprintf+0x348>
    1a92:	37 18       	sub	r3, r7
    1a94:	01 c0       	rjmp	.+2      	; 0x1a98 <vfprintf+0x34a>
    1a96:	31 2c       	mov	r3, r1
    1a98:	24 ff       	sbrs	r18, 4
    1a9a:	12 c0       	rjmp	.+36     	; 0x1ac0 <vfprintf+0x372>
    1a9c:	b7 01       	movw	r22, r14
    1a9e:	80 e3       	ldi	r24, 0x30	; 48
    1aa0:	90 e0       	ldi	r25, 0x00	; 0
    1aa2:	2c 87       	std	Y+12, r18	; 0x0c
    1aa4:	0e 94 c2 0d 	call	0x1b84	; 0x1b84 <fputc>
    1aa8:	2c 85       	ldd	r18, Y+12	; 0x0c
    1aaa:	22 ff       	sbrs	r18, 2
    1aac:	1e c0       	rjmp	.+60     	; 0x1aea <vfprintf+0x39c>
    1aae:	21 ff       	sbrs	r18, 1
    1ab0:	03 c0       	rjmp	.+6      	; 0x1ab8 <vfprintf+0x36a>
    1ab2:	88 e5       	ldi	r24, 0x58	; 88
    1ab4:	90 e0       	ldi	r25, 0x00	; 0
    1ab6:	02 c0       	rjmp	.+4      	; 0x1abc <vfprintf+0x36e>
    1ab8:	88 e7       	ldi	r24, 0x78	; 120
    1aba:	90 e0       	ldi	r25, 0x00	; 0
    1abc:	b7 01       	movw	r22, r14
    1abe:	0c c0       	rjmp	.+24     	; 0x1ad8 <vfprintf+0x38a>
    1ac0:	82 2f       	mov	r24, r18
    1ac2:	86 78       	andi	r24, 0x86	; 134
    1ac4:	91 f0       	breq	.+36     	; 0x1aea <vfprintf+0x39c>
    1ac6:	21 fd       	sbrc	r18, 1
    1ac8:	02 c0       	rjmp	.+4      	; 0x1ace <vfprintf+0x380>
    1aca:	80 e2       	ldi	r24, 0x20	; 32
    1acc:	01 c0       	rjmp	.+2      	; 0x1ad0 <vfprintf+0x382>
    1ace:	8b e2       	ldi	r24, 0x2B	; 43
    1ad0:	27 fd       	sbrc	r18, 7
    1ad2:	8d e2       	ldi	r24, 0x2D	; 45
    1ad4:	b7 01       	movw	r22, r14
    1ad6:	90 e0       	ldi	r25, 0x00	; 0
    1ad8:	0e 94 c2 0d 	call	0x1b84	; 0x1b84 <fputc>
    1adc:	06 c0       	rjmp	.+12     	; 0x1aea <vfprintf+0x39c>
    1ade:	b7 01       	movw	r22, r14
    1ae0:	80 e3       	ldi	r24, 0x30	; 48
    1ae2:	90 e0       	ldi	r25, 0x00	; 0
    1ae4:	0e 94 c2 0d 	call	0x1b84	; 0x1b84 <fputc>
    1ae8:	5a 94       	dec	r5
    1aea:	a5 14       	cp	r10, r5
    1aec:	c0 f3       	brcs	.-16     	; 0x1ade <vfprintf+0x390>
    1aee:	aa 94       	dec	r10
    1af0:	f4 01       	movw	r30, r8
    1af2:	ea 0d       	add	r30, r10
    1af4:	f1 1d       	adc	r31, r1
    1af6:	b7 01       	movw	r22, r14
    1af8:	80 81       	ld	r24, Z
    1afa:	90 e0       	ldi	r25, 0x00	; 0
    1afc:	0e 94 c2 0d 	call	0x1b84	; 0x1b84 <fputc>
    1b00:	a1 10       	cpse	r10, r1
    1b02:	f5 cf       	rjmp	.-22     	; 0x1aee <vfprintf+0x3a0>
    1b04:	06 c0       	rjmp	.+12     	; 0x1b12 <vfprintf+0x3c4>
    1b06:	b7 01       	movw	r22, r14
    1b08:	80 e2       	ldi	r24, 0x20	; 32
    1b0a:	90 e0       	ldi	r25, 0x00	; 0
    1b0c:	0e 94 c2 0d 	call	0x1b84	; 0x1b84 <fputc>
    1b10:	3a 94       	dec	r3
    1b12:	31 10       	cpse	r3, r1
    1b14:	f8 cf       	rjmp	.-16     	; 0x1b06 <vfprintf+0x3b8>
    1b16:	43 ce       	rjmp	.-890    	; 0x179e <vfprintf+0x50>
    1b18:	f7 01       	movw	r30, r14
    1b1a:	26 81       	ldd	r18, Z+6	; 0x06
    1b1c:	37 81       	ldd	r19, Z+7	; 0x07
    1b1e:	02 c0       	rjmp	.+4      	; 0x1b24 <vfprintf+0x3d6>
    1b20:	2f ef       	ldi	r18, 0xFF	; 255
    1b22:	3f ef       	ldi	r19, 0xFF	; 255
    1b24:	c9 01       	movw	r24, r18
    1b26:	2c 96       	adiw	r28, 0x0c	; 12
    1b28:	0f b6       	in	r0, 0x3f	; 63
    1b2a:	f8 94       	cli
    1b2c:	de bf       	out	0x3e, r29	; 62
    1b2e:	0f be       	out	0x3f, r0	; 63
    1b30:	cd bf       	out	0x3d, r28	; 61
    1b32:	df 91       	pop	r29
    1b34:	cf 91       	pop	r28
    1b36:	1f 91       	pop	r17
    1b38:	0f 91       	pop	r16
    1b3a:	ff 90       	pop	r15
    1b3c:	ef 90       	pop	r14
    1b3e:	df 90       	pop	r13
    1b40:	cf 90       	pop	r12
    1b42:	bf 90       	pop	r11
    1b44:	af 90       	pop	r10
    1b46:	9f 90       	pop	r9
    1b48:	8f 90       	pop	r8
    1b4a:	7f 90       	pop	r7
    1b4c:	6f 90       	pop	r6
    1b4e:	5f 90       	pop	r5
    1b50:	4f 90       	pop	r4
    1b52:	3f 90       	pop	r3
    1b54:	2f 90       	pop	r2
    1b56:	08 95       	ret

00001b58 <strnlen_P>:
    1b58:	fc 01       	movw	r30, r24
    1b5a:	05 90       	lpm	r0, Z+
    1b5c:	61 50       	subi	r22, 0x01	; 1
    1b5e:	70 40       	sbci	r23, 0x00	; 0
    1b60:	01 10       	cpse	r0, r1
    1b62:	d8 f7       	brcc	.-10     	; 0x1b5a <strnlen_P+0x2>
    1b64:	80 95       	com	r24
    1b66:	90 95       	com	r25
    1b68:	8e 0f       	add	r24, r30
    1b6a:	9f 1f       	adc	r25, r31
    1b6c:	08 95       	ret

00001b6e <strnlen>:
    1b6e:	fc 01       	movw	r30, r24
    1b70:	61 50       	subi	r22, 0x01	; 1
    1b72:	70 40       	sbci	r23, 0x00	; 0
    1b74:	01 90       	ld	r0, Z+
    1b76:	01 10       	cpse	r0, r1
    1b78:	d8 f7       	brcc	.-10     	; 0x1b70 <strnlen+0x2>
    1b7a:	80 95       	com	r24
    1b7c:	90 95       	com	r25
    1b7e:	8e 0f       	add	r24, r30
    1b80:	9f 1f       	adc	r25, r31
    1b82:	08 95       	ret

00001b84 <fputc>:
    1b84:	0f 93       	push	r16
    1b86:	1f 93       	push	r17
    1b88:	cf 93       	push	r28
    1b8a:	df 93       	push	r29
    1b8c:	8c 01       	movw	r16, r24
    1b8e:	eb 01       	movw	r28, r22
    1b90:	8b 81       	ldd	r24, Y+3	; 0x03
    1b92:	81 fd       	sbrc	r24, 1
    1b94:	03 c0       	rjmp	.+6      	; 0x1b9c <fputc+0x18>
    1b96:	0f ef       	ldi	r16, 0xFF	; 255
    1b98:	1f ef       	ldi	r17, 0xFF	; 255
    1b9a:	1a c0       	rjmp	.+52     	; 0x1bd0 <fputc+0x4c>
    1b9c:	82 ff       	sbrs	r24, 2
    1b9e:	0d c0       	rjmp	.+26     	; 0x1bba <fputc+0x36>
    1ba0:	2e 81       	ldd	r18, Y+6	; 0x06
    1ba2:	3f 81       	ldd	r19, Y+7	; 0x07
    1ba4:	8c 81       	ldd	r24, Y+4	; 0x04
    1ba6:	9d 81       	ldd	r25, Y+5	; 0x05
    1ba8:	28 17       	cp	r18, r24
    1baa:	39 07       	cpc	r19, r25
    1bac:	64 f4       	brge	.+24     	; 0x1bc6 <fputc+0x42>
    1bae:	e8 81       	ld	r30, Y
    1bb0:	f9 81       	ldd	r31, Y+1	; 0x01
    1bb2:	01 93       	st	Z+, r16
    1bb4:	f9 83       	std	Y+1, r31	; 0x01
    1bb6:	e8 83       	st	Y, r30
    1bb8:	06 c0       	rjmp	.+12     	; 0x1bc6 <fputc+0x42>
    1bba:	e8 85       	ldd	r30, Y+8	; 0x08
    1bbc:	f9 85       	ldd	r31, Y+9	; 0x09
    1bbe:	80 2f       	mov	r24, r16
    1bc0:	09 95       	icall
    1bc2:	89 2b       	or	r24, r25
    1bc4:	41 f7       	brne	.-48     	; 0x1b96 <fputc+0x12>
    1bc6:	8e 81       	ldd	r24, Y+6	; 0x06
    1bc8:	9f 81       	ldd	r25, Y+7	; 0x07
    1bca:	01 96       	adiw	r24, 0x01	; 1
    1bcc:	9f 83       	std	Y+7, r25	; 0x07
    1bce:	8e 83       	std	Y+6, r24	; 0x06
    1bd0:	c8 01       	movw	r24, r16
    1bd2:	df 91       	pop	r29
    1bd4:	cf 91       	pop	r28
    1bd6:	1f 91       	pop	r17
    1bd8:	0f 91       	pop	r16
    1bda:	08 95       	ret

00001bdc <__ultoa_invert>:
    1bdc:	fa 01       	movw	r30, r20
    1bde:	aa 27       	eor	r26, r26
    1be0:	28 30       	cpi	r18, 0x08	; 8
    1be2:	51 f1       	breq	.+84     	; 0x1c38 <__ultoa_invert+0x5c>
    1be4:	20 31       	cpi	r18, 0x10	; 16
    1be6:	81 f1       	breq	.+96     	; 0x1c48 <__ultoa_invert+0x6c>
    1be8:	e8 94       	clt
    1bea:	6f 93       	push	r22
    1bec:	6e 7f       	andi	r22, 0xFE	; 254
    1bee:	6e 5f       	subi	r22, 0xFE	; 254
    1bf0:	7f 4f       	sbci	r23, 0xFF	; 255
    1bf2:	8f 4f       	sbci	r24, 0xFF	; 255
    1bf4:	9f 4f       	sbci	r25, 0xFF	; 255
    1bf6:	af 4f       	sbci	r26, 0xFF	; 255
    1bf8:	b1 e0       	ldi	r27, 0x01	; 1
    1bfa:	3e d0       	rcall	.+124    	; 0x1c78 <__ultoa_invert+0x9c>
    1bfc:	b4 e0       	ldi	r27, 0x04	; 4
    1bfe:	3c d0       	rcall	.+120    	; 0x1c78 <__ultoa_invert+0x9c>
    1c00:	67 0f       	add	r22, r23
    1c02:	78 1f       	adc	r23, r24
    1c04:	89 1f       	adc	r24, r25
    1c06:	9a 1f       	adc	r25, r26
    1c08:	a1 1d       	adc	r26, r1
    1c0a:	68 0f       	add	r22, r24
    1c0c:	79 1f       	adc	r23, r25
    1c0e:	8a 1f       	adc	r24, r26
    1c10:	91 1d       	adc	r25, r1
    1c12:	a1 1d       	adc	r26, r1
    1c14:	6a 0f       	add	r22, r26
    1c16:	71 1d       	adc	r23, r1
    1c18:	81 1d       	adc	r24, r1
    1c1a:	91 1d       	adc	r25, r1
    1c1c:	a1 1d       	adc	r26, r1
    1c1e:	20 d0       	rcall	.+64     	; 0x1c60 <__ultoa_invert+0x84>
    1c20:	09 f4       	brne	.+2      	; 0x1c24 <__ultoa_invert+0x48>
    1c22:	68 94       	set
    1c24:	3f 91       	pop	r19
    1c26:	2a e0       	ldi	r18, 0x0A	; 10
    1c28:	26 9f       	mul	r18, r22
    1c2a:	11 24       	eor	r1, r1
    1c2c:	30 19       	sub	r19, r0
    1c2e:	30 5d       	subi	r19, 0xD0	; 208
    1c30:	31 93       	st	Z+, r19
    1c32:	de f6       	brtc	.-74     	; 0x1bea <__ultoa_invert+0xe>
    1c34:	cf 01       	movw	r24, r30
    1c36:	08 95       	ret
    1c38:	46 2f       	mov	r20, r22
    1c3a:	47 70       	andi	r20, 0x07	; 7
    1c3c:	40 5d       	subi	r20, 0xD0	; 208
    1c3e:	41 93       	st	Z+, r20
    1c40:	b3 e0       	ldi	r27, 0x03	; 3
    1c42:	0f d0       	rcall	.+30     	; 0x1c62 <__ultoa_invert+0x86>
    1c44:	c9 f7       	brne	.-14     	; 0x1c38 <__ultoa_invert+0x5c>
    1c46:	f6 cf       	rjmp	.-20     	; 0x1c34 <__ultoa_invert+0x58>
    1c48:	46 2f       	mov	r20, r22
    1c4a:	4f 70       	andi	r20, 0x0F	; 15
    1c4c:	40 5d       	subi	r20, 0xD0	; 208
    1c4e:	4a 33       	cpi	r20, 0x3A	; 58
    1c50:	18 f0       	brcs	.+6      	; 0x1c58 <__ultoa_invert+0x7c>
    1c52:	49 5d       	subi	r20, 0xD9	; 217
    1c54:	31 fd       	sbrc	r19, 1
    1c56:	40 52       	subi	r20, 0x20	; 32
    1c58:	41 93       	st	Z+, r20
    1c5a:	02 d0       	rcall	.+4      	; 0x1c60 <__ultoa_invert+0x84>
    1c5c:	a9 f7       	brne	.-22     	; 0x1c48 <__ultoa_invert+0x6c>
    1c5e:	ea cf       	rjmp	.-44     	; 0x1c34 <__ultoa_invert+0x58>
    1c60:	b4 e0       	ldi	r27, 0x04	; 4
    1c62:	a6 95       	lsr	r26
    1c64:	97 95       	ror	r25
    1c66:	87 95       	ror	r24
    1c68:	77 95       	ror	r23
    1c6a:	67 95       	ror	r22
    1c6c:	ba 95       	dec	r27
    1c6e:	c9 f7       	brne	.-14     	; 0x1c62 <__ultoa_invert+0x86>
    1c70:	00 97       	sbiw	r24, 0x00	; 0
    1c72:	61 05       	cpc	r22, r1
    1c74:	71 05       	cpc	r23, r1
    1c76:	08 95       	ret
    1c78:	9b 01       	movw	r18, r22
    1c7a:	ac 01       	movw	r20, r24
    1c7c:	0a 2e       	mov	r0, r26
    1c7e:	06 94       	lsr	r0
    1c80:	57 95       	ror	r21
    1c82:	47 95       	ror	r20
    1c84:	37 95       	ror	r19
    1c86:	27 95       	ror	r18
    1c88:	ba 95       	dec	r27
    1c8a:	c9 f7       	brne	.-14     	; 0x1c7e <__ultoa_invert+0xa2>
    1c8c:	62 0f       	add	r22, r18
    1c8e:	73 1f       	adc	r23, r19
    1c90:	84 1f       	adc	r24, r20
    1c92:	95 1f       	adc	r25, r21
    1c94:	a0 1d       	adc	r26, r0
    1c96:	08 95       	ret
    1c98:	ce c0       	rjmp	.+412    	; 0x1e36 <__fp_nan>

00001c9a <__fp_rempio2>:
    1c9a:	3f d0       	rcall	.+126    	; 0x1d1a <__fp_splitA>
    1c9c:	e8 f3       	brcs	.-6      	; 0x1c98 <__ultoa_invert+0xbc>
    1c9e:	e8 94       	clt
    1ca0:	e0 e0       	ldi	r30, 0x00	; 0
    1ca2:	bb 27       	eor	r27, r27
    1ca4:	9f 57       	subi	r25, 0x7F	; 127
    1ca6:	f0 f0       	brcs	.+60     	; 0x1ce4 <__fp_rempio2+0x4a>
    1ca8:	2a ed       	ldi	r18, 0xDA	; 218
    1caa:	3f e0       	ldi	r19, 0x0F	; 15
    1cac:	49 ec       	ldi	r20, 0xC9	; 201
    1cae:	06 c0       	rjmp	.+12     	; 0x1cbc <__fp_rempio2+0x22>
    1cb0:	ee 0f       	add	r30, r30
    1cb2:	bb 0f       	add	r27, r27
    1cb4:	66 1f       	adc	r22, r22
    1cb6:	77 1f       	adc	r23, r23
    1cb8:	88 1f       	adc	r24, r24
    1cba:	28 f0       	brcs	.+10     	; 0x1cc6 <__fp_rempio2+0x2c>
    1cbc:	b2 3a       	cpi	r27, 0xA2	; 162
    1cbe:	62 07       	cpc	r22, r18
    1cc0:	73 07       	cpc	r23, r19
    1cc2:	84 07       	cpc	r24, r20
    1cc4:	28 f0       	brcs	.+10     	; 0x1cd0 <__fp_rempio2+0x36>
    1cc6:	b2 5a       	subi	r27, 0xA2	; 162
    1cc8:	62 0b       	sbc	r22, r18
    1cca:	73 0b       	sbc	r23, r19
    1ccc:	84 0b       	sbc	r24, r20
    1cce:	e3 95       	inc	r30
    1cd0:	9a 95       	dec	r25
    1cd2:	72 f7       	brpl	.-36     	; 0x1cb0 <__fp_rempio2+0x16>
    1cd4:	80 38       	cpi	r24, 0x80	; 128
    1cd6:	30 f4       	brcc	.+12     	; 0x1ce4 <__fp_rempio2+0x4a>
    1cd8:	9a 95       	dec	r25
    1cda:	bb 0f       	add	r27, r27
    1cdc:	66 1f       	adc	r22, r22
    1cde:	77 1f       	adc	r23, r23
    1ce0:	88 1f       	adc	r24, r24
    1ce2:	d2 f7       	brpl	.-12     	; 0x1cd8 <__fp_rempio2+0x3e>
    1ce4:	90 48       	sbci	r25, 0x80	; 128
    1ce6:	9b c0       	rjmp	.+310    	; 0x1e1e <__fp_mpack_finite>

00001ce8 <__fp_sinus>:
    1ce8:	ef 93       	push	r30
    1cea:	e0 ff       	sbrs	r30, 0
    1cec:	06 c0       	rjmp	.+12     	; 0x1cfa <__fp_sinus+0x12>
    1cee:	a2 ea       	ldi	r26, 0xA2	; 162
    1cf0:	2a ed       	ldi	r18, 0xDA	; 218
    1cf2:	3f e0       	ldi	r19, 0x0F	; 15
    1cf4:	49 ec       	ldi	r20, 0xC9	; 201
    1cf6:	5f eb       	ldi	r21, 0xBF	; 191
    1cf8:	37 d0       	rcall	.+110    	; 0x1d68 <__addsf3x>
    1cfa:	bf d0       	rcall	.+382    	; 0x1e7a <__fp_round>
    1cfc:	0f 90       	pop	r0
    1cfe:	03 94       	inc	r0
    1d00:	01 fc       	sbrc	r0, 1
    1d02:	90 58       	subi	r25, 0x80	; 128
    1d04:	ec e8       	ldi	r30, 0x8C	; 140
    1d06:	f0 e0       	ldi	r31, 0x00	; 0
    1d08:	99 c0       	rjmp	.+306    	; 0x1e3c <__fp_powsodd>

00001d0a <__fp_split3>:
    1d0a:	57 fd       	sbrc	r21, 7
    1d0c:	90 58       	subi	r25, 0x80	; 128
    1d0e:	44 0f       	add	r20, r20
    1d10:	55 1f       	adc	r21, r21
    1d12:	59 f0       	breq	.+22     	; 0x1d2a <__fp_splitA+0x10>
    1d14:	5f 3f       	cpi	r21, 0xFF	; 255
    1d16:	71 f0       	breq	.+28     	; 0x1d34 <__fp_splitA+0x1a>
    1d18:	47 95       	ror	r20

00001d1a <__fp_splitA>:
    1d1a:	88 0f       	add	r24, r24
    1d1c:	97 fb       	bst	r25, 7
    1d1e:	99 1f       	adc	r25, r25
    1d20:	61 f0       	breq	.+24     	; 0x1d3a <__fp_splitA+0x20>
    1d22:	9f 3f       	cpi	r25, 0xFF	; 255
    1d24:	79 f0       	breq	.+30     	; 0x1d44 <__fp_splitA+0x2a>
    1d26:	87 95       	ror	r24
    1d28:	08 95       	ret
    1d2a:	12 16       	cp	r1, r18
    1d2c:	13 06       	cpc	r1, r19
    1d2e:	14 06       	cpc	r1, r20
    1d30:	55 1f       	adc	r21, r21
    1d32:	f2 cf       	rjmp	.-28     	; 0x1d18 <__fp_split3+0xe>
    1d34:	46 95       	lsr	r20
    1d36:	f1 df       	rcall	.-30     	; 0x1d1a <__fp_splitA>
    1d38:	08 c0       	rjmp	.+16     	; 0x1d4a <__fp_splitA+0x30>
    1d3a:	16 16       	cp	r1, r22
    1d3c:	17 06       	cpc	r1, r23
    1d3e:	18 06       	cpc	r1, r24
    1d40:	99 1f       	adc	r25, r25
    1d42:	f1 cf       	rjmp	.-30     	; 0x1d26 <__fp_splitA+0xc>
    1d44:	86 95       	lsr	r24
    1d46:	71 05       	cpc	r23, r1
    1d48:	61 05       	cpc	r22, r1
    1d4a:	08 94       	sec
    1d4c:	08 95       	ret
    1d4e:	87 d0       	rcall	.+270    	; 0x1e5e <__fp_pscA>
    1d50:	30 f0       	brcs	.+12     	; 0x1d5e <__fp_splitA+0x44>
    1d52:	8c d0       	rcall	.+280    	; 0x1e6c <__fp_pscB>
    1d54:	20 f0       	brcs	.+8      	; 0x1d5e <__fp_splitA+0x44>
    1d56:	31 f4       	brne	.+12     	; 0x1d64 <__fp_splitA+0x4a>
    1d58:	9f 3f       	cpi	r25, 0xFF	; 255
    1d5a:	11 f4       	brne	.+4      	; 0x1d60 <__fp_splitA+0x46>
    1d5c:	1e f4       	brtc	.+6      	; 0x1d64 <__fp_splitA+0x4a>
    1d5e:	6b c0       	rjmp	.+214    	; 0x1e36 <__fp_nan>
    1d60:	0e f4       	brtc	.+2      	; 0x1d64 <__fp_splitA+0x4a>
    1d62:	e0 95       	com	r30
    1d64:	e7 fb       	bst	r30, 7
    1d66:	53 c0       	rjmp	.+166    	; 0x1e0e <__fp_inf>

00001d68 <__addsf3x>:
    1d68:	e9 2f       	mov	r30, r25
    1d6a:	cf df       	rcall	.-98     	; 0x1d0a <__fp_split3>
    1d6c:	80 f3       	brcs	.-32     	; 0x1d4e <__fp_splitA+0x34>
    1d6e:	ba 17       	cp	r27, r26
    1d70:	62 07       	cpc	r22, r18
    1d72:	73 07       	cpc	r23, r19
    1d74:	84 07       	cpc	r24, r20
    1d76:	95 07       	cpc	r25, r21
    1d78:	18 f0       	brcs	.+6      	; 0x1d80 <__addsf3x+0x18>
    1d7a:	71 f4       	brne	.+28     	; 0x1d98 <__addsf3x+0x30>
    1d7c:	9e f5       	brtc	.+102    	; 0x1de4 <__addsf3x+0x7c>
    1d7e:	8e c0       	rjmp	.+284    	; 0x1e9c <__fp_zero>
    1d80:	0e f4       	brtc	.+2      	; 0x1d84 <__addsf3x+0x1c>
    1d82:	e0 95       	com	r30
    1d84:	0b 2e       	mov	r0, r27
    1d86:	ba 2f       	mov	r27, r26
    1d88:	a0 2d       	mov	r26, r0
    1d8a:	0b 01       	movw	r0, r22
    1d8c:	b9 01       	movw	r22, r18
    1d8e:	90 01       	movw	r18, r0
    1d90:	0c 01       	movw	r0, r24
    1d92:	ca 01       	movw	r24, r20
    1d94:	a0 01       	movw	r20, r0
    1d96:	11 24       	eor	r1, r1
    1d98:	ff 27       	eor	r31, r31
    1d9a:	59 1b       	sub	r21, r25
    1d9c:	99 f0       	breq	.+38     	; 0x1dc4 <__addsf3x+0x5c>
    1d9e:	59 3f       	cpi	r21, 0xF9	; 249
    1da0:	50 f4       	brcc	.+20     	; 0x1db6 <__addsf3x+0x4e>
    1da2:	50 3e       	cpi	r21, 0xE0	; 224
    1da4:	68 f1       	brcs	.+90     	; 0x1e00 <__addsf3x+0x98>
    1da6:	1a 16       	cp	r1, r26
    1da8:	f0 40       	sbci	r31, 0x00	; 0
    1daa:	a2 2f       	mov	r26, r18
    1dac:	23 2f       	mov	r18, r19
    1dae:	34 2f       	mov	r19, r20
    1db0:	44 27       	eor	r20, r20
    1db2:	58 5f       	subi	r21, 0xF8	; 248
    1db4:	f3 cf       	rjmp	.-26     	; 0x1d9c <__addsf3x+0x34>
    1db6:	46 95       	lsr	r20
    1db8:	37 95       	ror	r19
    1dba:	27 95       	ror	r18
    1dbc:	a7 95       	ror	r26
    1dbe:	f0 40       	sbci	r31, 0x00	; 0
    1dc0:	53 95       	inc	r21
    1dc2:	c9 f7       	brne	.-14     	; 0x1db6 <__addsf3x+0x4e>
    1dc4:	7e f4       	brtc	.+30     	; 0x1de4 <__addsf3x+0x7c>
    1dc6:	1f 16       	cp	r1, r31
    1dc8:	ba 0b       	sbc	r27, r26
    1dca:	62 0b       	sbc	r22, r18
    1dcc:	73 0b       	sbc	r23, r19
    1dce:	84 0b       	sbc	r24, r20
    1dd0:	ba f0       	brmi	.+46     	; 0x1e00 <__addsf3x+0x98>
    1dd2:	91 50       	subi	r25, 0x01	; 1
    1dd4:	a1 f0       	breq	.+40     	; 0x1dfe <__addsf3x+0x96>
    1dd6:	ff 0f       	add	r31, r31
    1dd8:	bb 1f       	adc	r27, r27
    1dda:	66 1f       	adc	r22, r22
    1ddc:	77 1f       	adc	r23, r23
    1dde:	88 1f       	adc	r24, r24
    1de0:	c2 f7       	brpl	.-16     	; 0x1dd2 <__addsf3x+0x6a>
    1de2:	0e c0       	rjmp	.+28     	; 0x1e00 <__addsf3x+0x98>
    1de4:	ba 0f       	add	r27, r26
    1de6:	62 1f       	adc	r22, r18
    1de8:	73 1f       	adc	r23, r19
    1dea:	84 1f       	adc	r24, r20
    1dec:	48 f4       	brcc	.+18     	; 0x1e00 <__addsf3x+0x98>
    1dee:	87 95       	ror	r24
    1df0:	77 95       	ror	r23
    1df2:	67 95       	ror	r22
    1df4:	b7 95       	ror	r27
    1df6:	f7 95       	ror	r31
    1df8:	9e 3f       	cpi	r25, 0xFE	; 254
    1dfa:	08 f0       	brcs	.+2      	; 0x1dfe <__addsf3x+0x96>
    1dfc:	b3 cf       	rjmp	.-154    	; 0x1d64 <__fp_splitA+0x4a>
    1dfe:	93 95       	inc	r25
    1e00:	88 0f       	add	r24, r24
    1e02:	08 f0       	brcs	.+2      	; 0x1e06 <__addsf3x+0x9e>
    1e04:	99 27       	eor	r25, r25
    1e06:	ee 0f       	add	r30, r30
    1e08:	97 95       	ror	r25
    1e0a:	87 95       	ror	r24
    1e0c:	08 95       	ret

00001e0e <__fp_inf>:
    1e0e:	97 f9       	bld	r25, 7
    1e10:	9f 67       	ori	r25, 0x7F	; 127
    1e12:	80 e8       	ldi	r24, 0x80	; 128
    1e14:	70 e0       	ldi	r23, 0x00	; 0
    1e16:	60 e0       	ldi	r22, 0x00	; 0
    1e18:	08 95       	ret

00001e1a <__fp_mpack>:
    1e1a:	9f 3f       	cpi	r25, 0xFF	; 255
    1e1c:	31 f0       	breq	.+12     	; 0x1e2a <__fp_mpack_finite+0xc>

00001e1e <__fp_mpack_finite>:
    1e1e:	91 50       	subi	r25, 0x01	; 1
    1e20:	20 f4       	brcc	.+8      	; 0x1e2a <__fp_mpack_finite+0xc>
    1e22:	87 95       	ror	r24
    1e24:	77 95       	ror	r23
    1e26:	67 95       	ror	r22
    1e28:	b7 95       	ror	r27
    1e2a:	88 0f       	add	r24, r24
    1e2c:	91 1d       	adc	r25, r1
    1e2e:	96 95       	lsr	r25
    1e30:	87 95       	ror	r24
    1e32:	97 f9       	bld	r25, 7
    1e34:	08 95       	ret

00001e36 <__fp_nan>:
    1e36:	9f ef       	ldi	r25, 0xFF	; 255
    1e38:	80 ec       	ldi	r24, 0xC0	; 192
    1e3a:	08 95       	ret

00001e3c <__fp_powsodd>:
    1e3c:	9f 93       	push	r25
    1e3e:	8f 93       	push	r24
    1e40:	7f 93       	push	r23
    1e42:	6f 93       	push	r22
    1e44:	ff 93       	push	r31
    1e46:	ef 93       	push	r30
    1e48:	9b 01       	movw	r18, r22
    1e4a:	ac 01       	movw	r20, r24
    1e4c:	5f d8       	rcall	.-3906   	; 0xf0c <__mulsf3>
    1e4e:	ef 91       	pop	r30
    1e50:	ff 91       	pop	r31
    1e52:	2b d0       	rcall	.+86     	; 0x1eaa <__fp_powser>
    1e54:	2f 91       	pop	r18
    1e56:	3f 91       	pop	r19
    1e58:	4f 91       	pop	r20
    1e5a:	5f 91       	pop	r21
    1e5c:	57 c8       	rjmp	.-3922   	; 0xf0c <__mulsf3>

00001e5e <__fp_pscA>:
    1e5e:	00 24       	eor	r0, r0
    1e60:	0a 94       	dec	r0
    1e62:	16 16       	cp	r1, r22
    1e64:	17 06       	cpc	r1, r23
    1e66:	18 06       	cpc	r1, r24
    1e68:	09 06       	cpc	r0, r25
    1e6a:	08 95       	ret

00001e6c <__fp_pscB>:
    1e6c:	00 24       	eor	r0, r0
    1e6e:	0a 94       	dec	r0
    1e70:	12 16       	cp	r1, r18
    1e72:	13 06       	cpc	r1, r19
    1e74:	14 06       	cpc	r1, r20
    1e76:	05 06       	cpc	r0, r21
    1e78:	08 95       	ret

00001e7a <__fp_round>:
    1e7a:	09 2e       	mov	r0, r25
    1e7c:	03 94       	inc	r0
    1e7e:	00 0c       	add	r0, r0
    1e80:	11 f4       	brne	.+4      	; 0x1e86 <__fp_round+0xc>
    1e82:	88 23       	and	r24, r24
    1e84:	52 f0       	brmi	.+20     	; 0x1e9a <__fp_round+0x20>
    1e86:	bb 0f       	add	r27, r27
    1e88:	40 f4       	brcc	.+16     	; 0x1e9a <__fp_round+0x20>
    1e8a:	bf 2b       	or	r27, r31
    1e8c:	11 f4       	brne	.+4      	; 0x1e92 <__fp_round+0x18>
    1e8e:	60 ff       	sbrs	r22, 0
    1e90:	04 c0       	rjmp	.+8      	; 0x1e9a <__fp_round+0x20>
    1e92:	6f 5f       	subi	r22, 0xFF	; 255
    1e94:	7f 4f       	sbci	r23, 0xFF	; 255
    1e96:	8f 4f       	sbci	r24, 0xFF	; 255
    1e98:	9f 4f       	sbci	r25, 0xFF	; 255
    1e9a:	08 95       	ret

00001e9c <__fp_zero>:
    1e9c:	e8 94       	clt

00001e9e <__fp_szero>:
    1e9e:	bb 27       	eor	r27, r27
    1ea0:	66 27       	eor	r22, r22
    1ea2:	77 27       	eor	r23, r23
    1ea4:	cb 01       	movw	r24, r22
    1ea6:	97 f9       	bld	r25, 7
    1ea8:	08 95       	ret

00001eaa <__fp_powser>:
    1eaa:	df 93       	push	r29
    1eac:	cf 93       	push	r28
    1eae:	1f 93       	push	r17
    1eb0:	0f 93       	push	r16
    1eb2:	ff 92       	push	r15
    1eb4:	ef 92       	push	r14
    1eb6:	df 92       	push	r13
    1eb8:	7b 01       	movw	r14, r22
    1eba:	8c 01       	movw	r16, r24
    1ebc:	68 94       	set
    1ebe:	05 c0       	rjmp	.+10     	; 0x1eca <__fp_powser+0x20>
    1ec0:	da 2e       	mov	r13, r26
    1ec2:	ef 01       	movw	r28, r30
    1ec4:	21 d0       	rcall	.+66     	; 0x1f08 <__mulsf3x>
    1ec6:	fe 01       	movw	r30, r28
    1ec8:	e8 94       	clt
    1eca:	a5 91       	lpm	r26, Z+
    1ecc:	25 91       	lpm	r18, Z+
    1ece:	35 91       	lpm	r19, Z+
    1ed0:	45 91       	lpm	r20, Z+
    1ed2:	55 91       	lpm	r21, Z+
    1ed4:	ae f3       	brts	.-22     	; 0x1ec0 <__fp_powser+0x16>
    1ed6:	ef 01       	movw	r28, r30
    1ed8:	47 df       	rcall	.-370    	; 0x1d68 <__addsf3x>
    1eda:	fe 01       	movw	r30, r28
    1edc:	97 01       	movw	r18, r14
    1ede:	a8 01       	movw	r20, r16
    1ee0:	da 94       	dec	r13
    1ee2:	79 f7       	brne	.-34     	; 0x1ec2 <__fp_powser+0x18>
    1ee4:	df 90       	pop	r13
    1ee6:	ef 90       	pop	r14
    1ee8:	ff 90       	pop	r15
    1eea:	0f 91       	pop	r16
    1eec:	1f 91       	pop	r17
    1eee:	cf 91       	pop	r28
    1ef0:	df 91       	pop	r29
    1ef2:	08 95       	ret
    1ef4:	b4 df       	rcall	.-152    	; 0x1e5e <__fp_pscA>
    1ef6:	28 f0       	brcs	.+10     	; 0x1f02 <__fp_powser+0x58>
    1ef8:	b9 df       	rcall	.-142    	; 0x1e6c <__fp_pscB>
    1efa:	18 f0       	brcs	.+6      	; 0x1f02 <__fp_powser+0x58>
    1efc:	95 23       	and	r25, r21
    1efe:	09 f0       	breq	.+2      	; 0x1f02 <__fp_powser+0x58>
    1f00:	86 cf       	rjmp	.-244    	; 0x1e0e <__fp_inf>
    1f02:	99 cf       	rjmp	.-206    	; 0x1e36 <__fp_nan>
    1f04:	11 24       	eor	r1, r1
    1f06:	cb cf       	rjmp	.-106    	; 0x1e9e <__fp_szero>

00001f08 <__mulsf3x>:
    1f08:	00 df       	rcall	.-512    	; 0x1d0a <__fp_split3>
    1f0a:	a0 f3       	brcs	.-24     	; 0x1ef4 <__fp_powser+0x4a>

00001f0c <__mulsf3_pse>:
    1f0c:	95 9f       	mul	r25, r21
    1f0e:	d1 f3       	breq	.-12     	; 0x1f04 <__fp_powser+0x5a>
    1f10:	95 0f       	add	r25, r21
    1f12:	50 e0       	ldi	r21, 0x00	; 0
    1f14:	55 1f       	adc	r21, r21
    1f16:	62 9f       	mul	r22, r18
    1f18:	f0 01       	movw	r30, r0
    1f1a:	72 9f       	mul	r23, r18
    1f1c:	bb 27       	eor	r27, r27
    1f1e:	f0 0d       	add	r31, r0
    1f20:	b1 1d       	adc	r27, r1
    1f22:	63 9f       	mul	r22, r19
    1f24:	aa 27       	eor	r26, r26
    1f26:	f0 0d       	add	r31, r0
    1f28:	b1 1d       	adc	r27, r1
    1f2a:	aa 1f       	adc	r26, r26
    1f2c:	64 9f       	mul	r22, r20
    1f2e:	66 27       	eor	r22, r22
    1f30:	b0 0d       	add	r27, r0
    1f32:	a1 1d       	adc	r26, r1
    1f34:	66 1f       	adc	r22, r22
    1f36:	82 9f       	mul	r24, r18
    1f38:	22 27       	eor	r18, r18
    1f3a:	b0 0d       	add	r27, r0
    1f3c:	a1 1d       	adc	r26, r1
    1f3e:	62 1f       	adc	r22, r18
    1f40:	73 9f       	mul	r23, r19
    1f42:	b0 0d       	add	r27, r0
    1f44:	a1 1d       	adc	r26, r1
    1f46:	62 1f       	adc	r22, r18
    1f48:	83 9f       	mul	r24, r19
    1f4a:	a0 0d       	add	r26, r0
    1f4c:	61 1d       	adc	r22, r1
    1f4e:	22 1f       	adc	r18, r18
    1f50:	74 9f       	mul	r23, r20
    1f52:	33 27       	eor	r19, r19
    1f54:	a0 0d       	add	r26, r0
    1f56:	61 1d       	adc	r22, r1
    1f58:	23 1f       	adc	r18, r19
    1f5a:	84 9f       	mul	r24, r20
    1f5c:	60 0d       	add	r22, r0
    1f5e:	21 1d       	adc	r18, r1
    1f60:	82 2f       	mov	r24, r18
    1f62:	76 2f       	mov	r23, r22
    1f64:	6a 2f       	mov	r22, r26
    1f66:	11 24       	eor	r1, r1
    1f68:	9f 57       	subi	r25, 0x7F	; 127
    1f6a:	50 40       	sbci	r21, 0x00	; 0
    1f6c:	8a f0       	brmi	.+34     	; 0x1f90 <__mulsf3_pse+0x84>
    1f6e:	e1 f0       	breq	.+56     	; 0x1fa8 <__mulsf3_pse+0x9c>
    1f70:	88 23       	and	r24, r24
    1f72:	4a f0       	brmi	.+18     	; 0x1f86 <__mulsf3_pse+0x7a>
    1f74:	ee 0f       	add	r30, r30
    1f76:	ff 1f       	adc	r31, r31
    1f78:	bb 1f       	adc	r27, r27
    1f7a:	66 1f       	adc	r22, r22
    1f7c:	77 1f       	adc	r23, r23
    1f7e:	88 1f       	adc	r24, r24
    1f80:	91 50       	subi	r25, 0x01	; 1
    1f82:	50 40       	sbci	r21, 0x00	; 0
    1f84:	a9 f7       	brne	.-22     	; 0x1f70 <__mulsf3_pse+0x64>
    1f86:	9e 3f       	cpi	r25, 0xFE	; 254
    1f88:	51 05       	cpc	r21, r1
    1f8a:	70 f0       	brcs	.+28     	; 0x1fa8 <__mulsf3_pse+0x9c>
    1f8c:	40 cf       	rjmp	.-384    	; 0x1e0e <__fp_inf>
    1f8e:	87 cf       	rjmp	.-242    	; 0x1e9e <__fp_szero>
    1f90:	5f 3f       	cpi	r21, 0xFF	; 255
    1f92:	ec f3       	brlt	.-6      	; 0x1f8e <__mulsf3_pse+0x82>
    1f94:	98 3e       	cpi	r25, 0xE8	; 232
    1f96:	dc f3       	brlt	.-10     	; 0x1f8e <__mulsf3_pse+0x82>
    1f98:	86 95       	lsr	r24
    1f9a:	77 95       	ror	r23
    1f9c:	67 95       	ror	r22
    1f9e:	b7 95       	ror	r27
    1fa0:	f7 95       	ror	r31
    1fa2:	e7 95       	ror	r30
    1fa4:	9f 5f       	subi	r25, 0xFF	; 255
    1fa6:	c1 f7       	brne	.-16     	; 0x1f98 <__mulsf3_pse+0x8c>
    1fa8:	fe 2b       	or	r31, r30
    1faa:	88 0f       	add	r24, r24
    1fac:	91 1d       	adc	r25, r1
    1fae:	96 95       	lsr	r25
    1fb0:	87 95       	ror	r24
    1fb2:	97 f9       	bld	r25, 7
    1fb4:	08 95       	ret

00001fb6 <_exit>:
    1fb6:	f8 94       	cli

00001fb8 <__stop_program>:
    1fb8:	ff cf       	rjmp	.-2      	; 0x1fb8 <__stop_program>
